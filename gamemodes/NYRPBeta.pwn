// Dont Remove Credit If you Remove Your Mother Gay !!!!!
// If You Remove Some Of Credit In Line Blackrose_Rog Auto Get 1000 Errors Its Normal!
// Discord : Blackrose_Rog
// Project Free From Discord : https://discord.gg/j89vCVZpqX
// Free Super Gamemode From Valhalla RolePlay!


@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
#emit stack 0x7FFFFFFF
#emit inc.s cellmax
static const ___[][] = {"AntiDeAMX"};
#emit retn
#emit load.s.pri ___
#emit proc
#emit proc
#emit fill cellmax
#emit proc
#emit stor.alt ___
#emit strb.i 2
#emit switch 4
#emit retn
L1:
#emit jump L1
#emit zero cellmin
}
AntiDeAMX()
{
      new a[][] =
      {
          "Unarmed (Fist)",
          "Brass K"
      };
      #pragma unused a
}
#include <a_samp>
#include <mxINI>
#include <nex-ac>
#include <streamer>
//#include <FakeOnline>
#include <SKY>
#include <weapon-config>
#include <foreach>
#include <a_mysql>
#include <regex>
#include <sscanf2>
#include <a_actor>
#include <Pawn.CMD>
#include <a_zones> 
#include <a_http>
#include <player_geolocation>
//==============================================================================
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
//===================================[MYSQL]====================================
enum MYSQL_SETTINGS
{
	DOOME_HOST, DOOME_USERNAME, DOOME_PASSWORD, DOOME_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];
new NameServer[128],AdminName[30],vksoz[60],vkgr[60],StartLVL,StartCash,StartBank;
//===============================[FULL DOSTUP]==================================
#define FD1	"0" //??????????
#define FD2 "0" //#2 ??????????
#define FD3 "0" //???.??????????
#define FD4 "0" //????????

#define AntiBan1 "0"//Commands that are protected are /offadmin, /offban, /delacc, /avig (in /aad the founder is indicated)
#define AntiBan2 "0"//??????? ??????? ?????? ??? ?????? - /offadmin, /offban, /delacc, /avig (? /aad ??????????? ??? ??????????)
#define AntiBan3 "0"//??????? ??????? ?????? ??? ?????? - /offadmin, /offban, /delacc
#define AntiBan4 "0"//??????? ??????? ?????? ??? ?????? - /offadmin

#define DKA "Blackrose_Rog"// ?????? ? ???????? (/anticheat)
//================================[INFO SERVER]=================================
#define NAME_MAP 		"NEW YORK"//?????? ?? ???? ? ?? ???????? ?????????, ???-?? ????? ????? ??????!
#define NAME_SITY 		"EAST VILLAGE"//???????? ?????? - ??????, ????? ???-?? ?????? ??? ????????!

#define NAME_SERVER		"New York RP"
#define PAGE_SITE 		"discord.gg/rjzN9fD5C4"
#define PAGE_VK			"blackrose_rog"
#define PAGE_VK_FREE    "blackrose_rog"
#define PAGE_FORUM		"discord.gg/rjzN9fD5C4"

#define NICK_NPC		"Blackrose_Rog"
#define NICK_NPC2		"Blackrose_Rog"
//==============================================================================
#define TABLE_BIZZ          						"bizz"
#define TABLE_ACCOUNT 								"accounts"
#define TABLE_HOUSE 								"house"
#define TABLE_OTHER									"other"
#define TABLE_MERIA								    "meria"
#define TABLE_BANLOG								"banlog"
#define TABLE_GANGZONE                              "gangzone"
#define TABLE_PICK                                  "mayor"
#define TABLE_GREENZONE                             "greenzone"
#define TABLE_BANK                                  "bank"
// ������� �����
#define TABLE_LOGBANK                               "transfers_log"
#define TABLE_CAPTCHALOG                            "captchalog"
//==============================================================================
#define publics:%0(%1) forward %0(%1); public %0(%1)
#define Cvet_0 0xFFFFFF20
#define Cvet_1 0xFF0000FF
#define Cvet_2 0x808080FF
#define Cvet_3 0x008000FF
#define Cvet_4 0xFFFF00FF
#define Cvet_5 0x0000FFFF
#define Cvet_6 0xFFA500FF
#define Cvet_7 0x32CD32FF
#define Cvet_8 0xFF00FFFF
#define Cvet_9 0xDC143CFF
#define Cvet_11 0xFFD700FF
#define Cvet_12 0x808000FF
#define Cvet_13 0xFF6347FF
#define Cvet_14 0xEE82EEFF
#define Cvet_15 0xFFFFFFFF
//==============================================================================
#define CBLUE              0x4682B4AA
#define COLOR_ISPOLZUY     0x7FB151FF
#define COLOR_GRAD1        0xB4B5B7FF
#define COLOR_BLUE         0x33AAFFFF
#define COLOR_GRAD2        0xBFC0C2FF
#define COLOR_INDIGO       0x4B00B0AA
#define COLOR_GRAD3        0xCBCCCEFF
#define COLOR_GRAD4        0xD8D8D8FF
#define COLOR_GRAD6        0xF0F0F0FF
#define COLOR_BLACK        0x000000AA
#define COLOR_GREY         0xAFAFAFAA
#define COLOR_GREEN        0x33AA33AA
#define COLOR_ORANGE       0xFF9900AA
#define COLOR_RED          0xAA3333AA
#define COLOR_LIGHTRED     0xFF6347AA
#define COLOR_LIGHTBLUE    0x33CCFFAA
#define COLOR_LIGHTGREEN   0x9ACD32AA
#define COLOR_YELLOW       0xFFFF00AA
#define COLOR_YELLOW2      0xF5DEB3AA
#define COLOR_WHITE        0xFFFFFFAA
#define COLOR_REDD         0xFF0000AA
#define COLOR_BROW         0xA85400AA
#define COLOR_FADE1        0xE6E6E6E6
#define COLOR_FADE2        0xC8C8C8C8
#define COLOR_FADE3        0xAAAAAAAA
#define COLOR_FADE4        0x8C8C8C8C
#define COLOR_FADE5        0x6E6E6E6E
#define COLOR_PURPLE       0xC2A2DAAA
#define COLOR_DBLUE        0x2641FEAA
#define COLOR_ALLDEPT      0xFF8282AA
#define COLOR_NEWS         0xFFA500AA
#define COLOR_OOC          0xE0FFFFAA
#define COLOR_BOX          0x00000050
#define COLOR_BBLUE        0x20A9FFAA
#define TEAM_BLUE_COLOR    0x8D8DFF00
#define TEAM_GROVE_COLOR   0x00D900C8
#define TEAM_VAGOS_COLOR   0xFFC801C8
#define TEAM_BALLAS_COLOR  0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR    0xFF8282AA
#define TEAM_ORANGE_COLOR  0xFF830000
#define COLOR_ORANGE 	   0xFF9900AA
#define COLOR_RED          0xAA3333AA //��� ��� �����
#define COLOR_YELLOW3 	   0xFFCC00AA
#define COLOR_SILVER       0xC0C0C0FF
#define COLOR_SHBAR 	   0x6053F3FF
#define COLOR_SHBAR_BG 	   0x000000FF
#define COLOR_SHBAR_BG2    0xB8CEF6FF
#define dColorGun						9164
#define dColorGun2 						9165
#define publics:%0(%1)												forward %0(%1); public %0(%1)
/******************************************************************************/
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define RandomEx(%1,%2) (random(%2-%1)+%1)
// ������:
#define VW_DRAGONS 50
#define VW_CALIGULAS 51
#define DRAGONS_FRAC 27 // ����� ������� 4 �������
#define CALIGULAS_FRAC 28 // ����� ������� ��������
#define D_DUTY 15000
#define D_ROULE 16000
#define D_DICE 17000
#define D_BLACKJACK 18000
#define MAX_DICETABLES 8
#define MAX_ROULETABLES 12
#define MAX_BLACKJACKTABLES 12
//
#define D_ATUNE 450
#define ANTI_FLOODS     1
#define DIALOG_STYLE_PASSWORD 3
#define VEHICLE_PARAMS_OFF  0
#define VEHICLE_PARAMS_ON   1
#define ONE_HUNDRED_MSECOND             1000
#define DIALOG_STYLE_MSG4  0
#define MAX_BUSINESS (200)
#define DIALOG_STYLE_INPUT  1
#define DIALOG_STYLE_LIST  2
#define MAX_ADVERT_COUNT 15 // ������������ ���-�� ����������
#define KEY_AIM 128
#define SMALL_SIZE 64
#define Max
#define MAX_PROMO 20
#define YouCanNot 									"You do not have this function!"
#define SendMes(%1,%2,%3)    format(stringer1,sizeof(stringer1),%3), SendClientMessage(%1,%2,stringer1)
#define SCM 				 SendClientMessage
#define MAX_PAYNSPRAY           10
#define IsValidEmail(%1) \
    regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define IsValidRpName(%1) \
    (4 <= strlen(%1) <= 20 && regex_match(%1, "[A-Z]+[a-zA-Z]*_[A-Z]+[a-zA-Z]*"))
#define YouCanNotAdminDuty    "Login first"
#define FRACTIONS_NUM (29)
#define FD(%0) (!strcmp(PlayerInfo[%0][pNames], FD1) || !strcmp(PlayerInfo[%0][pNames], FD2) || !strcmp(PlayerInfo[%0][pNames], FD3) || !strcmp(PlayerInfo[%0][pNames], FD4))
#define DAC !strcmp(PlayerInfo[playerid][pNames], DKA, false)
new FractionVxod[FRACTIONS_NUM][60];
new FractionNamess[FRACTIONS_NUM][MAX_PLAYER_NAME];
new FractionHasLeader[FRACTIONS_NUM];

//==============================================================================
/******************************************************************************/
#pragma disablerecursion
forward AntiBH(playerid);//������1
forward AntiBH1(playerid);//������2
forward OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward AdminFly(playerid);
forward Float:SetPlayerToFacePos(playerid, Float:X, Float:Y);
/******************************************************************************/
#define MAX_FACTIONS 29
#define MAX_LEADER_NAME_LENGTH 35

enum aRendinfo
{
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//����
	Float:aPos_X,	//��������� X
	Float:aPos_Y,	//��������� Y
	Float:aPos_Z,	//��������� Z
	Float:aPos_A,	//���� ��������
	aColor_1,		//���� 1
	aColor_2		//���� 2
};
enum SETTINGS_DATA
{
	CheatSetting[53]
};
new SettingInfo[SETTINGS_DATA];
#define Reptext_SIZE (130)
enum RepGB {
    Reptext[Reptext_SIZE]//
};
enum RepGB2 {
    Reptex2[130],//
}
new RepInfo[MAX_PLAYERS][RepGB];
//�������
new ConfigAdminka[3];
new ConfigActive = 0;
//
new Adminka = 0;
new admtext[240];
new YesAdminka;
new AdmLvl;
new vehiclerc[MAX_PLAYERS];
//�������
new YesRubles, PrizeDist;
new WaitDist = 0;
new EnabledDist = 1;
new CondDist = 1;
new InterDist = 30;
new TimeToDist = 0;
new Distribution = 0;
new distrib[240];
// HostNames
new ServerName[3][64];
new NameEnabled[3];
new rentcar;
new rentspawn;
new gangsquest;
// NEWS BY Moon Weaksize
new spawndoor;
new respawndoor;
new armysteal;
new armysteal2;
new medcardpic;
new dmzone;
new dmzone1;
new dmzonejoin;
new actormed;
new Text:GenuineLogo[6];
/*new Text:gcrp0;
new Text:gcrp1;
new Text:gcrp2;
new Text:gcrp3;
new Text:gcrp4;
new Text:gcrp5;
new Text:gcrp6;
new Text:gcrp7;
new Text:gcrp8;
new Text:gcrp9;
new Text:gcrp10;
new Text:gcrp11;
new Text:gcrp12;
new Text:gcrp13;
new Text:gcrp14;*/
new Text:Kenji[8];
new Text:samp4;
new HackerJob[MAX_PLAYERS];
new HJLimitTimer;
new Text:work0;
new Text:work1;
new Text:work2;
new Text:work3;
new Text:work4;
new Text:work5;
new Text:work6;
new total[MAX_PLAYERS];
new clearmusor;
new musor[MAX_PLAYERS];
new object1[MAX_PLAYERS];
new object2[MAX_PLAYERS];
new object3[MAX_PLAYERS];
new object4[MAX_PLAYERS];
new object5[MAX_PLAYERS];
new object6[MAX_PLAYERS];
// DEFINES BY Moon Weaksize
#define MUSOR 300
#define FILTERSCRIPT
//=================================================
//new rc_pickup;
new Teleport;
new BlNick[MAX_PLAYERS];
new Objects[MAX_PLAYERS][11];
new Float:TeleportFloat[3];
new TeleportInfo[2];
new Text:hello_server[8];
new dicetime;
new FaggioBikes[45];
new PlayerIp[MAX_PLAYERS][32+1];
new bool:b_Ghetto[5 char];
new bool:flying[MAX_PLAYERS];
new ArendInfo[][aRendinfo] =
{//ID, price, coordinates X, Y, Z, color 1, color 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 300000 ,1911.4460449,-2244.1708984,14.5469999,230.0000000,-1,-1 }, // Airpark1 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 350000 ,1911.4453125,-2326.3439941,14.5469999,229.9987793,-1,-1 }, // Airpark2 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 420000 ,1911.7080078,-2272.2089844,14.5469999,229.9987793,-1,-1 }, // Airpark3 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 630000 ,1911.4453125,-2298.4736328,14.5469999,229.9987793,-1,-1 }, // Airpark4 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 450000 ,1986.0634766,-2253.0969238,14.0970001,129.9957275,-1,-1 }, // Airpark5 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 600000 ,1986.0634766,-2272.3020020,14.0970001,129.9957275,-1,-1 }, // Airpark6 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1200000 ,1986.0634766,-2290.2519531,14.0970001,129.9957275,-1,-1 }, // Airpark7 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1250000 ,1986.0639648,-2307.8798828,14.0970001,129.9957275,-1,-1 }, // Airpark8 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1550000 ,1986.0634766,-2344.1740723,14.0970001,129.9957275,-1,-1 }, // Airpark9 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 3000000 ,1986.0634766,-2325.7392578,14.0970001,129.9957275,-1,-1 }, // Airpark10 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 1000000 ,1861.5699463,-2284.2351074,13.8120003,300.0000000,-1,-1 }, // Airpark11 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 880000 ,1861.5699463,-2269.3369141,13.8120003,300.0000000,-1,-1 }, // Airpark12 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 1400000 ,1861.5699463,-2296.8530273,13.8120003,300.0000000,-1,-1 }, // Airpark13 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 850000 ,1895.4709473,-2292.8100586,13.6470003,270.0000000,-1,-1 }, // Airpark14 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 1700000 ,1881.0760498,-2299.4060059,13.6470003,270.0000000,-1,-1 }, // Airpark15 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 1550000 ,1881.0760498,-2286.8278809,13.6470003,270.0000000,-1,-1 }, // Airpark16 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 563, 1900000 ,1881.4890137,-2326.4860840,25.5900002,0.0000000,-1,-1 }, // Airpark17 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 563, 1900000 ,1866.1040039,-2326.4860840,25.5970001,0.0000000,-1,-1 }, // Airpark18 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 417, 2000000 ,1880.9959717,-2243.5029297,23.7049999,180.0000000,-1,-1 }, // Airpark19 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 417, 2000000 ,1865.8010254,-2243.5029297,23.7110004,180.0000000,-1,-1 }, // Airpark20 ��
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,523.6040039,-1291.3409424,17.1819992,0.0000000,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,327.5866,-1809.2540,4.6220,0.9719,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,527.7349854,-1291.3769531,17.2450008,0.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,324.3883,-1809.4557,4.6220,359.9984,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,334.4073,-1788.5521,4.7547,178.3377,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,337.5338,-1788.7452,4.6212,179.4663,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 63000 ,531.9589844,-1291.5660400,17.1420002,0.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 63000 ,330.8795,-1809.3622,4.6220,358.2563,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 49000 ,536.7410278,-1291.5119629,17.0520000,0.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 49000 ,347.0609,-1809.5153,4.6220,359.9814,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 49500 ,541.0540161,-1292.0629883,16.9340000,0.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 49500 ,350.2350,-1809.3156,4.6220,359.5803,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 80000 ,528.5289917,-1280.3249512,16.9419994,220.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 80000 ,311.5371,-1809.6342,4.6220,358.9674,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,531.4060059,-1278.4449463,17.0340004,220.0000000,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,327.9750,-1788.7878,4.6109,176.1494,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 40000 ,534.3989868,-1276.0620117,17.0919991,220.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 40000 ,334.0984,-1809.3370,4.6220,359.7085,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,324.6861,-1788.4365,4.4922,180.4502,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 170000 ,537.7470093,-1273.8289795,17.0919991,220.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 170000 ,540.7529907,-1271.2929688,17.0070000,220.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 170000 ,317.9624,-1809.4966,4.6220,359.3589,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 100000 ,543.7979736,-1268.7829590,16.9979992,220.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 100000 ,314.6944,-1809.4600,4.6220,0.4280,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 140000 ,546.9940186,-1266.2130127,17.0919991,220.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 140000 ,311.7464,-1788.2052,4.2033,180.7068,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,551.0490112,-1263.4470215,17.0419998,220.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,315.0270,-1788.3524,4.3662,179.0408,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,545.0469971,-1291.6590576,17.0419998,359.9957275,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 200000 ,549.9730225,-1291.6760254,17.0529995,0.0000000,-1,-1 }, //Sultan
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 130000 ,567.4240112,-1287.7750244,16.9519997,102.0000000,-1,-1 }, //Uranus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 200000 ,566.7059937,-1283.6190186,16.9480000,102.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,565.4819946,-1279.2340088,17.1420002,102.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,318.2239,-1788.1189,4.4786,180.5789,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,321.3834,-1788.2512,4.4033,180.3419,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,564.8140259,-1274.6230469,16.9960003,102.0000000,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,337.1626,-1809.3209,4.6220,359.6717,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,340.6049,-1809.6180,4.6220,357.6861,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,343.8618,-1809.5323,4.6220,1.0013,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.4699707,276.2290039,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.6660156,272.7380066,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.8039551,270.1709900,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1992.0639648,267.4509888,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1992.1779785,265.1329956,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1991.7729492,260.6340027,34.7760010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1992.0260010,258.1619873,34.7760010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1992.4790039,255.5330048,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1993.0699463,252.3220062,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1993.4840088,248.7680054,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.2679443,245.7619934,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.5760498,243.5260010,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.8780518,240.9199982,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7060547,308.7940063,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7792969,300.7001953,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7880859,303.4785156,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 90000 ,-1989.7148438,306.0712891,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1990.4709473,240.3020020,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1987.5030518,240.2760010,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1984.4530029,240.2669983,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1981.0030518,240.3289948,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 110000 ,-1947.4980469,257.3869934,35.3180008,0.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 50100 ,-1953.1219482,257.2730103,35.2239990,0.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 130000 ,-1958.0600586,257.3340149,35.2330017,0.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 150000 ,-1944.8389893,273.0010071,35.3240013,90.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 150000 ,321.1870,-1809.3546,4.6220,0.3012,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 80000 ,-1944.5030518,265.6380005,35.3240013,90.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,-1958.4520264,304.8699951,35.2690010,180.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,-1956.9410400,279.3240051,35.3689995,140.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 120000 ,-1956.4219971,262.1619873,41.0499992,230.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 30000 ,-1956.2280273,270.6180115,40.8569984,230.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 67000 ,-1946.3079834,274.4540100,40.7389984,180.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 95000 ,2148.9899902,1409.0209961,10.7600002,0.0000000,-1,-1 }, //Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,2142.2580566,1408.5920410,10.6199999,0.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 100000 ,2135.8278809,1408.9189453,10.6700001,0.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 111000 ,2129.3159180,1408.6700439,10.5699997,0.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 1200000 ,2123.1340332,1408.8940430,10.5769997,0.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 1200000 ,324.3883,-1809.4557,4.6220,359.9984,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 110000 ,2116.7619629,1409.0209961,10.6700001,0.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 100000 ,2110.5639648,1408.8260498,10.6700001,0.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,2103.7609863,1409.1290283,10.6120005,0.0000000,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 200000 ,2097.8220215,1408.5310059,10.5200005,0.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 80000 ,2097.9030762,1398.5009766,10.5240002,180.0000000,-1,-1 }, //Uranus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 559, 120000 ,2104.2690430,1398.3179932,10.5740004,180.0000000,-1,-1 }, //Jester
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 190000 ,2110.4919434,1398.4549561,10.6250000,180.0000000,-1,-1 }, //Sultan
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 180000 ,2117.0810547,1398.5830078,10.5740004,180.0000000,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 135000 ,2123.5371094,1398.5279541,10.5039997,180.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 103000 ,2129.7780762,1398.3570557,10.6230001,180.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,2148.9670410,1398.4289551,10.7130003,180.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 120000 ,2142.6679688,1398.1269531,10.8149996,180.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 200000 ,2136.0170898,1397.9630127,10.6199999,180.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,201.6529999,-1919.3530273,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,179.9129944,-1919.1800537,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,166.4360046,-1919.6970215,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,173.4335938,-1919.3906250,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,189.1464844,-1918.9531250,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,195.3964844,-1919.1718750,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,223.2310028,-1919.4499512,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,212.7001953,-1918.8652344,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,218.0605469,-1919.2587891,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,228.1609955,-1919.5439453,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 453, 180000 ,237.3939972,-1919.3310547,0.0000000,180.0000000,-1,-1 }, //Reefer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,263.8150024,-1920.0319824,0.0000000,180.0000000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,251.1840057,-1918.5570068,0.0000000,180.0000000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 453, 260000 ,257.1910095,-1919.2840576,0.0000000,180.0000000,-1,-1 }, //Reefer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 270000 ,244.4218750,-1920.0117188,0.0000000,180.0000000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 220000 ,277.8869934,-1921.7320557,0.0000000,180.0000000,-1,-1 }, //Marquis
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 220000 ,271.1484375,-1921.6894531,0.0000000,180.0000000,-1,-1 }, //Marquis
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1916.7382812,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1916.7382812,0.0051701,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1916.7382812,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1929.1049805,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1929.1044922,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1929.1044922,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 150000 ,718.0416,-2705.1785,9.0000,0.0000,-1,-1 }, //helicopter
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 230000 ,717.1964,-2740.4985,9.0000,0.0000,-1,-1 }, //helicopter
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,600.0245,-2669.4751,0.4779,0.0000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,585.3885,-2669.9546,0.4779,0.0000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,617.7123,-2669.8381,0.4779,0.0000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,633.8150,-2669.4695,0.4779,0.0000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,648.4157,-2669.8179,0.4779,0.0000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,591.1024,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,589.3212,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,587.4610,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,585.4816,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,583.4824,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,581.3430,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 180000 ,579.5439,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 150000 ,577.3852,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 230000 ,575.2054,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 260000 ,572.9269,-2715.1133,2.0000,180.0000,-1,-1 } //quadbike
};
enum Bazar
{
	aID,
	Float:BazX,
	Float:BazY,
	Float:BazZ,
	bMoney,
	BName[40]
}

new Text:td_logo[9];
new PlayerText:td_speed[MAX_PLAYERS][18];


new BazarAcc[8][Bazar] =
{
	{0,1153.68,-1467.36,15.8,9000,"Unique bandans (1st cell)"},
	{19095,1154.57,-1470.02,15.8,23000,"90's hat (1st cell)"},
	{19096,1154.85,-1470.89,15.8,23000,"90's hat (1st cell)"},
	{19097,1155.14,-1471.78,15.8,23000,"90's hat (1st cell))"},
	{19098,1156.99,-1477.31,15.8,23000,"90's hat (1st cell))"},
	{19099,1157.25,-1478.12,15.8,31000,"Black Sheriff Hat (1st slot)"},
	{19100,1157.54,-1479.0,15.8,31000,"Black Sheriff Hat (1st slot)"},
	{19528,1151.64,-1511.14,15.8,25000,"Souvenir Mage Hat (1st slot)"}
};
new realtorFreePickup, realtorFreeBusiness, realtorInfo;
new adons;
new TempBGObject[MAX_PLAYERS] = {-1, ...};
new adminprice = 39;
new helpprice = 29;
//new rankprice = 500;
new Visitors = 0;
new server_online = 0;
new Buyitem[MAX_PLAYERS] = {-1, ...};
new PlayerText:InfoText[MAX_PLAYERS] = {PlayerText:-1, ...};
new Text:Boxmenu0;
new Text:Boxmenu1;
new Text:Boxmenu2;
new Text:boxaccept;
new Text:boxcancel;
new Text:Boxmenu3;
new Text:ButtonLeft;
new Text:ButtonRight;
new Text:ButtonUp;
new Text:ButtonDown;
new Text:ButtonCancel;
new Text:ButtonSelect;
new ItemsId[][] =
{
	{ 19421,19422,19423,19424,1}, //��������
	{ 19069,19068,19067,19554,18953,18954,1},//�����
	{ 18968,18967,18969,1},//�������
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//�����
	{ 19104,19105,19106,19107,19108,19109,1},//�����
	{ 18925,18922,18923,18924,18921,1},//������
	{ 19519,19274,1},//������
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//����
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //�������
	{ 18947,18948,18949,18950,18951,1 }, //�����
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //����
	{ 3026,371,19559,1 },//��������
	{ 18970, 18973, 18972, 18971,1 },//�����
	{ 18910, 18909, 18908, 18907, 18906,1 }// ������� �� ������
};
new ItemsCost[][] =
{
	{ 30000,30000,30000,30000,1}, //��������
	{ 15000,15000,20000,25000,17000,17000,1},//�����
	{ 9000,9000,9000,1},//�������
	{ 9000,9000,9000,12000,9000,9000,15000,15000,9000,9000,9000,15000,1},//�����
	{ 5000,5000,5000,5000,5000,5000,1},//�����
	{ 8000,8000,8000,9000,11000,1},//������
	{ 15000,15000,1},//������
	{ 6000,8000,4000,5000,6000,7000,7000,7000,10000,11000,11000,11000,11000,11000,10000,8000,11000,11000,1},//����
	{ 6000,6000,6000,8000,8000,8000,8000,7000,7000,7000,1 }, //�������
	{ 30000,30000,30000,30000,30000,1 }, //�����
	{ 80000,700000,60000,60000,60000,10000,10000,10000,20000,24000,24000,15000,24000,1 }, //����
	{10000,8000,9000,1},//��������
	{40000,40000,50000,40000,1},//�����
	{6000,6000,6000,6000,6000,1}//�������
};
static
	armedbody_pTick[MAX_PLAYERS];
static const GetMemberPrice[29] = {
	0,//��� �����
	60, // LSPD
	75, // FBI
	70, // ��������
	60, // ��� ��
	50, // LCN
	50, // Yakuza
	80, // City Hall
	0, // ����������
	0, // ����������
	60, // SFPD
	75, // Instructors
	45, // Ballas
	45, // Vagos
	50, // RM
	45, // Groove
	70, // Sa News
	45, // Aztecas
	45, // Rifa
	70, // Zone 51
	0, //
	60, // LVPD
	0, //
	65, // Hitman
	50, // Street racers
	75, // Swat
	250, // ��
	35, // Casino 4 Dragons
	35 // Casino Calligulas
};

static const Float:GZLogo[39][5] = {
	{2392.8920898,-1557.3609619,28.7500000,0.0000000,270.0000000}, // (1)
	{2535.7580566,-1436.9289551,24.7500000,0.0000000,90.0000000}, // (2)
	{2598.2680664,-1404.6579590,37.2379990,0.0000000,90.0000000}, // (3)
	{2545.7319336,-1271.9429932,53.6040001,0.0000000,270.0000000}, // (4)
	{2482.1350098,-1348.5140381,35.6040001,0.0000000,270.0000000}, // (5)
	{2398.3391113,-1209.0140381,29.0400009,90.0000000,180.0000000}, // (6)
	{2352.0239258,-1265.8170166,23.2609997,180.0000000,270.0000000}, // (7)
	{2381.0000000,-1398.0500488,24.7910004,180.0000000,90.0000000}, // (8)
	{2281.8510742,-1553.0329590,34.8790016,270.0000000,180.0000000}, // (9)
	{2118.0249023,-1498.0429688,11.1719999,251.9890137,341.9890137}, // (10)
	{2016.487670,-1299.762695,24.687915,90.0000000,0.0000000}, // (11)
	{1855.7500000,-1120.1009521,24.7259998,180.0000000,270.0000000}, // (12)
	{2037.6009521,-1013.5200195,35.2820015,185.9945068,275.9945068}, // (13)
	{2104.6059570,-1009.5969849,59.6529999,165.9930420,255.9930420}, // (14)
	{2142.2700195,-1027.6650391,64.2770004,257.4924316,347.4924316}, // (15)
	{2242.6560059,-1119.9310303,47.1959991,337.4920654,67.4920654}, // (16)
	{2124.5939941,-1178.5610352,25.1599998,0.0000000,270.0000000}, // (17)
	{2663.5280762,-1553.2020264,27.4109993,90.0000000,0.0000000}, // (18)
	{2847.1130371,-1522.0250244,16.2759991,90.0000000,0.0000000}, // (19)
	{2788.5249023,-1457.2879639,36.9389992,180.0000000,90.0000000}, // (20)
	{2804.5048828,-1424.3280029,57.0180016,270.0000000,180.0000000}, // (21)
	{2753.1640625,-1183.1600342,70.2220001,270.0000000,180.0000000}, // (22)
	{2788.9899902,-1948.1409912,14.2969999,270.0000000,180.0000000}, // (23)
	{2749.6669922,-2039.3089600,13.9130001,270.0000000,0.0000000}, // (24)
	{2516.4689941,-2121.5891113,14.3970003,270.0000000,180.0000000}, // (25)
	{2432.7209473,-2130.6608887,28.9699993,0.0000000,270.0000000}, // (26)
	{2336.2060547,-1994.7320557,26.6469994,0.0000000,270.0000000}, // (27)
	{2170.7548828,-1968.3199463,14.6929998,90.0000000,180.0000000}, // (28)
	{2131.8369141,-2010.3360596,8.9499998,43.9835205,313.9835205}, // (29)
	{1703.0460205,-2082.3710938,14.3830004,0.0000000,90.0000000}, // (30)
	{1937.9449463,-2135.3659668,22.5739994,348.0000000,78.0000000}, // (31)
	{1836.2320557,-1814.4830322,5.1859999,257.9974365,347.9974365}, // (32)
	{1997.7900391,-1777.1080322,18.4529991,270.0000000,0.0000000}, // (33)
	{2251.3798828,-1705.5930176,18.4769993,0.0000000,90.0000000}, // (34)
	{2440.9160156,-1760.8409424,14.6940002,0.0000000,90.0000000}, // (35)
	{2654.6350098,-2029.6989746,14.3039999,90.0000000,0.0000000}, // (36)
	{2518.9541016,-1969.9310303,14.6230001,180.0000000,90.0000000}, // (37)
	{2404.9370117,-2039.2419434,14.3420000,270.0000000,180.0000000}, // (38)
	{2231.0410156,-1993.9460449,30.6380005,314.4890137,224.4890137} // (39)
};
//������� ������
enum
{
  CMD_setadmin,
  CMD_setleader,
  CMD_banip,
  CMD_gzcolor,
  CMD_acar,
  CMD_ghetto,
  CMD_sethelper,
  CMD_avig,
  CMD_aunvig,
  CMD_offhelper,
  CMD_offleader,
  CMD_NUM//���-�� ������ � ���� ������ (�� �������, �������� ������) //11111111111
};
static const stock CMD_names[CMD_NUM][32] =
{
	"/setadmins",
	"/setleader",
	"/banip",
	"/gzcolor",
 	"/acar",
	"/ghetto",
	"/sethelper",
	"/avig",
	"/aunvig",
	"/offhelper",
	"/offleader"
};
static const stock CMD_desc[CMD_NUM] [128] =
{
	"- Assigning administrators",
	"- Assign the image",
	"- Lock the IP address of the game",
	"- Cut the gang zone",
	"- Create an Adam's Infernus",
	"- Resolve/Disable Bandam Capture",
	"- Assign the helper",
	"- Send the client to the administrator",
	"- Remove your administrator",
	"- Assign/remove helper in offline",
	"- Remove leader in offline"
};
static const stock CMD_price[CMD_NUM] = {
	3000, // setadmin
	2000, // setleader
	400, // banip
	200, // gzcolor
	0, // acar
	200,
	1000,
	2000,
	2000,
	2000,
	0
};
///
enum GzLinfo
{
	gID[2],
	gOwner[2],
Float:gFinish[2],
	gIcon,
	Text3D:g3D
};
new GZLogoInfo[sizeof(GZLogo)][GzLinfo];
new TotalGraf[5];
new PlayerBigEarsConnect[MAX_PLAYERS char] = true;
// ��������������� UNIX �������:
#define EPOCH_YR        1970            /* EPOCH = Jan 1 1970 00:00:00 */
#define SECS_DAY        (24 * 60 * 60)
#define LEAPYEAR(%0)    (!((%0) % 4) && (((%0) % 100) || !((%0) % 400)))
#define YEARSIZE(%0)    (LEAPYEAR(%0) ? 366 : 365)

static const _ytab[2][12] = {
	{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },
	{ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }
};
static const allow_guns_print[13]={22,23,24,25,27,28,29,30,31,32,33,35,36};
static const _weapon_color_name[6][10]={"Army","Green","Orange","Blue","Pink","Gold"};
static const _weapon_colors[6] =
{
	0xFF4B53FF, // Army
	0xFF9EAFFF, // Green
	0xFFFFAEFF, // Orange
	0xFF0073FF, // LSPD
	0xFFFF14FF, // Pink
	0xFFFFD7FF // Gold
};
new P_VOKZALLS[2];
new Text: TD_Reg1[11];
new Text: TD_Reg2[8];
new Text: TD_Reg3[28];
new Text: TD_Reg4[8];
new PlayerText: PTD_Reg1[MAX_PLAYERS][3];
new PlayerText: PTD_Reg2[MAX_PLAYERS][4];
new PlayerText: PTD_Reg3[MAX_PLAYERS][3];
enum cheatinfo
{
   cheatid1
}
enum config
{
	sDist,
	sDistRub,
	sDonPower
}
new Config[config];
new CheatInfo[MAX_PLAYERS][cheatinfo];
new CheatInfo1[MAX_PLAYERS][cheatinfo];
new PlayerRegStep[MAX_PLAYERS];
new PlayerRegMode[MAX_PLAYERS];
new RegSkins[2][3] =
{
	{ 135, 26, 240 },
	{ 131, 41, 12 }
};
new RegHistoryName[2][3][19] = {
	{ "Home", "Ness", "Your business" },
	{ "House", "Rezar", "Yours is Lost" }
};
new RegHistory1[2][][] = {
	{
	"You are not the only one with such a fate; there are hundreds, or even thousands, like you.\n",
	"After all, absolutely everyone, both the lower and upper strata of the population, fell under the influence of the crisis.\n",
	"You lived before this in a simple house in the ghetto, you went to work and spent the evenings flipping through channels on the TV, drinking another bottle of beer,\n",
	"but unfortunately your company went bankrupt, you naturally lost your job, like hundreds of other residents of this state.\n" ,
	"Over time, you didn't have enough money to pay taxes, day after day, you collected bottles, worked a bad job and you didn't care\n",
	"not enough to pay taxes to live in your house. Soon you were kicked out of the house, and you went to wander around the ghetto.\n",
	"Not a cent was left in your pockets, you didn�t even have enough money for food, and your clothes soon began to tear, smell and look,\n",
	"as if you had just crawled out of the trash heap.\n\n",
	"Soon you got tired of the nomadic lifestyle, you went to work and started a new life."
	},
	{
	"You are not alone with such a fate; there are hundreds, or even thousands, of you.\n",
	"After all, absolutely everyone, both the lower and upper strata of the population, fell under the influence of the crisis.\n",
	"You lived before this in a simple house in the ghetto, you went to work and spent the evenings flipping through channels on the TV, but unfortunately\n",
	"your company went bankrupt, you naturally lost your job, like hundreds of other residents of this state.\n",
	"Over time, you there wasn't enough money to pay taxes, day after day, you collected bottles, worked at a bad job and you didn't care\n",
	"it wasn't enough to pay taxes on living in your house. Soon you were kicked out of the house, and you left to wander around the ghetto.\n",
	"Not a cent was left in your pockets, you didn't even have enough money for food, and your clothes soon began to tear, stink and look,\n",
	"as if you had just got out of the trash heap.\n\n",
	"Soon you got tired of the nomadic lifestyle, you went to work and started a new life."
	}
};

new RegHistory2[2][][] = {
	{
	"San Andres is a state of pleasure, debauchery and drinking. Golden beaches, beautiful and slender girls, warm seas make you drop everything and come\n",
	"here - that's what it said on the ticket you won in the competition. Without thinking, you went home and packed your things, because\n",
	"to refuse this is stupid. You casually packed your bags and went to the nearest airport. After all, you're tired of all this dullness and\n",
	"the monotony of the city in which you lived. After several hours, you got into the state, leaving the airport building you smelled the aroma of the ocean breeze,\n",
	"it was so easy to breathe that my mood rose sharply. You went to the city center and rented a hotel room, after which you went for a walk\n",
	"in Los Santos at night. But you wandered too far, and a bad fate awaited you; when you turned the corner, two bandits followed you,\n",
	"they had brass knuckles, and it seems their intentions were not the brightest. You, gradually accelerating your pace, started running and tried to hide from them.\n",
	"And so, it seemed to you that you had left them, when suddenly you felt a strong blow to your neck, after which you lost consciousness.\n",
	"You woke up at a local hippie hangout, you were picked up by one of these.\n\n",
	"After rummaging through your pockets, you found nothing. Reaching into the inside left pocket, you found two hundred Moneys.,\n",
	"apparently the bandits were too stupid to go there.\n\n",
	"And now, a new world has opened up for you, in which you will have to survive."
	},
	{
	"San Andres is a state of pleasure, debauchery and drinking. Golden beaches, beautiful and slender girls, warm seas make you drop everything and come\n",
	"here - that's what it said on the ticket you won in the competition. Without thinking, you went home and packed your things, because\n",
	"to refuse this is stupid. You casually packed your bags and headed to the nearest airport. After all, you are tired of all this dullness and\n",
	"the monotony of the city in which you lived. After several hours, you got into the state, leaving the airport building you smelled the aroma of the ocean breeze,\n",
	"it was so easy to breathe that my mood rose sharply. You went to the city center and rented a hotel room, after which you went for a walk\n",
	"in Los Santos at night. But you wandered too far, and a bad fate awaited you; when you turned the corner, two bandits followed you,\n",
	"they had brass knuckles, and it seems their intentions were not the brightest. You, gradually accelerating your pace, started running and tried to hide from them.\n",
	"And so, it seemed to you that you had left them, when suddenly you felt a strong blow to your neck, after which you lost consciousness.\n",
	"You woke up at a local hippie hangout, you were picked up by one of these.\n\n",
	"After rummaging through your pockets, you found nothing. Putting your hand into the inner left pocket, you found 70 bucks there, apparently the bandits were too stupid,\n",
	"to climb there.\n\n",
	"And now, a new world has opened up for you, in which you will have to survive."
	}
};

new RegHistory3[2][][] = {
	{
	"Your business flourished quickly and confidently. The restaurant chain you ran has become very popular in this state and soon your wallet will\n",
	"I was already torn from all these green papers. You squandered your money as much as you could: you lost it in a casino, you spent your evenings in a bar,\n",
	"spent money on girls. But the money, as it seemed to you, did not end.\n",
	"Soon, a crisis arose in the state, prices for everything rose, you, literally in a dumbfounded state, tried to find a solution to all this\n",
	"big problem, but you never managed to find it. After some days, months, years, you sold one branch after another, the money\n",
	"quickly began to run out, and before you could blink, you had a tiny part of what you earned left in your hands. Now, you have decided,\n",
	"that even a crisis will not break you, so you suddenly began to come up with something new, from which your wallet will be replenished and out of your pockets again\n",
	"Moneys will pour in."
	},
	{
	"Your business flourished quickly and confidently. The chain of beauty salons you ran has become very popular in this state and soon your wallet will\n",
	"I was already torn from all these green papers. You squandered your money as much as you could: you lost it in casinos, spent your evenings in clubs,\n",
	"spent money on clothes and other goodies. But the money, as it seemed to you, did not end.\n",
	"Soon, a crisis arose in the state, prices for everything rose, you, literally in a dumbfounded state, tried to find a solution to all this\n",
	"big problem, but you never managed to find it. After some days, months, years, you sold one branch after another, the money\n",
	"quickly began to run out, and before you could blink, you had a tiny part of what you earned left in your hands. Now, you have decided,\n",
	"that even a crisis will not break you, so you suddenly began to come up with something new, from which your wallet will be replenished and out of your pockets again\n",
	"Moneys will pour in."
	}
};

new FindCommand[166][2][] =
{
	{"/mainmenu", "The server main menu"},
	{"/gps", "GPS navigator"},
	{"/sms", "Send a private message to player"},
	{"/time", "See the time"},
	{"/id", "Find the ID of the game by name"},
	{"/viphelp", "VIP help menu"},
	{"/myskill", "See your skills"},
	{"/report", "Send report message to admins team"},
	{"/change", "Improve house/business exchanges"},
	{"/witness", "Make a witness at the yard"},
	{"/drink", "Drink a drink"},
	{"/buybiz", "Buy bussines"},
	{"/mask", "Add/remove the mask"},
	{"/limit", "Stop speed limiter"},
	{"/present", "Give flowers"},
	{"/showmedcard", "Show med. card"},
	{"/atm", "Use a bank from ATM"},
	{"/showpass", "Show passport"},
	{"/mystyle", "Check out your style"},
	{"/satiety", "Check the speed"},
	{"/healme", "Use a heal"},
	{"/licenses", "See your licenses"},
	{"/box", "Set style box 'Box'"},
	{"/kongfu", "Set the style of boo 'Kung-Fu'"},
	{"/kickbox", "Stop the style of the 'Kick-Box'"},
	{"/getbizstats", "Check the information about the business"},
	{"/window", "Controlling the window in the pan"},
	{"/eject", "Bring the player out of the car"},
	{"/pay", "Transfer the money to the player"},
	{"/directory", "Help guide"},
	{"/offalend", "Filed from the house"},
	{"/drugs", "Use drugs"},
	{"/givedrug", "Give drugs to the player"},
	{"/ddrug", "Throw drugs from the bag"},
	{"/pdrug", "Get the selected drugs from a land"},
	{"/plant", "Drop off the labels"},
	{"/dgun", "Throw weapon from the bag"},
	{"/pgun", "Get the selected weapon from a land"},
	{"/selfie", "Take picture"},
	{"/oc", "Global chat"},
	{"/advertise", "Submit listing"},
	{"/goverment", "Goverment news"},
	{"/f", "Gang chat"},
	{"/sout", "Come on"},
	{"/megaphone", "Smartphone on a service"},
	{"/radio", "Chat gos. Organization"},
	{"/departaments", "General chat Organization"},
	{"/g", "The general chat"},
	{"/todo", ""},
	{"/call", "Call"},
	{"/pickup", "Answer a call"},
	{"/hangup", "End phone conversation"},
	{"/number", "Find out the player's phone number"} ,
	{"/rob", "Rob a person"},
	{"/refill", "Fuel a car"},
	{"/trailer", "Trail a vehicle"},
	{"/hotdog", "Sell a hotdog"},
	{ "/fare", "Start work"},
	{"/plist", "Order list"},
	{"/load", "Load into van"},
	{"/fgstyle", "Start work session"},
	{ "/bankup", "You have successfully deposited money into an ATM"},
	{"/jackcar", "Pick the lock"},
	{"/dropcar", "Sell a car"},
	{"/fight", "Challenge to the ring" },
	{"/suspect", "Declare wanted"},
	{"/arrest", "Arrest a player"},
	{"/wanted", "List of wanted players"},
	{"/cuff", "Cuff the player" },
	{"/shield", "Take a shield"},
	{"/members", "List of organization members"},
	{"/frisk", "Search a player"},
	{"/take", "Take from a player" },
	{"/gangsafe", "Check the organization's warehouse"},
	{"/ticket", "Issue a fine"},
	{"/givecopkeys", "Hand over the keys to the prison"},
	{"/cput", "Push the player into the car"},
	{"/ceject", "Push the player out of the car"},
	{"/uncuff", "Remove the handcuffs"},
	{"/drag", "Take the player under escort"},
	{"/bizlock" , "Open/close a business"},
	{"/undemote", "Demote/Fire a player"},
	{"/nalog", "Change state tax"},
	{"/takekazna", "Take from the treasury"},
	{ "/block", "Install spikes"},
	{"/rb", "Install post"},
	{"/rbinfo", "Information about posts"},
	{"/removerb", "Delete post"},
	{" /removerball", "Delete all posts"},
	{"/demote", "Transfer/demote player"},
	{"/ftazer", "Stun nearby players"},
	{"/spy", "Change into faction clothes"},
	{"/showudost", "Show ID"},
	{"/getgun","View player weapons"},
	{"/carmat", "Start loading materials"},
	{"/carm", "Weapon delivery menu"},
	{"/menu", "Laptop"},
	{"/tie" , "Tie up player"},
	{"/untie", "Untie player"},
	{"/klyap", "Insert gag"},
	{"/klyapoff", "Pull out gag"},
	{"/sethpprice", " Set the price for treatment"},
	{"/heal", "Cure a player"},
	{"/lomka", "Save from withdrawal"},
	{"/healaddict", "Conduct a session for drug addiction"},
	{"/mdpell ", "Check out of the hospital"},
	{"/narkoz", "Conduct a session for drug addiction"},
	{"/givemedcard", "Give out a medical card"},
	{"/takephone", "Pick up the phone"},
	{" /getweapon", "Take a weapon"},
	{"/bizwar", "Start a war for business"},
	{"/mafiabalance", "View mafia balance"},
	{"/materials", "Action with materials"},
	{"/mafiawithdraw", "Withdraw money from mafia bank"},
	{"/mafiabankput", "Put money into the mafia bank"},
	{"/free", "Get the player out of prison"},
	{"/mxpell", "Put the city hall/media out the door"},
	{"/news", "Announce news"},
	{"/live", "Go out live"},
	{"/newsbank", "Check the status of the media bank"},
	{"/newswithdraw", "Withdraw cash from the media bank"},
	{"/yes", "Take a call to the studio"},
	{"/off", "End a call to the studio"},
	{"/startblackjack", "Start a game of blackjack"},
	{" /roule", "Start playing roulette"},
	{"/startdice", "Set bet"},
	{"/setbet", "Set bet"},
	{"/axpell", "Put it out the door of the driving school"},
	{"/duty", "Start/end the instructor's working day"},
	{"/selldrugs", "Sell drugs"},
	{"/gunlist", "View list of weapons"},
	{"/sellzone", "Sell territory "},
	{"/capture", "Start a war for territory"},
	{"/unloading", "Start unloading materials"},
	{"/get", "Take something"},
	{"/keys", "Get the keys to the prison"},
	{"/gmenu", "Gang menu"},
	{"/bc", "Gangs chat"},
	{"/invite", "Invite player to your faction"},
	{"/uninvite", "Dismiss from the faction"},
	{"/sellgun", "Sell your gun to the player"},
	{"/robhouse", "Rob house"},
	{"/setdrugsprice", "Set the price to a drug"},
	{"/iinvite", "Army/Police"},
	{"/lpanel", "Faction menu"},
	{"/rank", "Give a player rank"},
	{"/changeskin", "Chnage the player skin"},
	{"/drive", "Reduce the weight of the transfer function"},
	{"/fvig", "Give warn to the player"},
	{"/funvig", "Remove the warn from the player"},
	{"/givebil", "Issue a ticket"},
	{"/hmenu", "Main menu of the house"},
	{"/home", "Marking the house (GPS)"},
	{"/healhouse", "Use your home heal"},
	{"/exit", "Come out of the house"},
	{"/business", "Money Management Menu"},
	{"/carpass", "Show the passport of the car"},
	{"/sellcar", "Sell your car"},
	{"/fixcar", "Take the car to the house/in the garden"},
	{"/fill", "Send car"},
	{"/fillcar", "Send the car from the printer"},
	{"/divorce", "Develop"},
	{"/propose", "Add a Hand and a Series"},
	{"/fmenu", "Family settings"},
	{"/k", "Family chat"},
	{"/kickfamily", "Kick from family"}
};
stock RegHistoryBorderShow(playerid, history)
{
	for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid, TD_Reg3[16+(history*4)+i]);
}
stock RegHistoryBorderHide(playerid, history)
{
	for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, TD_Reg3[16+(history*4)+i]);
}
new CheckPass[MAX_PLAYERS][65];
//
new check_getip[32];
new VipNews[MAX_PLAYERS];
new Float:paynspray[][] =
{
	{1025.05, -1024.23, 32.1}, // LS Temple
	{487.68, -1740.87, 11.13}, // LS Russia Maria
	{-1420.73, 2583.37, 55.56}, // El Quebrados
	{-1904.39, 284.97, 40.75}, // Wang Cars
	{-2425.91, 1022.33, 50.10}, // Juniper Hill
	{1975.60, 2162.16, 10.77}, // LV Redsands
	{2065.38, -1831.51, 13.25}, // Idlewood
	{-99.55, 1118.36, 19.44}, // Fort Carson
	{721.07, -455.94, 16.04}, // Dillimore
	{2393.74, 1493.01, 10.52} // LV Unused (Pyramid)
};
new spike_areas[MAX_PLAYERS];
new spike_objects[MAX_PLAYERS] = {0, ...};
new PaynSpray[MAX_PAYNSPRAY];
new HealmeObject[MAX_PLAYERS];
new PlayerText:ShopText[MAX_PLAYERS];
new Text:AutoShopText[12];
new PlayerText:Target1;
new PlayerText:Target2;
new PlayerText:Target3;
new PlayerText:Target5;
new PlayerText:Target4[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:Target6[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:AimNameDraw[MAX_PLAYERS] = {PlayerText:-1, ...};
new Menu:HouseShaw;//���� � ����.
//�����
static stock Text:gSkinShopDraw[5]={Text:-1};
static stock PlayerText:gSkinShopPriceDraw[MAX_PLAYERS]={PlayerText:-1};
enum SKIN_DATA {
	skinID,
	skinPrice,
	skinSex // 1 - �������, 2 - �������
}
#define SKIN_SEX_MALE 1
#define SKIN_SEX_FEMALE 2
#define MAX_SKINS 113
static const stock gSkins[MAX_SKINS + 1][SKIN_DATA] = {
	{31, 5000, SKIN_SEX_FEMALE},
	{38, 5000, SKIN_SEX_FEMALE},
	{39, 5000, SKIN_SEX_FEMALE},
	{131, 5000, SKIN_SEX_FEMALE},
	{198, 5000, SKIN_SEX_FEMALE},
	{201, 5000, SKIN_SEX_FEMALE},
	{207, 5000, SKIN_SEX_FEMALE},
	{193, 10000, SKIN_SEX_FEMALE},
	{226, 10000, SKIN_SEX_FEMALE},
	{237, 10000, SKIN_SEX_FEMALE},//10
	{192, 20000, SKIN_SEX_FEMALE},
	{214, 20000, SKIN_SEX_FEMALE},
	{55, 30000, SKIN_SEX_FEMALE},
	{56, 30000, SKIN_SEX_FEMALE},
	{90, 30000, SKIN_SEX_FEMALE},
	{151, 30000, SKIN_SEX_FEMALE},
	{152, 30000, SKIN_SEX_FEMALE},
	{169, 30000, SKIN_SEX_FEMALE},
	{9, 5000, SKIN_SEX_FEMALE},
	{10, 5000, SKIN_SEX_FEMALE},
	{13, 5000, SKIN_SEX_FEMALE},
	{69, 5000, SKIN_SEX_FEMALE},
	{190, 10000, SKIN_SEX_FEMALE},//60
	{195, 10000, SKIN_SEX_FEMALE},
	{238, 10000,SKIN_SEX_FEMALE},
 	{93, 60000, SKIN_SEX_FEMALE},
	{141, 60000, SKIN_SEX_FEMALE},
	{150, 60000, SKIN_SEX_FEMALE},

	{172, 60000, SKIN_SEX_FEMALE},
	{263, 60000, SKIN_SEX_FEMALE},
	{194, 70000, SKIN_SEX_FEMALE},
	{211, 70000, SKIN_SEX_FEMALE},
	{233, 70000, SKIN_SEX_FEMALE},//90
 	{11, 50000, SKIN_SEX_FEMALE},
	{12, 50000, SKIN_SEX_FEMALE},
 	{91, 160000, SKIN_SEX_FEMALE},
	{216, 160000, SKIN_SEX_FEMALE},//110
 	{219, 200000, SKIN_SEX_FEMALE},
    {296, 200000, SKIN_SEX_FEMALE},
	{1, 5000, SKIN_SEX_MALE},
	{2, 5000, SKIN_SEX_MALE},//20
	{3, 5000, SKIN_SEX_MALE},
	{8, 5000, SKIN_SEX_MALE},
	{32, 5000, SKIN_SEX_MALE},
	{72, 5000, SKIN_SEX_MALE},
	{94, 5000, SKIN_SEX_MALE},
	{128, 5000, SKIN_SEX_MALE},
	{133, 5000, SKIN_SEX_MALE},
	{23, 10000, SKIN_SEX_MALE},
	{33, 10000, SKIN_SEX_MALE},
	{34, 10000, SKIN_SEX_MALE},//30
	{48, 10000, SKIN_SEX_MALE},
	{73, 10000, SKIN_SEX_MALE},
	{96, 10000, SKIN_SEX_MALE},
	{161, 10000, SKIN_SEX_MALE},
	{202, 10000, SKIN_SEX_MALE},
	{206, 10000, SKIN_SEX_MALE},
	{4, 5000, SKIN_SEX_MALE},
	{5, 5000, SKIN_SEX_MALE},
	{6, 5000, SKIN_SEX_MALE},
	{7, 5000, SKIN_SEX_MALE},//40
	{15, 5000, SKIN_SEX_MALE},
	{183, 5000, SKIN_SEX_MALE},
	{14, 10000, SKIN_SEX_MALE},
	{35, 10000, SKIN_SEX_MALE},
	{36, 10000, SKIN_SEX_MALE},
	{156, 10000, SKIN_SEX_MALE},
	{21, 30000, SKIN_SEX_MALE},
	{22, 30000, SKIN_SEX_MALE},
	{24, 30000, SKIN_SEX_MALE},
	{25, 30000, SKIN_SEX_MALE},//50
	{28, 40000, SKIN_SEX_MALE},
	{66, 40000, SKIN_SEX_MALE},
	{67, 40000, SKIN_SEX_MALE},
	{176, 40000, SKIN_SEX_MALE},
	{293, 40000, SKIN_SEX_MALE},

	{57, 60000, SKIN_SEX_MALE},
	{59, 60000, SKIN_SEX_MALE},
	{100, 60000, SKIN_SEX_MALE},
	{170, 60000, SKIN_SEX_MALE},
	{181, 60000, SKIN_SEX_MALE},
	{185, 60000, SKIN_SEX_MALE},
	{241, 60000, SKIN_SEX_MALE},
	{242, 60000, SKIN_SEX_MALE},//70
	{98, 65000, SKIN_SEX_MALE},
	{112, 65000, SKIN_SEX_MALE},
	{126, 65000, SKIN_SEX_MALE},
	{247, 65000, SKIN_SEX_MALE},
	{254, 65000, SKIN_SEX_MALE},
	{269, 65000, SKIN_SEX_MALE},
	{290, 65000, SKIN_SEX_MALE},
	{117, 70000, SKIN_SEX_MALE},
	{188, 70000, SKIN_SEX_MALE},
	{240, 160000, SKIN_SEX_MALE},//80
	{249, 70000, SKIN_SEX_MALE},
	{250, 70000, SKIN_SEX_MALE},

	{19, 60000, SKIN_SEX_MALE},
	{20, 60000, SKIN_SEX_MALE},
	{180, 60000, SKIN_SEX_MALE},
	{222, 60000, SKIN_SEX_MALE},
	{297, 60000, SKIN_SEX_MALE},
	{46, 160000, SKIN_SEX_MALE},
	{111, 160000, SKIN_SEX_MALE},
	{171, 160000, SKIN_SEX_MALE},//100
	{189, 160000, SKIN_SEX_MALE},
	{223, 160000, SKIN_SEX_MALE},
	{147, 180000, SKIN_SEX_MALE},
	{187, 180000, SKIN_SEX_MALE},
	{186, 180000, SKIN_SEX_MALE},
	{208, 180000, SKIN_SEX_MALE},
	{228, 180000, SKIN_SEX_MALE},
	{294, 200000, SKIN_SEX_MALE},
    {17, 100000, SKIN_SEX_MALE},
    {296, 200000, SKIN_SEX_MALE}

};
//----------------------------
/*new gFractionSkin[28][12] = {
	{280,281,282,283,284,265,288,76,306,307,310,311}, //LSPD
	{286,163,164,165,166,141,0,0,0,0,0,0}, //FBI
	{287,61,179,191,0,0,0,0,0,0,0,0}, //ARMY SF
	{70,274,275,276,219,308,309,0,0,0,0,0}, //MEDIKI
	{223,124,113,214,0,0,0,0,0,0,0,0}, //LCN
	{120,123,169,186,0,0,0,0,0,0,0,0}, //YAKUZA
	{57,150,98,187,147,0,0,0,0,0,0,0}, //Meria
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{280,281,282,283,284,265,288,76,306,307,310,311}, //SFPD
	{59,172,189,240,0,0,0,0,0,0,0,0}, // Instructors
	{102,103,104,195,0,0,0,0,0,0,0,0}, //BALLAS
	{108,109,110,190,0,0,0,0,0,0,0,0}, //VAGOS
	{112,111,125,272,214,0,0,0,0,0,0,0}, //RM
	{105,106,107,269,270,271,56,0,0,0,0,0}, //GROOVE
	{187,186,60,170,188,141,211,0,0,0,0,0}, //SAN
	{114,115,116,41,0,0,0,0,0,0,0,0}, //Aztecas
	{173,174,175,226,0,0,0,0,0,0,0,0}, //RIFA
	{287,255,179,191,0,0,0,0,0,0,0,0}, //ARMY LV
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{280,281,282,283,284,265,288,76,306,307,310,311}, //LVPD
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{185,186,250,295,294,169,85,0,0,0,0,0}, //Hitman
	{60,47,217,67,240,170,29,55,0,0,0,0}, //������
	{285,76,0,0,0,0,0,0,0,0,0,0}, //SWAT
	{17,216,227,287,265,70,12,295,0,0,0,0}, // �����. ����������
	{98,171,172,189,0,0,0,0,0,0,0,0}, // ������ 4 �������
	{98,171,172,189,0,0,0,0,0,0,0,0} // ������ ��������
};*/
new gFractionSkin[28][12] = {
    {280,282,283,284,288,307,310,311,285,266,265,267}, //Los Santos Police Delapment
    {286,163,164,165,166,141,258,0,0,0,0,0}, //FBI
    {287,61,179,191,61,0,0,0,0,0,0}, //San Fierro Army
    {70,274,275,276,219,308,309,0,0,0,0,0}, //MEDIKI
    {223,124,113,214,127,126,0,0,0,0,0,0}, //La Costa Nostra
    {120,123,169,186,122,117,118,0,0,0,0,0}, //YAKUZA
    {57,150,187,147,163,164,0,0,0,0,0}, //CityHall
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {280,282,283,284,288,307,310,311,285,266,265,267}, //San Fierro Police Delapment
    {59,172,189,240,0,0,0,0,0,0,0,0}, // Instructors
    {102,103,104,21,195,0,0,0,0,0,0,0}, //BALLAS
    {108,109,110,47,190,0,0,0,0,0,0,0}, //VAGOS
    {112,111,125,272,214,0,0,0,0,0,0}, //RM
    {105,106,107,269,270,271,297,56,0,0,0,0}, //GROOVE
    {187,186,60,170,188,141,211,0,0,0,0,0}, //SAN
    {114,115,116,44,41,0,0,0,0,0,0,0}, //Aztecas
    {173,174,175,273,226,0,0,0,0,0,0,0}, //RIFA
    {287,61,179,191,61,0,0,0,0,0,0,0}, //Las Venturas Army
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {280,282,283,284,288,307,310,311,285,266,265,267}, //Las Venturas Police Delapment
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {185,186,250,295,294,169,85,0,0,0,0,0}, //Hitman
    {60,47,217,67,240,170,29,55,0,0,0,0}, //New Faction working on it...
    {280,285,76,0,0,0,0,0,0,0,0,0}, //S.W.A.T
    {17,216,227,287,265,70,12,295,0,0,0,0}, //Police Manager
    {98,171,172,189,0,0,0,0,0,0,0,0}, //Casino 1
    {98,171,172,189,0,0,0,0,0,0,0,0} //Casino 2
};
enum VIP_DATA
{
	vipSender[24],
	vipText[100],
	vipID,
	vipTime,
	vipNumber,
	bool:vipChek
}
new gVip[MAX_PLAYERS][VIP_DATA];
new gVipTime;
new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};
new Anims[][] = {
	{"WALK_civi"},
	{"WALK_gang1"},
	{"WALK_gang2"},
	{"WALK_old"},
	{"WALK_fatold"},
	{"WALK_fat"},
	{"WOMAN_walknorm"},
	{"WOMAN_walkbusy"},
	{"WOMAN_walkpro"},
	{"WOMAN_walksexy"},
	{"Walk_Wuzi"}
};
new AntiSbiv[MAX_PLAYERS];
// ������� ����������.
#define MAX_PLANTS              500
#define MAX_DRUGS_PLAYER 		25
#define MAX_DROPPED_ITEMS 		300

#define ITEM_TYPE_SEED 			0
#define ITEM_TYPE_COCAINE 		1
#define ITEM_TYPE_CRACK 		2
#define ITEM_TYPE_HEROINE		3
#define ITEM_TYPE_LSD 			4
#define ITEM_TYPE_MET 			5
#define ITEM_TYPE_MARIJUANNA 	6


enum DrugsList {
	d_name[14],
	d_obj,
	d_price
}
new const Drugs[][DrugsList] = {
	{"Empty", 0, 0},
	{"Seed", 1578, 200},
	{"Cocaine", 1575, 200},
	{"Crack", 1576, 100},
	{"Heroin", 1575, 150},
	{"LSD", 1579, 200},
	{"Meth", 1577, 150},
	{"Marijuana", 1578, 50}
};

enum drEffects
{
    eDrunk,
    eGreenWeather,
    eRedWeather,
    eCrazyWeather,
    eRedWindWeather,
    eDynamicWeather,
    eRandomObjects,
    eSounds
}

new const DrugSoundsURL[][100] =
{
    "http://c.top4top.io/m_3004o62ua1.mp3",
    "http://c.top4top.io/m_3004o62ua1.mp3"
};

new const DrugObj[][] =
{
	{2907},
	{2905},
	{2905},
	{2906},
	{1607},
	{1608},
	{1609}
};

enum plant
{
	plant_id,
	plant_status,
	plant_prog,
	plant_owner,
	Float:plant_pos[3],
	plant_vw,
	plant_int,
	plant_obj_id,
	Text3D:plant_3DText
};
new PlantInfo[MAX_PLANTS][plant];

// �������:
enum DroppedItemsInfoEnum
{
	dr_id,
	dr_type,
	dr_item_id,
	dr_quantity,
	dr_time,
	dr_by,
	dr_obj,
	Float:dr_x,
	Float:dr_y,
	Float:dr_z,
	Float:dr_rx,
	Float:dr_ry,
	Float:dr_rz,
	Float:dr_a,
	dr_vw,
	dr_int,
	dr_object
}
new DItems[MAX_DROPPED_ITEMS][DroppedItemsInfoEnum];

new GunObjects[47][0] =
{
	{0},// ������ ����
	{331},// ������
	{333},// ������
	{334},// ����������� �������
	{335},// �����
	{336},// ����
	{337},// ������
	{338},// ���
	{339},// ������
	{341},// ���������
	{321},// ������� �����
	{322},// ��������� ����� �����
	{323},// ������� ����� �����
	{324},// ��������
	{325},// �����
	{326},// ������
	{342},// �������
	{343},// ������� �������
	{344},// �������
	{0},
	{0},
	{0},
	{346},// ��������
	{347},// �������� � ����������
	{348},// Desert Eagle
	{349},// ��������
	{350},// �����
	{351},// ������ ��������
	{352},// ���
	{353},// MP5
	{355},// AK47
	{356},// M4
	{372},// TEC
	{357},// ��������
	{358},// ����������� ��������
	{359},// ������
	{360},// ������������� ������
	{361},// ������
	{362},// �������
	{363},// ����������
	{364},// ��������� (�����)
	{365},// �������� � �������
	{366},// ������������
	{367},// �����������
	{368},// ���� ������� �������
	{368},// ����
	{371}// �������
};
new Indicators_xqz[MAX_VEHICLES][4];
static const GetPlayerFracName[29][32] = {"Unknow", "LSPD", "FBI", "Army Aircraft carrier", "MCLS", "La Cosa Nostra", "Yakuza", "City Hall", "Closed", "Closed", "SFPD", "Instructors", "Ballas Gang", "Los Santos Vagos", "Russian Mafia", "Grove Street", "Sa News","Varios Los Varios Los Aztecas", "Rifa Gang", "Army Area 51", "Closed", "LVPD", "Closed", "Hitman", "Street racers", "SWAT", "Administration of the President", "Casino Four Dragons", "Casino Caligulas"};
// ����� �������:
static const stock fRankName[28][15][40];
static stock gFractionRank[28][4];
//
new weapon_sprit_select[MAX_PLAYERS][13];
// ������
new cTune[MAX_PLAYERS][2][15];
new cColor[MAX_PLAYERS][2][2];

new Text:TuneBox;
new Text:TuneComponent;
new Text:TuneCost;
new PlayerText:TuneTypeShow[MAX_PLAYERS];
new PlayerText:TuneComponentShow[MAX_PLAYERS];
new PlayerText:TuneCostShow[MAX_PLAYERS];
new Text:TuneBack;
new Text:TuneBuy;
new Text:TuneArrow[2];

new TuneColor[MAX_PLAYERS][2];
new ChangeTuneDetail[MAX_PLAYERS];
new TuneID[MAX_PLAYERS];
new TuneShop[MAX_PLAYERS];

new Nitro[3][] = {
{1009, 100,"Nitro 2X"},
{1008, 200,"Nitro 5X"},
{1010, 300,"Nitro 10X"}
};

new Wheels[16][] = {
{1073, 50,"Shadow"},
{1074, 70,"Mega"},
{1075, 55,"Rimshine"},
{1076, 60,"Wires"},
{1077, 80,"Classic"},
{1078, 90,"Twist"},
{1079, 85,"Cutter"},
{1080, 100,"Switch"},
{1081, 65,"Grove Street"},
{1082, 110,"Import"},
{1083, 150,"Dollar"},
{1084, 50,"Trance"},
{1085, 65,"Atomic"},
{1096, 94,"Ahab"},
{1097, 140,"Virtual"},
{1098, 120,"Access"}
};

new Exhaust[32][] = {
{1018, 100,"Upswept"},
{1019, 150,"Twin"},
{1020, 180,"Large"},
{1021, 190,"Medium"},
{1022, 200,"Small"},
{1028, 200,"Alien"}, // Sultan
{1029, 200,"X-Flow"},
{1034, 200,"Alien"}, // Elegy
{1037, 200,"X-Flow"},
{1043, 200,"Slamin"}, // Broadway
{1044, 200,"Chrome"},
{1046, 200,"Alien"}, // Flash
{1045, 200,"X-Flow"},
{1064, 200,"Alien"}, // Stratum
{1059, 200,"X-Flow"},
{1065, 200,"Alien"}, // Jester
{1066, 200,"X-Flow"},
{1092, 200,"Alien"}, // Uranus
{1089, 200,"X-Flow"},
{1126, 250,"Chrome"}, // Remington
{1127, 200,"Slamin"},
{1129, 250,"Chrome"}, // Savanna
{1132, 200,"Slamin"},
{1104, 250,"Chrome"}, // Blade
{1105, 200,"Slamin"},
{1113, 250,"Chrome"}, // Slamvan
{1114, 200,"Slamin"},
{1136, 250,"Chrome"}, // Tornado
{1135, 200,"Slamin"},
{1018, 100,"Upswept"}, // Buccaneer, Stafford, Club, Cadrona, Picador
{1020, 180,"Large"},
{1021, 190,"Medium"} // Cadrona
};

new Sideskirt[20][] = {
{1026, 1027, "Alien"}, // Sultan
{1030, 1031, "X-Flow"},
{1036, 1040, "Alien"}, // Elegy
{1039, 1041, "X-Flow"},
{1042, 1049, "Chrome"}, // Broadway
{1047, 1051, "Alien"}, // Flash
{1048, 1052, "X-Flow"},
{1056, 1062, "Alien"}, // Stratum
{1057, 1063, "X-Flow"},
{1069, 1071, "Alien"}, // Jester
{1070, 1072, "X-Flow"},
{1090, 1094, "Alien"}, // Uranus
{1093, 1095, "X-Flow"},
{1101, 1122, "Chrome Flames"}, // Remington
{1106, 1124, "Chrome Arches"},
{1102, 1133, "Chrome Strip"}, // Savanna
{1107, 1108, "Chrome Strip"}, // Blade
{1118, 1120, "Chrome Trim"}, // Slamvan
{1119, 1121, "Wheelcovers"},
{1134, 1137, "Chrome Strip"} // Tornado
};

new FrontBumper[23][] = {
{1169, "Alien"}, // Sultan
{1170, "X-Flow"},
{1171, "Alien"}, // Elegy
{1172, "X-Flow"},
{1174, "Chrome"}, // Broadway
{1175, "Slamin"},
{1153, "Alien"}, // Flash
{1152, "X-Flow"},
{1155, "Alien"}, // Stratum
{1157, "X-Flow"},
{1160, "Alien"}, // Jester
{1173, "X-Flow"},
{1166, "Alien"}, // Uranus
{1165, "X-Flow"},
{1179, "Chrome"}, // Remington
{1185, "Slamin"},
{1189, "Chrome"}, // Savanna
{1188, "Slamin"},
{1182, "Chrome"}, // Blade
{1181, "Slamin"},
{1117, "Chrome"}, // Slamvan
{1191, "Chrome"}, // Tornado
{1190, "Slamin"}
};

new RearBumper[22][] = {
{1141, "Alien"}, // Sultan
{1140, "X-Flow"},
{1149, "Alien"}, // Elegy
{1148, "X-Flow"},
{1176, "Chrome"}, // Broadway
{1177, "Slamin"},
{1150, "Alien"}, // Flash
{1151, "X-Flow"},
{1154, "Alien"}, // Stratum
{1156, "X-Flow"},
{1159, "Alien"}, // Jester
{1161, "X-Flow"},
{1168, "Alien"}, // Uranus
{1167, "X-Flow"},
{1180, "Chrome"}, // Remington
{1178, "Slamin"},
{1187, "Chrome"}, // Savanna
{1186, "Slamin"},
{1184, "Chrome"}, // Blade
{1183, "Slamin"},
{1192, "Chrome"}, // Tornado
{1193, "X-Flow"}
};

new Roof[16][] = {
{1032, "Alien"}, // Sultan
{1033, "X-Flow"},
{1038, "Alien"}, // Elegy
{1035, "X-Flow"},
{1054, "Alien"}, // Flash
{1053, "X-Flow"},
{1055, "Alien"}, // Stratum
{1061, "X-Flow"},
{1067, "Alien"}, // Jester
{1068, "X-Flow"},
{1088, "Alien"}, // Uranus
{1091, "X-Flow"},
{1130, "Hardtop"}, // Savanna
{1131, "Softtop"},
{1103, "Covertible"}, // Blade
{1128, "Vinyl Hardtop"}
};

new Spoiler[12][] = {
{1138, "Alien"}, // Sultan
{1139, "X-Flow"},
{1147, "Alien"}, // Elegy
{1146, "X-Flow"},
{1149, "Alien"}, // Flash
{1150, "X-Flow"},
{1058, "Alien"}, // Stratum
{1060, "X-Flow"},
{1162, "Alien"}, // Jester
{1158, "X-Flow"},
{1164, "Alien"}, // Uranus
{1163, "X-Flow"}
};

new Vents[2][] = {
{1142, 1143,"Oval Vents"},
{1144, 1145,"Square Vents"}
};

new Lamps[2][] = {
{1013, 900,"Round Fog"},
{1024, 800,"Square Fog"}
};

new Hood[4][] = {
{1004, "Champ Scoop"},
{1005, "Fury Scoop"},
{1012, "Worx Scoop"},
{1011, "Race Scoop"}
};
// ������
new FollowBy[MAX_PLAYERS];
new TimerForPlayer[MAX_PLAYERS];
//
new PlayerText:Captcha[12], TextArray[11] = "1234567890"; // ���� ������������
new shield[MAX_PLAYERS];
// ������������ ����:
new page_identifier[MAX_PLAYERS][15], page_number[MAX_PLAYERS];
// ���-�� ������ � �����:
new TOTALBANK;
//new TOTALSETTINGS;
enum acINFO
{
    ID,
    NUMBER,
    OWNER[MAX_PLAYER_NAME],
    BALANCE,
    PASSWORD,
    gOWNER[MAX_PLAYER_NAME],
    gBALANCE
};
new _INFO[MAX_PLAYERS][acINFO][3];
new _PLAYERBANK[MAX_PLAYERS];
new _INFONAME[MAX_PLAYERS][3][20];
// ������� ����������:
#define MAX_OBJECT_MOVED 25
enum object_moved_data
{
	moved_id,
	moved_modelid,
	Float:movedPosX,
	Float:movedPosY,
	Float:movedPosZ,
	Float:movedPosRotationX,
	Float:movedPosRotationY,
	Float:movedPosRotationZ,
	bool:status_moved
}
static stock const moved_info[MAX_OBJECT_MOVED][object_moved_data] ={
	{-1,968,341.8559900,1795.9530000,18.1280000,0.0,90.0,33.5562700,false},//0
	{-1,968,127.7332,1964.9986,19.3235,0.0000,90.1000,0.0000,false},//1
	{-1,968,142.7588,1964.9564,19.1530,0.0000,-89.1999,0.0000,false},//2
	{-1,968,-1548.1198, 518.3745, 6.8495, 0.00, -89.49, 84.29,false},//3
	{-1,4100,-1527.7214,482.7460,10.6420,0.0000,0.0000,-38.3000,false},//4
	{-1,4100,-1527.7214,482.7460,7.8596,0.0000,0.0000,-38.3000,false},//5
	{-1,19353,1843.8203,-891.0100,1085.330,0.0000,-90.0000,0.0000,false},//6
	{-1,968,1544.69995117,-1630.80004883,13.10000038,0.0,270.0,270.0,false},//7
	{-1,971,1588.6079,-1638.0811,14.4063,0.0000,0.0000,-178.8999,false},//8
	{-1,1495,368.9363,160.8361,1024.8696,0.0000,0.0000,93.7999,false},//9
	{-1,1495,368.8348,162.3330,1024.8691,0.0000,0.0000,90.0000,false},//10
	{-1,971,-1626.8281,688.3017,7.9801,0.0000,0.0000,0.0000,false},//11
	{-1,971,-1635.6804,688.3226,7.9901,0.0,0.0,0.0,false},//12
	{-1,968, -1701.4432, 687.6422, 24.6105, 0.00, 88.70, -90.29,false},//13
	{-1,968,-1572.1890, 658.7903, 6.8367,0.00000000,90.00000000,90.18000000,false},//14
	{-1,968,-2436.8767, 495.4464, 29.7209,0.0, 90.0, 24.960,false},//15
	{-1,968,2238.1851, 2450.3584, 10.6600,0.00000000, 90.00000000, 89.76000000,false},//16
	{-1,968,54.0804,-1528.7838,4.8211,0.0000,89.1000,80.6999,false},//17
	{-1,968,53.5292,-1534.7294,4.9000,0.0000,88.8999,261.9964,false},//18
	{-1,968,1792.1484,823.4375,10.5000,0.0000,89.5951,179.9945,false},//19
	{-1,968,1802.5019,823.4698,10.4949,0.0000,90.2999,0.0000,false},//20
	{-1,968,2350.7351,2423.8439,10.3403,-2.2000,-89.9999,0.0000,false},//23
	//{-1,968,-2057.50000000,-100.98999786,35.10000229,0.00000000,270.00000000,270.00000000,false},//24
	//{-1,971,-2044.09997559,-102.66002655,36.97000122,0.00000000,0.00000000,0.00000000,false},//28
	{-1,19313,134.9007,1941.4548,21.1314,0.0000,0.0000,0.0000,false},//29
	{-1,19313,285.8021,1820.1352,19.4806,0.0000,0.0000,-90.0,false},//30
	{-1,8674,96.9028,1920.4405,16.3750,0.0000,-90.0000,-90.0000}//31
};

static stock Float:moved_pos_object[MAX_OBJECT_MOVED][6]={
 	{341.8559900,1795.9530000,18.1290000,0.0000000,0.0000000,33.5562700},//0
	{127.7332,1964.9986,19.3135,0.0000,0.0,0.0},//1
	{142.7588,1964.9564,19.1130,0.0000,0.0,0.0000},//2
	{-1548.1198, 518.3745, 6.8496,0.00, -0.3899, 84.29},//3
	{-1527.7214,482.7460,13.6020,0.0000,0.0000,-38.3000},//4
	{-1527.7214,482.7460,4.9395,0.0000,0.0000,-38.3000},//5
	{1847.112,-891.010,1085.281,0.000,-90.000,0.000},//6
	{1544.69995117,-1630.80004883,13.10000039,0.00000000,0.00000000,270.00000000},//7
	{1588.6079,-1638.0811,7.6763,0.0000,0.0000,-178.8999},//8
	{369.0053,159.7984,1024.8696,0.0000,0.0000,93.7999},//9
	{368.8348,163.3530,1024.8691,0.0000,0.0000,90.0000},//10
	{-1626.8281,688.3017,1.8,0.0000,0.0000,0.0000},//11
	{-1635.6804,688.3226,1.8,0.0000,0.0000,0.0000},//12
	{-1701.4432, 687.6422, 24.6105,0.00, 0.0, -90.29},//13
	{-1572.1890, 658.7903, 6.8367,0.00000000,0.00000000,90.18000000},//14
	{-2436.8767, 495.4464, 29.7209,0.00000000, 0.00000000, 24.96000000},//15
	{2238.1851, 2450.3584, 10.6600,0.00000000, 0.00000000, 89.76000000},//16
	{54.0804,-1528.7838,4.8211,0.0000,0.0,80.6999},//17
	{53.5292,-1534.7294,4.9000,0.0000,0.0,261.9964},//18
	{1792.1484,823.4375,10.5000,0.0000,0.0,179.9945},//19 ���� �����
 	{1802.5019,823.4698,10.4949,0.0000,0.0,0.0000},//20
	{2350.7351,2423.8439,10.3407,0.0,0.0,0.0000},//23 (!) ����
	//{-2057.50000000,-100.98999786,35.10000229,0.00000000,0.00000000,270.00000000},//24 ���������
	//{-2051.9936,-102.6504,44.9937,0.0000,-90.0000,0.0000},//28 ���������
	{121.7608,1941.4548,21.1314,0.0000,0.0000,0.0000},//29
	{285.9226,1833.8746,19.4806,0.0000,0.0000,-90.0},//30
	{96.8924,1917.3903,16.3752,0.0000,-90.0000,-90.0000}//31
};
new Iterator: Admin<MAX_PLAYERS>;
new Iterator: valid_vehicles<MAX_VEHICLES>;
// RACE
new PlayersInRace [1 char];
new Iterator: RacersList<MAX_PLAYERS>;
new PlayerScore[MAX_PLAYERS char];
new PlayerPosition[MAX_PLAYERS char];
new PlayerWinners[1 char];
new race_str [ 800 ] ;
new racePickup [ 4 ],raceTime = 1,RaceStarting[3] = 0,typeRace;
new PlayerText:Race[10][MAX_PLAYERS];

static const Float:spawn_car [2] [40] [4] =
{
	{
		{2091.895263,-2520.565185,13.433180,37.902584}, {2094.764160,-2518.331298,13.433194,37.902797}, {2097.488037,-2516.210937,13.433210,37.903057}, {2100.653076,-2513.746093,13.433222,37.903259}, {2104.851806,-2510.477783,13.433242,37.903450}, {2107.984619,-2507.750732,13.433382,38.896286},
		{2111.420898,-2505.282226,13.433529,44.362625}, {2119.425537,-2518.171386,13.437009,21.364038}, {2114.278076,-2520.184326,13.437017,21.363973}, {2109.155517,-2523.806152,13.439718,21.364025}, {2103.543212,-2526.568603,13.439425,21.364072}, {2098.313232,-2530.997314,13.438414,21.364183},
		{2097.627441,-2540.054931,13.440947,21.364278}, {2101.975830,-2539.262207,13.440667,21.364345}, {2105.375244,-2538.512207,13.440439,21.364418}, {2108.870117,-2537.145019,13.440454,21.364492}, {2113.717041,-2535.249755,13.440456,21.364530}, {2118.462158,-2533.393798,13.440476,21.364578},
		{2123.893066,-2544.668457,13.433508,3.160697}, {2119.953613,-2544.885742,13.435308,3.160687}, {2116.225341,-2547.537109,13.434331,3.160625}, {2111.804199,-2547.658203,13.434389,3.160687}, {2105.874023,-2549.084472,13.434020,3.160563}, {2100.804199,-2549.364013,13.434053,3.160625},
		{2093.775634,-2556.532958,13.431475,3.160563}, {2099.526367,-2558.672119,13.430426,3.160625}, {2103.135009,-2558.473388,13.886198,3.160563}, {2111.609130,-2558.004394,13.886105,3.160563}, {2116.906005,-2557.713134,13.886048,3.160563}, {2113.164550,-2571.723876,13.441659,321.873443},
		{2106.754638,-2569.824951,13.825028,321.873382}, {2101.283691,-2568.904785,13.956215,321.873382}, {2094.681884,-2563.722900,13.956216,321.873382}, {2088.453857,-2571.658203,13.952000,321.873382}, {2091.333496,-2576.226562,13.951242,321.873382}, {2094.020751,-2580.314453,13.950592,321.873382},
		{2097.216552,-2589.722900,14.985203,321.873687}, {2077.217773,-2598.296386,13.440001,268.024841}, {2076.595947,-2592.791503,13.422363,268.021179}, {2074.781738,-2584.226318,13.421342,268.021179}
	},
	{
	   	{672.2044,2103.3127,16.2470,177.8561}, {668.3824,2102.3796,16.2030,177.0146}, {664.0132,2102.1299,16.2054,179.0928}, {659.5983,2102.0122,16.1971,178.9829}, {655.3647,2101.7991,16.2386,180.9504}, {650.8540,2101.2305,16.2347,183.3866},
		{650.2929,2111.7456,17.0781,182.7519}, {654.9857,2111.5193,16.9867,179.6493}, {659.1634,2111.3586,16.9531,180.4426}, {663.5944,2111.7275,16.9409,181.3633}, {666.9539,2111.4771,16.9481,180.1949}, {670.0529,2111.6252,16.9527,179.8351},
		{674.6517,2111.3140,16.8065,177.6580}, {674.8973,2119.1531,17.5570,177.8308}, {670.7462,2119.1599,17.5815,178.6785}, {667.4767,2118.9365,17.4795,180.1411}, {663.5541,2118.9109,17.5459,179.1588}, {659.3839,2118.8687,17.5921,180.8173},
		{656.5150,2118.7117,17.5908,181.3367}, {653.0975,2118.6082,17.6121,179.7124}, {653.1479,2124.6274,18.1142,179.5998}, {657.8023,2124.9504,18.0880,180.6734}, {661.5770,2124.6272,18.0182,180.6442}, {664.9161,2124.1855,18.0260,181.8698},
		{668.1638,2123.9641,17.9031,179.0754}, {671.7554,2123.6523,17.8501,176.6323}, {676.2199,2123.3462,17.8528,175.2501}, {676.4521,2131.1335,18.5533,178.2869}, {673.6086,2131.8088,18.5686,177.4951}, {669.5196,2131.8982,18.6098,177.0708},
		{666.6295,2131.7405,18.6057,177.4690}, {663.1808,2131.7803,18.6541,180.2207}, {660.2335,2131.7568,18.7080,180.0066}, {656.9416,2131.7266,18.7175,180.9920}, {654.2312,2131.5225,18.6418,184.7503}, {649.9846,2131.2620,18.7229,183.1566},
		{650.8186,2137.2646,19.0700,180.7624}, {655.8868,2137.0403,19.0259,181.0888}, {663.0311,2137.3953,19.0177,180.3358}, {672.3614,2137.4355,19.0051,179.1938}
	}
};
static const Float:los_santos_race [2] [52] [3] =
{
	{
		{2068.331542,-2486.419189,13.384812}, {1999.593872,-2443.603515,13.390092}, {1975.960693,-2339.038574,13.389539}, {1974.702636,-2264.686767,13.389196}, {1971.640136,-2207.681640,13.388321}, {1917.494628,-2164.439453,13.225696}, {1835.689331,-2164.458984,13.225584}, {1690.865234,-2165.281250,16.534917}, {1561.424682,-2102.565917,33.548648}, {1534.903198,-2038.627441,30.559921},
		{1531.514648,-1925.844116,15.948495}, {1423.284545,-1871.391845,13.225830},
		{1333.105590,-1853.432861,13.231085}, {1198.192626,-1852.575561,13.236808}, {1072.954833,-1851.229614,13.233303}, {1003.930236,-1793.053222,13.893136}, {860.259521,-1771.445312,13.225211}, {703.481445,-1745.561035,13.644369}, {512.652648,-1713.879150,11.951225}, {322.898925,-1700.012817,6.351512}, {181.994613,-1590.681640,13.611264}, {114.987060,-1483.881469,15.716488},
		{183.274917,-1392.328613,47.316024}, {235.005859,-1312.519897,54.946090}, {271.210632,-1238.301635,73.749771}, {352.619964,-1172.180297,76.992782}, {373.219757,-1108.971069,74.678642}, {570.886535,-1040.667602,72.893234}, {681.720703,-987.671081,51.723533}, {636.893554,-893.615478,36.238845}, {614.952941,-761.974304,16.934080}, {695.729675,-834.909667,42.609966},
		{765.860534,-907.398254,43.168628}, {793.615112,-1049.253906,24.705514}, {796.494628,-1348.491088,13.225209},
		{773.605712,-1551.007446,13.219964}, {829.991271,-1606.236572,13.225358},{915.885864,-1572.501342,13.225023}, {1005.193664,-1573.730346,13.225335},
		{1061.528442,-1571.466918,13.002437}, {1132.829345,-1571.714599,12.952020}, {1149.645874,-1663.695434,13.404994}, {1170.087524,-1745.639404,13.021311}, {1172.646362,-1850.471069,13.023327}, {1315.715576,-1855.433837,13.006551}, {1410.950927,-1873.858398,13.006618}, {1532.403076,-1980.743652,22.644147}, {1568.543945,-2112.455322,32.572132}, {1665.617553,-2161.764160,19.083341},
		{1798.388549,-2167.987548,13.006500}, {1917.365234,-2167.838378,13.006553}, {1963.080810,-2218.701660,15.749450}
	},
	{
		{662.1136,2010.5905,8.3228}, {657.7353,1872.6897,5.1959}, {586.1057,1714.4578,7.7091}, {418.1154,1599.8905,17.4339}, {297.1648,1265.8134,14.1913}, {177.7255,1147.1879,13.9948}, {102.8310,1198.1205,18.1525}, {-70.6931,1198.8982,19.3593}, {-267.0687,1197.7285,19.3208}, {-285.8788,1146.9034,19.3216},
		{-346.1357,1113.2706,19.3208}, {-278.4934,1053.4348,19.3162},
		{-196.7210,1005.2441,19.2968}, {-287.8996,812.8679,14.2512}, {-118.4552,813.8665,20.2630}, {-280.5372,686.1677,18.6626}, {-135.5672,613.9775,1.8051}, {-157.0415,408.2657,11.8052}, {-233.1215,167.2598,4.6665}, {-259.8236,-270.1633,1.1824}, {-639.3168,-243.3178,63.0318}, {-948.3567,-242.7244,37.5659},
		{-1040.6711,-452.4373,35.6779}, {-1205.6786,-742.9162,59.9608}, {-1456.2135,-818.1087,73.2588}, {-1761.9790,-692.2874,25.2470}, {-1786.9010,-580.0756,16.0630}, {-1912.3389,-580.1558,24.1691}, {-2169.7244,-479.2166,45.1492}, {-2256.6597,-146.2213,34.8988}, {-2371.9287,502.8568,29.2342}, {-2386.4546,622.7631,32.2222},
		{-2397.6143,708.7435,34.7408}, {-2528.8259,707.2769,27.5800}, {-2751.2197,715.6112,40.8544},
		{-2762.5669,808.2616,52.5233}, {-2807.7095,892.2084,43.6334},{-2881.6519,1074.9255,30.5571}, {-2706.0959,1290.5035,6.7805},
		{-2455.3774,1332.6726,9.8476}, {-2488.4287,1190.7368,37.1849}, {-2675.3164,1330.7024,55.1568}, {-2675.8245,1619.2803,64.8538}, {-2676.9116,2083.7742,55.1786}, {-2737.1616,2354.3936,71.7937}, {-2345.4705,2635.2644,53.5232}, {-1944.3154,2472.3635,54.5395}, {-1705.3647,2151.8735,17.8462}, {-1566.9766,1912.0879,24.0401},
		{-1396.4218,1852.4491,36.0523}, {-1028.8517,1853.8967,59.9197}, {-873.0335,1992.7505,60.0198}
	}
};
//
new BaseStarting[2] = 0;
new BasePic[3];
new PlayersInBase[1 char];
new Iterator: BaseList<MAX_PLAYERS>;
new AreaBase;
//
new Float:posCam[MAX_PLAYERS][3], Float:Degree[MAX_PLAYERS];
static const Float: Radius = 1.7;
static const Float: Height = 1.15;
new engine,light,alarm,doorss,bonnet,boot,objective;
/*****************************[������]*****************************************/
new barkazino[2];
new enterpickup[2];
new exitpickup[2];
new dresspickup[2];

new StartDuty[MAX_PLAYERS];
new UsingCursor[MAX_PLAYERS];
new CroupierGame[MAX_PLAYERS];
new CroupierTable[MAX_PLAYERS];

new DiceTable[MAX_PLAYERS];
new DiceGamer[MAX_PLAYERS];
new ChooseBet[MAX_PLAYERS];
new Glasses[MAX_PLAYERS];

new StartDice[MAX_DICETABLES];
new TimerDice[MAX_DICETABLES];

new RouleTable[MAX_PLAYERS];
new RouleGamer[MAX_PLAYERS];
new RouleHorizont[MAX_PLAYERS];
new	RouleVertikal[MAX_PLAYERS];
new RouleChip[MAX_PLAYERS];
new RouleNumber[MAX_PLAYERS][14];
new RouleBet[MAX_PLAYERS];
new Casino[MAX_PLAYERS];

new TimerRoule[MAX_ROULETABLES];
new TimerRouleGame[MAX_ROULETABLES];
new StartRoule[MAX_ROULETABLES];
new RouleWheel[MAX_ROULETABLES];

new BlackJackTable[MAX_PLAYERS];
new BlackJackGamer[MAX_PLAYERS];
new BlackJackPoints[MAX_PLAYERS];
new BlackJackCards[MAX_PLAYERS];
new BlackJackTime[MAX_PLAYERS];
new BlackJackBet[MAX_PLAYERS];
new BlackJackDoubleUse[MAX_PLAYERS];

new StartBlackJack[MAX_BLACKJACKTABLES];
new TimerBlackJack[MAX_BLACKJACKTABLES];

enum dInfo
{
	dGamer[5],
	dBet,
	dBank,
	dTime,
	dCroupier,
};
new DiceTableInfo[MAX_DICETABLES][dInfo];

enum rInfo
{
	rGamer[5],
	rTime,
	rCroupier,
}
new RouleTableInfo[MAX_ROULETABLES][rInfo];

enum jInfo
{
	jGamer[2],
	jCroupier,
}
new BlackJackTableInfo[MAX_BLACKJACKTABLES][jInfo];
//
#define MAX_REALTORS 10
enum realtorsInfo
{
	bID,
	bPrice,
	bOwner[MAX_PLAYER_NAME],
	Float:bX,
	Float:bY,
	Float:bZ,
	Float:bAngle, // ���� �������� ������� ����� ������ �� �������
	bRentDays,
	bPickup,
	Text3D:bText,
	bMapIcon,
	bBalance,
};
new RI[MAX_REALTORS][realtorsInfo];
new TOTALREALTORS = 0;
new RealtorPickupExit;
//
new Text:DiceBox[2];
new Text:DiceSetBet;
new Text:DiceThrow;
new Text:DiceExit;
new Text:DiceTitle;
new Text:DiceSlot[MAX_DICETABLES][5];
new Text:BetGamer[MAX_DICETABLES][5];
new Text:DiceBet;
new Text:DiceBank;
new Text:DiceMoney;
new Text:DiceBetShow[MAX_DICETABLES];
new Text:DiceBankShow[MAX_DICETABLES];
new Text:DiceMoneyShow[MAX_DICETABLES][5];

new Text:RouleBox;
new Text:RouleBorder[2];
new Text:RouleGamersTitle;
new Text:RouleNumberTitle;
new Text:RouleBetTitle;
new Text:RouleGamerShow[MAX_ROULETABLES][5];
new Text:RouleNumberShow[MAX_ROULETABLES][5];
new Text:RouleBetShow[MAX_ROULETABLES][5];

new Text:BlackJackBox[7];
new Text:BlackJackBorder[4];
new Text:BlackJackTitle;
new Text:BlackJackDealerTitle;
new Text:BlackJackChip[2];
new Text:BlackJackCardShow[MAX_BLACKJACKTABLES][15];
new Text:BlackJackGamerShow[MAX_BLACKJACKTABLES][2];
new Text:BlackJackBetShow[MAX_BLACKJACKTABLES][2];
new Text:BlackJackPointsShow[MAX_BLACKJACKTABLES][3];
new Text:BlackJackSetBet;
new Text:BlackJackHit;
new Text:BlackJackDouble;
new Text:BlackJackExit;

new Float:DiceTables[8][4] = {
{1943.9890137,1014.8880005,991.9799805, 270.0},
{1943.9870605,1020.7519531,991.9799805, 270.0},
{1943.9899902,1026.8159180,991.9799805, 270.0},
{1943.9370117,1008.9240112,991.9799805, 270.0},
{2218.4877930,1610.2979736,1005.6909790, 0.0},
{2218.4870605,1605.9010010,1005.6909790, 0.0},
{2218.4870605,1601.4718018,1005.6909790, 0.0},
{2218.4877930,1597.2750244,1005.6909790, 0.0}
};

new Float:RouleTables[12][4] = {
{1963.7109,1010.1172,992.5078, 0.0},
{1959.3984,1010.1172,992.5078, 0.0},
{1963.7109,1025.6953,992.5078, 0.0},
{1959.3984,1025.6953,992.5078, 0.0},
{2241.4453,1619.6094,1006.2266, 90.0},
{2241.4453,1614.5547,1006.2266, 90.0},
{2230.5703,1619.6563,1006.2266, 90.0},
{2230.5703,1614.5938,1006.2266, 90.0},
{2242.3672,1594.7578,1006.2266, 90.0},
{2242.3672,1589.1875,1006.2266, 90.0},
{2230.5703,1594.7578,1006.2266, 90.0},
{2230.5703,1589.1875,1006.2266, 90.0}
};

new Float:RouleCamera[12][6] = {
{1962.044311, 1009.729675, 993.793029, 1965.579833, 1009.719299, 990.257507},
{1957.647094, 1009.627197, 994.001586, 1961.182617, 1009.649047, 990.466064},
{1961.970336, 1025.268188, 993.973266, 1965.505859, 1025.264282, 990.437744},
{1957.637329, 1025.210815, 993.973266, 1961.172851, 1025.226196, 990.437744},
{2241.942382, 1617.835571, 1007.803283, 2241.907714, 1621.370971, 1004.267761},
{2241.867919, 1612.894653, 1007.588745, 2241.878417, 1616.430175, 1004.053222},
{2230.994628, 1618.009643, 1007.513671, 2230.979248, 1621.545166, 1003.978149},
{2230.984619, 1612.919921, 1007.513671, 2231.014404, 1616.455322, 1003.978149},
{2242.714843, 1593.072998, 1007.555175, 2242.731689, 1596.608520, 1004.019653},
{2242.875000, 1587.452026, 1007.645446, 2242.885498, 1590.987548, 1004.109924},
{2230.982177, 1592.994873, 1007.704833, 2230.986083, 1596.530395, 1004.169311},
{2231.003417, 1587.479492, 1007.599487, 2231.013916, 1591.015014, 1004.063964}
};

new Float:RouleHorizontCoords[25][1] = {
{0.595999},
{0.442999},
{0.366499},
{0.289999},
{0.213499},
{0.136999},
{0.060499},
{-0.016000},
{-0.092500},
{-0.168999},
{-0.245499},
{-0.321999},
{-0.398499},
{-0.474999},
{-0.551499},
{-0.627999},
{-0.704499},
{-0.780999},
{-0.857499},
{-0.933999},
{-1.010499},
{-1.086999},
{-1.163499},
{-1.239999},
{-1.392999}
};

new Float:RouleVertikalCoords[7][1] = {
{-0.658},
{-0.416},
{-0.174},
{-0.053},
{0.068},
{0.189},
{0.310}
};

new RouleValues[25][] = {
{"0;0;0;0;0;0;0"},
{"0;0;1;1,2;2;2,3;3"},
{"1-18;0;1,4;1,4,2,5;2,5;2,5,3,6;3,6"},
{"0;0;4;4,5;5;5,6;6"},
{"0;1-12;4,7;4,7,5,8;5,8;5,8,6,9;6,9"},
{"0;0;7;7,8;8;8,9;9"},
{"Even;0;7,10;7,10,8,11;8,11;8,11,9,12;9,12"},
{"0;0;10;10,11;11;11,12;12"},
{"0;0;10,13;10,13,11,14;11,14;11,14,12,15;12,15"},
{"0;0;13;13,14;14;14,15;15"},
{"Red;0;13,16;13,16,14,17;14,17;14,17,15,18;15,18"},
{"0;0;16;16,17;17;17,18;18"},
{"0;2-12;16,19;16,19,17,20;17,20;17,20,18,21;18,21"},
{"0;0;19;19,20;20;20,21;21"},
{"Black;0;19,22;19,22,20,23;20,23;20,23,21,24;21,24"},
{"0;0;22;22,23;23;23,24;24"},
{"0;0;22,25;22,25,23,26;23,26;23,26,24,27;24,27"},
{"0;0;25;25,26;26;26,27;27"},
{"Odd;0;25,28;25,28,26,29;26,29;26,29,27,30;27,30"},
{"0;0;28;28,29;29;29,30;30"},
{"0;3-12;28,31;28,31,29,32;29,32;29,32,30,33;30,33"},
{"0;0;31;31,32;32;32,33;33"},
{"19-36;0;31,34;31,34,32,35;32,35;32,35,33,36;33,36"},
{"0;0;34;34,35;35;35,36;36"},
{"0;0;3-1;0;3-1;0;3-1"}
};

new Float:BlackJackTables[12][4] = {
{1962.5438,1015.6641,992.4688, 90.0},
{1960.1672,1015.6641,992.4688, 270.0},
{1962.5438,1020.1797,992.4688, 90.0},
{1960.1672,1020.1719,992.4688, 270.0},
{2241.3125,1606.2734,1006.1563, 180.0},
{2241.3125,1602.7500,1006.1563, 0.0},
{2243.1250,1604.4375,1006.1563, 90.0},
{2239.4297,1604.4531,1006.1563, 270.0},
{2230.3750,1606.2734,1006.1563, 180.0},
{2230.3750,1602.7500,1006.1563, 0.0},
{2232.1875,1604.4375,1006.1563, 90.0},
{2228.4922,1604.4531,1006.1563, 270.0}
};

new Cards[13][] = {
{"ld_card:cd2h"},
{"ld_card:cd3h"},
{"ld_card:cd4h"},
{"ld_card:cd5h"},
{"ld_card:cd6h"},
{"ld_card:cd7h"},
{"ld_card:cd8h"},
{"ld_card:cd9h"},
{"ld_card:cd10h"},
{"ld_card:cd11h"},
{"ld_card:cd12h"},
{"ld_card:cd13h"},
{"ld_card:cd1h"}
};
// FBI:
new door_fbi[2], door_fbi_area;
/******************************************************************************/
new Text:BandDrawBG[2];
new PlayerText:ActionText[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:ActionBand[MAX_PLAYERS] = {PlayerText:-1, ...};
new TheifTime[MAX_PLAYERS];
new TheifRobID[MAX_PLAYERS];
new TheifMoney[MAX_PLAYERS];
new TheifCount[MAX_PLAYERS];
new TheifKey[MAX_PLAYERS];
//**************************������ ���������� **********************************
new viborplayer[MAX_PLAYERS];
new mapa;
new golos[5];
new Pickup1[3];
new PickNames[256],PickName[7][32],PickTimes[128],PickTime[7];
new Pick = 0;
new Text3D:vibor[2];
//------------------------------------------------------------------------------
new army[4];
new checkveh[MAX_VEHICLES];
//new Text:Logo[2];
new pricelist = 30;
new Text3D: PritonLable;
//
new onlinecheck[MAX_PLAYERS];
new afkcheck[MAX_PLAYERS];
//
new tserkov[2];
new razdevalka[11];
//
stock bool:AntiFakeKill[MAX_PLAYERS];
new AntiBan[MAX_PLAYERS];
new playerradio[MAX_PLAYERS];
//new tmpobjid;
//
new gReconnectIP[MAX_PLAYERS][16];
new gReconnectTime[MAX_PLAYERS];
//
new noooc[2] = 0;
new Float:RandomSpawn[][4] =
{
	{1919.7749, -1760.5482, 13.5469, 10.0},
	{1361.9775, -1290.5338, 13.3604, 10.0},
	{1137.8004, -1755.2164, 13.5811, 10.0}
};
new keis[MAX_PLAYERS];
// ���� ��������
#define _FIXES_CEILDIV(%0,%1) (((%0) + (%1) - 1) / (%1))
#define _FIXES_IN_RANGE(%0,%1,%2) (((%0) - ((%1) + cellmin)) < ((%2) - ((%1) + cellmin)))
static stock FIXES_gsPlayerAnimTimer[MAX_PLAYERS],
             FIXES_gsPlayerAnimName[MAX_PLAYERS][60],
             FIXES_gsPlayerAnimLibs[MAX_PLAYERS][_FIXES_CEILDIV(135, cellbits)]
;
static stock const
	FIXES_gscAnimIndexes[24] =
		{
			0, 2, 21, 35, 42, 42, 53, 62, 64, 67, 68, 71, 75, 81, 82, 84, 94, 96, 104, 122, 127, 128, 131, 135
		},
	FIXES_gscAnimLib[135][] =
		{
			"AIRPORT",      "ATTRACTORS",   "BAR",          "BASEBALL",     "BD_FIRE",
			"BEACH",        "BENCHPRESS",   "BF_INJECTION", "BIKE_DBZ",     "BIKED",
			"BIKEH",        "BIKELEAP",     "BIKES",        "BIKEV",        "BLOWJOBZ",
			"BMX",          "BOMBER",       "BOX",          "BSKTBALL",     "BUDDY",
			"BUS",          "CAMERA",       "CAR",          "CAR_CHAT",     "CARRY",
			"CASINO",       "CHAINSAW",     "CHOPPA",       "CLOTHES",      "COACH",
			"COLT45",       "COP_AMBIENT",  "COP_DVBYZ",    "CRACK",        "CRIB",
			"DAM_JUMP",     "DANCING",      "DEALER",       "DILDO",        "DODGE",
			"DOZER",        "DRIVEBYS",     "FAT",          "FIGHT_B",      "FIGHT_C",
			"FIGHT_D",      "FIGHT_E",      "FINALE",       "FINALE2",      "FLAME",
			"FLOWERS",      "FOOD",         "FREEWEIGHTS",  "GANGS",        "GFUNK",
			"GHANDS",       "GHETTO_DB",    "GOGGLES",      "GRAFFITI",     "GRAVEYARD",
			"GRENADE",      "GYMNASIUM",    "HAIRCUTS",     "HEIST9",       "INT_HOUSE",
			"INT_OFFICE",   "INT_SHOP",     "JST_BUISNESS", "KART",         "KISSING",
			"KNIFE",        "LAPDAN1",      "LAPDAN2",      "LAPDAN3",      "LOWRIDER",
			"MD_CHASE",     "MD_END",       "MEDIC",        "MISC",         "MTB",
			"MUSCULAR",     "NEVADA",       "ON_LOOKERS",   "OTB",          "PARACHUTE",
			"PARK",         "PAULNMAC",     "PED",          "PLAYER_DVBYS", "PLAYIDLES",
			"POLICE",       "POOL",         "POOR",         "PYTHON",       "QUAD",
			"QUAD_DBZ",     "RAPPING",      "RIFLE",        "RIOT",         "ROB_BANK",
			"ROCKET",       "RUNNINGMAN",   "RUSTLER",      "RYDER",        "SAMP",
			"SCRATCHING",   "SEX",          "SHAMAL",       "SHOP",         "SHOTGUN",
			"SILENCED",     "SKATE",        "SMOKING",      "SNIPER",       "SNM",
			"SPRAYCAN",     "STRIP",        "SUNBATHE",     "SWAT",         "SWEET",
			"SWIM",         "SWORD",        "TANK",         "TATTOOS",      "TEC",
			"TRAIN",        "TRUCK",        "UZI",          "VAN",          "VENDING",
			"VORTEX",       "WAYFARER",     "WEAPONS",      "WOP",          "WUZI"
		}
;
//==============[������]==========//
new saveplayer[MAX_PLAYERS];
new RegEx:reklamka;
new ammomer, ammomerrr;
new FrakCD[20];
new FrakCD1[20];
new stringer1[144];
new stringer[1500];
new mysql_query_[512];
new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];
// ������� ���������:
#define TIME_PAINTBALL      600
#define REGISTER_PAINTBALL  300

static const Float: SpawnRedTeam [] [] [] =
{
	{
		{-969.9689,1060.8751,1345.0394,88.7132},
		{-972.2077,1064.8075,1345.0170,88.7132},
		{-975.3556,1068.6332,1344.9913,88.7132},
		{-974.6649,1077.8994,1344.9856,86.5198},
		{-971.7581,1095.3455,1344.9913,91.8466},
		{-969.4601,1099.1724,1345.0038,90.9066},
		{-975.8362,1056.8232,1345.0007,91.2199},
		{-976.2545,1021.2715,1345.0333,90.9065},
		{-972.1592,1026.6664,1345.0560,88.0865},
		{-977.6028,1084.5803,1344.9600,90.5932}
	},
	{
		{267.0894,1695.4653,1083.9604,89.6009},
		{264.5477,1688.3457,1084.0736,47.3005},
		{271.6069,1689.6805,1084.6833,62.6540},
		{265.4798,1682.4523,1084.4822,43.2272},
		{271.0176,1684.4034,1084.6586,50.1206},
		{270.8167,1678.4148,1084.7808,41.3238},
		{265.3729,1674.0319,1084.0864,35.0570},
		{269.6141,1667.8398,1084.2783,24.7169},
		{264.8893,1663.0863,1083.8937,359.9633},
		{272.4068,1661.0575,1084.0411,19.3901}
	},
	{
		{2168.0991,-2461.6807,642.7834,178.2282},
		{2165.3225,-2462.0535,642.7283,178.2282},
		{2161.8481,-2462.3508,642.6843,178.2282},
		{2161.7515,-2465.4895,642.2201,178.2282},
		{2164.5781,-2466.0388,642.1389,178.2282},
		{2168.4463,-2466.5925,642.0570,178.2282},
		{2168.3159,-2470.8098,641.4333,178.2282},
		{2164.9248,-2471.1538,641.3825,178.2282},
		{2161.2278,-2471.4880,641.3331,178.2282},
		{2165.2629,-2477.4905,640.4454,178.2282}
	}
};
static const Float: SpawnBlueTeam [] [] [] =
{
	{
		{-1135.4092,1057.7181,1345.7795,270.1115},
		{-1132.9910,1054.1366,1345.7570,270.1115},
		{-1132.1146,1049.9667,1345.7500,270.1115},
		{-1127.1240,1049.9760,1345.7155,270.1115},
		{-1129.8181,1044.4744,1345.7283,270.7382},
		{-1134.0547,1036.5229,1345.7474,266.6648},
		{-1127.4908,1034.1008,1345.6991,266.6648},
		{-1128.2844,1024.0037,1345.6991,269.1714},
		{-1134.6536,1021.2946,1345.7407,271.3648},
		{-1130.0464,1093.7036,1345.7786,264.1581}
	},
	{
		{149.0421,1691.0211,1084.0497,269.7981},
		{152.4205,1696.7710,1084.0497,261.9647},
		{159.2797,1703.4972,1084.3856,238.4645},
		{151.2666,1710.4438,1084.3856,262.5679},
		{162.2194,1713.9791,1084.3856,214.6275},
		{171.8780,1712.4086,1084.0497,189.5606},
		{153.9052,1717.1807,1084.0497,226.8242},
		{150.4423,1724.7450,1084.0497,215.8574},
		{160.3582,1724.4492,1084.0497,207.3974},
		{172.9232,1685.3774,1084.0497,318.0050}
	},
	{
		{2275.3071,-2487.8276,631.9099,179.2203},
		{2280.2778,-2488.3032,631.9099,179.8470},
		{2282.6858,-2485.6675,631.9099,165.7469},
		{2271.3899,-2483.4775,631.9099,210.2407},
		{2282.2336,-2492.7813,631.9099,165.1202},
		{2287.3201,-2499.1445,631.9099,118.1198},
		{2286.6345,-2493.0181,631.9099,133.4733},
		{2274.3694,-2496.9229,631.9099,187.6805},
		{2279.9807,-2502.1191,631.9099,180.7871},
		{2273.5557,-2502.6470,631.9099,180.7871}
	}
};
new paintball,
    ScorePB[2],
    Text:PaintText[3],
    StartPaintBall,
    TimerPaintBall,
    TeamPain[MAX_PLAYERS],
    KillPain[MAX_PLAYERS],
    DeathPain[MAX_PLAYERS],
    PlayerPB[2],
    typePB
;

enum PaINFO
{
	Name[24],
	Kills,
	Deaths,
	Type,
};
new PaintInfo[51][PaINFO], PaintList = 0;
//------------------------------------------------------[ ���������� ] ------------
new bool:gIsRequestClassCalled[MAX_PLAYERS char];
new objectplayerid;
new gatevorota;
new gatevorota2;
new bool:AlhambraDJ = true;
new bool:JizzyDJ = true;
new JizzyDJID = INVALID_PLAYER_ID;
new AlhambraDJID = INVALID_PLAYER_ID;
new JobsDJ[2];
new Float:GMHP[MAX_PLAYERS][2];
new Float:VEHHP[MAX_PLAYERS][2];
new Float:GMARMOUR[MAX_PLAYERS][1];
new parashut;
new bool:times[MAX_PLAYERS];
new jobspickup[1];
new paintulicpic,paintulicpic1,paintvnutrpic,paintvnutrpic1;
new connects;
new TotalGzR,TotalGzA,TotalGzB,TotalGzG,TotalGzV;
new derby[11];
new Float: PlayerHealth[MAX_PLAYERS];
new kazna = 0,nalog = 0;
new seans[MAX_PLAYERS];
new takephone[MAX_PLAYERS];
new gag[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new soglasen[MAX_PLAYERS];
new chekmatlva[10],chekmats[3];
new paint[2];
//
enum _fam_enum_
{
    f_id,
    f_name [ 32 ],
    f_chat_color,
    f_creator [ MAX_PLAYER_NAME ],
    f_creating_data [ 32 ],
    f_members_amount,
    f_nationality,
    f_online,
}
new family_info [ 800 ] [ _fam_enum_ ];//��������� �� 500 �����
new family_count = 0;//���-�� �����.
new family_chat_color[ 5 ] [ 12 ] ={//������ ����� ��� ����
    "FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF"
};
/******************************************************************************/
enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertTime;
new addd;
new adverttime = 20;
//
enum v_info
{
	Float:v_X,
	Float:v_Y,
	Float:v_Z,
	Float:v_A,
	Float:vMile,
	Float:vHealth,
	vLock
}
new VEHICLE[MAX_VEHICLES][v_info];
GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);
/******************************************************************************/
new Text3D:blocktext[MAX_PLAYERS];
new rbtime[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new udar[MAX_PLAYERS];
new zvonok[MAX_PLAYERS];
new Shot[MAX_PLAYERS];
new mast[3];
new PicCP[MAX_PLAYERS];
new Text3D:kaznameria;
new createdvehicles[MAX_VEHICLES];
new createdvehs;
new WeaponNames[][32] =
{
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
new VehicleNameS[][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};

new Text3D:SkladA;
new Text3D:SkladV;
new Text3D:SkladG;
new Text3D:SkladB;
new Text3D:SkladR;
//new AntiCFired[MAX_PLAYERS];
new JobCarTime[MAX_PLAYERS];
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new Float:Fuell[MAX_VEHICLES], Refueling[MAX_PLAYERS], OldFuel[MAX_PLAYERS];
new alkogol[MAX_VEHICLES];
new SwatDoor[2][MAX_PLAYERS];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new lights1;
new robbanks;
new robbankstime[MAX_PLAYERS];
new bankdoors;
new bankdoortime[MAX_PLAYERS];
new robjewels;
new robjewelstime[MAX_PLAYERS];
new jeweldoors;
new jeweldoortime[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new vehcreat[MAX_VEHICLES];
new lighttime[MAX_PLAYERS];
new minigun[MAX_PLAYERS];
new toggotome[MAX_PLAYERS];
new DoorOpen[3];
new crashcuff[MAX_PLAYERS];
new minstr,fight,ring = 0,zakonn = 0;
new boy[MAX_PLAYERS];
new fightid[MAX_PLAYERS];
new TimeBox[MAX_PLAYERS];
new TimeBoxAll[MAX_PLAYERS];
new bool:Music[MAX_PLAYERS];
new bool:Music2;
new URLW[128];
new Float: MGM[5] = 0.0;
new UMusic[128];
new Float: MusicU[4] = 0.0;
new healpric = 100,smspricels = 50,smsls = 0;
new gcontract[MAX_PLAYERS];
new Text3D:taxi3d[MAX_VEHICLES];
new Text3D:Meh3d[MAX_VEHICLES];
new keys[MAX_PLAYERS];
new HotdogOffer[MAX_PLAYERS];
new HotdogPrice[MAX_PLAYERS];

new	ShopCar[81][2] = {	{400,800000},{567,400000},{549,250000},{547,400000},{546,400000},{543,350000},{527,300000},{526,300000},{518,250000},
{517,350000},{516,450000},{492,450000},{479,350000},{478,600000},{475,250000},{466,250000},{458,230000},{439,170000},{436,150000},{404,270000},
{419,230000},{586,270000},{581,400000},{461,750000},{418,3400000},{603,100000},{589,340000},{580,250000},{579,1900000},{561,400000},{555,930000},
{554,550000},{534,430000},{533,390000},{505,450000},{491,400000},{489,350000},{445,450000},{421,650000},{401,340000},{600,440000},{585,360000},
{576,350000},{575,350000},{566,560000},{551,450000},{550,490000},{540,500000},{536,390000},{529,490000},{507,490000},{474,390000},{467,450000},
{426,530000},{422,360000},{412,400000},{405,720000},{477,6120000},{471,959000},{468,449000},{463,543000},{521,787000},{602,3950000},{587,5110000},
{565,4870000},{562,6190000},{560,8320000},{559,7500000},{558,3190000},{545,4860000},{535,3900000},{480,3600000},{402,5199000},
{434,9000000},{522,6350000},{541,8400000},{506,15000000},{451,18000000},{429,12560000},{415,8350000},{411,26400000}};
//
new TheftCount[MAX_PLAYERS];
new TheftCarID[MAX_PLAYERS];
new TheftTime[MAX_PLAYERS];
new TheftKey[MAX_PLAYERS];
// ���������� ����
#if !defined IsValidVehicle
	native IsValidVehicle(vehicleid);
#endif
// ���������� ������
stock static IsFirearmWeapon(weaponid)
{
	return (22 <= weaponid <= 34) || weaponid == 38;
}
// ����:
new medicsls[2],
    carcaligula[2],
    cardrakon[2],
    sfpdcar[2],
    ruscar[2],
    lcncar[2],
    taxicar[2],
    hotdogcar[2],
    hitcar[2],
    ministrcar[2],
    streetcar[2],
    lvpdcar[2],
    lsnewscar[2],
    govcar[2],
    mehanik[2],
    liccar[2],
    yakcar[2],
    sapdpatrul[2],
    sapdcar[2],
    fbicar[2],
    comptruck[2],
    benzovoz[2],
    swatcar[2],
    armycar[2],
    alkofuravagos,
	alkofuragrove,
    alkofuraactek,
	alkofurarifa,
	alkofuraballas,
	matsfuraactek,
	coronoscar[2],
	matsfuravagos,
	vagoscar[2],
	matsfuragrove,
	grovecar[2],
	matsfurarifa,
	rifacar[2],
	matsfuraballas,
	ballascar[2],
	armcar[2],
	matscar[2],
	incos[2]
;
//
new Menu:ChoseSkin;
new useguns[MAX_PLAYERS];
new clearanim[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new zavodis[MAX_PLAYERS];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army;
new TieTime[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new TazerTime[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new Medics = 0,Mechanics = 0,TaxiDrivers = 0,Police = 0;
new MechanicCall = INVALID_PLAYER_ID,TaxiCall = INVALID_PLAYER_ID,PoliceCall = INVALID_PLAYER_ID,MedicCall = INVALID_PLAYER_ID;
new PlayerTied[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new BigEarSms[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new ghour = 0,gminute = 0,gsecond = 0;
new autoshoppick[4];
new realchat = 1,levelexp = 4;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS], ggtime;
new vertmatbi = 0;new armmatbi = 100000;new armmatsf = 50000;new lspdmatbi = 50000;new sfpdmats = 50000;new lvpdmats = 50000;new fbimats = 50000;new yakuzamats = 50000;new rmmats = 50000;new lcnmats = 50000;new rifamatbi = 100000;new ballasmatbi = 100000;new groovmatbi = 100000;new vagosmatbi = 100000;new aztekmatbi = 100000;
new hitss[3];
new topghetto[5];
new sportzal[2],lspic[3],medpic[4],rmpic[2],narkoenter,narkoexit,lcnpic[2],yakexit[2],buygunzakon[5],fbi[8],lspd[6],sf[5],lvpdpic[7],jewels[2];
new autoschool1,ash,avtosh[3],marenter[6],rcpickup[2],automasterskay[2],bankpic[6],serdce[5],hospital[13],ballasvhod[2],rifa[2],mo[2],vagospic[2],aztecpic[2],grooveexit,swatenter,swatenter2,swatexit,swatgun,grovegun,ballasgun,vagosgun,rifagun,aztecgun,yakuzgun,lcngun,rusmagun,grooveenter,gunarm[2],plen[2],zona,zonaa,sklad[2],sannewspanel,joinfactions,carxbunny;
new lspdhelp,fbihelp,armysfhelp,medichelp,lcnhelp,yakuzahelp,cityhallhelp,sfpdhelp,inshelp,ballashelp,vagoshelp,rmhelp,grovehelp,sanhelp,aztechelp,rifahelp,armylvhelp,lvpdhelp,hitmanhelp,srhelp,swathelp,pahelp,serverhelp,cname;
//
//new PlayerText:DartProjectTD[21][MAX_PLAYERS];
//
new caridhouse[MAX_PLAYERS] = { INVALID_VEHICLE_ID, ... }; // ���. ����
static VehicleID[MAX_PLAYERS];
static CheckVehicle[MAX_PLAYERS];
new SELL[3][MAX_PLAYERS];
//
enum cInfo
{
    cZakaz,
	cHitman
};
new ContractInfo[MAX_PLAYERS][cInfo];

// �����
enum sChange
{
    cSeller,
	cBuyer,
	cPrice,
	cType
};
new ChangeAll[MAX_PLAYERS][sChange];
//---------------------------------------[ ����� ] -----------------------
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66
}
enum nInfo
{
	nLcn,
	nYakuza,
	nRm,
};
enum fInfo
{
	fLsnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
	fAmmo,
	fBallasn,
	fVagosn,
	fGroven,
	fAztekn,
	fRifan,
	fLock[5]
};
new MafiaBank[1][nInfo];
new FracBank[1][fInfo];

enum PickInfo
{
	Float: PickX,
	Float: PickY,
	Float: PickZ
}
new PickupInfo[MAX_PICKUPS][PickInfo];

static const SkinMen[7][1] =
{
	{78},{79},{134},{135},{136},{137},{230}
};
static const SkinMale[5][1] =
{
	{140},{139},{90},{93},{77}
};
stock CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreatePickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}
enum aInfo
{
	aAztec,
	aGrove,
	aBallas,
	aRifa,
	aVagos,
};
new FracAlko[1][aInfo];

enum bzInfo
{
	bID,
	Float:bEntrx,
	Float:bEntry,
	Float:bEntrz,
	Float:bExitx,
	Float:bExity,
	Float:bExitz,
	Float:bMenux,
	Float:bMenuy,
	Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bPickupExit,
	bName[MAX_PLAYER_NAME],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bool:bProdStat
};
//new Menu:BuyClothes;
new Menu:ReconPanel;
//new ChangeSkinv[MAX_PLAYERS];
new BizzInfo[200][bzInfo], TOTALBIZZ = 0;
new Text3D:LABELBIZZ[200];
new BizzPay[200];
// ������� ������
new Float:gPlayerPosition[MAX_PLAYERS][3],
    gPlayerInformation[MAX_PLAYERS][2],
    PlayerText:ReconPlayerText[MAX_PLAYERS][2],
	gSpecID[MAX_PLAYERS],
	gSpecState[MAX_PLAYERS]
;
//
new Text:   TextBizzWar;
new BizzWarTime = 0;
new BizzWarTimeAll;
new BizzWarsNumber = -1;
new BizzWarsNumberZone = -1;
new GangZoneBizzWar[3];
new bool: BizzWars;
new Float:gBizzWarZone[3][4] =
{
	{328.403259, 827.808898, 424.403259, 963.808898},
	{358.105712, 2462.011962, 446.105712, 2574.011962},
	{-469.420745, 2186.731933, -341.420745, 2274.731933}
};



enum bwInfo
{
	bwNapad,
	bwGuard,
	bwCostNapad,
	bwCostGuard,
};

new BizzWar[200][bwInfo];
//
new addbizz[256][MAX_PLAYERS];

enum AmmoLists
{
    Name[20],
    gunid,
	Cost
};
new AmmoList[17][AmmoLists] = {
	{"Deagle\t\t\t",24,20},
	{"SDPistol\t\t",23,15},
	{"Country Rifle\t\t",33,35},
	{"ShotGun\t\t",25,25},
	{"MP5\t\t\t",29,20},
	{"AK-47\t\t\t",30,30},
	{"M4\t\t\t",31,30},
	{"Teargas\t\t",17,50},
	{"Golf Club\t\t",2,100},
	{"Baseball Bat\t\t",5,80},
	{"Shovel\t\t\t",6,100},
	{"Pool Cue\t\t",7,110},
	{"Katana\t\t\t",8,180},
	{"Dildo\t\t\t",10,110},
	{"Flowers\t\t",14,250},
	{"Cane\t\t\t",15,110},
	{"Parachute\t\t",46,80}
};

enum pinfo
{
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
	pType,
	bool:pStatus
};
new ProductInfo[100][pinfo], TOTALPRODUCT = 0;

enum grzone
{
	grid,
	Float:grX,
	Float:grY,
	Float:grZ,
	Float:grD,
	grName[50],
	grVirt
}
new GREENZONE[100][grzone], TOTALZONE = 0;

forward IsVehicleOccupied(vehicleid);
public IsVehicleOccupied(vehicleid)
{
	foreach(Player,i)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return true;
	}
	return false;
}
stock Float:GetDistanceBetweenPlayers(p1,p2)

{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 46:
		    return 371;
	}
	return 0;
}
static const MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};
new Float:gInviteSpawns[0][4] = {
	{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS]; new LessonStat[MAX_PLAYERS]; new pLessonCar[MAX_PLAYERS];

enum pInfo
{
    pID,
    pPassword[65],
	pSalt[11],
	pEmail[64],
	pLevel,
	pAlcoInvenxua,
	pNames[24],
	pMestoJail,
	pIpReg[16],
	pHousecash,
	pHeadValue,
	pContract,
	pDataReg,
	pCar,
	pCar2,
	Float:pFuelcar,
	pNumbercar[25],
	pProz,
	pDonateRank,
	pDonatemoney2,
	pMats,
	pSex,
	pMuted,
	pExp,
	pCash,
	pKills,
	pPayCheck,
	pJailed,
	pJailTime,
	pHeal,
	pLeader,
	pMember,
	pRank,
	pChar,
	pJob,
	pInt,
	pVirt,
	pLocal,
	pModel,
	pPnumber,
	pHelper,
	//--------
	pVodPrava,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pPhousekey,
	pZakonp,
	pNarcoLomka,

	pQuest1,
	pQuest2,
	pQuest3,
	pQuest4,
	pQuest5,
	pQuest6,
	pQuest7,
	pQuest8,
	pQuest9,
	pQuest10,
	pQuest11,

	pQuest1Done,
	pQuest2Done,
	pQuest3Done,
	pQuest4Done,
	pQuest5Done,
	pQuest6Done,
	pQuest7Done,
	pQuest8Done,
	pQuest9Done,
	pQuest10Done,
	pQuest11Done,

	//---------------[ ����� ]-----
	pSDPistol,
	pDesertEagle,
	pShotGun,
	pMP5,
	pAK47,
	pM4,
	pPayDayHad,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMuteTime,
	pBank,
	pMobile,
	pDostup,
	pWanted,
	pGunfbiTime,
	pGun51Time,
	pGunlspdTime,
	pGunaviaTime,
	pDrugtime,
	pRobTime,
	pReportTime,
	pVerevka,
	pOtmbI4ka,
	pAutoTime,
	pAutoSkill,
	pBoxstyle,
	pKstyle,
	pKickstyle,
	pBoxSkill,
	pKongfuSkill,
	pKickboxSkill,
	pFightSkill,
	pFightSkil,
	pFightTime,
	pHospital,
	pIzol,
	Weapon[13],
	pWeapons[64],
	Ammo[13],
	Ammos[64],
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pFacePass,//���������� �������
	pIP[16],
	pTexts[16],
	Texts[3],
	pSkinhome[3],
	pHomez,//���� �������� ������
	pSatiety,
	pCheckIp,
	pGetonIP[20],
	pKeyIp[32],
	pGetondate[17],
	SalonCar,
	SalonTime,
	pDedMoroz,
	pNinja,
	pDedUse, //������������ (������ �� �� ������)
	pNinjaUse, //������������ (������ �� �� ������)
	pFull, //���� ������
	pArmBodyUse, //������ �� ������ (�������������)
	pArmBody, //������ �� ������ (������ � �������)
	pIznas,
	pMinet,
	pHotvet,
	pFamily,
	pDayOnline,
	pMask,
	Settings[7],
	pOdet,
	pVoenBill,
	pMedCard,
	p_drugs[7],
	pGM,
	pSlotItems[64],
	pSlotItem[6],
	pType,
	pType2,
	pLimit,
	pVigs,
	pAge,
	pNational,
	pRub,
	pFacPoint,
	pGold,
	pSaveWeapon,
	pKillsOnDM,
	pPrefix[32],
	pInv,
	aiCMDaccess[CMD_NUM+1],
	pDayAfk,
	pOnlineYes,
	pAfkYes,
	pSelectPlayer,
	pTargetPlayer,
	pTargetAction,
	pBlNick,
	pcWarn,
	pcBan,
	pOffBH,
	pKInCapt,
	pDist,
	pAccent[32],
	pRepAdm,
	pKickAdm,
	pWarnAdm,
	pBanAdm,
	pMuteAdm,
	pJailAdm,
	pUsedJail
};
new PlayerInfo[MAX_PLAYERS][pInfo];
//new NULL_PlayerInfo[pInfo];

enum hInfo
{
	hID,
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[24],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
	hKlass,
	hVec,
	hPickup,
	Text3D:h3dtext,
	bool:h3dtextc,
	hMIcon,
	hVehSost,
	hNark,//11
	hMoney,//11
	hMatel,//11
	hduggl,//11
	hak47,//11
	hshotgun,//11
	hm4,//11
	hsdpist,//11
	hrifle,//11
	hsmg,//11
	hdrugs[7],
	bool:hRobhouse,
	hSquare,
	hObject[10]
};
new HouseInfo[2000][hInfo];
//---------------------------------------[ ����]-------------------
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
};
new ServerRestart[3];
new Furi[1][pMatss];

enum pMat
{
	mCapasity,
	mLoad,
};

new MatHaul[7][pMat];
new JoinPed[151][1] = {
	{280},//LSPD1
	{281},//LSPD2
	{282},//LSPD3
	{283},//LSPD4
	{284},//LSPD5
	{285},//LSPD6
	{288},//LSPD7
	{76},//LSPD8
	//============
	{286},//FBI1
	{163},//FBI2
	{164},//FBI3
	{165},//FBI4
	{166},//FBI5
	{141},//FBI6
	//============
	{287},//armySF1
	{191},//armySF2
	//============
	{70},//Mediki1
	{274},//Mediki2
	{275},//Mediki3
	{276},//Mediki4
	{219},//Mediki5
	//============
	{223},//LCN1
	{124},//LCN2
	{113},//LCN3
	{214},//LCN4
	//============
	{120},//YAKUZA1
	{123},//YAKUZA3
	{169},//YAKUZA2
	{186},//YAKUZA4
	//============
	{57},//Meria1
	{150},//Meria2
	{98},//Meria3
	{187},//Meria4
	{147},//Meria5
	//============
	{280},//SFPD1
	{281},//SFPD2
	{282},//SFPD3
	{283},//SFPD4
	{284},//SFPD5
	{285},//SFPD6
	{288},//SFPD7
	{76},//SFPD8
	//===========
	{250},//SF NEWS1
	{261},//SF NEWS2
	{211},//SF NEWS3
	{217},//SF NEWS4
	//===========
	{171},//Kazino1
	{11},//Kazino2
	//===========
	{59},//Instructors1
	{172},//Instructors2
	{189},//Instructors3
	{240},//Instructors4
	//==========
	{280},//LVPD1
	{281},//LVPD2
	{282},//LVPD3
	{283},//LVPD4
	{284},//LVPD5
	{285},//LVPD6
	{288},//LVPD7
	{76},//LVPD8
	//==========
	{112},//Russian mafia1
	{111},//Russian mafia2
	{125},//Russian mafia4
	{272},//Russian mafia3
	{214},//Russian mafia5
	//==========
	{105},//GROOVE1
	{106},//GROOVE2
	{107},//GROOVE3
	{269},//GROOVE4
	{270},//GROOVE5
	{271},//GROOVE6
	//==========
	{114},//Aztecas1
	{115},//Aztecas2
	{116},//Aztecas3
	//==========
	{102},//BALLAS1
	{103},//BALLAS2
	{104},//BALLAS3
	//==========
	{173},//RIFA2
	{174},//RIFA1
	{175},//RIFA3
	//==========
	{108},//VAGOS1
	{109},//vagospic[1]
	{110},//VAGOS3
	//==========
	{287},//Army LV1
	{191},//Army LV2
	//==========
	{60},//San NEWS1
	{170},//San NEWS2
	{188},//San NEWS3
	{186},//San NEWS4
	{287},//=========�������
	{287},
	{191},
	{287},
	{287},///===========������
	{191},
	{287},
	{154},//=========����� ������
	{97},
	{96},
	{146},
	{252},
	{45},
	{96},///===========����� ����
	{90},
	{75},
	{185},//Hitman
	{186},//Hitman
	{250},//Hitman
	{295},// Hitman
	{294},//Hitman
	{60},//street rasers
	{60},//street rasers
	{47},//street rasers
	{217},//street rasers
	{67},//street rasers
	{240},//street rasers
	{170},//street rasers
	{29},//street rasers
	{98},//�������� ������ ����
	{195},//������� ���� Ballas
	{226},//������� ���� Rifa
	{190},//������� ���� Vagos
	{56},//������� ���� Gruv
	{41},//������� ���� Aztec
	{117},//������
	{118},//������
	{233},
	{55},// ������� ���� Street
	{91},// ������� ���� Street
	{216},// ������� ���� Street
	{19},// ���� ����� (�)
	{18},// ���� ����� (�)
	{35},// ���� ����� (�)
	{36},// ���� ����� (�)
	{92},// ���� ����� (�)
	{169},//Hitman
	{85},//Hitman
	{138},
	{139},
	{140},
	{145},
	{251},
	{61}, // �����
	{255},
	{265},
	{266},
	{267},
	{187},
	{141},
	{211},
	{179}
};
stock NoNalog(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		new job = PlayerInfo[playerid][pJob];
		if(member==13 || member==15 || member==12 || member==17 || member==18|| member==5|| member==6 || member==14) return true;
		if(leader==13 || leader==15 || leader==12 || leader==17|| leader==18 || leader==5 || leader==6 || leader==14) return true;
		if(member==0 && job == 0) return true;
	}
	return false;
}
IsNumericc(const text[])
{
	for (new i = 0, j = strlen(text); i < j; i++)
	{
		if (text[i] > '9' || text[i] < '0') return false;
	}
	return true;
}
stock ISAMAFIA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==5 || member==6 || member==14 ) return true;
		if(leader==5|| leader==6 || leader==14) return true;
	}
	return false;
}
stock MessageCriminal(color, string_massive[], bool:type)
{
	foreach(new i: Player)
	{
		if( (!type && !ISAMAFIA(i)) || (type && !IsAGang(i)) ) continue;
		SendClientMessage(i, color, string_massive);
	}
	return 1;
}
stock IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader], member = PlayerInfo[playerid][pMember];
		if(member==12 || member==13 || member==15 || member==17 || member==18) return true;
		if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18) return true;
	}
	return false;
}
stock ShowHelp(playerid)
{
    new string[1000];
    format(string, sizeof(string), "{ff0000}Help Menu: {A8C4E4}/report - /g(eneralchat) - /ask - /w(hisper) - /o(oc) - /s(hout) - /k - /bc - /fn - /rn - /f(amily) - /me - /do - /todo\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/pay - /time - /id - /leaders - /fixcar - /cartool - /discord - /myskill - /accept - /eject - /youtubers\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/gps - /drink - /mask - /healme - /plant - /ddrug - /pdrug - /givedrug - /drugs - /dgun - /pgun - /box - /kickbox - /kongfu\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/limit - /buybiz - /window - /getbizstats - /mystyle - /pass - present - /showmedcard - /atm\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/c(all) - /p(angup) - /h(angup) - /number - /sms - /hmenu - /home - /healhouse - /exit\n");
    strcat(string, "{5faee3}If you need more help use {92000A}/report\n");
    strcat(string, "\n\n{de87a0}Have a fun!");
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}New {2cdb0d}York {ff0000}R{ffffff}P", string, "Close", "");
}
stock JailMuteList(playerid)
{
    new string[1001];
    format(string, sizeof(string), "{ffffff}You are not allowed to join to organization/faction\n");
    strcat(string, "{ffffff}Admin In Faction/organization = {ff0000}ADMIN KICK\n");
    strcat(string, "{FFFFFF}Admin Rules List:\n\n");
    strcat(string, "{FFF000}=========================Jail Times=================== \n");
    strcat(string, "{FFFFFF}DM & TK & PG = \"10 minute jail\"\n");
    strcat(string, "{FFFFFF}DP & DB & SK = \"10 minute jail\"\n");
    strcat(string, "{FFF000}=========================Mute Times=================== \n");
    strcat(string, "{FFFFFF}OSK PLAYER = \"Mute 10 minute\"! \n");
    strcat(string, "{FFFFFF}OSK ADMIN = \"Mute 15 minute\"! \n");
    strcat(string, "{FFFFFF}OSK SERVER \"Mute 20 minute\"! \n");
    strcat(string, "\n\n{FFF000}You must follow the prison and mute times specified above\n Instead, you will be expelled, and in most cases, you will be got ban for 3 days - Have a fun!");
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFF000}Admin {FFFFFF}Rules", string, "Ok", "");
}
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
    {
	     new Float:oldposx, Float:oldposy, Float:oldposz;
	     new Float:tempposx, Float:tempposy, Float:tempposz;
	     GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	     tempposx = (oldposx -x);
	     tempposy = (oldposy -y);
	     tempposz = (oldposz -z);
	     if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
    }
	return 0;
}
stock BizzStats(playerid, idx)
{
    new mafiatext[20];
    if(BizzInfo[idx][bMafia] == 6) { mafiatext = "Yakuza"; }
    else if(BizzInfo[idx][bMafia] == 14) { mafiatext = "Russian Mafia"; }
    else if(BizzInfo[idx][bMafia] == 5) { mafiatext = "La Cosa Nostra"; }
    else if(BizzInfo[idx][bMafia] == 0) { mafiatext = "None"; }
	if(BizzInfo[idx][bType] != 2)
	{
		format(stringer, 512, "= = = = = = = = = = = = = [ %s ] = = = = = = = = = = = = =\n\nOwner:\t\t\t\t\t%s\nControlled by the mafia:\t\t\t\t%s\n\nBusiness account:\t\t\t\t%s Money\nEarned in this hour:\t\t\t%s Money\nPrice per item (percentage):\t\t\t%i %%\nProducts:\t\t\t\t\t%i / 20000\nStatus:\t\t\t\t\t\t%s\nBusiness license:\t\t\t\t%s\nDowntime hours:\t\t\t\t\t%i ���(�/��)",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner],mafiatext, formatInt(BizzInfo[idx][bMoney]), formatInt(BizzPay[idx]), BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("Open") : ("Closed"),(!BizzInfo[idx][bLic])?("No"):("Yes"),BizzInfo[idx][bLockTime]);
 	}
 	else//{0eaa07}������ ��������
 	{
 		format(stringer, 512, "= = = = = = = = = = = = = [ %s ] = = = = = = = = = = = = =\n\nOwner:\t\t\t\t\t%s\nControlled by the mafia:\t\t\t\t%s\nBusiness account:\t\t\t\t%s Money\nEarned in this hour:\t\t\t%s Money\nPrice for 1 liter:\t\t\t\t\t%i Money\nFuel:\t\t\t\t\t%i / 50000\nStatus:\t\t\t\t\t\t%s\nBusiness license:\t\t\t\t%s\nDowntime hours:\t\t\t\t\t%i ���(�/��)",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner],mafiatext, formatInt(BizzInfo[idx][bMoney]), formatInt(BizzPay[idx]), BizzInfo[idx][bTill] / 3, BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("Open") : ("Closed"),(!BizzInfo[idx][bLic])?("No"):("Yes"),BizzInfo[idx][bLockTime]);
 	}
 	ShowPlayerDialog(playerid, 000, 0, "Business", stringer, "Close", "");
 	return true;
}
stock UpdateBizz(idx)
{
	if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 8)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true)) format(stringer, 100, "{ffff00}%s (# %i)\n{0eaa07}Business for sale\nPrice of business: %d$", BizzInfo[idx][bName], idx, BizzInfo[idx][bPrice]);
		else if(BizzInfo[idx][bEnter] > 0) format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}Entrance: {FFCC00}%i$", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]], BizzInfo[idx][bEnter]);
		else format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}entrance: {FFCC00}Free", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]]);
	}
	else
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{0eaa07}Business is for sale\nBusiness price: %d$\n{FFFFFF}Price for 1 liter - {f9f906}%i$", BizzInfo[idx][bPrice], BizzInfo[idx][bTill] / 3);
			else format(stringer, 90, "{0eaa07}Business for sale\nName: %s", BizzInfo[idx][bName]);
		}
		else
		{
			if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{FFFFFF}Owner: {0eaa07}%s\n{FFFFFF}Price for 1 liter - {f9f906}%i$",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill] /3);
			//else format(stringer, 90, "��������: %s\n��������: %s\nRoof: {%s}%s\n����������� ����� ��� ������",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]]);
			else format(stringer, 150, "{ffff00}%s (# %i)\n{FFFFFF}Owner: {42aaff}%s\nRoof: {%s}%s",  BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner],colorchat(BizzInfo[idx][bMafia], 2),GetPlayerFracName[BizzInfo[idx][bMafia]]);
		}
	}
	UpdateDynamic3DTextLabelText(LABELBIZZ[idx], 0xFFFFFFFF, stringer);
	return true;
}
stock InfoCheats(playerid, id_code)
{
    new SendAc[128];
	new TextKick[50];
	switch(id_code)
	{
		case 0: TextKick = "AirBreak (onfoot)";
		case 1: TextKick = "AirBreak (in vehicle)";
		case 2: TextKick = "Teleport hack (onfoot)";
		case 3: TextKick = "Teleport hack (in vehicle)";
		case 4: TextKick = "Teleport hack (into/between vehicles)";
		case 5: TextKick = "Teleport hack (vehicle to player)";
		case 6: TextKick = "Teleport hack (pickups)";
		case 7: TextKick = "FlyHack (onfoot)";
		case 8: TextKick = "FlyHack (in vehicle)";
		case 9: TextKick = "SpeedHack (onfoot)";
		case 10: TextKick = "SpeedHack (in vehicle)";
		case 11: TextKick = "Health hack (in vehicle)";
		case 12: TextKick = "Health hack (onfoot)";
		case 13: TextKick = "Armour hack";
		case 14: TextKick = "Money hack";
		case 15: TextKick = "Weapon hack";
		case 16: TextKick = "Ammo hack (add)";
		case 17: TextKick = "Ammo hack (infinite)";
		case 18: TextKick = "Special actions hack";
		case 19: TextKick = "GodMode from bullets (onfoot)";
		case 20: TextKick = "GodMode from bullets (in vehicle)";
		case 21: TextKick = "Invisible hack";
		case 22: TextKick = "lagcomp-spoof";
		case 23: TextKick = "Tuning hack";
		case 24: TextKick = "Parkour mod";
		case 25: TextKick = "Quick turn";
		case 26: TextKick = "Rapid fire";
		case 27: TextKick = "FakeSpawn";
		case 28: TextKick = "FakeKill";
		case 29: TextKick = "Pro Aim";
		case 30: TextKick = "CJ run";
		case 31: TextKick = "CarShot";
		case 32: TextKick = "CarJack";
		case 33: TextKick = "UnFreeze";
		case 34: TextKick = "AFK Ghost";
		case 35: TextKick = "Full Aiming";
		case 36: TextKick = "Fake NPC";
		case 37: TextKick = "Anti-Reconnect";
		case 38: TextKick = "High ping";
		case 39: TextKick = "Dialog hack";
		case 40: TextKick = "SandBox";
		case 41: TextKick = "Invalid version";
		case 42: TextKick = "Rcon hack";
		case 43: TextKick = "Tuning crasher";
		case 44: TextKick = "Invalid seat crasher";
		case 45: TextKick = "Dialog crasher";
		case 46: TextKick = "Attached object crasher";
		case 47: TextKick = "Weapon Crasher";
		case 48: TextKick = "Connects to one slot";
		case 49: TextKick = "Callback functions";
		case 50: TextKick = "Change seat";
		case 51: TextKick = "Ddos";
		case 52: TextKick = "NOP's";
	}
	if(SettingInfo[CheatSetting][id_code] == 0) return true;
	if(SettingInfo[CheatSetting][id_code] == 1)
	{
		if(GetPVarInt(playerid, "AntiFloodAC") > gettime()) return true;

		format(SendAc, sizeof(SendAc),"{ff0000}Player %s[%i] maybe using a cheat: {FFFFFF}%s {FFFF00}(enter /re %d)",PlayerInfo[playerid][pNames],playerid,TextKick,playerid);
		SendAdminMessage(-1, SendAc);
	    SetPVarInt(playerid, "AntiFloodAC", gettime() + 2);
	}
	if(SettingInfo[CheatSetting][id_code] == 2)
	{
		format(SendAc, sizeof(SendAc),"{ff0000}Player %s[%i] was kicked for using a cheat: {FFFFFF}%s. {FFFF00}ERROR: (#%02d)",PlayerInfo[playerid][pNames],playerid,TextKick,id_code);
		SendAdminMessage(-1, SendAc);
		SendMes(playerid,-1,"{ff0000}You have been kicked for using cheats. {FFFF00}ERROR: (#%i)",id_code);
		SCM(playerid,-1,"{ff0000}If an ERROR occurred, write to a free server group {FFFF00}("PAGE_VK_FREE")");
		KickEx(playerid);
	}
	return true;
}
forward HJTimeLimit(playerid);
public HJTimeLimit(playerid)
{
    SpawnPlayer(playerid);
	ShowPlayerDialog(playerid,-1,0,"","","","");
	SetPlayerVirtualWorld(playerid, 0);
 	SetPlayerInterior(playerid,0);
	HackerJob[playerid] = 0;
	SendClientMessage(playerid,0xFF0000AA,"* Working time you're done, and you dont finish it.");
	return 1;
}
forward HackerSetup(playerid);
public HackerSetup(playerid)
{
    SetPlayerVirtualWorld(playerid, playerid+1);
    SetPlayerInterior(playerid,1);
    SetPlayerPos(playerid, 2164.7,1601.9,999.9);
	SetPlayerFacingAngle(playerid, 263.0);
	SetPlayerCameraPos(playerid, 2163.5,1601.9,1000.8);
	SetPlayerCameraLookAt(playerid, 2172.7,1601.9,999.9);
    ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.0, 1, 0, 0, 0, 0);
	SetTimerEx("HackerOne", 3000, 0, "d", playerid);
	SetPlayerExtra(playerid, INVALID_PLAYER_ID, 4, "Hacking the country's devices.");
	SendClientMessage(playerid, -1, "You have got {83b0eb}4 {ffff00}stars {ffffff}for hacking the country's system!");
    new hname[MAX_PLAYER_NAME], string[128];
    GetPlayerName(playerid, hname, sizeof(hname));
	format(string, sizeof(string), "{ffffff}The player {6c9fe6}%s {ffffff}was hacked the country's systems,{1612ff}Police/Fbi{ffffff} should go catch him now!", hname);
    SendClientMessageToAll(0xFFFFFFFF, string);
}

forward HackerOne(playerid);
public HackerOne(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    SetPlayerCameraLookAt(playerid, 2172.1,1601.7,999.9);
	ShowPlayerDialog(playerid, 1998, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nSystem is ready to hacking an important center\nType {FFff00}'began'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerTwo(playerid);
public HackerTwo(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 1999, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'keygen'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerThree(playerid);
public HackerThree(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'cracked'{a8c4e4} to launch attacks", "Submit", "Cancel");
}
forward HackerFour(playerid);
public HackerFour(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'worm' {a8c4e4}to launch attacks", "Submit", "Cancel");
}
forward HackerFive(playerid);
public HackerFive(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2002, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'virus'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerSix(playerid);
public HackerSix(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2003, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'trojan' {a8c4e4}to launch attacks", "Submit", "Cancel");
}

forward HackerSeven(playerid);
public HackerSeven(playerid)
{
    KillTimer(HJLimitTimer);
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    SetPlayerVirtualWorld(playerid, playerid+1);
    SetPlayerInterior(playerid,1);
    SetPlayerPos(playerid, 2164.7,1601.9,999.9);
	SetPlayerFacingAngle(playerid, 263.0);
	SetPlayerCameraPos(playerid, 2163.5,1601.9,1000.8);
	SetPlayerCameraLookAt(playerid, 2172.7,1601.9,999.9);
	ApplyAnimation(playerid,"CASINO","Roulette_win", 4.0, 1, 0, 0, 0, 0);
    GameTextForPlayer(playerid,"~p~succeed",2000,6);
	SendClientMessage(playerid,0x33FF33AA,"* You have completed the hacker job and get $15.000");
	PlayerInfo[playerid][pCash] +=15000;
	SpawnPlayerEx(playerid);
    DisablePlayerCheckpoint(playerid);
    SetTimerEx("HackerSuccesed", 3000, 0, "d", playerid);
    new hname[MAX_PLAYER_NAME], string[128];
    GetPlayerName(playerid, hname, sizeof(hname));
	format(string, sizeof(string), "{ffffff}The player {6c9fe6}%s {ffffff}has successfully hacked the state's devices", hname);
    SendClientMessageToAll(0xFFFFFFFF, string);
    ClearAnimations(playerid);
}

forward HackerSuccesed(playerid);
public HackerSuccesed(playerid)
{
    SpawnPlayer(playerid);
    SetPPos(playerid, -91.1709,-1576.5309,2.6172);
    SetPlayerVirtualWorld(playerid, 0);
	HackerJob[playerid] = 0;
	SetPlayerInterior(playerid, 0);
	TogglePlayerControllable(playerid,true);
    return 1;
}
forward OnCheatDetected(playerid, code);
public OnCheatDetected(playerid, code)
{
    switch(code)
    {
        case 0: InfoCheats(playerid, code);
        case 1: InfoCheats(playerid, code);
       	case 2: InfoCheats(playerid, code);
        case 3: InfoCheats(playerid, code);
        case 4: InfoCheats(playerid, code);
        case 5: InfoCheats(playerid, code);
        case 6: InfoCheats(playerid, code);
        case 7: InfoCheats(playerid, code);
        case 8: InfoCheats(playerid, code);
        case 9: InfoCheats(playerid, code);
        case 10: InfoCheats(playerid, code);
        case 11: InfoCheats(playerid, code);
        case 12: InfoCheats(playerid, code);
        case 13: InfoCheats(playerid, code);
        case 14: InfoCheats(playerid, code);
        case 15: InfoCheats(playerid, code);
        case 16: InfoCheats(playerid, code);
        case 17: InfoCheats(playerid, code);
        case 18: InfoCheats(playerid, code);
        case 19: InfoCheats(playerid, code);
        case 20: InfoCheats(playerid, code);
        case 21: InfoCheats(playerid, code);
        case 22: InfoCheats(playerid, code);
        case 23: InfoCheats(playerid, code);
        case 24: InfoCheats(playerid, code);
        case 25: InfoCheats(playerid, code);
        case 26: InfoCheats(playerid, code);
        case 27: InfoCheats(playerid, code);
        case 28: InfoCheats(playerid, code);
        case 29: InfoCheats(playerid, code);
        case 30: InfoCheats(playerid, code);
        case 31: InfoCheats(playerid, code);
        case 32: InfoCheats(playerid, code);
        case 33: InfoCheats(playerid, code);
        case 34: InfoCheats(playerid, code);
        case 35: InfoCheats(playerid, code);
        case 36: InfoCheats(playerid, code);
        case 37: InfoCheats(playerid, code);
        case 38: InfoCheats(playerid, code);
        case 39: InfoCheats(playerid, code);
        case 40: InfoCheats(playerid, code);
        case 41: InfoCheats(playerid, code);
        case 42: InfoCheats(playerid, code);
        case 43: InfoCheats(playerid, code);
        case 44: InfoCheats(playerid, code);
        case 45: InfoCheats(playerid, code);
        case 46: InfoCheats(playerid, code);
        case 47: InfoCheats(playerid, code);
        case 48: InfoCheats(playerid, code);
        case 49: InfoCheats(playerid, code);
        case 50: InfoCheats(playerid, code);
        case 51: InfoCheats(playerid, code);
        case 52: InfoCheats(playerid, code);
    }
    return true;
}
new reason_ac[][] = {"{FF6347}Disabled", "{C9C893}Report to chat", "{FF0000}Kick"};
stock ShowCheatSettingsApanel2(playerid)
{
	new string[1500];
	format(string,sizeof(string), "{9c9c9c}Name\t\t\t\t{9c9c9c}Punishment\n\
	{9c9c9c}[26] Rapid\t\t%s\n\
	{9c9c9c}[27] Fake spawn\t\t%s\n\
	{9c9c9c}[28] Fake kill\t\t%s\n\
	{9c9c9c}[29] please\t\t%s\n\
	{9c9c9c}[30] Running CJ\t\t%s\n\
	{9c9c9c}[31] CarShot\t\t%s\n\
	{9c9c9c}[32] race car\t\t%s\n\
	{9c9c9c}[33] Unfreeze\t\t%s\n\
	{9c9c9c}[34] AFK Ghost\t\t%s\n\
	{9c9c9c}[35] poi ein\t\t%s\n\
	{9c9c9c}[36] Fake NPC\t\t%s\n\
	{9c9c9c}[37] Reconnect\t\t%s\n\
	{9c9c9c}[38] High ping\t\t%s\n\
	{9c9c9c}[39] Dialogue hack\t\t%s\n\
	{9c9c9c}[40] Sandbox\t\t%s\n\
	{9c9c9c}[41] Invalid version\t\t%s\n\
	{9c9c9c}[42] RCON hack\t\t%s\n\
	{9c9c9c}[43] Young crusher\t\t%s\n\
	{9c9c9c}[44] Invalid crusher\t\t%s\n\
	{9c9c9c}[45] Crusher dialogue\t\t%s\n\
	{9c9c9c}[46] Crusher objects\t\t%s\n\
	{9c9c9c}[47] Weapon crusher\t\t%s\n\
	{9c9c9c}[48] Invalid connection\t\t%s\n\
	{9c9c9c}[49] Function callback\t\t%s\n\
	{9c9c9c}[50] Anti flow\t\t%s\n\
	{9c9c9c}[51] Ddos protection\t\t%s\n\
	{9c9c9c}[52] Anti-NOP\t\t%s\n\
 Previous page",reason_ac[SettingInfo[CheatSetting][26]],
	reason_ac[SettingInfo[CheatSetting][27]],
	reason_ac[SettingInfo[CheatSetting][28]],
	reason_ac[SettingInfo[CheatSetting][29]],
	reason_ac[SettingInfo[CheatSetting][30]],
	reason_ac[SettingInfo[CheatSetting][31]],
	reason_ac[SettingInfo[CheatSetting][32]],
	reason_ac[SettingInfo[CheatSetting][33]],
	reason_ac[SettingInfo[CheatSetting][34]],
	reason_ac[SettingInfo[CheatSetting][35]],
	reason_ac[SettingInfo[CheatSetting][36]],
	reason_ac[SettingInfo[CheatSetting][37]],
	reason_ac[SettingInfo[CheatSetting][38]],
	reason_ac[SettingInfo[CheatSetting][39]],
	reason_ac[SettingInfo[CheatSetting][40]],
	reason_ac[SettingInfo[CheatSetting][41]],
	reason_ac[SettingInfo[CheatSetting][42]],
	reason_ac[SettingInfo[CheatSetting][43]],
	reason_ac[SettingInfo[CheatSetting][44]],
	reason_ac[SettingInfo[CheatSetting][45]],
	reason_ac[SettingInfo[CheatSetting][46]],
	reason_ac[SettingInfo[CheatSetting][47]],
	reason_ac[SettingInfo[CheatSetting][48]],
	reason_ac[SettingInfo[CheatSetting][49]],
	reason_ac[SettingInfo[CheatSetting][50]],
	reason_ac[SettingInfo[CheatSetting][51]],
	reason_ac[SettingInfo[CheatSetting][52]]);
	ShowPlayerDialog(playerid, 379, DIALOG_STYLE_TABLIST_HEADERS, "apanel | Founder's Menu | {FFFFFF}Anti cheat settings", string,"Next","Close");
	return true;
}
stock ShowCheatSettingsApanel(playerid)
{
	new string[1500];
	format(string,sizeof(string), "{9c9c9c}Name\t\t\t\t{9c9c9c}Punishment\n\
	{9c9c9c}[0] Airbreak on foot\t\t%s\n\
	{9c9c9c}[1] Airbreak in the car\t\t%s\n\
	{9c9c9c}[2] Teleport on foot\t\t%s\n\
	{9c9c9c}[3] Teleport in the car\t\t%s\n\
	{9c9c9c}[4] Teleport to car\t\t%s\n\
	{9c9c9c}[5] Teleport in the car to the player\t\t%s\n\
	{9c9c9c}[6] Teleport to pickup\t\t%s\n\
	{9c9c9c}[7] Flyhack on foot\t\t%s\n\
	{9c9c9c}[8] Flyhack in a car\t\t%s\n\
	{9c9c9c}[9] Speedhack on foot\t\t%s\n\
	{9c9c9c}[10] Speedhack in a car\t\t%s\n\
	{9c9c9c}[11] Car repair\t\t%s\n\
	{9c9c9c}[12] Player health\t\t%s\n\
	{9c9c9c}[13] Armor\t\t%s\n\
	{9c9c9c}[14] Money(dollars)\t\t%s\n\
	{9c9c9c}[15] Weapon\t\t%s\n\
	{9c9c9c}[16] Adding Ammo\t\t%s\n\
	{9c9c9c}[17] Endless ammo\t\t%s\n\
	{9c9c9c}[18] Special Actions\t\t%s\n\
	{9c9c9c}[19] h player\t\t%s\n\
	{9c9c9c}[20] GM car\t\t%s\n\
	{9c9c9c}[21] Invisible\t\t%s\n\
	{9c9c9c}[22] Lagger\t\t%s\n\
	{9c9c9c}[23] Runing\t\t%s\n\
	{9c9c9c}[24] Parkour mod\t\t%s\n\
	{9c9c9c}[25] Quick player turn\t\t%s\n\
	Next page",reason_ac[SettingInfo[CheatSetting][0]],
	reason_ac[SettingInfo[CheatSetting][1]],
	reason_ac[SettingInfo[CheatSetting][2]],
	reason_ac[SettingInfo[CheatSetting][3]],
	reason_ac[SettingInfo[CheatSetting][4]],
	reason_ac[SettingInfo[CheatSetting][5]],
	reason_ac[SettingInfo[CheatSetting][6]],
	reason_ac[SettingInfo[CheatSetting][7]],
	reason_ac[SettingInfo[CheatSetting][8]],
	reason_ac[SettingInfo[CheatSetting][9]],
	reason_ac[SettingInfo[CheatSetting][10]],
	reason_ac[SettingInfo[CheatSetting][11]],
	reason_ac[SettingInfo[CheatSetting][12]],
	reason_ac[SettingInfo[CheatSetting][13]],
	reason_ac[SettingInfo[CheatSetting][14]],
	reason_ac[SettingInfo[CheatSetting][15]],
	reason_ac[SettingInfo[CheatSetting][16]],
	reason_ac[SettingInfo[CheatSetting][17]],
	reason_ac[SettingInfo[CheatSetting][18]],
	reason_ac[SettingInfo[CheatSetting][19]],
	reason_ac[SettingInfo[CheatSetting][20]],
	reason_ac[SettingInfo[CheatSetting][21]],
	reason_ac[SettingInfo[CheatSetting][22]],
	reason_ac[SettingInfo[CheatSetting][23]],
	reason_ac[SettingInfo[CheatSetting][24]],
	reason_ac[SettingInfo[CheatSetting][25]]);
	ShowPlayerDialog(playerid, 378, DIALOG_STYLE_TABLIST_HEADERS, "Anti-cheat setup "NAME_SERVER" Role Play", string,"Next","Back");
	return true;
}
forward AUsePromocode(playerid, code[]);
public AUsePromocode(playerid, code[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new query[144];
		format(query, sizeof(query), "SELECT * FROM `promocodes` WHERE `Name` = '%s'", code);
		mysql_function_query(connects, query, true, "CheckPromocode", "ds", playerid, code);
	} else SendClientMessage(playerid, 0xafafafff, "Have you already used this promotional code?!");
	return true;
}
stock GetPlayerBizz(playerid)
{
	new bizz = 0;
	for(new i = 1; i <= TOTALBIZZ;i++)
	{
		if(!strcmp(BizzInfo[i][bOwner],PlayerInfo[playerid][pNames],false) && strcmp(BizzInfo[i][bOwner],"None",true) != 0) bizz++, SetPVarInt(playerid, "PlayerBizz", i);
	}
	return bizz;
}
stock BuyHouse(h)
{
	if(HouseInfo[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 200.0);
		Update3dHouse3d(h);
	}
	if(HouseInfo[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(19522, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 200.0);
		Update3dHouse3d(h);
	}
	return true;
}
stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay, Addsiren)
{
	new idd = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay, Addsiren);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay, Addsiren)
{
	new idd = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay, Addsiren);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new idd = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock DestroyVehicleEx(vehicleid)
{
	if(Iter_Contains(valid_vehicles, vehicleid))
        Iter_Remove(valid_vehicles, vehicleid);
	return DestroyVehicle(vehicleid);
}

stock SetVehicleEE(vehicleid, Float: X, Float: Y, Float: Z)
{
	VEHICLE[vehicleid -1][v_X] = X;
	VEHICLE[vehicleid -1][v_Y] = Y;
	VEHICLE[vehicleid -1][v_Z] = Z;
	foreach(Player,i)
    {
        if (IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid))
        {
			PlayerInfo[i][pPos_x] = X;
			PlayerInfo[i][pPos_y] = Y;
			PlayerInfo[i][pPos_z] = Z;
			break;
   		}
 	}
	return SetVehiclePos(vehicleid, X, Y, Z);
}
stock SetVehicleZAngleEx(vehicleid, Float: Angle)
{
	VEHICLE [ vehicleid - 1 ][ v_A ] = Angle;
	SetVehicleZAngle(vehicleid, Angle);
	return true;
}
/******************************************************************************/
main() return true;
/******************************************************************************/
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    VehicleID[playerid] = vehicleid;
	Refueling[playerid] = 0;
	return true;
}
stock IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==4) return true;
		if(leader==4) return true;
	}
	return false;
}
stock IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] == 7) return true;
		else if(PlayerInfo[playerid][pLeader] == 7) return true;
	}
	return false;
}
stock IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==1 || member==2 || member==21 || member ==25 || member==10 || member==26) return true;
		if(leader==21 || leader==2 || leader == 10 || leader == 1 || leader==25 || leader==26) return true;
	}
	return false;
}
stock IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==3 || member==19 || member==1 || member==2 || member==21 || member==10) return true;
		else if(leader==3 || leader==19) return true;
	}
	return false;
}
stock SetPPos( playerid, Float:x, Float:y, Float:z )
{
    PlayerInfo[ playerid ][ pPos_x ] = x;
    PlayerInfo[ playerid ][ pPos_y ] = y;
    PlayerInfo[ playerid ][ pPos_z ] = z;
    return SetPlayerPos( playerid, x, y, z );
}
stock IsATerra(playerid)
{
    if(PlayerInfo[playerid][pMember] == 12 && IsPlayerInRangeOfPoint(playerid,50.0,2000.9352,-1133.1912,25.3022) // BALLAS
            ||PlayerInfo[playerid][pMember] == 13 && IsPlayerInRangeOfPoint(playerid,50.0,2754.7273,-1177.4165,69.4040) // VAGOS
            ||PlayerInfo[playerid][pMember] == 15 && IsPlayerInRangeOfPoint(playerid,50.0,2492.7532,-1676.3687,13.3380) // GROVE
            ||PlayerInfo[playerid][pMember] == 17 && IsPlayerInRangeOfPoint(playerid,50.0,1713.9735,-2114.5122,13.3828) // AZTECAS
            ||PlayerInfo[playerid][pMember] == 18 && IsPlayerInRangeOfPoint(playerid,50.0,2184.1218,-1803.6334,13.3693) // RIFA
            ||PlayerInfo[playerid][pMember] == 12 && IsPlayerInRangeOfPoint(playerid,50.0,-61.2984,1364.5847,1080.2109) && GetPlayerVirtualWorld(playerid) == 34 // BALLAS 34
            ||PlayerInfo[playerid][pMember] == 13 && IsPlayerInRangeOfPoint(playerid,50.0,303.6300,309.2500,999.1484) // VAGOS
            ||PlayerInfo[playerid][pMember] == 15 && IsPlayerInRangeOfPoint(playerid,50.0,2496.0129,-1708.9232,1014.7422) // GROVE
            ||PlayerInfo[playerid][pMember] == 17 && IsPlayerInRangeOfPoint(playerid,50.0,-49.7558,1400.3553,1084.4297) && GetPlayerVirtualWorld(playerid) == 36 // AZTECAS 36
            ||PlayerInfo[playerid][pMember] == 18 && IsPlayerInRangeOfPoint(playerid,50.0,-223.8400,1410.5100,27.7734)) // RIFA
            {
        return true;
    }
    return false;
}
new Float:Atms[21][3] = {
	{-1676.34570312,434.01806641,7.08183193},
	{-818.55200195,1567.63708496,27.01933098},
	{-2421.45410156,958.35540771,45.18632126},
	{2174.20336914,1402.93469238,10.96464443},
	{-2621.31445312,1415.23510742,6.88521862},
	{1587.30920410,2218.34838867,10.96464443},
	{-2452.32275391,2252.62988281,4.87058449},
	{2187.36035156,2478.89160156,11.14433193},
	{-1282.38098145,2715.18652344,50.16842651},
	{-2033.32604980,159.50723267,28.94120598},
	{91.92106628,1180.56555176,18.56620598},
	{2236.16186523,-1665.79772949,15.27980804},
	{847.58093262,-1799.19348145,13.71945286},
	{1367.56359863,-1290.13696289,13.44901943},
	{-78.74282837,-1171.64892578,1.95329499},
	{1142.44287109,-1763.92932129,13.59816360},
	{-1551.53637695,-2737.33691406,48.64560318},
	{661.71307373,-576.21777344,16.25428581},
	{557.32824707,-1294.28137207,17.24994087},
	{-2035.70605469,-102.35491180,35.07402039},
	{1919.78381348,-1766.21813965,13.44901943}
};
stock IsABankomat(playerid)
{
	for(new i = 0; i < sizeof(Atms); i++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Atms[i][0], Atms[i][1], Atms[i][2])) return true;
	}
	return false;
}
stock IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 510,509,481:return true;}return false;}
//==============================================================================
//new PlayerText:Capture[MAX_PLAYERS][4];//
new PlayerText:CaptureTD[MAX_PLAYERS][5];
new IsCapture;
#define MAX_GANGS 20
enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfo[MAX_GANGS][Ganginfa];
#define MAX_GZONE 150
new ZoneOnBattle[MAX_GZONE];
new allowedfactions[] = {12,13,15,17,18};
new GZSafeTime[MAX_GZONE];
enum GzoneInfo
{
	id,
Float:gCoords[4],
	gFrak,
	gNapad
}
new GZInfo[MAX_GZONE][GzoneInfo];
new CaptureKills[MAX_PLAYERS];
new TOTALGZ, IDzone = -1;
new Timer[10];
stock CaptureEnd(familyone, familytwo)
{
	new BestPlayer, BestKills, string[144], query[144];
	foreach (new i : Player)
	{
	    if(!IsAGang(i)) continue;
		if(PlayerInfo[i][pMember] == familyone || PlayerInfo[i][pMember] == familytwo)
		{
			if(CaptureKills[i] > BestKills) {
				BestKills = CaptureKills[i];
				BestPlayer = i;
			}
			CaptureKills[i] = 0;
			PlayerTextDrawHide(i, CaptureTD[i][0]);
			PlayerTextDrawHide(i, CaptureTD[i][1]);
			PlayerTextDrawHide(i, CaptureTD[i][2]);
			PlayerTextDrawHide(i, CaptureTD[i][3]);
			PlayerTextDrawHide(i, CaptureTD[i][4]);
			if(!PlayerInfo[i][pAlcoInvenxua]) ClearKillFeed(i);
			SetPVarInt(i,"GzOn",0);
			format(query, sizeof(query), "UPDATE `accounts` SET `pKInCapt` = '%d' WHERE `pID` = '%d'", PlayerInfo[i][pKInCapt], PlayerInfo[i][pID]);
			mysql_function_query(connects, query, false, "", "");
		}
	}
	if(BestKills > 0) {
		format(string, sizeof(string), "{efff00}Best Capture Player %s[%d] Most Highest Killed %d people(s)", PlayerInfo[BestPlayer][pNames], BestPlayer, BestKills);
		MessageCriminal(COLOR_YELLOW, string, true);
	}
}
stock CaptureUpd(bandkiller)
{
	new SCORE1[128];
	new SCORE2[128];
	foreach (new i : Player)
	{
		if(!IsAGang(i)) continue;
		if(GangInfo[PlayerInfo[i][pMember]][capture] > 0)
		{
			if(GangInfo[bandkiller][gangnumber] == 1)
			{
                format(SCORE1,30,"~w~%s ~r~%d",GetPlayerFracName[GZInfo[IDzone][gNapad]],GangInfo[bandkiller][score]);
                PlayerTextDrawSetString(i,CaptureTD[i][3],SCORE1);
			}
			else
			{
				format(SCORE2,30,"~w~%s ~r~%d",GetPlayerFracName[GZInfo[IDzone][gFrak]],GangInfo[bandkiller][score]);
                PlayerTextDrawSetString(i,CaptureTD[i][4],SCORE2);
			}
		}
	}
}
stock SendDead(ids,whoids,killerid,playerid,reason)
{
    foreach (new m : Player)
	{
        if(PlayerInfo[m][pAlcoInvenxua]) continue;
	    if(PlayerInfo[m][pMember] == ids || PlayerInfo[m][pMember] == whoids)
	    {
    		SendDeathMessageToPlayer(m, killerid, playerid, reason);
    	}
    }
    return 1;
}
stock GzCheck()
{
	if(GZSafeTime[IDzone] > 0)
	{
		GZSafeTime[IDzone]--;
		foreach (new x : Player)
		{
			if(PlayerInfo[x][pMember] == GZInfo[IDzone][gNapad] || PlayerInfo[x][pMember] == GZInfo[IDzone][gFrak])
			{
   				new SCORE3[128];
			    if(GetPVarInt(x,"GzOn") == 0)
			    {
       				new BANDAA[128],BANDAB[128];
			        GangZoneFlashForPlayer(x,GZInfo[IDzone][id],GetGangColor(GZInfo[IDzone][gNapad]));
           			PlayerTextDrawShow(x, CaptureTD[x][0]);
              		PlayerTextDrawShow(x, CaptureTD[x][1]);
                	format(SCORE3,30," %s",Convert(GZSafeTime[IDzone]));
	                PlayerTextDrawSetString(x,CaptureTD[x][2],SCORE3);
					PlayerTextDrawShow(x, CaptureTD[x][2]);
	                format(BANDAB,30,"~w~%s ~r~0",GetPlayerFracName[GZInfo[IDzone][gNapad]]);
		            PlayerTextDrawSetString(x,CaptureTD[x][3],BANDAB);
		            PlayerTextDrawShow(x, CaptureTD[x][3]);
		            format(BANDAA,30,"~w~%s ~r~0",GetPlayerFracName[GZInfo[IDzone][gFrak]]);
		            PlayerTextDrawSetString(x,CaptureTD[x][4],BANDAA);
		            PlayerTextDrawShow(x, CaptureTD[x][4]);
					SetPVarInt(x,"GzOn",1);
	    		}
				format(SCORE3,30," %s",Convert(GZSafeTime[IDzone]));
    			PlayerTextDrawSetString(x,CaptureTD[x][2],SCORE3);
			}
		}
	}
	if(ZoneOnBattle[IDzone] == 1 && GZSafeTime[IDzone] == 0)
	{
		if(GangInfo[GZInfo[IDzone][gNapad]][score] > GangInfo[GZInfo[IDzone][gFrak]][score] ||
			GangInfo[GZInfo[IDzone][gNapad]][score] == 0 && GangInfo[GZInfo[IDzone][gFrak]][score] == 0)
		{
			new zx,zl;
			zx = GZInfo[IDzone][gNapad];
			zl = IDzone;
			if(GZInfo[zl][gFrak] == 18) TotalGzR--;
			else if(GZInfo[zl][gFrak] == 17) TotalGzA--;
			else if(GZInfo[zl][gFrak] == 15) TotalGzG--;
			else if(GZInfo[zl][gFrak] == 13) TotalGzV--;
			else if(GZInfo[zl][gFrak] == 12) TotalGzB--;
			format(stringer1,90,"[CAPTURE] The %s wins the capture zone!!",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gFrak],COLOR_LIGHTRED, stringer1);
			SendFamilyMessage(GZInfo[IDzone][gNapad],COLOR_LIGHTRED, stringer1);
			ZoneOnBattle[zl] =0;
			CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
			GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
			GangInfo[GZInfo[zl][gNapad]][capture] = 0;
			GangInfo[GZInfo[zl][gNapad]][score] = 0;
			GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
			GangInfo[GZInfo[zl][gFrak]][capture] = 0;
			GangInfo[GZInfo[zl][gFrak]][score] = 0;
			GangInfo[GZInfo[IDzone][gNapad]][gangnumber] = 0;
			GangInfo[GZInfo[IDzone][gFrak]][gangnumber] = 0;
			GZInfo[zl][gFrak] = zx;
			if(GZInfo[zl][gFrak] == 18) TotalGzR++;
			else if(GZInfo[zl][gFrak] == 17) TotalGzA++;
			else if(GZInfo[zl][gFrak] == 15) TotalGzG++;
			else if(GZInfo[zl][gFrak] == 13) TotalGzV++;
			else if(GZInfo[zl][gFrak] == 12) TotalGzB++;
			if(IDzone == 47)
			{
				format(stringer1, sizeof (stringer1),  "Den\nUnder control:\n %s\nDrug price: %d",GetPlayerFracName[GZInfo[47][gNapad]],pricelist);
    			UpdateDynamic3DTextLabelText(PritonLable,COLOR_GREEN,stringer1);
    		}
			GZInfo[zl][gNapad] = 0;
			IsCapture = 0;
			GangZoneStopFlashForAll(GZInfo[zl][id]);
			GangZoneHideForAll(GZInfo[zl][id]);
			GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
			SaveGZ(zl);
    		skladband();
			Timer[7] = 0;
			IDzone = -1;
		}
		else if(GangInfo[GZInfo[IDzone][gNapad]][score] < GangInfo[GZInfo[IDzone][gFrak]][score] ||
			GangInfo[GZInfo[IDzone][gNapad]][score] == GangInfo[GZInfo[IDzone][gFrak]][score])
		{
			new zx,zl;
			zx = GZInfo[IDzone][gFrak];
			zl = IDzone;
			format(stringer1,90,"[F] The %s wins zone capture",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gFrak],COLOR_LIGHTRED, stringer1);
			format(stringer1,90,"[F] The %s gang won, you lost the zone capture",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gNapad],COLOR_LIGHTRED, stringer1);

			ZoneOnBattle[zl] =0;
			CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
			GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
			GangInfo[GZInfo[zl][gNapad]][capture] = 0;
			GangInfo[GZInfo[zl][gNapad]][score] = 0;
			GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
			GangInfo[GZInfo[zl][gFrak]][capture] = 0;
			GangInfo[GZInfo[zl][gFrak]][score] = 0;
			GangInfo[GZInfo[IDzone][gNapad]][gangnumber] = 0;
			GangInfo[GZInfo[IDzone][gFrak]][gangnumber] = 0;
			IsCapture = 0;
			GZInfo[zl][gFrak] = zx;
			GZInfo[zl][gNapad] = 0;
			GangZoneStopFlashForAll(GZInfo[zl][id]);
			GangZoneHideForAll(GZInfo[zl][id]);
			GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
			SaveGZ(zl);
			Timer[7] = 0;
			IDzone = -1;
		}
	}
}
Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 100, "%i:%02dm:%02ds", hours, mins, secs);
	}
	else
	{
		format(string, 100, "%i:%02d", mins, secs);
	}
	return string;
}
stock IsInAllowed(playerid)
{
	for(new i =0;i<sizeof(allowedfactions);i++) { if(PlayerInfo[playerid][pMember] == allowedfactions[i]&&PlayerInfo[playerid][pRank] >= 7) return true; }
	return false;
}
stock IsAPlane(carid)
{
	switch(GetVehicleModel(carid)) {
		case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469,425: return true;
	}
	return false;
}
stock IsANoSpeed(carid)
{
	switch(GetVehicleModel(carid)){
		case 441,448,449,450,462,464,465,481,501,509,510,537,538,564,569,570,590,591,594,606,607,608,610,611: return true;
	}
	return false;
}
stock IsAMatsCar(carid)
{
    if(carid >= matscar[0] && carid <= matscar[1]) return true;
	return false;
}
stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
	VehicleID[playerid] = vehicleid;
    return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
stock CreateTextDraw(playerid)
{

	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);
	DestroyPlayerTD(playerid, AimNameDraw[playerid]);
	
		//_________________________________[TextDraw's]_____________________________
	work0 = TextDrawCreate(491.411773, 225.500000, "usebox");
	TextDrawLetterSize(work0, 0.000000, 2.599999);
	TextDrawTextSize(work0, 417.294128, 0.000000);
	TextDrawAlignment(work0, 1);
	TextDrawColor(work0, 0);
	TextDrawUseBox(work0, true);
	TextDrawBoxColor(work0, 102);
	TextDrawSetShadow(work0, 0);
	TextDrawSetOutline(work0, 0);
	TextDrawFont(work0, 0);

	work1 = TextDrawCreate(489.117767, 228.250030, "usebox");
	TextDrawLetterSize(work1, 0.000000, 1.941176);
	TextDrawTextSize(work1, 419.647125, 0.000000);
	TextDrawAlignment(work1, 1);
	TextDrawColor(work1, 0);
	TextDrawUseBox(work1, true);
	TextDrawBoxColor(work1, -1523963137);
	TextDrawSetShadow(work1, 0);
	TextDrawSetOutline(work1, 0);
	TextDrawBackgroundColor(work1, -1523963137);
	TextDrawFont(work1, 0);

	work2 = TextDrawCreate(491.470611, 254.500015, "usebox");
	TextDrawLetterSize(work2, 0.000000, 2.505882);
	TextDrawTextSize(work2, 417.294128, 0.000000);
	TextDrawAlignment(work2, 1);
	TextDrawColor(work2, 0);
	TextDrawUseBox(work2, true);
	TextDrawBoxColor(work2, 102);
	TextDrawSetShadow(work2, 0);
	TextDrawSetOutline(work2, 0);
	TextDrawFont(work2, 0);

	work3 = TextDrawCreate(489.176513, 257.250000, "usebox");
	TextDrawLetterSize(work3, 0.000000, 1.894117);
	TextDrawTextSize(work3, 419.176452, 0.000000);
	TextDrawAlignment(work3, 1);
	TextDrawColor(work3, 0);
	TextDrawUseBox(work3, true);
	TextDrawBoxColor(work3, -1523963137);
	TextDrawSetShadow(work3, 0);
	TextDrawSetOutline(work3, 0);
	TextDrawFont(work3, 0);

	work4 = TextDrawCreate(426.352844, 216.416625, "WORK STATUS:");
	TextDrawLetterSize(work4, 0.244823, 0.876666);
	TextDrawAlignment(work4, 1);
	TextDrawColor(work4, -1);
	TextDrawSetShadow(work4, 0);
	TextDrawSetOutline(work4, 1);
	TextDrawBackgroundColor(work4, 51);
	TextDrawFont(work4, 1);
	TextDrawSetProportional(work4, 1);

	work5 = TextDrawCreate(427.764587, 230.416687, "_");
	TextDrawLetterSize(work5, 0.324344, 1.343326);
	TextDrawAlignment(work5, 1);
	TextDrawColor(work5, -1);
	TextDrawSetShadow(work5, 0);
	TextDrawSetOutline(work5, 1);
	TextDrawBackgroundColor(work5, 51);
	TextDrawFont(work5, 3);
	TextDrawSetProportional(work5, 1);

	work6 = TextDrawCreate(424.529357, 260.000000, "_");
	TextDrawLetterSize(work6, 0.257529, 1.150833);
	TextDrawAlignment(work6, 1);
	TextDrawColor(work6, -1);
	TextDrawSetShadow(work6, 0);
	TextDrawSetOutline(work6, 1);
	TextDrawBackgroundColor(work6, 51);
	TextDrawFont(work6, 3);
	TextDrawSetProportional(work6, 1);

	samp4 = TextDrawCreate(122.999954, 243.911163, "You are at the prison on NEW YORK");
	TextDrawLetterSize(samp4, 0.449999, 1.600000);
	TextDrawAlignment(samp4, 1);
	TextDrawColor(samp4, 0xFF0000FF);
	TextDrawSetShadow(samp4, 0);
	TextDrawSetOutline(samp4, 1);
	TextDrawBackgroundColor(samp4, 51);
	TextDrawFont(samp4, 1);
	TextDrawSetProportional(samp4, 1);

	Kenji[0] = TextDrawCreate(137.000000, 368.000000, "_");
	TextDrawBackgroundColor(Kenji[0], 255);
	TextDrawFont(Kenji[0], 1);
	TextDrawLetterSize(Kenji[0], 0.200000, 6.199998);
	TextDrawColor(Kenji[0], -1);
	TextDrawSetOutline(Kenji[0], 0);
	TextDrawSetProportional(Kenji[0], 1);
	TextDrawSetShadow(Kenji[0], 1);
	TextDrawUseBox(Kenji[0], 1);
	TextDrawBoxColor(Kenji[0], 255);
	TextDrawTextSize(Kenji[0], -40.000000, 65.000000);
	TextDrawSetSelectable(Kenji[0], 0);

	Kenji[1] = TextDrawCreate(7.000000, 380.000000, "News");
	TextDrawBackgroundColor(Kenji[1], 255);
	TextDrawFont(Kenji[1], 1);
	TextDrawLetterSize(Kenji[1], 0.490000, 3.199999);
	TextDrawColor(Kenji[1], -1);
	TextDrawSetOutline(Kenji[1], 0);
	TextDrawSetProportional(Kenji[1], 1);
	TextDrawSetShadow(Kenji[1], 1);
	TextDrawSetSelectable(Kenji[1], 0);

	Kenji[2] = TextDrawCreate(684.000000, 377.000000, "_");
	TextDrawBackgroundColor(Kenji[2], 255);
	TextDrawFont(Kenji[2], 1);
	TextDrawLetterSize(Kenji[2], 0.410000, 5.199997);
	TextDrawColor(Kenji[2], -1);
	TextDrawSetOutline(Kenji[2], 0);
	TextDrawSetProportional(Kenji[2], 1);
	TextDrawSetShadow(Kenji[2], 1);
	TextDrawUseBox(Kenji[2], 1);
	TextDrawBoxColor(Kenji[2], -16776961);
	TextDrawTextSize(Kenji[2], 134.000000, -139.000000);
	TextDrawSetSelectable(Kenji[2], 0);

	Kenji[3] = TextDrawCreate(676.000000, 427.000000, "_");
	TextDrawBackgroundColor(Kenji[3], 255);
	TextDrawFont(Kenji[3], 1);
	TextDrawLetterSize(Kenji[3], 0.450000, 1.700000);
	TextDrawColor(Kenji[3], -1);
	TextDrawSetOutline(Kenji[3], 0);
	TextDrawSetProportional(Kenji[3], 1);
	TextDrawSetShadow(Kenji[3], 1);
	TextDrawUseBox(Kenji[3], 1);
	TextDrawBoxColor(Kenji[3], -1);
	TextDrawTextSize(Kenji[3], 0.000000, 0.000000);
	TextDrawSetSelectable(Kenji[3], 0);

	Kenji[4] = TextDrawCreate(138.000000, 425.000000, "New York RolePlay");
	TextDrawBackgroundColor(Kenji[4], 255);
	TextDrawFont(Kenji[4], 2);
	TextDrawLetterSize(Kenji[4], 0.450000, 1.800000);
	TextDrawColor(Kenji[4], 0xFFF000FF);
	TextDrawSetOutline(Kenji[4], 0);
	TextDrawSetProportional(Kenji[4], 1);
	TextDrawSetShadow(Kenji[4], 1);
	TextDrawSetSelectable(Kenji[4], 0);

	Kenji[5] = TextDrawCreate(672.000000, 342.000000, " _");
	TextDrawBackgroundColor(Kenji[5], 255);
	TextDrawFont(Kenji[5], 1);
	TextDrawLetterSize(Kenji[5], 0.290000, 1.800000);
	TextDrawColor(Kenji[5], -1);
	TextDrawSetOutline(Kenji[5], 0);
	TextDrawSetProportional(Kenji[5], 1);
	TextDrawSetShadow(Kenji[5], 1);
	TextDrawUseBox(Kenji[5], 1);
	TextDrawBoxColor(Kenji[5], 255);
	TextDrawTextSize(Kenji[5], 568.000000, -216.000000);
	TextDrawSetSelectable(Kenji[5], 0);

	Kenji[6] = TextDrawCreate(587.000000, 343.000000, "live");
	TextDrawBackgroundColor(Kenji[6], 255);
	TextDrawFont(Kenji[6], 1);
	TextDrawLetterSize(Kenji[6], 0.609999, 3.099999);
	TextDrawColor(Kenji[6], -16776961);
	TextDrawSetOutline(Kenji[6], 0);
	TextDrawSetProportional(Kenji[6], 1);
	TextDrawSetShadow(Kenji[6], 1);
	TextDrawSetSelectable(Kenji[6], 0);

	Kenji[7] = TextDrawCreate(143.000000, 387.000000, ""); // text
	TextDrawBackgroundColor(Kenji[7], 255);
	TextDrawFont(Kenji[7], 1);
	TextDrawLetterSize(Kenji[7], 0.490000, 2.499999);
	TextDrawColor(Kenji[7], -1);
	TextDrawSetOutline(Kenji[7], 0);
	TextDrawSetProportional(Kenji[7], 1);
	TextDrawSetShadow(Kenji[7], 1);
	TextDrawSetSelectable(Kenji[7], 0);
//==============================================================================================
    GenuineLogo[0] = TextDrawCreate(404.000, 6.000, "NEW YORK");
    TextDrawLetterSize(GenuineLogo[0], 0.409, 2.599);
    TextDrawAlignment(GenuineLogo[0], 1);
    TextDrawColor(GenuineLogo[0], 255);
    TextDrawSetShadow(GenuineLogo[0], 1);
    TextDrawSetOutline(GenuineLogo[0], 1);
    TextDrawBackgroundColor(GenuineLogo[0], -16776961);
    TextDrawFont(GenuineLogo[0], 2);
    TextDrawSetProportional(GenuineLogo[0], 1);

    GenuineLogo[1] = TextDrawCreate(447.046, 23.250, "ROLEPLAY");
    TextDrawLetterSize(GenuineLogo[1], 0.289, 2.035);
    TextDrawAlignment(GenuineLogo[1], 2);
    TextDrawColor(GenuineLogo[1], -1);
    TextDrawSetShadow(GenuineLogo[1], 0);
    TextDrawSetOutline(GenuineLogo[1], 1);
    TextDrawBackgroundColor(GenuineLogo[1], 255);
    TextDrawFont(GenuineLogo[1], 2);
    TextDrawSetProportional(GenuineLogo[1], 1);

    GenuineLogo[2] = TextDrawCreate(435.000, 40.000, "HUD:radar_girlfriend");
    TextDrawTextSize(GenuineLogo[2], 21.000, 19.000);
    TextDrawAlignment(GenuineLogo[2], 1);
    TextDrawColor(GenuineLogo[2], -1);
    TextDrawSetShadow(GenuineLogo[2], 0);
    TextDrawSetOutline(GenuineLogo[2], 0);
    TextDrawBackgroundColor(GenuineLogo[2], 255);
    TextDrawFont(GenuineLogo[2], 4);
    TextDrawSetProportional(GenuineLogo[2], 1);

    GenuineLogo[3] = TextDrawCreate(380.000, 12.000, "_");
    TextDrawTextSize(GenuineLogo[3], 23.000, 23.000);
    TextDrawAlignment(GenuineLogo[3], 1);
    TextDrawColor(GenuineLogo[3], -1);
    TextDrawSetShadow(GenuineLogo[3], 0);
    TextDrawSetOutline(GenuineLogo[3], 0);
    TextDrawBackgroundColor(GenuineLogo[3], 85);
    TextDrawFont(GenuineLogo[3], 5);
    TextDrawSetProportional(GenuineLogo[3], 0);
    TextDrawSetPreviewModel(GenuineLogo[3], 2255);
    TextDrawSetPreviewRot(GenuineLogo[3], 0.000, 0.000, 0.000, 1.000);
    TextDrawSetPreviewVehCol(GenuineLogo[3], -7, 46);


//===================================================================================

//===================================================================================


/*    td_logo[0] = TextDrawCreate(108.000099, 227.733322, "Asia Paradise");
    TextDrawLetterSize(td_logo[0], 0.449999, 1.600000);
    TextDrawAlignment(td_logo[0], 1);
    TextDrawColor(td_logo[0], 0xffff00FF);
    TextDrawSetShadow(td_logo[0], 0);
    TextDrawSetOutline(td_logo[0], 1);
    TextDrawBackgroundColor(td_logo[0], 51);
    TextDrawFont(td_logo[0], 3);
    TextDrawSetProportional(td_logo[0], 1);

    td_logo[5] = TextDrawCreate(122.999954, 243.911163, "Roleplay");
    TextDrawLetterSize(td_logo[5], 0.449999, 1.600000);
    TextDrawAlignment(td_logo[5], 1);
    TextDrawColor(td_logo[5], -1);
    TextDrawSetShadow(td_logo[5], 0);
    TextDrawSetOutline(td_logo[5], 1);
    TextDrawBackgroundColor(td_logo[5], 51);
    TextDrawFont(td_logo[5], 1);
    TextDrawSetProportional(td_logo[5], 1);
   	td_logo[0] = TextDrawCreate(562.932129, 9.470100, "Asia Paradise");
	TextDrawLetterSize(td_logo[0], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[0], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[0], 1);
	TextDrawColor(td_logo[0], 0xD0070FFF);
	TextDrawUseBox(td_logo[0], 0);
	TextDrawBoxColor(td_logo[0], 0x80808080);
	TextDrawSetShadow(td_logo[0], 0);
	TextDrawSetOutline(td_logo[0], 0);
	TextDrawBackgroundColor(td_logo[0], 0x000000FF);
	TextDrawFont(td_logo[0], 1);
	TextDrawSetProportional(td_logo[0], 1);
	TextDrawSetSelectable(td_logo[0], 0);

	td_logo[5] = TextDrawCreate(562.332214, 8.770100, "Roleplay");
	TextDrawLetterSize(td_logo[5], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[5], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[5], 1);
	TextDrawColor(td_logo[5], 0x99ff00FF);
	TextDrawUseBox(td_logo[5], 0);
	TextDrawBoxColor(td_logo[5], 0x80808080);
	TextDrawSetShadow(td_logo[5], 0);
	TextDrawSetOutline(td_logo[5], 0);
	TextDrawBackgroundColor(td_logo[5], 0x000000FF);
	TextDrawFont(td_logo[5], 1);
	TextDrawSetProportional(td_logo[5], 1);
	TextDrawSetSelectable(td_logo[5], 0);*/

	//
// ���������� ����������

/*	td_logo[0] = TextDrawCreate(562.932129, 9.470100, "Asia Paradise");
	TextDrawLetterSize(td_logo[0], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[0], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[0], 1);
	TextDrawColor(td_logo[0], 0xD0070FFF);
	TextDrawUseBox(td_logo[0], 0);
	TextDrawBoxColor(td_logo[0], 0x80808080);
	TextDrawSetShadow(td_logo[0], 0);
	TextDrawSetOutline(td_logo[0], 0);
	TextDrawBackgroundColor(td_logo[0], 0x000000FF);
	TextDrawFont(td_logo[0], 1);
	TextDrawSetProportional(td_logo[0], 1);
	TextDrawSetSelectable(td_logo[0], 0);

	td_logo[1] = TextDrawCreate(587.330322, 21.085100, "Roleplay");
	TextDrawLetterSize(td_logo[1], 0.141000, 0.965200);
	TextDrawTextSize(td_logo[1], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[1], 2);
	TextDrawColor(td_logo[1], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[1], 0);
	TextDrawBoxColor(td_logo[1], 0x80808080);
	TextDrawSetShadow(td_logo[1], 0);
	TextDrawSetOutline(td_logo[1], 0);
	TextDrawBackgroundColor(td_logo[1], 0x000000FF);
	TextDrawFont(td_logo[1], 2);
	TextDrawSetProportional(td_logo[1], 1);
	TextDrawSetSelectable(td_logo[1], 0);

	td_logo[2] = TextDrawCreate(616.066711, 4.836900, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[2], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[2], 10.000000, 9.000000);
	TextDrawAlignment(td_logo[2], 1);
	TextDrawColor(td_logo[2], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[2], 0);
	TextDrawBoxColor(td_logo[2], 0x80808080);
	TextDrawSetShadow(td_logo[2], 0);
	TextDrawSetOutline(td_logo[2], 0);
	TextDrawBackgroundColor(td_logo[2], 0x000000FF);
	TextDrawFont(td_logo[2], 4);
	TextDrawSetProportional(td_logo[2], 0);
	TextDrawSetSelectable(td_logo[2], 0);

	td_logo[3] = TextDrawCreate(616.266724, 7.737100, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[3], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[3], 10.000000, 7.000000);
	TextDrawAlignment(td_logo[3], 1);
	TextDrawColor(td_logo[3], 0xEF222BFF);
	TextDrawUseBox(td_logo[3], 0);
	TextDrawBoxColor(td_logo[3], 0x80808080);
	TextDrawSetShadow(td_logo[3], 0);
	TextDrawSetOutline(td_logo[3], 0);
	TextDrawBackgroundColor(td_logo[3], 0x000000FF);
	TextDrawFont(td_logo[3], 4);
	TextDrawSetProportional(td_logo[3], 0);
	TextDrawSetSelectable(td_logo[3], 0);

	td_logo[4] = TextDrawCreate(617.566711, 8.614700, "LD_SPAC:white");
	TextDrawLetterSize(td_logo[4], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[4], 7.000000, 3.000000);
	TextDrawAlignment(td_logo[4], 1);
	TextDrawColor(td_logo[4], 0x2849A1FF);
	TextDrawUseBox(td_logo[4], 0);
	TextDrawBoxColor(td_logo[4], 0x80808080);
	TextDrawSetShadow(td_logo[4], 0);
	TextDrawSetOutline(td_logo[4], 0);
	TextDrawBackgroundColor(td_logo[4], 0x000000FF);
	TextDrawFont(td_logo[4], 4);
	TextDrawSetProportional(td_logo[4], 0);
	TextDrawSetSelectable(td_logo[4], 0);

	td_logo[5] = TextDrawCreate(562.332214, 8.770100, "The Asia Paradise Rp");
	TextDrawLetterSize(td_logo[5], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[5], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[5], 1);
	TextDrawColor(td_logo[5], 0xFB2E37FF);
	TextDrawUseBox(td_logo[5], 0);
	TextDrawBoxColor(td_logo[5], 0x80808080);
	TextDrawSetShadow(td_logo[5], 0);
	TextDrawSetOutline(td_logo[5], 0);
	TextDrawBackgroundColor(td_logo[5], 0x000000FF);
	TextDrawFont(td_logo[5], 1);
	TextDrawSetProportional(td_logo[5], 1);
	TextDrawSetSelectable(td_logo[5], 0);

	td_logo[6] = TextDrawCreate(552.133118, 23.918501, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[6], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[6], 10.000000, 9.000000);
	TextDrawAlignment(td_logo[6], 1);
	TextDrawColor(td_logo[6], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[6], 0);
	TextDrawBoxColor(td_logo[6], 0x80808080);
	TextDrawSetShadow(td_logo[6], 1);
	TextDrawSetOutline(td_logo[6], 0);
	TextDrawBackgroundColor(td_logo[6], 0x000000FF);
	TextDrawFont(td_logo[6], 4);
	TextDrawSetProportional(td_logo[6], 0);
	TextDrawSetSelectable(td_logo[6], 0);

	td_logo[7] = TextDrawCreate(552.333130, 26.818701, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[7], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[7], 9.779800, 7.000000);
	TextDrawAlignment(td_logo[7], 1);
	TextDrawColor(td_logo[7], 0xEF222BFF);
	TextDrawUseBox(td_logo[7], 0);
	TextDrawBoxColor(td_logo[7], 0x80808080);
	TextDrawSetShadow(td_logo[7], 1);
	TextDrawSetOutline(td_logo[7], 0);
	TextDrawBackgroundColor(td_logo[7], 0x000000FF);
	TextDrawFont(td_logo[7], 4);
	TextDrawSetProportional(td_logo[7], 0);
	TextDrawSetSelectable(td_logo[7], 0);

	td_logo[8] = TextDrawCreate(553.433228, 27.696100, "LD_SPAC:white");
	TextDrawLetterSize(td_logo[8], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[8], 7.000000, 3.000000);
	TextDrawAlignment(td_logo[8], 1);
	TextDrawColor(td_logo[8], 0x2849A1FF);
	TextDrawUseBox(td_logo[8], 0);
	TextDrawBoxColor(td_logo[8], 0x80808080);
	TextDrawSetShadow(td_logo[8], 1);
	TextDrawSetOutline(td_logo[8], 0);
	TextDrawBackgroundColor(td_logo[8], 0x000000FF);
	TextDrawFont(td_logo[8], 4);
	TextDrawSetProportional(td_logo[8], 0);
	TextDrawSetSelectable(td_logo[8], 0);*/
    //
    if(gSkinShopPriceDraw[playerid] == PlayerText:-1)
	{
	gSkinShopPriceDraw[playerid] = CreatePlayerTextDraw(playerid, 31.000000, 224.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, gSkinShopPriceDraw[playerid], 255);
	PlayerTextDrawFont(playerid, gSkinShopPriceDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, gSkinShopPriceDraw[playerid], 0.500000, 1.600000);
	PlayerTextDrawColor(playerid, gSkinShopPriceDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, gSkinShopPriceDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, gSkinShopPriceDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, gSkinShopPriceDraw[playerid], 1);
	}
	InfoText[playerid] = CreatePlayerTextDraw(playerid, 400,300,"-");
	PlayerTextDrawBackgroundColor(playerid, InfoText[playerid],0x000000FF);
	PlayerTextDrawFont(playerid, InfoText[playerid],2);
	PlayerTextDrawLetterSize(playerid, InfoText[playerid],0.42,1.1);
	PlayerTextDrawColor(playerid, InfoText[playerid],COLOR_WHITE);
	PlayerTextDrawSetOutline(playerid, InfoText[playerid],1);
	PlayerTextDrawSetProportional(playerid, InfoText[playerid],1);
	PlayerTextDrawSetShadow(playerid, InfoText[playerid],1);
   	//--------[CAPTURE-SYSTEM]--------//
	CaptureTD[playerid][0] = CreatePlayerTextDraw(playerid,1, 285, "_");
	PlayerTextDrawUseBox(playerid,CaptureTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,CaptureTD[playerid][0], 0x00000075);
	PlayerTextDrawTextSize(playerid,CaptureTD[playerid][0], 150.0, 400.0);
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][0], 0.0, 5.3);
	CaptureTD[playerid][1] = CreatePlayerTextDraw(playerid,10.0, 285.0, "Time:");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][1], 0.4, 1.2);
	PlayerTextDrawColor(playerid,CaptureTD[playerid][1], 0x37FA00FF);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,CaptureTD[playerid][1], 1);
	CaptureTD[playerid][2] = CreatePlayerTextDraw(playerid,50.0, 285.0, "7:00");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][2], 0.4, 1.2);
	PlayerTextDrawColor(playerid,CaptureTD[playerid][2], 0x37FA00FF);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][2], 2);
	CaptureTD[playerid][3] = CreatePlayerTextDraw(playerid,10.0, 300.0, "Ballas Gang");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][3], 0.4, 1.2);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][3], 2);
	CaptureTD[playerid][4] = CreatePlayerTextDraw(playerid,10.0, 315.0, "Grove Street");
	PlayerTextDrawUseBox(playerid,CaptureTD[playerid][4], 0);
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][4], 0.4, 1.2);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][4], 2);
	//
    td_speed[playerid][0] = CreatePlayerTextDraw(playerid, 260.000, 372.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][0], -0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][0], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][0], -16776961);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][0], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][0], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][0], 1);

    td_speed[playerid][1] = CreatePlayerTextDraw(playerid, 260.000, 391.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][1], 0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][1], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][1], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][1], 65535);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][1], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][1], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][1], 1);

    td_speed[playerid][2] = CreatePlayerTextDraw(playerid, 260.000, 414.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][2], 0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][2], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][2], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][2], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][2], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][2], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][2], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][2], 1);

    td_speed[playerid][3] = CreatePlayerTextDraw(playerid, 261.000, 374.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][3], 0.000, 6.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][3], 364.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][3], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][3], 151);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][3], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][3], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][3], 1);

    td_speed[playerid][4] = CreatePlayerTextDraw(playerid, 195.000, 360.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][4], 0.000, 6.282);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][4], 254.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][4], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][4], 87);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][4], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][4], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][4], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][4], 1);

    td_speed[playerid][5] = CreatePlayerTextDraw(playerid, 190.000, 422.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][5], 0.000, 1.158);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][5], 257.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][5], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][5], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][5], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][5], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][5], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][5], 1);

    td_speed[playerid][6] = CreatePlayerTextDraw(playerid, 224.000, 421.000, "infernus");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][6], 0.270, 1.214);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][6], 0.000, -16.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][6], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][6], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][6], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][6], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][6], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][6], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][6], 1);

    td_speed[playerid][7] = CreatePlayerTextDraw(playerid, 193.000, 347.000, "_");
    PlayerTextDrawTextSize(playerid, td_speed[playerid][7], 74.000, 83.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][7], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][7], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawFont(playerid, td_speed[playerid][7], 5);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawSetPreviewModel(playerid, td_speed[playerid][7], 411);
    PlayerTextDrawSetPreviewRot(playerid, td_speed[playerid][7], 0.000, 0.000, 335.000, 1.000);
    PlayerTextDrawSetPreviewVehCol(playerid, td_speed[playerid][7], 1, 1);

    td_speed[playerid][8] = CreatePlayerTextDraw(playerid, 270.000, 372.000, "FUEL:");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][8], 0.379, 1.804);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][8], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][8], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][8], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][8], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][8], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][8], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][8], 1);

    td_speed[playerid][9] = CreatePlayerTextDraw(playerid, 336.000, 372.000, "40l");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][9], 0.379, 1.804);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][9], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][9], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][9], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][9], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][9], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][9], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][9], 1);

    td_speed[playerid][10] = CreatePlayerTextDraw(playerid, 262.000, 390.000, "HEALTH:");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][10], 0.332, 2.233);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][10], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][10], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][10], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][10], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][10], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][10], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][10], 1);

    td_speed[playerid][11] = CreatePlayerTextDraw(playerid, 341.000, 388.000, "100%");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][11], 0.365, 2.607);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][11], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][11], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][11], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][11], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][11], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][11], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][11], 1);

    td_speed[playerid][12] = CreatePlayerTextDraw(playerid, 288.000, 408.000, "100");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][12], 0.421, 2.854);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][12], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][12], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][12], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][12], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][12], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][12], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][12], 1);

    td_speed[playerid][13] = CreatePlayerTextDraw(playerid, 309.000, 409.000, "KM/H");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][13], 0.417, 2.646);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][13], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][13], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][13], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][13], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][13], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][13], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][13], 1);

    td_speed[playerid][14] = CreatePlayerTextDraw(playerid, 260.000, 353.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][14], 0.000, 1.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][14], 303.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][14], -1);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][14], 118);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][14], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][14], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][14], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][14], 1);

    td_speed[playerid][15] = CreatePlayerTextDraw(playerid, 310.000, 353.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][15], 0.000, 1.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][15], 358.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][15], -1);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][15], 118);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][15], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][15], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][15], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][15], 1);

    td_speed[playerid][16] = CreatePlayerTextDraw(playerid, 265.000, 351.000, "LOCK");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][16], 0.335, 1.570);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][16], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][16], 8388863);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][16], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][16], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][16], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][16], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][16], 1);

    td_speed[playerid][17] = CreatePlayerTextDraw(playerid, 314.000, 351.000, "engine");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][17], 0.294, 1.588);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][17], 7.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][17], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][17], 8388863);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][17], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][17], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][17], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][17], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][17], 1);

	//
	ActionText[playerid] = CreatePlayerTextDraw(playerid, 325.000000, 83.000000, "PRESS ~r~ENTER");
	PlayerTextDrawAlignment(playerid, ActionText[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, ActionText[playerid], 255);
	PlayerTextDrawFont(playerid, ActionText[playerid], 2);
	PlayerTextDrawLetterSize(playerid, ActionText[playerid], 0.909999, 2.599999);
	PlayerTextDrawColor(playerid, ActionText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionText[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ActionText[playerid], 1);
	//
	ActionBand[playerid] = CreatePlayerTextDraw(playerid, 205.000000, 112.000000, "Band");
	PlayerTextDrawBackgroundColor(playerid, ActionBand[playerid], 255);
	PlayerTextDrawFont(playerid, ActionBand[playerid], 1);
	PlayerTextDrawLetterSize(playerid, ActionBand[playerid], -0.000000, 0.899999);
	PlayerTextDrawColor(playerid, ActionBand[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionBand[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ActionBand[playerid], 1);
	PlayerTextDrawSetShadow(playerid, ActionBand[playerid], 1);
	PlayerTextDrawUseBox(playerid, ActionBand[playerid], 1);
	PlayerTextDrawBoxColor(playerid, ActionBand[playerid], 0xFF990055);
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], 201.000000, 0.000000);
	//
	AimNameDraw[playerid] = CreatePlayerTextDraw(playerid, 322.000000, 16.000000, "~w~Invalid Player ~g~(-1)");
	PlayerTextDrawAlignment(playerid, AimNameDraw[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, AimNameDraw[playerid], 255);
	PlayerTextDrawFont(playerid, AimNameDraw[playerid], 2);
	PlayerTextDrawLetterSize(playerid, AimNameDraw[playerid], 0.209999, 0.899999);
	PlayerTextDrawColor(playerid, AimNameDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, AimNameDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, AimNameDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, AimNameDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, AimNameDraw[playerid], 0);
	//
	Target1 = CreatePlayerTextDraw(playerid, 402.000000, 8.000000, "BoxTarget1");
	PlayerTextDrawBackgroundColor(playerid, Target1, 255);
	PlayerTextDrawFont(playerid, Target1, 1);
	PlayerTextDrawLetterSize(playerid, Target1, 0.000000, 5.099997);
	PlayerTextDrawColor(playerid, Target1, -1);
	PlayerTextDrawSetOutline(playerid, Target1, 0);
	PlayerTextDrawSetProportional(playerid, Target1, 1);
	PlayerTextDrawSetShadow(playerid, Target1, 1);
	PlayerTextDrawUseBox(playerid, Target1, 1);
	PlayerTextDrawBoxColor(playerid, Target1, 48);
	PlayerTextDrawTextSize(playerid, Target1, 243.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target1, 0);

	Target2 = CreatePlayerTextDraw(playerid, 400.000000, 10.000000, "BoxTarget2");
	PlayerTextDrawBackgroundColor(playerid, Target2, 255);
	PlayerTextDrawFont(playerid, Target2, 1);
	PlayerTextDrawLetterSize(playerid, Target2, 0.000000, 4.599998);
	PlayerTextDrawColor(playerid, Target2, -1);
	PlayerTextDrawSetOutline(playerid, Target2, 0);
	PlayerTextDrawSetProportional(playerid, Target2, 1);
	PlayerTextDrawSetShadow(playerid, Target2, 1);
	PlayerTextDrawUseBox(playerid, Target2, 1);
	PlayerTextDrawBoxColor(playerid, Target2, 80);
	PlayerTextDrawTextSize(playerid, Target2, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target2, 0);

	Target3 = CreatePlayerTextDraw(playerid, 400.000000, 35.000000, "BoxHP");
	PlayerTextDrawBackgroundColor(playerid, Target3, 255);
	PlayerTextDrawFont(playerid, Target3, 1);
	PlayerTextDrawLetterSize(playerid, Target3, 0.000000, 0.400000);
	PlayerTextDrawColor(playerid, Target3, -1);
	PlayerTextDrawSetOutline(playerid, Target3, 0);
	PlayerTextDrawSetProportional(playerid, Target3, 1);
	PlayerTextDrawSetShadow(playerid, Target3, 1);
	PlayerTextDrawUseBox(playerid, Target3, 1);
	PlayerTextDrawBoxColor(playerid, Target3, -1408430593);
	PlayerTextDrawTextSize(playerid, Target3, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target3, 0);

	Target5 = CreatePlayerTextDraw(playerid,400.000000, 45.000000, "BoxARMOUR");
	PlayerTextDrawBackgroundColor(playerid,Target5, 255);
	PlayerTextDrawFont(playerid,Target5, 1);
	PlayerTextDrawLetterSize(playerid,Target5, 0.000000, 0.400000);
	PlayerTextDrawColor(playerid,Target5, -1);
	PlayerTextDrawSetOutline(playerid,Target5, 0);
	PlayerTextDrawSetProportional(playerid,Target5, 1);
	PlayerTextDrawSetShadow(playerid,Target5, 1);
	PlayerTextDrawUseBox(playerid,Target5, 1);
	PlayerTextDrawBoxColor(playerid,Target5, 794073599);
	PlayerTextDrawTextSize(playerid,Target5, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,Target5, 0);

	Target4[playerid] = CreatePlayerTextDraw(playerid, 321.000000, 33.000000, "100");
	PlayerTextDrawAlignment(playerid, Target4[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, Target4[playerid], 255);
	PlayerTextDrawFont(playerid, Target4[playerid], 2);
	PlayerTextDrawLetterSize(playerid, Target4[playerid], 0.189999, 0.699998);
	PlayerTextDrawColor(playerid, Target4[playerid], -1);
	PlayerTextDrawSetOutline(playerid, Target4[playerid], 0);
	PlayerTextDrawSetProportional(playerid, Target4[playerid], 1);
	PlayerTextDrawSetShadow(playerid, Target4[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Target4[playerid], 0);

	Target6[playerid] = CreatePlayerTextDraw(playerid,321.000000, 43.000000, "100");
	PlayerTextDrawAlignment(playerid,Target6[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,Target6[playerid], 255);
	PlayerTextDrawFont(playerid,Target6[playerid], 2);
	PlayerTextDrawLetterSize(playerid,Target6[playerid], 0.189999, 0.699998);
	PlayerTextDrawColor(playerid,Target6[playerid], -1);
	PlayerTextDrawSetOutline(playerid,Target6[playerid], 0);
	PlayerTextDrawSetProportional(playerid,Target6[playerid], 1);
	PlayerTextDrawSetShadow(playerid,Target6[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,Target6[playerid], 0);

	ShopText[playerid] = CreatePlayerTextDraw(playerid,509.000000,180.000000,"Model: Landstalker");
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid],255);
	PlayerTextDrawFont(playerid,ShopText[playerid],1);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid],1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid],0);
	PlayerTextDrawLetterSize(playerid,ShopText[playerid],0.270000,1.200000);
	PlayerTextDrawColor(playerid,ShopText[playerid],-1);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid],1);

	//
	Race[0][playerid] = CreatePlayerTextDraw(playerid, 640.334045, 134.551856, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[0][playerid], 0.000000, 13.309654);
	PlayerTextDrawTextSize(playerid, Race[0][playerid], 506.666656, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[0][playerid], 1);
	PlayerTextDrawColor(playerid, Race[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[0][playerid], 103182250);
	PlayerTextDrawSetShadow(playerid, Race[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[0][playerid], 0);
	PlayerTextDrawFont(playerid, Race[0][playerid], 1);

	Race[1][playerid] = CreatePlayerTextDraw(playerid, 638.666687, 139.944572, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[1][playerid], 0.000000, 5.295255);
	PlayerTextDrawTextSize(playerid, Race[1][playerid], 509.333282, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[1][playerid], 1);
	PlayerTextDrawColor(playerid, Race[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[1][playerid], -8912726);
	PlayerTextDrawSetShadow(playerid, Race[1][playerid], 9);
	PlayerTextDrawSetOutline(playerid, Race[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[1][playerid], 41215);
	PlayerTextDrawFont(playerid, Race[1][playerid], 0);

	Race[2][playerid] = CreatePlayerTextDraw(playerid, 513.333374, 142.177764, "1.");
	PlayerTextDrawLetterSize(playerid, Race[2][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[2][playerid], 1);
	PlayerTextDrawColor(playerid, Race[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[2][playerid], 51);
	PlayerTextDrawFont(playerid, Race[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[2][playerid], 1);

	Race[3][playerid] = CreatePlayerTextDraw(playerid, 513.000000, 156.696304, "2.");
	PlayerTextDrawLetterSize(playerid, Race[3][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[3][playerid], 1);
	PlayerTextDrawColor(playerid, Race[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[3][playerid], 51);
	PlayerTextDrawFont(playerid, Race[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[3][playerid], 1);

	Race[4][playerid] = CreatePlayerTextDraw(playerid, 513.333251, 170.800003, "3.");
	PlayerTextDrawLetterSize(playerid, Race[4][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[4][playerid], 1);
	PlayerTextDrawColor(playerid, Race[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[4][playerid], 51);
	PlayerTextDrawFont(playerid, Race[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[4][playerid], 1);

	Race[5][playerid] = CreatePlayerTextDraw(playerid, 511.333465, 216.429656, "Racers:");
	PlayerTextDrawLetterSize(playerid, Race[5][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[5][playerid], 1);
	PlayerTextDrawColor(playerid, Race[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[5][playerid], 51);
	PlayerTextDrawFont(playerid, Race[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[5][playerid], 1);

	Race[6][playerid] = CreatePlayerTextDraw(playerid, 511.333374, 225.555618, "Point:");
	PlayerTextDrawLetterSize(playerid, Race[6][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[6][playerid], 1);
	PlayerTextDrawColor(playerid, Race[6][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[6][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[6][playerid], 51);
	PlayerTextDrawFont(playerid, Race[6][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[6][playerid], 1);

	Race[7][playerid] = CreatePlayerTextDraw(playerid, 530.333251, 196.933288, "Blackrose_Rog");
	PlayerTextDrawLetterSize(playerid, Race[7][playerid], 0.262666, 1.317925);
	PlayerTextDrawAlignment(playerid, Race[7][playerid], 1);
	PlayerTextDrawColor(playerid, Race[7][playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, Race[7][playerid], 1);
	PlayerTextDrawSetOutline(playerid, Race[7][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[7][playerid], 51);
	PlayerTextDrawFont(playerid, Race[7][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[7][playerid], 1);

	Race[8][playerid] = CreatePlayerTextDraw(playerid, 511.599548, 233.851867, "Time: 00:00");
	PlayerTextDrawLetterSize(playerid, Race[8][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[8][playerid], 1);
	PlayerTextDrawColor(playerid, Race[8][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[8][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[8][playerid], 51);
	PlayerTextDrawFont(playerid, Race[8][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[8][playerid], 1);

	Race[9][playerid] = CreatePlayerTextDraw(playerid, 511.666778, 242.148193, "Race type: sprint;");
	PlayerTextDrawLetterSize(playerid, Race[9][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[9][playerid], 1);
	PlayerTextDrawColor(playerid, Race[9][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[9][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[9][playerid], 51);
	PlayerTextDrawFont(playerid, Race[9][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[9][playerid], 1);

	TuneTypeShow[playerid] = CreatePlayerTextDraw(playerid, 216.000000, 348.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneTypeShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneTypeShow[playerid], 0);
	PlayerTextDrawLetterSize(playerid, TuneTypeShow[playerid], 0.729999, 1.800000);
	PlayerTextDrawColor(playerid, TuneTypeShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneTypeShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneTypeShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneTypeShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneTypeShow[playerid], 0);

 	TuneComponentShow[playerid] = CreatePlayerTextDraw(playerid, 317.000000, 371.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneComponentShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneComponentShow[playerid], 3);
	PlayerTextDrawLetterSize(playerid, TuneComponentShow[playerid], 0.380000, 1.200000);
	PlayerTextDrawColor(playerid, TuneComponentShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneComponentShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneComponentShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneComponentShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneComponentShow[playerid], 0);

	TuneCostShow[playerid] = CreatePlayerTextDraw(playerid, 264.000000, 389.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneCostShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneCostShow[playerid], 3);
	PlayerTextDrawLetterSize(playerid, TuneCostShow[playerid], 0.380000, 1.200000);
	PlayerTextDrawColor(playerid, TuneCostShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneCostShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneCostShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneCostShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneCostShow[playerid], 0);

	ReconPlayerText[playerid][0] = CreatePlayerTextDraw(playerid,589.00, 145.00, "~r~Admin_Admin (-1)~n~");
	PlayerTextDrawAlignment(playerid,ReconPlayerText[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][0],  0.240000, 0.899999);
	ReconPlayerText[playerid][1] = CreatePlayerTextDraw(playerid,578.00, 165.00, "~g~HEALTH: ~w~100~n~~r~ARMOUR: ~w~100~n~~g~CAR HP: ~w~1000~n~~r~SPEED: ~w~75~n~~b~PING: ~w~40~n~~b~AMMO: ~w~(24 / 500)~n~~n~PLAYER~n~~n~~r~Admin_Admin");
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][1], 0.199999, 0.899999);
	for(new x; x < 2; x ++)
	{
		PlayerTextDrawBackgroundColor(playerid,ReconPlayerText[playerid][x], 255);
		PlayerTextDrawFont(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawColor(playerid,ReconPlayerText[playerid][x], -1);
		PlayerTextDrawSetOutline(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetProportional(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetShadow(playerid,ReconPlayerText[playerid][x],0);
	}
	return true;
}
stock CreateTextDraws()
{
	gSkinShopDraw[0] = TextDrawCreate(88.000000, 242.000000, "~>~");
	TextDrawBackgroundColor(gSkinShopDraw[0], 255);
	TextDrawFont(gSkinShopDraw[0], 1);
	TextDrawLetterSize(gSkinShopDraw[0], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[0], -1);
	TextDrawSetOutline(gSkinShopDraw[0], 0);
	TextDrawSetProportional(gSkinShopDraw[0], 1);
	TextDrawSetShadow(gSkinShopDraw[0], 1);
	TextDrawTextSize(gSkinShopDraw[0], 107.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[0], 1);

	gSkinShopDraw[1] = TextDrawCreate(18.000000, 242.000000, "~<~");
	TextDrawBackgroundColor(gSkinShopDraw[1], 255);
	TextDrawFont(gSkinShopDraw[1], 1);
	TextDrawLetterSize(gSkinShopDraw[1], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[1], -1);
	TextDrawSetOutline(gSkinShopDraw[1], 0);
	TextDrawSetProportional(gSkinShopDraw[1], 1);
	TextDrawSetShadow(gSkinShopDraw[1], 1);
	TextDrawTextSize(gSkinShopDraw[1], 36.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[1], 1);

	gSkinShopDraw[2] = TextDrawCreate(115.000000, 221.000000, "_");
	TextDrawBackgroundColor(gSkinShopDraw[2], 0x00000066);
	TextDrawBoxColor(gSkinShopDraw[2], 0x00000066);
	TextDrawFont(gSkinShopDraw[2], 1);
	TextDrawLetterSize(gSkinShopDraw[2], 0.000000, 7.199996);
	TextDrawUseBox(gSkinShopDraw[2], 1);
	TextDrawTextSize(gSkinShopDraw[2], 11.000000, 0.000000);
	TextDrawSetSelectable(gSkinShopDraw[2], 0);

	gSkinShopDraw[3] = TextDrawCreate(45.000000, 245.000000, "BUY");
	TextDrawBackgroundColor(gSkinShopDraw[3], 255);
	TextDrawFont(gSkinShopDraw[3], 3);
	TextDrawLetterSize(gSkinShopDraw[3], 0.629999, 1.500000);
	TextDrawColor(gSkinShopDraw[3], -1);
	TextDrawSetOutline(gSkinShopDraw[3], 0);
	TextDrawSetProportional(gSkinShopDraw[3], 1);
	TextDrawSetShadow(gSkinShopDraw[3], 1);
	TextDrawTextSize(gSkinShopDraw[3], 83.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[3], 1);

	gSkinShopDraw[4] = TextDrawCreate(30.000000, 268.000000, "CANCEL");
	TextDrawBackgroundColor(gSkinShopDraw[4], 255);
	TextDrawFont(gSkinShopDraw[4], 3);
	TextDrawLetterSize(gSkinShopDraw[4], 0.629998, 1.500000);
	TextDrawColor(gSkinShopDraw[4], -1);
	TextDrawSetOutline(gSkinShopDraw[4], 0);
	TextDrawSetProportional(gSkinShopDraw[4], 1);
	TextDrawSetShadow(gSkinShopDraw[4], 1);
	TextDrawTextSize(gSkinShopDraw[4], 101.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[4], 1);
	//PAINTBALL
	PaintText[0] = TextDrawCreate(510.000000, 239.000000, "~b~TEAM BLUE: ~w~0");
	TextDrawBackgroundColor(PaintText[0], 255);
	TextDrawFont(PaintText[0], 1);
	TextDrawLetterSize(PaintText[0], 0.300000, 1.000000);
	TextDrawColor(PaintText[0], -1);
	TextDrawSetOutline(PaintText[0], 0);
	TextDrawSetProportional(PaintText[0], 1);
	TextDrawSetShadow(PaintText[0], 1);

	PaintText[1] = TextDrawCreate(510.000000, 250.000000, "~r~TEAM RED: ~w~0");
	TextDrawBackgroundColor(PaintText[1], 255);
	TextDrawFont(PaintText[1], 1);
	TextDrawLetterSize(PaintText[1], 0.300000, 1.000000);
	TextDrawColor(PaintText[1], -1);
	TextDrawSetOutline(PaintText[1], 0);
	TextDrawSetProportional(PaintText[1], 1);
	TextDrawSetShadow(PaintText[1], 1);

	PaintText[2] = TextDrawCreate(510.000000, 228.000000, "TIME: ~w~10:00");
	TextDrawBackgroundColor(PaintText[2], 255);
	TextDrawFont(PaintText[2], 1);
	TextDrawLetterSize(PaintText[2], 0.300000, 1.000000);
	TextDrawColor(PaintText[2], -1);
	TextDrawSetOutline(PaintText[2], 0);
	TextDrawSetProportional(PaintText[2], 1);
	TextDrawSetShadow(PaintText[2], 1);

    TextBizzWar = TextDrawCreate(6.000000, 241.000000, "_");
	TextDrawBackgroundColor(TextBizzWar, 255);
	TextDrawFont(TextBizzWar, 2);
	TextDrawLetterSize(TextBizzWar, 0.340000, 1.500000);
	TextDrawColor(TextBizzWar, -1);
	TextDrawSetOutline(TextBizzWar, 0);
	TextDrawSetProportional(TextBizzWar, 1);
	TextDrawSetShadow(TextBizzWar, 1);

	BandDrawBG[0] = TextDrawCreate(203.000000, 110.000000, "Band1");
	TextDrawBackgroundColor(BandDrawBG[0], 255);
	TextDrawFont(BandDrawBG[0], 1);
	TextDrawLetterSize(BandDrawBG[0], -0.000000, 1.33);
	TextDrawColor(BandDrawBG[0], -1);
	TextDrawSetOutline(BandDrawBG[0], 0);
	TextDrawSetProportional(BandDrawBG[0], 1);
	TextDrawSetShadow(BandDrawBG[0], 1);
	TextDrawUseBox(BandDrawBG[0], 1);
	TextDrawBoxColor(BandDrawBG[0], 0x00000099);
	TextDrawTextSize(BandDrawBG[0], 445.000000, 0.000000);

	BandDrawBG[1] = TextDrawCreate(205.000000, 112.000000, "Band2");
	TextDrawBackgroundColor(BandDrawBG[1], 255);
	TextDrawFont(BandDrawBG[1], 1);
	TextDrawLetterSize(BandDrawBG[1], -0.000000, 0.899999);
	TextDrawColor(BandDrawBG[1], -1);
	TextDrawSetOutline(BandDrawBG[1], 0);
	TextDrawSetProportional(BandDrawBG[1], 1);
	TextDrawSetShadow(BandDrawBG[1], 1);
	TextDrawUseBox(BandDrawBG[1], 1);
	TextDrawBoxColor(BandDrawBG[1], 0x88990055);
	TextDrawTextSize(BandDrawBG[1], 443.000000, 0.000000);

	AutoShopText[0] = TextDrawCreate(527.000000, 230.000000, "<<");
	TextDrawLetterSize(AutoShopText[0], 0.220000, 1.199999);

	AutoShopText[1] = TextDrawCreate(581.000000, 230.000000, ">>");
	TextDrawLetterSize(AutoShopText[1], 0.220000, 1.199999);

	AutoShopText[2] = TextDrawCreate(581.000000, 271.000000, ">");
	TextDrawLetterSize(AutoShopText[2], 0.220000, 0.599999);

	AutoShopText[3] = TextDrawCreate(581.000000, 281.000000, ">");
	TextDrawLetterSize(AutoShopText[3], 0.220000, 0.599999);

	AutoShopText[4] = TextDrawCreate(527.000000, 281.000000, "<");
	TextDrawLetterSize(AutoShopText[4], 0.220000, 0.599999);

	AutoShopText[5] = TextDrawCreate(527.000000, 271.000000, "<");
	TextDrawLetterSize(AutoShopText[5], 0.220000, 0.599999);

	for(new s; s < 6; s++)
	{
	    TextDrawTextSize(AutoShopText[s], 10.10, 40.40);
		TextDrawAlignment(AutoShopText[s], 2);
		TextDrawBackgroundColor(AutoShopText[s], 255);
		TextDrawFont(AutoShopText[s], 2);
		TextDrawColor(AutoShopText[s], -1);
		TextDrawSetProportional(AutoShopText[s], 1);
		TextDrawSetShadow(AutoShopText[s], 1);
		TextDrawUseBox(AutoShopText[s], 1);
		TextDrawBoxColor(AutoShopText[s], 144);
		TextDrawSetSelectable(AutoShopText[s],true);
	}

	AutoShopText[6] = TextDrawCreate(556.000000, 311.000000, "buy");
	TextDrawLetterSize(AutoShopText[6], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[6], 144);
	TextDrawTextSize(AutoShopText[6], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[6], 1);

	AutoShopText[7] = TextDrawCreate(556.000000, 331.000000, "exit");
	TextDrawLetterSize(AutoShopText[7], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[7], 144);
	TextDrawTextSize(AutoShopText[7], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[7],true);

	AutoShopText[8] = TextDrawCreate(554.000000, 161.000000, "_");// ���
	TextDrawLetterSize(AutoShopText[8], 0.500000, 22.200017);
	TextDrawSetProportional(AutoShopText[8], 1);
	TextDrawBoxColor(AutoShopText[8], 69);
	TextDrawTextSize(AutoShopText[8], 0.000000, 105.000000);

	for(new e = 6; e < 9; e++)
	{
		TextDrawAlignment(AutoShopText[e], 2);
		TextDrawBackgroundColor(AutoShopText[e], 255);
		TextDrawFont(AutoShopText[e], 3);
		TextDrawColor(AutoShopText[e], -1);
		TextDrawSetProportional(AutoShopText[e], 1);
		TextDrawSetShadow(AutoShopText[e], 1);
		TextDrawUseBox(AutoShopText[e], 1);
	}

	AutoShopText[9] = TextDrawCreate(522.000000, 211.000000, "SELECT CAR");
	AutoShopText[10] = TextDrawCreate(537.000000, 251.000000, "COLOR");
	AutoShopText[11] = TextDrawCreate(541.000000, 165.000000, "INFO");

	for(new r = 9; r < 12; r++)
	{
		TextDrawBackgroundColor(AutoShopText[r], 255);
		TextDrawFont(AutoShopText[r], 2);
		TextDrawSetOutline(AutoShopText[r], 0);
		TextDrawSetShadow(AutoShopText[r], 0);
		TextDrawLetterSize(AutoShopText[r], 0.260000, 1.300000);
		TextDrawColor(AutoShopText[r], -2016477185);
		TextDrawSetProportional(AutoShopText[r], 1);
	}

	TuneBox = TextDrawCreate(432.000000, 358.000000, "_");
	TextDrawBackgroundColor(TuneBox, 255);
	TextDrawFont(TuneBox, 1);
	TextDrawLetterSize(TuneBox, 0.500000, 7.599997);
	TextDrawColor(TuneBox, -1);
	TextDrawSetOutline(TuneBox, 0);
	TextDrawSetProportional(TuneBox, 1);
	TextDrawSetShadow(TuneBox, 1);
	TextDrawUseBox(TuneBox, 1);
	TextDrawBoxColor(TuneBox, 128);
	TextDrawTextSize(TuneBox, 200.000000, -130.000000);
	TextDrawSetSelectable(TuneBox, 0);

	TuneComponent = TextDrawCreate(216.000000, 372.000000, "Component:");
	TextDrawBackgroundColor(TuneComponent, 255);
	TextDrawFont(TuneComponent, 3);
	TextDrawLetterSize(TuneComponent, 0.500000, 1.000000);
	TextDrawColor(TuneComponent, -2147450625);
	TextDrawSetOutline(TuneComponent, 0);
	TextDrawSetProportional(TuneComponent, 1);
	TextDrawSetShadow(TuneComponent, 1);
	TextDrawSetSelectable(TuneComponent, 0);

	TuneCost = TextDrawCreate(216.000000, 390.000000, "Cost:");
	TextDrawBackgroundColor(TuneCost, 255);
	TextDrawFont(TuneCost, 3);
	TextDrawLetterSize(TuneCost, 0.500000, 1.000000);
	TextDrawColor(TuneCost, -2147450625);
	TextDrawSetOutline(TuneCost, 0);
	TextDrawSetProportional(TuneCost, 1);
	TextDrawSetShadow(TuneCost, 1);
	TextDrawSetSelectable(TuneCost, 0);

	TuneBack = TextDrawCreate(213.000000, 408.000000, "Back");
	TextDrawTextSize(TuneBack, 265.0, 16.0);
	TextDrawBackgroundColor(TuneBack, 255);
	TextDrawFont(TuneBack, 2);
	TextDrawLetterSize(TuneBack, 0.480000, 1.400000);
	TextDrawColor(TuneBack, -16776961);
	TextDrawSetOutline(TuneBack, 0);
	TextDrawSetProportional(TuneBack, 1);
	TextDrawSetShadow(TuneBack, 1);
	TextDrawSetSelectable(TuneBack, 1);

	TuneBuy = TextDrawCreate(382.000000, 408.000000, "Buy");
	TextDrawTextSize(TuneBuy, 430.0, 16.0);
	TextDrawBackgroundColor(TuneBuy, 255);
	TextDrawFont(TuneBuy, 2);
	TextDrawLetterSize(TuneBuy, 0.480000, 1.400000);
	TextDrawColor(TuneBuy, 16711935);
	TextDrawSetOutline(TuneBuy, 0);
	TextDrawSetProportional(TuneBuy, 1);
	TextDrawSetShadow(TuneBuy, 1);
	TextDrawSetSelectable(TuneBuy, 1);

    TuneArrow[0] = TextDrawCreate(146.000000, 372.000000, "_");
	TextDrawBackgroundColor(TuneArrow[0], 0xFFFFFF00);
	TextDrawFont(TuneArrow[0], 5);
	TextDrawLetterSize(TuneArrow[0], 0.500000, 1.000000);
	TextDrawColor(TuneArrow[0], -1);
	TextDrawSetOutline(TuneArrow[0], 0);
	TextDrawSetProportional(TuneArrow[0], 1);
	TextDrawSetShadow(TuneArrow[0], 1);
	TextDrawTextSize(TuneArrow[0], 56.000000, 43.000000);
	TextDrawSetPreviewModel(TuneArrow[0], 19134);
	TextDrawSetPreviewRot(TuneArrow[0], -16.000000, 90.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(TuneArrow[0], 1);

	TuneArrow[1] = TextDrawCreate(430.000000, 372.000000, "_");
	TextDrawBackgroundColor(TuneArrow[1], 0xFFFFFF00);
	TextDrawFont(TuneArrow[1], 5);
	TextDrawLetterSize(TuneArrow[1], 0.500000, 1.000000);
	TextDrawColor(TuneArrow[1], -1);
	TextDrawSetOutline(TuneArrow[1], 0);
	TextDrawSetProportional(TuneArrow[1], 1);
	TextDrawSetShadow(TuneArrow[1], 1);
	TextDrawTextSize(TuneArrow[1], 56.000000, 43.000000);
	TextDrawSetPreviewModel(TuneArrow[1], 19134);
	TextDrawSetPreviewRot(TuneArrow[1], -16.000000, -90.000000, 55.000000, 1.000000);
	TextDrawSetSelectable(TuneArrow[1], 1);

	Boxmenu0 = TextDrawCreate(439.000000, 383.000000, "box1");
	TextDrawBackgroundColor(Boxmenu0, 255);
	TextDrawFont(Boxmenu0, 1);
	TextDrawLetterSize(Boxmenu0, 0.000000, 3.400001);
	TextDrawUseBox(Boxmenu0, 1);
	TextDrawBoxColor(Boxmenu0, 80);
	TextDrawTextSize(Boxmenu0, 206.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu0, 0);

	Boxmenu1 = TextDrawCreate(387.000000, 358.000000, "box2");
	TextDrawBackgroundColor(Boxmenu1, 255);
	TextDrawFont(Boxmenu1, 1);
	TextDrawLetterSize(Boxmenu1, 0.000000, 2.000000);
	TextDrawUseBox(Boxmenu1, 1);
	TextDrawBoxColor(Boxmenu1, 2132351487);
	TextDrawTextSize(Boxmenu1, 258.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu1, 0);

	Boxmenu2 = TextDrawCreate(385.000000, 360.000000, "box3");
	TextDrawBackgroundColor(Boxmenu2, 255);
	TextDrawFont(Boxmenu2, 1);
	TextDrawLetterSize(Boxmenu2, 0.000000, 1.600000);
	TextDrawUseBox(Boxmenu2, 1);
	TextDrawBoxColor(Boxmenu2, 128);
	TextDrawTextSize(Boxmenu2, 260.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu2, 0);

	ButtonLeft = TextDrawCreate(176.000000, 345.000000, "selecticon1");
	TextDrawBackgroundColor(ButtonLeft, 0);
	TextDrawFont(ButtonLeft, 5);
	TextDrawLetterSize(ButtonLeft, 0.500000, 1.000000);
	TextDrawColor(ButtonLeft, -1876547841);
	TextDrawTextSize(ButtonLeft, 73.000000, 65.000000);
	TextDrawSetPreviewModel(ButtonLeft, 19132);
	TextDrawSetPreviewRot(ButtonLeft, -40.000000, -90.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonLeft, 1);

	ButtonRight = TextDrawCreate(396.000000, 345.000000, "selecticon2");
	TextDrawBackgroundColor(ButtonRight, 0);
	TextDrawFont(ButtonRight, 5);
	TextDrawLetterSize(ButtonRight, 0.500000, 1.000000);
	TextDrawColor(ButtonRight, -1876547841);
	TextDrawTextSize(ButtonRight, 73.000000, 65.000000);
	TextDrawSetPreviewModel(ButtonRight, 19132);
	TextDrawSetPreviewRot(ButtonRight, -40.000000, 90.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonRight, 1);

	boxcancel = TextDrawCreate(233.000000, 367.000000, "selecticon3");
	TextDrawBackgroundColor(boxcancel, 0);
	TextDrawFont(boxcancel, 5);
	TextDrawLetterSize(boxcancel, 0.500000, 1.000000);
	TextDrawColor(boxcancel, -1876547841);
	TextDrawTextSize(boxcancel, 84.000000, 63.000000);
	TextDrawSetPreviewModel(boxcancel, 19447);
	TextDrawSetPreviewRot(boxcancel, -20.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(boxcancel, 1);

	boxaccept = TextDrawCreate(327.000000, 367.000000, "selecticon3");
	TextDrawBackgroundColor(boxaccept, 0);
	TextDrawFont(boxaccept, 5);
	TextDrawLetterSize(boxaccept, 0.500000, 1.000000);
	TextDrawColor(boxaccept, -1876547841);
	TextDrawSetProportional(boxaccept, 1);
	TextDrawTextSize(boxaccept, 84.000000, 63.000000);
	TextDrawSetPreviewModel(boxaccept, 19447);
	TextDrawSetPreviewRot(boxaccept, -20.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(boxaccept, 1);

	ButtonUp = TextDrawCreate( 558.000000, 434.000000, "Fire arms");
	TextDrawBackgroundColor( ButtonUp, 255);
	TextDrawFont( ButtonUp, 3);
	TextDrawLetterSize( ButtonUp, 0.500000, 1.000000);
	TextDrawColor( ButtonUp, -602653600);
	TextDrawSetProportional( ButtonUp, 1);
	TextDrawSetShadow( ButtonUp, 1);
	TextDrawSetSelectable( ButtonUp, 0);

	ButtonDown = TextDrawCreate(300.0, 300.0, "LD_BEAT:down");
	TextDrawBackgroundColor(ButtonDown, 0);
	TextDrawFont(ButtonDown, 4);
	TextDrawLetterSize(ButtonDown, 0.500000, 1.000000);
	TextDrawColor(ButtonDown, -1876547841);
	TextDrawSetOutline(ButtonDown, 0);
	TextDrawSetProportional(ButtonDown, 1);
	TextDrawSetShadow(ButtonDown, 1);
	TextDrawTextSize(ButtonDown, 50, 25);
	TextDrawSetPreviewModel(ButtonDown, 19132);
	TextDrawSetPreviewRot(ButtonDown, -40.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonDown, 1);

    ButtonSelect = TextDrawCreate(247.000000, 392.000000, "Accept");
	TextDrawBackgroundColor(ButtonSelect, 255);
	TextDrawFont(ButtonSelect, 2);
	TextDrawLetterSize(ButtonSelect, 0.350000, 1.200000);
	TextDrawColor(ButtonSelect, -1);
	TextDrawSetProportional(ButtonSelect, 1);
	TextDrawSetSelectable(ButtonSelect, 0);

	ButtonCancel = TextDrawCreate(342.000000, 392.000000, "Cancel");
	TextDrawBackgroundColor(ButtonCancel, 255);
	TextDrawFont(ButtonCancel, 2);
	TextDrawLetterSize(ButtonCancel, 0.350000, 1.200000);
	TextDrawColor(ButtonCancel, -1);
	TextDrawSetProportional(ButtonCancel, 1);
	TextDrawSetSelectable(ButtonCancel, 0);

	Boxmenu3 = TextDrawCreate(268.000000, 361.000000, "Select Action");
	TextDrawBackgroundColor(Boxmenu3, 255);
	TextDrawFont(Boxmenu3, 2);
	TextDrawLetterSize(Boxmenu3, 0.349999, 1.200000);
	TextDrawColor(Boxmenu3, -1);
	TextDrawSetOutline(Boxmenu3, 0);
	TextDrawSetProportional(Boxmenu3, 1);
	TextDrawSetShadow(Boxmenu3, 1);
	TextDrawSetSelectable(Boxmenu3, 0);

	new Float: TDCOORD[3][2] =
	{
	    { 155.000000, 189.000000 },
	    { 271.000000, 189.000000 },
	    { 387.000000, 189.000000 }
	};
	for(new a = 0, td; a < 3; a++)
	{
	    td = 16+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+1.002899, TDCOORD[a][1]+1.0, "box"); // header
		TextDrawLetterSize(TD_Reg3[td], 0.000000, -0.260612);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+96.997101, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 17+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+0.534378, TDCOORD[a][1]+121.166625, "box"); // footer
		TextDrawLetterSize(TD_Reg3[td], 0.000000, -0.260612);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+97.465622, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 18+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+0.534378, TDCOORD[a][1]+1.000076, "box"); // left
		TextDrawLetterSize(TD_Reg3[td], 0.000000, 12.998536);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]-1.534378, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 19+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+102.5, TDCOORD[a][1]+1.333343, "box"); // right
		TextDrawLetterSize(TD_Reg3[td], 0.000000, 12.951683);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+97.0, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);
	}

	TD_Reg4[0] = TextDrawCreate(225.813522, 172.499847, "box");
	TextDrawLetterSize(TD_Reg4[0], 0.000000, 14.450950);
	TextDrawTextSize(TD_Reg4[0], 415.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[0], 1);
	TextDrawColor(TD_Reg4[0], -1);
	TextDrawUseBox(TD_Reg4[0], 1);
	TextDrawBoxColor(TD_Reg4[0], 505290330);
	TextDrawSetShadow(TD_Reg4[0], 0);
	TextDrawSetOutline(TD_Reg4[0], 0);
	TextDrawBackgroundColor(TD_Reg4[0], 255);
	TextDrawFont(TD_Reg4[0], 1);
	TextDrawSetProportional(TD_Reg4[0], 1);
	TextDrawSetShadow(TD_Reg4[0], 0);

	TD_Reg4[1] = TextDrawCreate(226.281066, 172.500000, "box");
	TextDrawLetterSize(TD_Reg4[1], 0.000000, 1.098098);
	TextDrawTextSize(TD_Reg4[1], 415.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[1], 1);
	TextDrawColor(TD_Reg4[1], -1);
	TextDrawUseBox(TD_Reg4[1], 1);
	TextDrawBoxColor(TD_Reg4[1], 1468115967);
	TextDrawSetShadow(TD_Reg4[1], 0);
	TextDrawSetOutline(TD_Reg4[1], 0);
	TextDrawBackgroundColor(TD_Reg4[1], 255);
	TextDrawFont(TD_Reg4[1], 1);
	TextDrawSetProportional(TD_Reg4[1], 1);
	TextDrawSetShadow(TD_Reg4[1], 0);

	TD_Reg4[2] = TextDrawCreate(320.454193, 173.083297, "New York roleplay");
	TextDrawLetterSize(TD_Reg4[2], 0.206966, 0.993332);
	TextDrawAlignment(TD_Reg4[2], 2);
	TextDrawColor(TD_Reg4[2], -1);
	TextDrawSetShadow(TD_Reg4[2], 0);
	TextDrawSetOutline(TD_Reg4[2], 0);
	TextDrawBackgroundColor(TD_Reg4[2], 255);
	TextDrawFont(TD_Reg4[2], 2);
	TextDrawSetProportional(TD_Reg4[2], 1);
	TextDrawSetShadow(TD_Reg4[2], 0);

	TD_Reg4[3] = TextDrawCreate(249.500000, 242.500000, "box");
	TextDrawLetterSize(TD_Reg4[3], 0.000000, 1.230000);
	TextDrawTextSize(TD_Reg4[3], 392.500000, 0.000000);
	TextDrawAlignment(TD_Reg4[3], 1);
	TextDrawColor(TD_Reg4[3], -1);
	TextDrawUseBox(TD_Reg4[3], 1);
	TextDrawBoxColor(TD_Reg4[3], 1333898239);
	TextDrawSetShadow(TD_Reg4[3], 0);
	TextDrawSetOutline(TD_Reg4[3], 0);
	TextDrawBackgroundColor(TD_Reg4[3], 255);
	TextDrawFont(TD_Reg4[3], 1);
	TextDrawSetProportional(TD_Reg4[3], 1);
	TextDrawSetShadow(TD_Reg4[3], 0);

	TD_Reg4[4] = TextDrawCreate(250.000000, 243.000000, "box");
	TextDrawLetterSize(TD_Reg4[4], 0.000000, 1.144950);
	TextDrawTextSize(TD_Reg4[4], 392.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[4], 1);
	TextDrawColor(TD_Reg4[4], -1);
	TextDrawUseBox(TD_Reg4[4], 1);
	TextDrawBoxColor(TD_Reg4[4], 505290495);
	TextDrawSetShadow(TD_Reg4[4], 0);
	TextDrawSetOutline(TD_Reg4[4], 0);
	TextDrawBackgroundColor(TD_Reg4[4], 255);
	TextDrawFont(TD_Reg4[4], 1);
	TextDrawSetProportional(TD_Reg4[4], 1);
	TextDrawSetShadow(TD_Reg4[4], 0);

	TD_Reg4[5] = TextDrawCreate(321.000000, 228.000000, "password");
	TextDrawLetterSize(TD_Reg4[5], 0.208371, 0.841665);
	TextDrawAlignment(TD_Reg4[5], 2);
	TextDrawColor(TD_Reg4[5], -1);
	TextDrawSetShadow(TD_Reg4[5], 0);
	TextDrawSetOutline(TD_Reg4[5], 0);
	TextDrawBackgroundColor(TD_Reg4[5], 255);
	TextDrawFont(TD_Reg4[5], 2);
	TextDrawSetProportional(TD_Reg4[5], 1);
	TextDrawSetShadow(TD_Reg4[5], 0);

	TD_Reg4[6] = TextDrawCreate(319.985626, 275.166687, "box");
	TextDrawLetterSize(TD_Reg4[6], 0.000000, 0.910690);
	TextDrawTextSize(TD_Reg4[6], 0.000000, 58.000000);
	TextDrawAlignment(TD_Reg4[6], 2);
	TextDrawColor(TD_Reg4[6], -1);
	TextDrawUseBox(TD_Reg4[6], 1);
	TextDrawBoxColor(TD_Reg4[6], 1468115967);
	TextDrawSetShadow(TD_Reg4[6], 0);
	TextDrawSetOutline(TD_Reg4[6], 0);
	TextDrawBackgroundColor(TD_Reg4[6], 255);
	TextDrawFont(TD_Reg4[6], 1);
	TextDrawSetProportional(TD_Reg4[6], 1);
	TextDrawSetShadow(TD_Reg4[6], 0);

	TD_Reg4[7] = TextDrawCreate(319.985534, 275.166717, "next");
	TextDrawLetterSize(TD_Reg4[7], 0.233674, 0.946663);
	TextDrawTextSize(TD_Reg4[7], 10.000000, 58.000000);
	TextDrawAlignment(TD_Reg4[7], 2);
	TextDrawColor(TD_Reg4[7], -1);
	TextDrawSetShadow(TD_Reg4[7], 0);
	TextDrawSetOutline(TD_Reg4[7], 0);
	TextDrawBackgroundColor(TD_Reg4[7], 255);
	TextDrawFont(TD_Reg4[7], 2);
	TextDrawSetProportional(TD_Reg4[7], 1);
	TextDrawSetShadow(TD_Reg4[7], 0);
	TextDrawSetSelectable(TD_Reg4[7], true);
	return true;
}

public OnPlayerConnect(playerid) {

    HackerJob[playerid] = 0;
   	musor[playerid] = 0;
	total[playerid] = 0;

	if(ServerRestart[1] || ServerRestart[2])
	{
		SendClientMessage(playerid,0xffcc00ff,"Server is running out of service!");
		SendClientMessage(playerid,0xffcc00ff,"Order, keep up with him");
		return KickEx(playerid);
	}
	CreateTextDraw(playerid);
	// Remove Building For FBI
	RemoveBuildingForPlayer(playerid, 1689, 745.5859, -1381.1094, 25.8750, 0.25);
    RemoveBuildingForPlayer(playerid, 1689, 751.3359, -1368.0313, 25.8750, 0.25);
    RemoveBuildingForPlayer(playerid, 6516, 717.6875, -1357.2813, 18.0469, 0.25);
	// Remove Building For Swat Spawn
	RemoveBuildingForPlayer(playerid, 1283, 786.9453, -1394.5703, 15.7031, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 778.8594, -1391.1563, 16.3125, 0.25);
	// ������
	RemoveBuildingForPlayer(playerid, 1895, 1117.2813, -1.6484, 1002.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1125.1406, -3.4141, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1127.0781, -1.6797, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1125.1484, -0.0313, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1135.0469, -3.0781, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1133.6875, -1.6250, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1135.0000, -0.1797, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1124.8203, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1125.8672, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1127.8828, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1126.8828, 3.7969, 1000.5234, 0.25);

    // Remove Russian Spawn From The Server.
/*    RemoveBuildingForPlayer(playerid, 4215, 1777.550049, -1775.040039, 36.750000, 0.250000);
    RemoveBuildingForPlayer(playerid, 3986, 1719.739014, -1770.780029, 23.429001, 0.250000);
    RemoveBuildingForPlayer(playerid, 4070, 1719.739014, -1770.780029, 23.429001, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1700.900024, -1743.979004, 12.453000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.150024, -1753.229004, 12.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.260010, -1764.479004, 12.437000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1700.848999, -1778.400024, 12.492000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.300049, -1794.430054, 12.546000, 0.250000);
    RemoveBuildingForPlayer(playerid, 3983, 1722.500000, -1775.400024, 14.515000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4071, 1722.500000, -1775.400024, 14.515000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4019, 1777.838989, -1773.910034, 12.523000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4025, 1777.838989, -1773.910034, 12.523000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4012, 1777.438965, -1782.300049, 12.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4072, 1777.438965, -1782.300049, 12.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 700, 1801.880005, -1817.300049, 13.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 647, 1796.958984, -1817.390015, 14.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 647, 1791.180054, -1816.630005, 14.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 700, 1788.510010, -1816.568970, 13.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 1531, 1724.729004, -1741.500000, 14.101000, 0.250000);*/
	//08.03.2018
	RemoveBuildingForPlayer(playerid, 1307, 1708.7344, -2122.5938, 12.6875, 0.25);
	//25.02.2018
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
    //
    RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.0469, 986.6250, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 14561, 1964.2109, 1017.8047, 998.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	//============================== [ city hall parking ] ===============================//
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1407.1953, -1749.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1353.6406, -1713.5703, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4236, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1405.2344, -1821.1172, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1405.5781, -1831.6953, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1447.1016, -1832.5000, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1464.0938, -1831.8828, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1499.0469, -1832.2734, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1512.9453, -1832.3516, 13.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1353.6406, -1713.5703, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4235, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1404.9141, -1765.2656, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1415.3125, -1748.5625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1438.0313, -1747.9375, 13.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1441.8594, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1414.4141, -1731.4297, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1513.2344, -1732.9219, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1419.3281, -1710.2344, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1428.9375, -1605.8203, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1516.1641, -1591.6563, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1555.6641, -1830.5938, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1554.8203, -1816.1563, 13.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1553.2578, -1764.8125, 12.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1522.1641, -1748.5703, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1553.7031, -1747.9375, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1530.1172, -1717.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 620, 1196.6016, -1840.3828, 12.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1240.5547, -1840.0938, 13.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1256.2266, -1839.9766, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1249.5078, -1840.3828, 12.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1281.8750, -1840.0938, 13.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1200.8828, -1839.1250, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1227.5547, -1839.1250, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 1233.3828, -1822.8359, 13.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 1233.8828, -1811.5156, 13.0234, 0.25);
    // ����� ��:
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 10829, -1523.2578, 486.7969, 6.1563, 0.25);
	//����� ��:
	RemoveBuildingForPlayer(playerid, 1411, 347.20, 1799.27, 18.76, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.94, 1796.29, 18.76, 0.25);
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25); // ��������� ������
	// ���������
	RemoveBuildingForPlayer(playerid, 6068, 1247.914, -1429.968, 15.125, 0.250);
	RemoveBuildingForPlayer(playerid, 6052, 1247.914, -1429.968, 15.125, 0.250);
	RemoveBuildingForPlayer(playerid, 627, 1230.125, -1416.570, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 627, 1209.898, -1416.570, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 792, 1256.984, -1417.703, 12.718, 0.250);
	RemoveBuildingForPlayer(playerid, 792, 1236.281, -1417.703, 12.718, 0.250);
    RemoveBuildingForPlayer(playerid, 968, -2436.8125, 495.4688, 29.6797, 0.25);
    //
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "{FF0000}� {A8C4E4}Don't forget to add {0084ff}103.179.45.98:5265 {A8C4E4}in your favorite list");
    SendClientMessage(playerid, COLOR_RED, "{FF0000}� {A8C4E4}Welcome back to {FFFF00}New {2cdb0d}York {FF0000}RolePlay");
	Visitors++;
	server_online++;
	PlayerInfo[playerid][pDist] = 0;
    PlayerRegStep[playerid] = 0;
	PlayerRegMode[playerid] = 0;
	PlayerBigEarsConnect{playerid} = 0;
    PlayerInfo[playerid][SalonCar] = INVALID_VEHICLE_ID;
    gSpecID[playerid] = INVALID_PLAYER_ID;
    PlayerInfo[playerid][pType2]=-1;
    PlayerInfo[playerid][pType]=-1;
    TeamPain[playerid] = 0;
    KillPain[playerid] = 0;
	HealmeObject[playerid] = 0;
    DeathPain[playerid] = 0;
	CaptureKills[playerid] = 0;
	if(GetPVarFloat(playerid, "Health") || GetPVarFloat(playerid, "Armour")) DeletePVar(playerid, "Health"), DeletePVar(playerid, "Armour");
	SetPVarInt(playerid,"SelectAvto",-1);
	SetPVarInt(playerid, "ArendKey", -1);
    gPlayerLogged[playerid] = 0;
    Buyitem[playerid]=-1;
    VehicleID[playerid] = INVALID_VEHICLE_ID;
    ContractInfo[playerid][cZakaz] = INVALID_PLAYER_ID;
	ContractInfo[playerid][cHitman] = INVALID_PLAYER_ID;
    TimerForPlayer[playerid] = INVALID_PLAYER_ID;
	FollowBy[playerid] = INVALID_PLAYER_ID;
	SetPVarInt(playerid, "TempFollowBy", -1);
	FIXES_gsPlayerAnimLibs[playerid][0] = FIXES_gsPlayerAnimLibs[playerid][1] = FIXES_gsPlayerAnimLibs[playerid][2] =
	FIXES_gsPlayerAnimLibs[playerid][3] = FIXES_gsPlayerAnimLibs[playerid][4] = -1;
    GetPlayerName(playerid, PlayerInfo[playerid][pNames], 24);
	for(new nms = 0; nms < strlen(PlayerInfo[playerid][pNames]); nms++)
	{
		switch(PlayerInfo[playerid][pNames][nms])
		{
			case '0'..'9':
			{
				SendClientMessage(playerid, COLOR_RED, "Your nickname is Non-Rp, please change your name {FFFF00}Example: {A8C4E4}Blackrose_Rog");
				return KickEx(playerid);
			}

		}
	}
	GetPlayerIp(playerid,PlayerInfo[playerid],16);
	if(!IsPlayerFake(playerid)) {
		new fstring[144];
		format(fstring, sizeof fstring, "Adminstrator Player connected %s[%i]", PlayerInfo[playerid][pNames], playerid);
		foreach(Player, i)
		{
			if(PlayerInfo[i][pAlcoInvenxua] > 0 && PlayerBigEarsConnect{i})
			{
				SendClientMessage(i, COLOR_GREY, fstring);
			}
		}
	}
/*    {
        if(PlayerInfo[playerid][pAlcoInvenxua] > 1)
        {
		    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Adminstrator Login", "You are logged in as {FFFF00}Server Adminstrator {FFFFFF}please use {FF0000}/alogin {ffffff}and put your admin password to log in your adminstrator rank in the server", "Close", "");
        }
    }*/
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(gReconnectTime[i] <= 0) continue;
		if(!strcmp(PlayerInfo[playerid][pIP],gReconnectIP[i],false) && strlen(gReconnectIP[i]))
		{
			printf("Reconnect IP: %s = %s, Time: %d",PlayerInfo[playerid][pIP],gReconnectIP[i],gReconnectTime[i]);
			SendClientMessage(playerid,COLOR_GREY,"Do not use cleanly for at least 15 seconds");
			gReconnectTime[i] += 15;
			if(gReconnectTime[i] >= 30)
			{
			    new zS[32];
				format(zS,sizeof(zS),"banip %s",PlayerInfo[playerid][pIP]);
				SendRconCommand(zS);
			}
			KickEx(playerid);
			return 0;
		}
	}
	new slot;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!gReconnectTime[i]) {slot = i; break;}
	}
	format(gReconnectIP[slot],16,"%s",PlayerInfo[playerid][pIP]);
	gReconnectTime[slot] = 5;
    for(new i = 1;i<=TOTALGZ;i++) GangZoneShowForPlayer(playerid,GZInfo[i][id],GetGangZoneColor(i));
	AntiBan[playerid] = 0;
	TransportDuty[playerid] = 0;
	ResetPlayerWeapons(playerid);
	robbankstime[playerid] = 0;
	robjewelstime[playerid] = 0;
	toggotome[playerid] = 0;
//	PlayerInfo[playerid][pKillsOnDM] = 0;
	minigun[playerid] = 0;
	crashcuff[playerid] = 0;
	clearanim[playerid] = 0;
	times[playerid] = true;
    VipNews[playerid] = 0;
	fightid[playerid] = INVALID_PLAYER_ID;
	boy[playerid] = 0;
	HotdogOffer[playerid] = INVALID_PLAYER_ID;
	HotdogPrice[playerid] = INVALID_PLAYER_ID;
	FreeOffer[playerid]= INVALID_PLAYER_ID;
	TicketOffer[playerid] = INVALID_PLAYER_ID;
	TicketMoney[playerid] = 0;
	ProposeOffer[playerid] = INVALID_PLAYER_ID;
	udar[playerid] = 0;
	MatsArmyCar[playerid] = 0;
	JobCarTime[playerid] = 0;
	ChosenSkin[playerid] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
	OldSkin[playerid] = GetPlayerSkin(playerid);
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	PlayerInfo[playerid][pSelectPlayer] = -1;
	PlayerInfo[playerid][pTargetPlayer] = -1;
	PlayerInfo[playerid][pTargetAction] = 0;
	ChosenSkin[playerid] = 0;
	InviteSkin[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = INVALID_PLAYER_ID;
	OldSkin[playerid] = 230;
	TakingLesson[playerid] = 0;
	CP[playerid] = 0;
	TheifTime[playerid] = 0;
	TheifCount[playerid] = 0;
	TheifRobID[playerid] = INVALID_PLAYER_ID;
	TheifKey[playerid] = 0;
	TheifMoney[playerid] = 0;
	RefillOffer[playerid] = INVALID_PLAYER_ID;
	RefillPrice[playerid] = 0;
	TalkingLive[playerid] = INVALID_PLAYER_ID;
	TalkingLivels[playerid] = INVALID_PLAYER_ID;
	LiveOffer[playerid] = INVALID_PLAYER_ID;
	LiveOfferls[playerid] = INVALID_PLAYER_ID;
	RepairOffer[playerid] = INVALID_PLAYER_ID;
	SELL[0][playerid] = INVALID_PLAYER_ID;
	SELL[1][playerid] = INVALID_PLAYER_ID;
	SELL[2][playerid] = INVALID_PLAYER_ID;
	RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	playerradio[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	PlayerTied[playerid] = 0;
	VertMats[playerid] = 0;
	Mobile[playerid] = -1;
	BigEar[playerid] = 0;
	BigEarSms[playerid] = 0;
	StartDuty[playerid] = 0;
    UsingCursor[playerid] = 0;
    CroupierGame[playerid] = 0;
    CroupierTable[playerid] = -1;
    DiceTable[playerid] = -1;
	DiceGamer[playerid] = -1;
	ChooseBet[playerid] = 0;
	Glasses[playerid] = 0;
	RouleTable[playerid] = -1;
	RouleGamer[playerid] = -1;
	RouleHorizont[playerid] = 0;
	RouleVertikal[playerid] = 4;
	RouleChip[playerid] = 0;
	strdel(RouleNumber[playerid], 0, 12);
	RouleBet[playerid] = 0;
	Casino[playerid] = 0;
	BlackJackTable[playerid] = -1;
	BlackJackGamer[playerid] = -1;
	BlackJackPoints[playerid] = 0;
	BlackJackCards[playerid] = 0;
	BlackJackTime[playerid] = 0;
	BlackJackBet[playerid] = 0;
	BlackJackDoubleUse[playerid] = 0;
	MarryWitness[playerid] = INVALID_PLAYER_ID;
	MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
	onlinecheck[playerid] = 0;
	afkcheck[playerid] = 0;
	TheftKey[playerid] = 0;
	TheftCount[playerid] = 0;
	TheftCarID[playerid] = 0;
	TheftTime[playerid] = 0;
	// ������
	TuneColor[playerid][0] = -1;
	TuneColor[playerid][1] = -1;
	ChangeTuneDetail[playerid] = 0;
	TuneID[playerid] = -1;
	TuneShop[playerid] = 0;
	cTune[playerid][0][0] = -1;
	cTune[playerid][1][0] = -1;
	for(new i = 1; i < 15; i++) cTune[playerid][0][i] = 0, cTune[playerid][1][i] = 0;
    for(new i = 0; i < 2; i++) cColor[playerid][0][i] = 0, cColor[playerid][1][i] = 0;
	//
	ChangeAll[playerid][cSeller] = INVALID_PLAYER_ID;
	ChangeAll[playerid][cBuyer] = INVALID_PLAYER_ID;
	ChangeAll[playerid][cPrice] = 0;
	ChangeAll[playerid][cType] = 0;
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pHomez] = 255;
	PlayerInfo[playerid][pChar] = 90;
	PlayerInfo[playerid][pSkinhome][0] = 72;
	PlayerInfo[playerid][pSkinhome][1] = 72;
	PlayerInfo[playerid][pSkinhome][2] = 72;
	PlayerInfo[playerid][pExp] = 1;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 230;
	PlayerInfo[playerid][pPayDayHad] = 1;
	PlayerInfo[playerid][pFightSkill] = 1;
	PlayerInfo[playerid][pCar] = 0;
	PlayerInfo[playerid][pCar2] = 0;
	PlayerHealth[playerid] = 100;
	SetPlayerArmour(playerid,0);
	SetPlayerColor(playerid,COLOR_WHITE);
	format(mysql_query_, sizeof(mysql_query_),"SELECT * FROM `baniplog` WHERE `ip` = '%s' LIMIT 1", PlayerInfo[playerid][pIP]);
    mysql_tquery(connects, mysql_query_, "OnPlayerBanipCheck", "i", playerid);
    for(new i; i != 9; i++) TextDrawShowForPlayer(playerid, td_logo[i]);
    TextDrawShowForPlayer(playerid, GenuineLogo[0]);
	TextDrawShowForPlayer(playerid, GenuineLogo[1]);
	TextDrawShowForPlayer(playerid, GenuineLogo[2]);
	TextDrawShowForPlayer(playerid, GenuineLogo[3]);
    PlayAudioStreamForPlayer(playerid, "http://a.top4top.io/m_3103kapy01.mp3"); //intro music
	return true;
}
#define SPD ShowPlayerDialog
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == 4499)
	{
	    if(response)
	    {
	        SetPVarInt(playerid, "SKINID", GetPlayerSkin(playerid));
	        SetPlayerSkin(playerid, 262);
	        //________________________[.]_____________________
	    	new rand666=random(6);
	    	switch (rand666)
	    	{
				case 0:SetPlayerCheckpoint(playerid,508.5461,-1823.4453,5.5823,0.6), object1[playerid] = CreatePlayerObject(playerid, 1264, 508.5461,-1823.4453,5.5823-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 1:SetPlayerCheckpoint(playerid,559.0388,-1871.4319,4.1248,0.6), object2[playerid] = CreatePlayerObject(playerid, 917, 559.0388,-1871.4319,4.1248-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 2:SetPlayerCheckpoint(playerid,513.3473,-1897.3883,1.5154,0.6), object3[playerid] = CreatePlayerObject(playerid, 2672, 513.3473,-1897.3883,1.5154-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 3:SetPlayerCheckpoint(playerid,494.5392,-1873.6088,3.2831,0.6), object4[playerid] = CreatePlayerObject(playerid, 1264, 494.5392,-1873.6088,3.2831-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 4:SetPlayerCheckpoint(playerid,463.7719,-1853.4425,3.6171,0.6), object5[playerid] = CreatePlayerObject(playerid, 1264, 463.7719,-1853.4425,3.6171-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 5:SetPlayerCheckpoint(playerid,462.6543,-1822.2416,5.4836,0.6), object6[playerid] = CreatePlayerObject(playerid, 1264, 462.6543,-1822.2416,5.4836-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
    		}
    		total[playerid] = 0;
    		//________________________[]_____________________
    		TextDrawShowForPlayer(playerid, work0);
    		TextDrawShowForPlayer(playerid, work1);
    		TextDrawShowForPlayer(playerid, work2);
    		TextDrawShowForPlayer(playerid, work3);
    		TextDrawShowForPlayer(playerid, work4);
    		TextDrawShowForPlayer(playerid, work5);
    		TextDrawShowForPlayer(playerid, work6);
    		SendClientMessage(playerid, 0xFFFFFFAA, "{1562C6}[!]: {FFFFFF}You started working as a garbage man.");
	    }else SendClientMessage(playerid, 0xFFFFFFAA, "{1562C6}[!]: {FFFFFF}You have to press the 'yes' button to start the work.");
	}
	if(HackerJob[playerid] == 1)
	{
	    if(!response)
   		{
/*          	SpawnPlayer(playerid);
   		    KillTimer(HJLimitTimer);
   		    ShowPlayerDialog(playerid,-1,0,"","","","");
	    	SetPlayerVirtualWorld(playerid, 0);
      		SetPlayerInterior(playerid,0);
			HackerJob[playerid] = 0;
			SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");*/
			SpawnPlayer(playerid);
			SetPPos(playerid, -91.1709,-1576.5309,2.6172);
			SetPlayerVirtualWorld(playerid, 0);
			HackerJob[playerid] = 0;
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid,true);
			SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
			return 1;
		}
	    if(dialogid == 1998)
		{
       		if(strfind(inputtext,"began") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       		    SetPlayerPos(playerid, 2549.7 +2,-1297.8,1060.9);
	           		SetPlayerFacingAngle(playerid, 92.0);
		   			SetPlayerCameraPos(playerid, 2551.4,-1297.8,1062.1);
		   			SetPlayerCameraLookAt(playerid, 2549.7,-1297.8,1061);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerTwo", 6000, 0, "d", playerid);
   			}
			else
			{

				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");

					return 1;
			}
		}
	    if(dialogid == 1999)
		{
			if(strfind(inputtext,"keygen") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,3);
	       		    SetPlayerPos(playerid, 830.7 +2,-0.2,1004.1);
	           		SetPlayerFacingAngle(playerid, 178.9);
	  				SetPlayerCameraPos(playerid, 830.7,0.3,1005.2);
	  				SetPlayerCameraLookAt(playerid, 830.7,-0.2,1004.8);
	  				TogglePlayerControllable(playerid,false);
		 			GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerThree", 6000, 0, "d", playerid);
  	 		}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
	    if(dialogid == 2000)
		{
			if(strfind(inputtext,"cracked") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,6);
	       		    SetPlayerPos(playerid, 231.6 +2,80.3,1005.0);
	  				SetPlayerFacingAngle(playerid, 46.3);
				   	SetPlayerCameraPos(playerid, 232.7,79.4,1005.6);
				   	SetPlayerCameraLookAt(playerid, 231.6,80.3,1005.0);
				   	TogglePlayerControllable(playerid,false);
				   	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerFour", 6000, 0, "d", playerid);
   			}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
	    if(dialogid == 2001)
		{
			if(strfind(inputtext,"worm") != -1)
			{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       		    SetPlayerPos(playerid, 2572.1 -2,-1291.3,1037.7);
	  				SetPlayerFacingAngle(playerid, 276.5);
	  				SetPlayerCameraPos(playerid, 2571.3,-1291.3,1038.3);
	  				SetPlayerCameraLookAt(playerid, 2572.1,-1291.3,1038.4);
	  				TogglePlayerControllable(playerid,false);
	  				GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerFive", 6000, 0, "d", playerid);
     		}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
		if(dialogid == 2002)
		{
 			if(strfind(inputtext,"virus") != -1)
  			{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       			SetPlayerPos(playerid, 2568.3 -3,-1294.6,1037.7);
 					SetPlayerFacingAngle(playerid, 207.0);
		   			SetPlayerCameraPos(playerid, 2568.0,-1293.7,1038.6);
				 	SetPlayerCameraLookAt(playerid, 2568.8,-1294.6,1038.3);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
	 				return SetTimerEx("HackerSix", 6000, 0, "d", playerid);
   			}
 			else
 			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
		if(dialogid == 2003)
		{
	  		for(new i = 0; i < strlen(inputtext); i++)
	        {
	        	if(strfind(inputtext,"trojan") != -1)
	       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,0);
	       			SetPlayerPos(playerid, 212.4 +10,1822.9,6.4);
					SetPlayerFacingAngle(playerid, 89.7);
		   			SetPlayerCameraPos(playerid, 216.4,1823.1,7.8);
		   			SetPlayerCameraLookAt(playerid, 212.4,1822.9,6.4);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
	 				return SetTimerEx("HackerSeven", 6000, 0, "d", playerid);
	     		}
    	 		else
	  			{
/*					SpawnPlayer(playerid);
          			SetPlayerPos(playerid, -91.1709,-1576.5309,2.6172);
		   		    KillTimer(HJLimitTimer);
		   		    ShowPlayerDialog(playerid,-1,0,"","","","");
			    	SetPlayerVirtualWorld(playerid, 0);
			    	SetPlayerInterior(playerid,0);
					HackerJob[playerid] = 0;
					SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");*/
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
				}
	      	}
		}
	}
	if(dialogid == 5451)
	{
	    if(response)
	    {
	        if(PlayerInfo[playerid][pCash] < 2500000) return SendClientMessage(playerid, COLOR_WHITE, "{2cdb0d}You don't have enough money!");
            PlayerInfo[playerid][pMedCard] = 1;
            SendClientMessage(playerid, -1, "{FFFF00}Med-card purchased successfully!");
            PlayerInfo[playerid][pCash] -= 2500000;
        }
	}

	new gun,ammo, money;
	new gunname[32];
	{
	    switch(dialogid)
		{
		case 1:
		{
	    	if(!response || strlen(inputtext) < 6 || strlen(inputtext) > 64)
			{
				new string[256];
				format(string, sizeof(string), "{FFFFFF}That username is registered, please enter your password below.\n\n{32a84e}Username: {ffffff}%s \n\n{32a84e}Password:", PlayerInfo[playerid][pNames]);
                return ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Login | New York RolePlay", string, "Login", "Quit");
			}
			strmid(CheckPass[playerid], inputtext, 0, strlen(inputtext), 65);
			new hash[65];
			SHA256_PassHash(CheckPass[playerid], PlayerInfo[playerid][pSalt], hash, 65);
			if(!strcmp(hash, PlayerInfo[playerid][pPassword]))
			{
				CheckPass[playerid][0] = 0;
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e' LIMIT 1", PlayerInfo[playerid][pNames]);
				print(mysql_query_);
				mysql_tquery(connects, mysql_query_, "LoginCallback", "i", playerid);
			}
			else
			{
				if(GetPVarInt(playerid, "wrongPass") == 2)
				{
					SendClientMessage(playerid,COLOR_GREY,"You are kicked from the server for entering your password incorrectly. Please try again later!");
					return KickEx(playerid);
				}
				new string[256];
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				format(stringer1,sizeof(stringer1),"Login | Wrong Password: %d", (3 - GetPVarInt(playerid, "wrongPass")));
                format(string, sizeof(string), "{FFFFFF}That username is registered, please enter your password below.\n\n{32a84e}Username: {ffffff}%s \n\n{32a84e}Password:", PlayerInfo[playerid][pNames]);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Login | New York RolePlay", string, "Login", "Quit");
				SendClientMessage(playerid, 0xE93636AA, stringer1);
			}
			return 1;
		}
		case 2:
		{
			if(!response) return KickEx(playerid);
		    else if(PlayerRegMode[playerid] == 1)
		    {
		        if(strlen(inputtext) < 5 || strlen(inputtext) > 40 || !IsValidEmail(inputtext))
				{
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}E-Mail {FFFFFF}| Registration","{FFFFFF}Please enter your valid email address.\nBy confirming your email address in the future, you will have additional options.","Next","");
					return SendClientMessage(playerid, 0xE93636AA,"Mail is misspelled.");
				}
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 65);

				PlayerRegMode[playerid] = 3;

				ShowPlayerDialog(playerid,2,DIALOG_STYLE_LIST,"{FFFF00}Gender selection {FFFFFF}| Registration","Male\nFemale","Next","");
		    }
			else if(PlayerRegMode[playerid] == 2)
			{
				if(strlen(inputtext) < 6 || strlen(inputtext) > 64)
				{
					ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{FFFF00}Account registration {FFFFFF}| AP-RP", "{FFFFFF}Welcome to the server � {3399FF}"NAME_SERVER" Role Play{FFFFFF}\nThis account {00ff00}free {FFFFFF}for registration\n\nEnter the password for your account\nIt will be requested every time you log into the server\n\n\t{FF0000}Important:\n\t{FFFFFF}� Password length from 6 to 15 characters\n\t� The password can consist of Russian and Latin characters\n\t� Password is case sensitive", "Next", "");
					return SendClientMessage(playerid, 0xE93636AA,"Available password range: 6 - 64.");
				}
				strmid(CheckPass[playerid], inputtext, 0, strlen(inputtext), 65);
				PlayerRegMode[playerid] = 1;
    			ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}E-Mail {FFFFFF}| Registration","{FFFFFF}Enter your valid email address.\nBy confirming the email address in the future, you will have additional opportunities.","Next","");
			}
			else if(PlayerRegMode[playerid] == 3)
			{
				PlayerInfo[playerid][pSex] = listitem+1;
				PlayerRegMode[playerid] = 4;
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_LIST,"{FFFF00}Choice of nationality {FFFFFF}| Registration","{FFFFFF}Egypt\nIraq\nAmerican\nRussian\nEuropa\nMalaysian\nIndonesian\nBangladesh","Next","");
			}
			else if(PlayerRegMode[playerid] == 4)
			{
				PlayerInfo[playerid][pNational] = listitem+1;
				PlayerRegMode[playerid] = 5;
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}Character age {FFFFFF}| Registration","{FFFFFF}Enter the age of your avatar from 13 to 90 years old","Next","");
			}
			else if(PlayerRegMode[playerid] == 5)
			{
				if(strval(inputtext) < 13 || strval(inputtext) > 90)
				{
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{0099CC}Character age","{FFFFFF}Enter the age of your avatar from 13 to 90 years old","Next","");
		            return 1;
		        }
 				PlayerInfo[playerid][pAge] = strval(inputtext);
				PlayerRegMode[playerid] = 0;
				SetPVarInt(playerid, "Registration", 1);
				SpawnPlayer(playerid);
				SetPlayerVirtualWorldEx(playerid, playerid + 10);
				SetPlayerInteriorEx(playerid,0);
				if(PlayerInfo[playerid][pSex] == 1)
				{
					new ran = random(7);
     				SetPlayerSkin(playerid, SkinMen[ran][0]);
				}
				else
				{
					new ran = random(5);
					SetPlayerSkin(playerid, SkinMale[ran][0]);
				}
				TogglePlayerControllable(playerid, true);
				PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
				PlayerRegisterMySQL(playerid);
			}
			return 1;
		}
		case 3:
		{
			if(PlayerRegStep[playerid] != 2) return true;
			else if(!response) PlayerRegMode[playerid] = 0;
		    else if(PlayerRegMode[playerid] == 1)
		    {
		        PlayerInfo[playerid][pSex] = listitem+1;
				PlayerRegMode[playerid] = 0;
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][1], (!listitem) ? ("MALE") : ("FEMALE"));
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][1]);
		    }
		    else if(PlayerRegMode[playerid] == 2)
		    {
		        PlayerInfo[playerid][pNational] = listitem+1;
				PlayerRegMode[playerid] = 0;
				new NameNationalsEng[8][11] = {	"American", "Russian", "Malaysian", "Indonesian", "Bangladesh", "Europian", "Arabian", "Japanese" };
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][2], NameNationalsEng[listitem]);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][2]);
		    }
		    else if(PlayerRegMode[playerid] == 3)
		    {
		        if(strval(inputtext) < 13 || strval(inputtext) > 90) {
					ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "{0099CC}Character age","{FFFFFF}Enter the age of your avatar from 15 to 90 years old", "Put", "Close");
		            return 1;
		        }
				PlayerInfo[playerid][pAge] = strval(inputtext);
				PlayerRegMode[playerid] = 0;
				new age[2];
				valstr(age, PlayerInfo[playerid][pAge]);
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][3], age);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][3]);
		    }
		    return true;
		}
		case 2323:
			{
				new x;
				switch(GetPVarInt(playerid,"AutoShop"))
				{
					case 3,4: x = 2;
				}
				if(response) SetPVarInt(playerid,"CarShop",x+1);
				else SetPVarInt(playerid,"CarShop",x+2);
				ShowBuyCar(playerid);
				return true;
			}
		case 2324:
			{
				if(!response)
				{
					if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SendClientMessage(playerid,COLOR_WHITE,"There is not enough money in your bank account!");
					PlayerInfo[playerid][pCar2] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
					cColor[playerid][1][0] = GetPVarInt(playerid,"BuyColor");
				    cColor[playerid][1][1] = GetPVarInt(playerid,"BuyColor1");
					PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
    				if(PlayerInfo[playerid][pQuest3] == 0)
             		{
             			PlayerInfo[playerid][pQuest3] = 1;
	             		UpdatePlayerData(playerid, "pQuest3", PlayerInfo[playerid][pQuest3]);
             		}
					ExitCar(playerid);
					SaveVehicleColor(playerid, 1);
					return true;
				}
				if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SendClientMessage(playerid,COLOR_WHITE,"There is not enough money in your bank account!");
				PlayerInfo[playerid][pCar] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
				cColor[playerid][0][0] = GetPVarInt(playerid,"BuyColor");
				cColor[playerid][0][1] = GetPVarInt(playerid,"BuyColor1");
				PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
				if(PlayerInfo[playerid][pQuest3] == 0)
  				{
   					PlayerInfo[playerid][pQuest3] = 1;
  					UpdatePlayerData(playerid, "pQuest3", PlayerInfo[playerid][pQuest3]);
  				}
				ExitCar(playerid);
				SaveVehicleColor(playerid, 0);
				return true;
			}
		case 22800:
			{
			    if(response != 1)
			        return true;

				TogglePlayerControllable(playerid, 0);
				SetTimerEx("CreatingBreak", 3000, false, "i", playerid);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 3000, 1);

				SetPVarInt(playerid, "BreakID", listitem + 1);
				return true;
			}
		case 2425:
			{
				if(!response) return true;
				ExitCar(playerid);
				return true;
			}
		case 1939:
		    {
		        if(response)
		        {
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInteriorEx(playerid, 6);
					SetPlayerFacingAngle(playerid, 87.0766);
					DestroyVehicleEx(vehiclerc[playerid]);
					DeletePVar(playerid, "rentrc");
					SendClientMessage(playerid, 0xafafafff, "You refuse to rent a vehicle");
				}
			}
		case 2250:
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pOdet] == 1) return SendClientMessage(playerid,COLOR_WHITE,"You are already in service!");
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);
					SendClientMessage(playerid,COLOR_WHITE,"You changed into work uniform.");
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pOdet] = 1;
				}
				else
				{
				    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are already not work!");
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
					SendClientMessage(playerid,COLOR_WHITE,"You have changed into your regular clothes.");
					SetPlayerColor(playerid, 0xe6e6e6FF);
					PlayerInfo[playerid][pOdet] = 0;
				}
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `odet` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pOdet],PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				return true;
			}
	 	case 1653:
			{
		    	if(response)
		    	{
		        	PlayerInfo[playerid][pType] = listitem;
          			switch(listitem)
		        	{
		            	case 0: PlayerInfo[playerid][pType2]=4;
		            	case 1: PlayerInfo[playerid][pType2]=0;
		            	case 2: PlayerInfo[playerid][pType2]=0;
		            	case 3: PlayerInfo[playerid][pType2]=0;
		            	case 4: PlayerInfo[playerid][pType2]=0;
		            	case 5: PlayerInfo[playerid][pType2]=0;
		            	case 6: PlayerInfo[playerid][pType2]=0;
		            	case 7: PlayerInfo[playerid][pType2]=1;
		            	case 8: PlayerInfo[playerid][pType2]=3;
		            	case 9: PlayerInfo[playerid][pType2]=0;
		            	case 10: PlayerInfo[playerid][pType2]=2;
		            	case 11: PlayerInfo[playerid][pType2]=5;
		            	case 12: PlayerInfo[playerid][pType2]=0;
		            	case 13: PlayerInfo[playerid][pType2]=0;
		        	}
          			SetPlayerBuyItem(playerid);
		    	}
			}
		case 3333:
        {
            if(!response) return true;
			new Float:Coords[3], in = GetPlayerInterior(playerid), vw = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, Coords[0], Coords[1], Coords[2]);
			SetPVarFloat(playerid, "BackX", Coords[0]), SetPVarFloat(playerid, "BackY", Coords[1]), SetPVarFloat(playerid, "BackZ", Coords[2]), SetPVarInt(playerid, "BackIn", in), SetPVarInt(playerid, "BackVw", vw);
            SetPPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
            SetPlayerInteriorEx(playerid, TeleportInfo[0]);
            SetPlayerVirtualWorldEx(playerid, TeleportInfo[1]);
            SendClientMessage(playerid,COLOR_BLUE,"You were successfully teleported to the event location.");
	        SendClientMessage(playerid,COLOR_BLUE,"Use the '/back' command to go back.");
            return true;
        }
    	case 1691:
			{
		    	if(!response) return MainMenuPl(playerid);
	        	switch(listitem)
	        	{
	            	case 0:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
                    	PlayerInfo[playerid][pType2] = 0;
                    	ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Headdress{FFFFFF}\nUsed cell: {F39F3F}1{FFFFFF}\n\nTo discard an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 1:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 1;
	                	ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Glasses{FFFFFF}\nUsed cell: {F39F3F}2{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 2:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 2;
              			ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Wristwatch{FFFFFF}\nUsed cell: {F39F3F}3{FFFFFF}\n\nTo discard an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 3:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 3;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Bandana{FFFFFF}\nUsed cell: {F39F3F}4{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 4:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 4;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Headphones{FFFFFF}\nUsed cell: {F39F3F}5{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 5:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 5;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Bags{FFFFFF}\nUsed cell: {F39F3F}6{FFFFFF}\n\nTo discard an item press ENTER or Back to return to the menu.","Accept","Back");
	            	}
				}
			}
/*		case 24123:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			new arena;
			if(sscanf(inputtext, "d", arena))
			{
				return ShowPlayerDialog(playerid, 24123, DIALOG_STYLE_INPUT, "{ffffff}����� �������", "{ffffff}Enter ����� ������� (0-15):", "Next", "Cancle");
			}
			if(arena < 0 || arena > 15)
			{
				SendClientMessage(playerid, COLOR_GREY, "Enter ����� ����� �� 0 �� 15!");
				return ShowPlayerDialog(playerid, 24123, DIALOG_STYLE_INPUT, "{ffffff}����� �������", "{ffffff}Enter ����� ������� (0-15):", "Next", "Cancle");
			}
			SetPVarInt(playerid, "arena_id_player", arena);
			ShowPlayerDialog(playerid, 24124, DIALOG_STYLE_LIST, "{ffffff}����� ������", "{ffffff}Deagle + Shotgun\nDeagle + M4\nDeagle + Rifle", "Next", "Cancle");
			return true;
		}*/
		case 24123:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			new arena;
			SetPVarInt(playerid, "arena_id_player", arena);
			ShowPlayerDialog(playerid, 24124, DIALOG_STYLE_LIST, "{ffffff}Dmzone", "{ffffff}Dmzone {109e12}1\n{ffffff}Dmzone {109e12}2\n{ffffff}Dmzone {109e12}3", "{109e12}Select", "{ffffff}Return");
			return true;
		}
		case 1398:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: rentrc(playerid,350000,441);
		        case 1: rentrc(playerid,350000,564);
		        case 2: rentrc(playerid,350000,501);
		        case 3: rentrc(playerid,350000,465);
			}
			return true;
		}
		case 1399:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: rentrc(playerid,60000,550);
				case 1: rentrc(playerid,25000,586);
			}
			return true;
		}
		case 24151: {
			if(!response) return true;
			new itters = 0;
			for(new i = 1; i < TOTALBIZZ + 1; i++)
			{
				if(!strcmp(BizzInfo[i][bOwner], "None", true)) itters++;
				if(itters == listitem) {
					SetPlayerCheckpoint(playerid, BizzInfo[i + 1][bEntrx],BizzInfo[i + 1][bEntry],BizzInfo[i + 1][bEntrz], 5.0);
					SetPVarInt(playerid, "FindBizz", 1), SetPVarFloat(playerid, "CoordX", BizzInfo[i + 1][bEntrx]), SetPVarFloat(playerid, "CoordY", BizzInfo[i + 1][bEntry]), SetPVarFloat(playerid, "CoordZ", BizzInfo[i + 1][bEntrz]);
					SendClientMessage(playerid, -1, "Business marked on {FF0000} map!");
					break;
				}
			}
			return true;
		}
		case 24124:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			SetPlayerVirtualWorldEx(playerid, GetPVarInt(playerid, "arena_id_player") + 1337);
			SetPlayerInteriorEx(playerid, 0);
			switch(random(5))
			{
				case 0: SetPPos(playerid, -384.4847,2238.7910,42.0938);
				case 1: SetPPos(playerid, -413.7166,2271.1560,42.1350);
				case 2: SetPPos(playerid, -413.7879,2270.6309,42.1530);
				case 3: SetPPos(playerid, -445.7326,2221.9536,42.4297);
				case 4: SetPPos(playerid, -389.9460,2194.2104,42.4159);
			}
			SetPVarFloat(playerid, "Health", GetPlayerHealth(playerid)), SetPVarFloat(playerid, "Armour", GetPlayerArmour(playerid));
			ResetPlayerWeapons(playerid);
			switch(listitem)
			{
				case 0:
				{
					GiveWeapon(playerid, 24, 1000);
//					GiveWeapon(playerid, 25, 1000);
				}
				case 1:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 25, 999);
				}
				case 2:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 31, 1000);
				}
				case 3:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 33, 999);
				}
			}
			SetPVarInt(playerid, "arena_weapon_set", listitem);
			SetPVarInt(playerid, "on_dmarena", 1);
			SendClientMessage(playerid, -1, "Don't use cheats in {b8b5ff}Dmzone {FFFFFF}or you will get BAN {FFFF00} to leave /dmexit {2cdb0d}/rep admins will help you soon {FF0000}adminstrators");
			return true;
		}
		case 1692:
			{
		    	if(response)
		    	{
		        	if(PlayerInfo[playerid][pSlotItem][PlayerInfo[playerid][pType2]]==0) return Myitems(playerid);
		        	switch(PlayerInfo[playerid][pType2])
                	{
                    	case 0: if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
                    	case 1: if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						case 2: if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
						case 3: if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
						case 4: if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
						case 5: if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
                	}
                	PlayerInfo[playerid][pSlotItem][PlayerInfo[playerid][pType2]]=0;
                	format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
					format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
                    mysql_tquery(connects, mysql_query_, "", "");
                	FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
                	Myitems(playerid);
				}
				else Myitems(playerid);
				PlayerInfo[playerid][pType2] = -1;
			}
		case 7778:
	        {
	            if(!response) return DeletePVar(playerid,"MarketType");
	            if(PlayerInfo[playerid][pCash] < BazarAcc[GetPVarInt(playerid,"MarketType")][bMoney]) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}You don't have enough cash in your hand.");
	            CheckItem(playerid);
			    if(BazarAcc[GetPVarInt(playerid,"MarketType")][aID] != 0)
			    {
                    GiveItem(playerid,BazarAcc[GetPVarInt(playerid,"MarketType")][aID]);
				    PlayerInfo[playerid][pSlotItem][0]=BazarAcc[GetPVarInt(playerid,"MarketType")][aID];
			    }
			    else
			    {
			        switch(GetPVarInt(playerid,"MarketType"))
			        {
			            case 0:
			            {
			                new abj = RandomEx(18891,18905);
                            GiveItem(playerid,abj);
						    PlayerInfo[playerid][pSlotItem][0]=abj;
			            }
			        }
			    }
			    FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
			    PlayerInfo[playerid][pCash] -= BazarAcc[GetPVarInt(playerid,"MarketType")][bMoney];
			    format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
			    format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
                mysql_tquery(connects, mysql_query_, "", "");
			    SendMes(playerid,-1,"You bought %s",BazarAcc[GetPVarInt(playerid,"MarketType")][BName]);
			    DeletePVar(playerid,"MarketType");
	        }
		case 2018:
			{
				if(!response) return true;
				if(PlayerInfo[playerid][pAlcoInvenxua] > 13) return SendClientMessage(playerid, -1, "In general, I have a 13-colored teddy bear!");
				if(PlayerInfo[playerid][pRub] < 1299)
				{
					SendClientMessage(playerid, COLOR_GREY, "You don�t have enough rubles, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
					return MainMenuPl(playerid);
				}
				PlayerInfo[playerid][pRub] -= 1299;
	     		new string[1000];
				PlayerInfo[playerid][pAlcoInvenxua] = 13;
				PlayerInfo[playerid][pVigs] = 0;

				mysql_format(connects,string, 246, "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `vigs` = '0', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}You have successfully purchased full access! Sign up to /alogin");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}Use {FFD700}/ahelp, {0099CC}To learn about new commands");

			    new CMDaccess[CMD_NUM + 1];
			    cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
			    sscanf("����������", "s[16+1]", PlayerInfo[playerid][pPrefix]);
		    	for(new i = 0; i < sizeof CMD_names; i++)
				{
					CMDaccess[i] = '1';
					PlayerInfo[playerid][aiCMDaccess][i] = '1';
				}
				CMDaccess[CMD_setadmin] = '1';
				PlayerInfo[playerid][aiCMDaccess][CMD_setadmin] = '1';
				new query[144];
				mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `CMDaccess` = '%s', `pPrefix` = '%s' WHERE `Name` = '%e'", CMDaccess,PlayerInfo[playerid][pPrefix],PlayerInfo[playerid][pNames]);
				mysql_function_query(connects, query, false, "", "");
				mysql_function_query(connects, string, false, "", "");
			}
		case 56:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerColor(playerid,Cvet_0);
					case 1: SetPlayerColor(playerid,0x089401FF);
					case 2: SetPlayerColor(playerid,0x56FB4EFF);
					case 3: SetPlayerColor(playerid,0x49E789FF);
					case 4: SetPlayerColor(playerid,0x2A9170FF);
					case 5: SetPlayerColor(playerid,0x9ED201FF);
					case 6: SetPlayerColor(playerid,0x279B1EFF);
					case 7: SetPlayerColor(playerid,0x51964DFF);
					case 8: SetPlayerColor(playerid,0xFF0606FF);
					case 9: SetPlayerColor(playerid,0xF68F67FF);
					case 10: SetPlayerColor(playerid,0xF45000FF);
					case 11: SetPlayerColor(playerid,0xBE8A01FF);
					case 12: SetPlayerColor(playerid,0xB30000FF);
					case 13: SetPlayerColor(playerid,0x954F4FFF);
					case 14: SetPlayerColor(playerid,0xE7961DFF);
					case 15: SetPlayerColor(playerid,0xE6284EFF);
					case 16: SetPlayerColor(playerid,0xFF9DB6FF);
					case 17: SetPlayerColor(playerid,0x110CE7FF);
					case 18: SetPlayerColor(playerid,0x0CD7E7FF);
					case 19: SetPlayerColor(playerid,0x139BECFF);
					case 20: SetPlayerColor(playerid,0x2C9197FF);
					case 21: SetPlayerColor(playerid,0x114D71FF);
					case 22: SetPlayerColor(playerid,0x8813E7FF);
					case 23: SetPlayerColor(playerid,0xB313E7FF);
					case 24: SetPlayerColor(playerid,0x758C9DFF);
					case 25: SetPlayerColor(playerid,COLOR_YELLOW);
					case 26: SetPlayerColor(playerid,0xFFEE8AFF);
					case 27: SetPlayerColor(playerid,0xDDB201FF);
					case 28: SetPlayerColor(playerid,0xDDA701FF);
					case 29: SetPlayerColor(playerid,0xB0B000FF);
					case 30: SetPlayerColor(playerid,0x868484FF);
					case 31: SetPlayerColor(playerid,0xB8B6B6FF);
					case 32: SetPlayerColor(playerid,0x333333FF);
					case 33: SetPlayerColor(playerid,0xFAFAFAFF);
					}
				}
			}
		case 17504:
		    {
				if(!response) return 1;
				if(GetPVarType(playerid, "PlacedBB")) {
					switch(listitem) {
						case 0: SetPVarString(playerid, "BBStation", "http://e.top4top.io/m_30014ggpv1.mp3");
						case 1: SetPVarString(playerid, "BBStation", "http://e.top4top.io/m_300135e4r1.mp3");
						case 2: SetPVarString(playerid, "BBStation", "http://k.top4top.io/m_3001otz721.mp3");
						case 3: SetPVarString(playerid, "BBStation", "http://c.top4top.io/m_3001as9k11.mp3");
						case 4: SetPVarString(playerid, "BBStation", "http://j.top4top.io/m_30011m6w51.mp3");
						case 5: SetPVarString(playerid, "BBStation", "http://c.top4top.io/m_3001k5h8k1.mp3");
						case 6: SetPVarString(playerid, "BBStation", "http://i.top4top.io/m_3001wvkli1.mp3");
						case 7: return ShowPlayerDialog(playerid,17511,DIALOG_STYLE_INPUT, "{FF6F00}Enter link", "{FFFFFF}Insert link to radio/song", "Enable","Cancel");
						case 8: {
							if(GetPVarType(playerid, "BBArea"))
							{
								format(stringer1, sizeof(stringer1), "{ea8df7}%s turned off the tape recorder", PlayerInfo[playerid][pNames]);
	                            ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
								foreach(new i: Player)
								{
									if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
								}
								DeletePVar(playerid, "BBStation");
							}
							return SendClientMessage(playerid, COLOR_WHITE, "You turned off the tape recorder");
						}
					}
					new myzuc[128];
					GetPVarString(playerid, "BBStation", myzuc, sizeof(myzuc));
					foreach(new i: Player)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, myzuc, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
						}
					}
				}
				return true;
			}
		case 1338:
		{
//			if(!response) return callcmd::adonate(playerid);
			new iter = -1;
			for(new i = 0; i < CMD_NUM; i++)
			{
				if(CMD_price[i] > 0) iter++;
				if(iter == listitem)
				{
					listitem = i;
					break;
				}
			}
			if(PlayerInfo[playerid][pRub] < CMD_price[listitem])
			{
//				callcmd::adonate(playerid);
				return SendClientMessage(playerid,COLOR_GREY, "You don�t have enough rubles, you can replenish them on the website {FFCD00}"PAGE_SITE" -> Donate");
			}
			new fstring[512];
			format(fstring, sizeof fstring, "Do you really want to buy the command \"%s\" for %i Ruble?\nWith this command you can:\n%s", CMD_names[listitem], CMD_price[listitem], CMD_desc[listitem]);
			ShowPlayerDialog(playerid, 24142, DIALOG_STYLE_MSGBOX, "Buying a team", fstring, "Buy", "Back");
			SetPVarInt(playerid, "cmd_buy", listitem);
			return true;
		}
		case 378:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 380, DIALOG_STYLE_LIST, "{9c9c9c}[0] airbreak on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 1: ShowPlayerDialog(playerid, 381, DIALOG_STYLE_LIST, "{9c9c9c}[1] airbreak in the car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 2: ShowPlayerDialog(playerid, 382, DIALOG_STYLE_LIST, "{9c9c9c}[2] Teleport on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 3: ShowPlayerDialog(playerid, 383, DIALOG_STYLE_LIST, "{9c9c9c}[3] Teleport in the car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 4: ShowPlayerDialog(playerid, 384, DIALOG_STYLE_LIST, "{9c9c9c}[4] Teleport to car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 5: ShowPlayerDialog(playerid, 3855, DIALOG_STYLE_LIST, "{9c9c9c}[5] Teleport in the car to the player", "Disable\nReport to chat\nKick", "Next", "Back");
				case 6: ShowPlayerDialog(playerid, 386, DIALOG_STYLE_LIST, "{9c9c9c}[6] Teleport to pickup", "Disable\nReport to chat\nKick", "Next", "Back");
				case 7: ShowPlayerDialog(playerid, 387, DIALOG_STYLE_LIST, "{9c9c9c}[7] Flyhack on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 8: ShowPlayerDialog(playerid, 388, DIALOG_STYLE_LIST, "{9c9c9c}[8] Flyhack in a car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 9: ShowPlayerDialog(playerid, 389, DIALOG_STYLE_LIST, "{9c9c9c}[9] Speedhack on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 10: ShowPlayerDialog(playerid, 390, DIALOG_STYLE_LIST, "{9c9c9c}[10] Speedhack in a car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 11: ShowPlayerDialog(playerid, 391, DIALOG_STYLE_LIST, "{9c9c9c}[11] Car repair", "Disable\nReport to chat\nKick", "Next", "Back");
				case 12: ShowPlayerDialog(playerid, 392, DIALOG_STYLE_LIST, "{9c9c9c}[12] Player health", "Disable\nReport to chat\nKick", "Next", "Back");
				case 13: ShowPlayerDialog(playerid, 393, DIALOG_STYLE_LIST, "{9c9c9c}[13] Armor", "Disable\nReport to chat\nKick", "Next", "Back");
				case 14: ShowPlayerDialog(playerid, 394, DIALOG_STYLE_LIST, "{9c9c9c}[14] Money(dollars)", "Disable\nReport to chat\nKick", "Next", "Back");
				case 15: ShowPlayerDialog(playerid, 395, DIALOG_STYLE_LIST, "{9c9c9c}[15] Weapon", "Disable\nReport to chat\nKick", "Next", "Back");
				case 16: ShowPlayerDialog(playerid, 396, DIALOG_STYLE_LIST, "{9c9c9c}[16] Adding Ammo", "Disable\nReport to chat\nKick", "Next", "Back");
				case 17: ShowPlayerDialog(playerid, 397, DIALOG_STYLE_LIST, "{9c9c9c}[17] Endless ammo", "Disable\nReport to chat\nKick", "Next", "Back");
				case 18: ShowPlayerDialog(playerid, 398, DIALOG_STYLE_LIST, "{9c9c9c}[18] Special Actions", "Disable\nReport to chat\nKick", "Next", "Back");
				case 19: ShowPlayerDialog(playerid, 399, DIALOG_STYLE_LIST, "{9c9c9c}[19] GM player", "Disable\nReport to chat\nKick", "Next", "Back");
				case 20: ShowPlayerDialog(playerid, 400, DIALOG_STYLE_LIST, "{9c9c9c}[20] GM car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 21: ShowPlayerDialog(playerid, 401, DIALOG_STYLE_LIST, "{9c9c9c}[21] Invisible", "Disable\nReport to chat\nKick", "Next", "Back");
				case 22: ShowPlayerDialog(playerid, 402, DIALOG_STYLE_LIST, "{9c9c9c}[22] Lagger", "Disable\nReport to chat\nKick", "Next", "Back");
				case 23: ShowPlayerDialog(playerid, 403, DIALOG_STYLE_LIST, "{9c9c9c}[23] tuning", "Disable\nReport to chat\nKick", "Next", "Back");
				case 24: ShowPlayerDialog(playerid, 404, DIALOG_STYLE_LIST, "{9c9c9c}[24] Parkour mod", "Disable\nReport to chat\nKick", "Next", "Back");
				case 25: ShowPlayerDialog(playerid, 405, DIALOG_STYLE_LIST, "{9c9c9c}[25] Quick player turn", "Disable\nReport to chat\nKick", "Next", "Back");
				case 26: ShowCheatSettingsApanel2(playerid);
			}
		}
		case 379:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 406, DIALOG_STYLE_LIST, "{9c9c9c}[26] Rapid", "Disable\nReport to chat\nKick", "Next", "Back");
				case 1: ShowPlayerDialog(playerid, 407, DIALOG_STYLE_LIST, "{9c9c9c}[27] Fake spawn", "Disable\nReport to chat\nKick", "Next", "Back");
				case 2: ShowPlayerDialog(playerid, 408, DIALOG_STYLE_LIST, "{9c9c9c}[28] Fake kill", "Disable\nReport to chat\nKick", "Next", "Back");
				case 3: ShowPlayerDialog(playerid, 409, DIALOG_STYLE_LIST, "{9c9c9c}[29] please", "Disable\nReport to chat\nKick", "Next", "Back");
				case 4: ShowPlayerDialog(playerid, 410, DIALOG_STYLE_LIST, "{9c9c9c}[30] Running C.J.", "Disable\nReport to chat\nKick", "Next", "Back");
				case 5: ShowPlayerDialog(playerid, 411, DIALOG_STYLE_LIST, "{9c9c9c}[31] CarShot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 6: ShowPlayerDialog(playerid, 412, DIALOG_STYLE_LIST, "{9c9c9c}[32] race car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 7: ShowPlayerDialog(playerid, 413, DIALOG_STYLE_LIST, "{9c9c9c}[33] Unfreeze", "Disable\nReport to chat\nKick", "Next", "Back");
				case 8: ShowPlayerDialog(playerid, 414, DIALOG_STYLE_LIST, "{9c9c9c}[34] AFK Ghost", "Disable\nReport to chat\nKick", "Next", "Back");
				case 9: ShowPlayerDialog(playerid, 415, DIALOG_STYLE_LIST, "{9c9c9c}[35] Full AIM", "Disable\nReport to chat\nKick", "Next", "Back");
				case 10: ShowPlayerDialog(playerid, 416, DIALOG_STYLE_LIST, "{9c9c9c}[36] Fake NPC", "Disable\nReport to chat\nKick", "Next", "Back");
				case 11: ShowPlayerDialog(playerid, 417, DIALOG_STYLE_LIST, "{9c9c9c}[37] Reconnect", "Disconnect\nReport to chat\nKick", "Next", "Back");
				case 12: ShowPlayerDialog(playerid, 418, DIALOG_STYLE_LIST, "{9c9c9c}[38] High ping", "Disable\nReport to chat\nKick", "Next", "Back");
				case 13: ShowPlayerDialog(playerid, 419, DIALOG_STYLE_LIST, "{9c9c9c}[39] Dialogue hack", "Disable\nReport to chat\nKick", "Next", "Back");
				case 14: ShowPlayerDialog(playerid, 420, DIALOG_STYLE_LIST, "{9c9c9c}[40] Sandbox", "Disable\nReport to chat\nKick", "Next", "Back");
				case 15: ShowPlayerDialog(playerid, 421, DIALOG_STYLE_LIST, "{9c9c9c}[41] Invalid version", "Disable\nReport to chat\nKick", "Next", "Back");
				case 16: ShowPlayerDialog(playerid, 422, DIALOG_STYLE_LIST, "{9c9c9c}[42] RCON hack", "Disable\nReport to chat\nKick", "Next", "Back");
				case 17: ShowPlayerDialog(playerid, 423, DIALOG_STYLE_LIST, "{9c9c9c}[43] Tuning crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 18: ShowPlayerDialog(playerid, 424, DIALOG_STYLE_LIST, "{9c9c9c}[44] Invalid crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 19: ShowPlayerDialog(playerid, 425, DIALOG_STYLE_LIST, "{9c9c9c}[45] Crusher with dialogue", "Disable\nReport to chat\nKick", "Next", "Back");
				case 20: ShowPlayerDialog(playerid, 426, DIALOG_STYLE_LIST, "{9c9c9c}[46] Crusher with objects", "Disable\nReport to chat\nKick", "Next", "Back");
				case 21: ShowPlayerDialog(playerid, 427, DIALOG_STYLE_LIST, "{9c9c9c}[47] Weapon crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 22: ShowPlayerDialog(playerid, 428, DIALOG_STYLE_LIST, "{9c9c9c}[48] Invalid connection", "Disconnect\nReport to chat\nKick", "Next", "Back");
				case 23: ShowPlayerDialog(playerid, 429, DIALOG_STYLE_LIST, "{9c9c9c}[49] Function callback", "Disable\nReport to chat\nKick", "Next", "Back");
				case 24: ShowPlayerDialog(playerid, 430, DIALOG_STYLE_LIST, "{9c9c9c}[50] Anti flow", "Disable\nReport to chat\nKick", "Next", "Back");
				case 25: ShowPlayerDialog(playerid, 431, DIALOG_STYLE_LIST, "{9c9c9c}[51] Ddos protection", "Disable\nReport to chat\nKick", "Next", "Back");
				case 26: ShowPlayerDialog(playerid, 43223, DIALOG_STYLE_LIST, "{9c9c9c}[52] Anti-NOP", "Disable\nReport to chat\nKick", "Next", "Back");
				case 27: ShowCheatSettingsApanel(playerid);
			}
		}
		case 380:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][0] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][0] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][0] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 381:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][1] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][1] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][1] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 382:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][2] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][2] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][2] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 383:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][3] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][3] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][3] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 384:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][4] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][4] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][4] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 3855:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][5] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][5] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][5] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 386:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][6] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][6] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][6] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 387:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][7] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][7] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][7] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 388:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][8] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][8] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][8] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 389:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][9] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][9] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][9] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 390:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][10] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][10] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][10] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 391:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][11] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][11] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][11] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 392:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][12] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}

				case 1:
				{
					SettingInfo[CheatSetting][12] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][12] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 393:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][13] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][13] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][13] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 394:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][14] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][14] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][14] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 395:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][15] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][15] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][15] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 396:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][16] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][16] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][16] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 397:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][17] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][17] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][17] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 398:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][18] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][18] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][18] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 399:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][19] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][19] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][19] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 400:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][20] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][20] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][20] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 401:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][21] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][21] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][21] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 402:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][22] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][22] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][22] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 403:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][23] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][23] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][23] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 404:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][24] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][24] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][24] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 405:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][25] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][25] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][25] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 406:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][26] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][26] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][26] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 407:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][27] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][27] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][27] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 408:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][28] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][28] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][28] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 409:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][29] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][29] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][29] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 410:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][30] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][30] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][30] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 411:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][31] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][31] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][31] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 412:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][32] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][32] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][32] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 413:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][33] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][33] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][33] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 414:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][34] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][34] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][34] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 415:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][35] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][35] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][35] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 416:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][36] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][36] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][36] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 417:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][37] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][37] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][37] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 418:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][38] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][38] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][38] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 419:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][39] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][39] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][39] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 420:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][40] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][40] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][40] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 421:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][41] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][41] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][41] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 422:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][42] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][42] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][42] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 423:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][43] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][43] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][43] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 424:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][44] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][44] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][44] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 425:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][45] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][45] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][45] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 426:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][46] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][46] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][46] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 427:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][47] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][47] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][47] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 428:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][48] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][48] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][48] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 429:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][49] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][49] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][49] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 430:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][50] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][50] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][50] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 431:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][51] = 0;//��������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][51] = 1;//������ � ���
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][51] = 2;//������
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 43223:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][52] = 0;//��������
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][52] = 2;//������
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 433:
		{
   			if(!response) return callcmd::anticheat(playerid);
		}
		case 24142: // ������������� ������� ������� ���������
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "cmd_buy"), query[256];
			if(PlayerInfo[playerid][pRub] < CMD_price[i])
			{
//				callcmd::adonate(playerid);
				return SendClientMessage(playerid,COLOR_GREY, "You don�t have enough rubles, you can replenish them on the website {FFCD00}"PAGE_SITE" -> Donate");
			}
			mysql_format(connects, query, sizeof query, "SELECT * FROM `accounts` WHERE `Name` = '%e'", PlayerInfo[playerid][pNames]);
			mysql_function_query(connects, query, true, "BuyCmdCallback", "dd", playerid, i);
			return true;
		}
	    case 17511:
			{
				if(!response) return true;
				if(strfind(inputtext, "http", true) == -1) return ShowPlayerDialog(playerid,17511,DIALOG_STYLE_INPUT, "{FF6F00}Enter link", "{FFFFFF}Insert link to radio/song", "Enable","Cancel");
				if(GetPVarType(playerid, "PlacedBB"))
				{
					foreach(new i: Player)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, (inputtext), GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
						}
					}
					SetPVarString(playerid, "BBStation", (inputtext));
				}
				return SendClientMessage(playerid,-1,"You played the song");
			}
		case 4322:
			{
				if(!response) return true;
				new vod = GetPlayerVehicleID(playerid);
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "You must be in the driver's seat");
	 			if(IsAPlane(vod) && IsABoat(vod) && IsANoSpeed(vod)) return SendClientMessage(playerid, -1, "Windows cannot be opened on this vehicle.");
		    	new bool:driver, bool:passenger, bool:backleft, bool:backright;
		    	GetVehicleParamsCarWindows(vod, driver, passenger, backleft, backright);
		    	switch(listitem)
		    	{
		    		case 0: driver = !driver ? (true) : (false);
		     		case 1: passenger = !passenger ? (true) : (false);
		      		case 2: backleft = !backleft ? (true) : (false);
		       		case 3: backright = !backright ? (true) : (false);
		   		}
		    	SetVehicleParamsCarWindows(vod, driver, passenger, backleft, backright);
		    	callcmd::window(playerid);
		    	return true;
			}
		case 9643:
		    {
		    	if(!response) return RemoveFromVehicle(playerid);
		    	new arid = GetArendCarID(GetPlayerVehicleID(playerid));
		        if( arid != -1 )
		        {
		        	if(GetPVarInt(playerid, "ArendKey") == -1)
					{
			            if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
			            {
					        if(PlayerInfo[playerid][pCash] >= ArendInfo[arid][aCost])
					        {
					            SetPVarInt(playerid, "ArendKey", arid);
					            PlayerInfo[playerid][pCash] -= ArendInfo[arid][aCost];
					            ArendInfo[arid][aPlayerID] = playerid;
					            SendClientMessage(playerid, 0xFFFFFFFF, "You have successfully rented this vehicle");
					            ShowPlayerDialog(playerid, 0, 0, "You have successfully rented a vehicle", "{FFFFFF}List of available commands:\n\n{9ACD32}/lock 2{FFFFFF} - Close/Open rented vehicle\n{9ACD32}/unrent{FFFFFF} - Refuse rental.\n\n{AFAFAF}If you move 2 km away from the vehicle, the contract is automatically terminated.", "Close", "");
					        }
							else
							{
							    SendClientMessage(playerid, 0xAFAFAFFF, "You don't have enough money");
							    RemoveFromVehicle(playerid);
							}
						}
						else
						{
						    SendClientMessage(playerid, 0xAFAFAFFF, "This vehicle is already rented");
						    RemoveFromVehicle(playerid);
						}
					}
					else
					{
						SendClientMessage(playerid,0xAFAFAFFF,"Are you already renting a vehicle?");
						RemoveFromVehicle(playerid);
					}
				}
		        return 1;
		    }
        case 3245:
            {
                if(!response) return ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Banking services","{ffffff}[1] Account management\n[2] Transfer to business account\n[3] House Tax\n[4] Pick up money for the house\n[5] Order business products\n[6] Buy Gold Limited\n[7] Sell Gold Limited", "Choice", "Close");
                switch(listitem)
                {
                    case 0:
                    {
                        new list[300];
                        format(stringer1, sizeof(stringer1), "{4F94CD}[1] Master account\n"), strcat(list, stringer1);
                        for(new i;i < _PLAYERBANK[playerid];i++)
                        {
                            format(stringer1, sizeof(stringer1), "%i. %s � #%i\n",i+2, _INFONAME[playerid][i], _INFO[playerid][NUMBER][i]), strcat(list, stringer1);
                        }
                        ShowPlayerDialog(playerid, 3246,DIALOG_STYLE_LIST,"{EEEE00}Your bills",list, "Operations", "Back");
                    }
                    case 1: {
                        if(_PLAYERBANK[playerid] >= 3) {
                            ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management", "[1] My accounts\n[2] Open a new account", "Select", "Back");
					        return SendClientMessage(playerid,0xAFAFAFFF,"Unfortunately, no more than 3 accounts can be registered for one name..");
					    }
					    else return ShowPlayerDialog(playerid,3247,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a name for the new account.\nMaximum length 20 characters:","Next","Back");
				    }
                }
            }
        case 3246:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management", "[1] My accounts\n[2] Open a new account", "Select", "Back");
                switch(listitem)
                {
                    case 0: ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operations history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
                    default:
                    {
                        SetPVarInt(playerid, "_banklogin",listitem-1);
                        ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN-code {FFFFFF}accounts:","Introduce","Cancle");
                    }
                }
            }
        case 3256:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management","[1] My accounts\n[2] Open a new account", "Select", "Back");
                switch(listitem)
				{
				    case 0:
                    {
                        format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_LOGBANK"` WHERE `number` = '%d' ORDER BY `"TABLE_LOGBANK"`.`id` DESC LIMIT 10", PlayerInfo[playerid][pID]);
	  				    return mysql_tquery(connects, mysql_query_, "Logs", "iii", playerid, 1, 0);
                    }
				    case 1:
					{
					    format(stringer1,sizeof(stringer1), "Your account balance: %s Money\nEnter the amount you need", formatInt(PlayerInfo[playerid][pBank]));
						return ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT,"Withdrawal from the account",stringer1,"Next","Back");
					}
					case 2:
					{
						format(stringer,sizeof(stringer), "Your account balance: %s Money\nEnter the amount you need", formatInt(PlayerInfo[playerid][pBank]));
						return ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT,"To deposit",stringer,"Next","Back");
					}
					case 3:
					{
						format(stringer, sizeof(stringer),"{FFFFFF}____________________________________________\n\nAccount number:\t\t{2ADA4A}Without a number\n{FFFFFF}Name:\t{4F94CD}'Master account'\n{FFFFFF}Balance:\t\t%s\n\
                        ____________________________________________",
                        formatInt(PlayerInfo[playerid][pBank]));
                        return ShowPlayerDialog(playerid,8817,DIALOG_STYLE_MSGBOX,"{4F94CD}Information", stringer,"Return","");
					}
					case 4:
					{
						format(stringer,sizeof(stringer), "On your phone account: %d Money\nEnter the amount you want to put on your phone",PlayerInfo[playerid][pMobile]);
					    return ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"Mob account phone",stringer,"Next","Back");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pPayDayHad] < 3) return SendClientMessage(playerid, COLOR_GREY, "The transfer function is available from 2 played hours.");
						return ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter the player's ID or name and the Money amount separated by a space\n\nExample: 46 15761", "Accept", "Back");
					}
				}
                return true;
            }
        case 3247:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management","[1] My accounts\n[2] Open a new account", "Select", "Back");
                if(strlen(inputtext) < 1 || strlen(inputtext) > 20 || !strlen(inputtext))
                {
                    SendClientMessage(playerid, COLOR_GREY, "The number of characters must not be less than 1 and more than 20!");
                    return ShowPlayerDialog(playerid,3247,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a name for the new account.\n{4F94CD}Maximum length 20 characters:","Next","Cancle");
                }
                TOTALBANK++;
                strmid(_INFONAME[playerid][_PLAYERBANK[playerid]], inputtext, 0, strlen(inputtext), 20);
                strmid(_INFO[playerid][OWNER][_PLAYERBANK[playerid]], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 20);
                _INFO[playerid][NUMBER][_PLAYERBANK[playerid]] = 1000+TOTALBANK;
                _INFO[playerid][ID][_PLAYERBANK[playerid]] = TOTALBANK;
                _INFO[playerid][PASSWORD][_PLAYERBANK[playerid]] = 0000;
                _INFO[playerid][BALANCE][_PLAYERBANK[playerid]] = 0;
                mysql_format(connects,mysql_query_,sizeof(mysql_query_),"INSERT INTO `"TABLE_BANK"` (`account`,`name`,`number`,`owner`,`balance`,`password`) VALUES ('%i','%e','%i','%e','0','0000')", PlayerInfo[playerid][pID],
				_INFONAME[playerid][_PLAYERBANK[playerid]], _INFO[playerid][NUMBER][_PLAYERBANK[playerid]], PlayerInfo[playerid][pNames]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                _PLAYERBANK[playerid]++;
                ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,"{EEEE00}Account created",
                "{FFFFFF}You have created a new bank account.\n\nTo access it use {4F94CD}PIN code 0000. {FFFFFF}After logging in\n\
                we strongly recommend changing it to a more complex one.\n\
                This will help protect your account from unauthorized access..","Ready","");
                return true;
            }
        case 3257:
            {
                if(!response) return DialogBank(playerid);
                if(strlen(inputtext) < 1 || strlen(inputtext) > 20 || !strlen(inputtext))
                {
                    SendClientMessage(playerid, COLOR_GREY, "The number of characters should not be less than 1 or more 20!");
                    return ShowPlayerDialog(playerid,3257,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a new name for the account.\n{4F94CD}Maximum length 20 characters:","Next","Back");
                }
                strmid(_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], inputtext, 0, strlen(inputtext), 20);
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `name` = '%e' WHERE `number` = '%i'",
                _INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                SendMes(playerid, COLOR_GREY, "New account name #%d: {EEEE00}%s", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")]);
                return DialogBank(playerid);
            }
        case 3258:
            {
                if(!response) return DialogBank(playerid);
                new price;
		    	if(sscanf(inputtext, "i", price) || strlen(inputtext) != 4) {
                    SendClientMessage(playerid, COLOR_GREY, "PIN must be 4 digits!");
                    return ShowPlayerDialog(playerid,3258,DIALOG_STYLE_INPUT,"{EEEE00}Change PIN","{FFFFFF}Enter a new PIN.\n{4F94CD}PIN must be 4 digits:","Next","Back");
                }
                _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] = price;
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `password` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                SendMes(playerid, COLOR_GREY, "Your new account PIN #%d: {EEEE00}%d", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")]);
                return DialogBank(playerid);
            }
        case 3248:
            {
                if(!response) return true;
                switch(listitem)
                {
                    case 0:
                    {
                        format(stringer, sizeof(stringer),"{FFFFFF}____________________________________________\n\nAccount number:\t\t{2ADA4A}%i\n{FFFFFF}Name:\t{4F94CD}'%s'\n{FFFFFF}Balance:\t\t%i$\n\
                        ____________________________________________",
                        _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")],
                        _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]);
                        ShowPlayerDialog(playerid,3250,DIALOG_STYLE_MSGBOX,"{4F94CD}Information",stringer,"Return","");
                    }
                    case 1:
                    {
                        format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_LOGBANK"` WHERE `number` = '%i' ORDER BY `"TABLE_LOGBANK"`.`id` DESC LIMIT 10", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
	  				    return mysql_tquery(connects, mysql_query_, "Logs", "iii", playerid, 1, 0);
                    }
                    case 2: ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:","Withdraw","Back");
                    case 3: ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:","Deposit","Back");
                    case 4: ShowPlayerDialog(playerid,3253,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}�enter the account number to which\nyou want to transfer funds:","Next","Back");
                    case 5: ShowPlayerDialog(playerid,3257,DIALOG_STYLE_INPUT,"{EEEE00}Rename account","{FFFFFF}Enter a new name for the account.\nMaximum length 20 characters:","Next","Back");
                    case 6: ShowPlayerDialog(playerid,3258,DIALOG_STYLE_INPUT,"{EEEE00}Change PIN","{FFFFFF}Enter a new PIN.\nPIN must be 4 digits:","Next","Back");
                }
            }
        case 3249:
            {
                if(!response) return 1;
                if(strlen(inputtext) < 4 || strlen(inputtext) > 8 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:","Introduce","Cancle");
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0)
                {
                    if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0 && strval(inputtext) == 0000) return DialogBank(playerid);
                    else ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:\n{FF0000}Account password is incorrect!","Introduce","Cancle");
                }
                else
                {
                    if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == strval(inputtext)) return DialogBank(playerid);
                    else ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:\n{FF0000}The account password is incorrect!","Introduce","Cancle");
                }
            }
        case 3250: if(response) return DialogBank(playerid);
        case 3251:
            {
                if(!response) return DialogBank(playerid);
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:","Withdraw","Back");
                if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) return ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:\n{FF0000}On your account Insufficient funds!","Withdraw","Back");
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] -= strval(inputtext) , GiveMoney(playerid, strval(inputtext));
                SendMes(playerid, COLOR_WHITE, "{FFCE05}'%s' has been withdrawn from your account %s",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], formatInt(strval(inputtext)));
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 1, strval(inputtext), 0, PlayerInfo[playerid][pNames]); // ���
                DialogBank(playerid);
                return 1;
            }
        case 3252:
            {
                if(!response) return DialogBank(playerid);
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:","Deposit","Back");
                if(PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:\n{FF0000}You have Insufficient funds on hand!","Deposit","Back");
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] += strval(inputtext) , PlayerInfo[playerid][pCash] -= strval(inputtext);
                SendMes(playerid, COLOR_WHITE, "{2ADA4A}Your account '%s' has been replenished by %s",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], formatInt(strval(inputtext)));
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 0, strval(inputtext), 0, PlayerInfo[playerid][pNames]); // ���
                DialogBank(playerid);
                return 1;
            }
        case 3253:
            {
                if(!response) return DialogBank(playerid);
                if(strlen(inputtext) < 4 || strlen(inputtext) > 5 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3253,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}�enter the account number to which\nyou want to transfer funds:","Next","Back");
                mysql_format(connects,mysql_query_,sizeof(mysql_query_),"SELECT `owner`, `balance` FROM `"TABLE_BANK"` WHERE `number` = '%i' LIMIT 1", strval(inputtext));
                mysql_function_query(connects,mysql_query_,sizeof(mysql_query_), "CheckNumber", "ii", playerid, strval(inputtext));
                return 1;
            }
        case 3254:
            {
                if(!response)
                {
                    DeletePVar(playerid, "_banknumber");
                    _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                    _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                    return DialogBank(playerid);
                }
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3254,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF} Enter the amount of money you want to transfer to the account you entered:","Next","Back");
                if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) return ShowPlayerDialog(playerid,3254,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}Enter the amount of money you\nwant to transfer to the account you entered:\n{FF0000}Your account does not have enough funds for the transfer!","Next","Back");
                format(stringer, sizeof(stringer),"{FFFFFF}You are about to transfer {2ADA4A}%s {FFFFFF} to another character's account.\n\n\
                {4F94CD}Information About the Transfer:\n\n\
                {FFFFFF}Receiver name: {4F94CD}%s\n\
                {FFFFFF}Account number: {4F94CD}%i\n\n\
                You confirm the transfer of funds?",formatInt(strval(inputtext)),
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")], GetPVarInt(playerid, "_banknumber"));
                ShowPlayerDialog(playerid,3255,DIALOG_STYLE_MSGBOX,"{4F94CD}Transfer of funds",stringer,"Accept","Cancle");
                SetPVarInt(playerid, "_banksumma",strval(inputtext));
                return 1;
            }
        case 3255:
            {
                if(!response)
                {
                    DeletePVar(playerid, "_banknumber");
                    DeletePVar(playerid, "_banksumma");
                    _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                    _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                    return DialogBank(playerid);
                }
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")]+GetPVarInt(playerid, "_banksumma"), GetPVarInt(playerid, "_banknumber"));
                mysql_function_query(connects, mysql_query_, false, "", "");
                new _playerid = GetPlayerID(_INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")]);
                if(IsPlayerConnected(_playerid))
                {
                    SendMes(_playerid, COLOR_GREY, "{2ADA4A}A transfer in the amount of %s was made to your account. Sender: %s", formatInt(GetPVarInt(playerid, "_banksumma")), PlayerInfo[playerid][pNames]);
                    for(new i;i < _PLAYERBANK[_playerid];i++)
                    {
                        if(_INFO[_playerid][NUMBER][i] != GetPVarInt(playerid, "_banknumber")) continue;
                        _INFO[_playerid][BALANCE][i] += GetPVarInt(playerid, "_banksumma");
                    }
                }
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] -= GetPVarInt(playerid, "_banksumma");
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                new year,month,day,hour,minuite;
                getdate(year, month, day), gettime(hour,minuite);
                new mtext[20];
                switch(month)
                {
                    case 1: mtext = "January";
                    case 2: mtext = "February";
                    case 3: mtext = "March";
                    case 4: mtext = "April";
                    case 5: mtext = "May";
                    case 6: mtext = "June";
                    case 7: mtext = "July";
                    case 8: mtext = "August";
                    case 9: mtext = "September";
                    case 10: mtext = "October";
                    case 11: mtext = "November";
                    case 12: mtext = "December";
                }
                if (minuite < 10)    format(stringer, sizeof(stringer),"{FFFFFF}Your transfer has been successfully sent to the recipient.\n\nRecipient: {4F94CD}%s\n\
                {FFFFFF}Bank account number: {4F94CD}%i\n{FFFFFF}Transfer amount: {2ADA4A}%s\n\n{FFFFFF}Date and time of transfer: {2ADA4A}%i %s %i �.\t%i:0%i",
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")],GetPVarInt(playerid, "_banknumber"),formatInt(GetPVarInt(playerid, "_banksumma")),day,mtext,year,hour,minuite);
                else format(stringer, sizeof(stringer),"{FFFFFF}Your transfer has been successfully sent to the recipient.\n\nRecipient: {4F94CD}%s\n\
                {FFFFFF}Bank account number: {4F94CD}%i\n{FFFFFF}Transfer amount: {2ADA4A}%s\n\n{FFFFFF}Date and time of transfer: {2ADA4A}%i %s %i �.\t%i:%i",
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")],GetPVarInt(playerid, "_banknumber"),formatInt(GetPVarInt(playerid, "_banksumma")),day,mtext,year,hour,minuite);
                ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,"{4F94CD}Money transaction",stringer,"Ready","");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 2, GetPVarInt(playerid, "_banksumma"), GetPVarInt(playerid, "_banknumber"), _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")]); // ���
                DeletePVar(playerid, "_banknumber");
                DeletePVar(playerid, "_banksumma");
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                return DialogBank(playerid);
            }
		case 1001:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: ShowPlayerDialog(playerid, 20011, DIALOG_STYLE_LIST, "Adminstrators Commands", "- 1 Level\n- 2 Level\n- 3 Level\n- 4 Level\n- 5 Level\n- 6 Level\n- 7 Level\n- 8 Level\n- 9 Level\n- 10 Level\n- 11 Level", "Select", "Menu");
					case 1: ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Teleportation Menu", "Admin Zone\n{FFCC00}activity >>\nOrganizations bases >>{FFFFFF}\nVinewood\nSan Fierro Center\nLas Venturas Center\nFBI\nMovers work\nGhetto Center\nDriving school\nForest\nBus station-2\nCity Hall\nSign Near City Hall\nZone 51 checkpoint\nCasino Four Dragons\nCasino Caligulas\nAmmo LS\nAircraft carrier parking\nArmy area 51\nCar park\nRace", "Select", "Cancle");
					case 2: ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "Choose an action", "[0] Sell ??all houses\n[1] Set home interior\n[2] Distribute all houses by class\n[3] Distribute by interiors\n[4] Clean houses for $ 0\n[5] Distribute the price of houses\n[6] Sell All Owned Business!", "Select", "Menu");
					case 3: if(PlayerInfo[playerid][pAlcoInvenxua] >= 3) ShowPlayerDialog(playerid, 6050, DIALOG_STYLE_LIST, "Choose an action", "[0] Clear chat\n[1] To get a job\n[2] Check faction warehouses\n[3] Set the weather\n[4] Set time of day", "Select", "Menu");
					case 4: ShowPlayerDialog(playerid, 6019, DIALOG_STYLE_LIST, "Choose an action", "{7FB151}[1] Save all files\n{FFFFFF}[2] Save homes and businesses\n{FFFFFF}[3] Enable PayDay\n{FFFFFF}[4] Optimize graffiti\n{FFFFFF}[4] Anti-cheat: setting", "Select", "Menu");
					}
				}
			}
		case 589:
			{
				if(!response) return true;
				SetPVarInt(playerid, "DrugsMenuDialog", listitem);
				format(stringer, sizeof stringer, "%s: %d Gr.", Drugs[listitem+1][d_name], PlayerInfo[playerid][p_drugs][listitem]);
				return ShowPlayerDialog(playerid, 590, DIALOG_STYLE_LIST, stringer, "[1] Use\n[2] Transfer\n[3] Throw away", "Select","Go out");
			}
		case 590:
			{
				if(!response) return true;
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog");
				switch(listitem) {
					case 0 : { // ������������
						OnPlayerUseDrug(playerid, itemID, 1);
					}
					case 1 : { // ��������
						if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
						format(stringer1, sizeof stringer1, "Hand over %s", Drugs[GetPVarInt(playerid, "DrugsMenuDialog")+1][d_name]);
						ShowPlayerDialog(playerid, 591, DIALOG_STYLE_INPUT, stringer1, "\nEnter the number of grams\n", "Select", "Go out");
					}
					case 2 : { // ���������
						if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
						format(stringer1, sizeof stringer1, "Throw away %s", Drugs[itemID+1][d_name]);
						ShowPlayerDialog(playerid, 593, DIALOG_STYLE_INPUT, stringer1, "Enter the amount you want to throw away", "Select","Go out");
					}
				}
				return true;
			}
		case 591:
			{
				if(!response) return callcmd::drugs(playerid, "");
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog"), level;
				if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
				format(stringer1, sizeof stringer1, "Hand over %s", Drugs[itemID+1][d_name]);
				if(!strlen(inputtext)) {
					ShowPlayerDialog(playerid, 591, DIALOG_STYLE_INPUT, stringer1, "\nEnter the number of grams\n", "Select", "Go out");
					return true;
				}
				level = strval(inputtext);
				if(level < 0 || level > PlayerInfo[playerid][p_drugs][itemID]) {
					format(stringer1, sizeof stringer1, "Quantity from 1 to %d!", PlayerInfo[playerid][p_drugs][itemID]);
					SendClientMessage(playerid, COLOR_WHITE, stringer1);
					return true;
				}
				SetPVarInt(playerid, "TransferDrugsQuantity", level);
				ShowPlayerDialog(playerid, 592, DIALOG_STYLE_INPUT, stringer1, "\nEnter your player ID\n", "Select", "Go out");
		    }
        case 592:
        	{
        		if(!response) return callcmd::drugs(playerid, "");
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog"), user;
				if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
				format(stringer1, sizeof stringer1, "Hand over %s", Drugs[itemID+1][d_name]);
				if(!strlen(inputtext)) {
					ShowPlayerDialog(playerid, 592, DIALOG_STYLE_INPUT, stringer1, "\nEnter your player ID\n", "Select", "Go out");
					return true;
				}
				user = strval(inputtext);
				if(!IsPlayerConnected(user) || user == INVALID_PLAYER_ID || user == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	            if(!ProxDetectorS(3.0, playerid, user)) return SendClientMessage(playerid, COLOR_GREY, "This player is not near you !");
				if(PlayerInfo[user][p_drugs][itemID] >= 200) return SendClientMessage(playerid, COLOR_WHITE, " Player has no space, maximum quantity 200 grams!");
				TransferDrugsPlayer(playerid, user, itemID, GetPVarInt(playerid, "TransferDrugsQuantity"));
			}
	    case 593:
	    	{
	    		if(!response) return true;
				new itemID = GetPVarInt(playerid,"DrugsMenuDialog");
				if(!strlen(inputtext)) {
					format(stringer1, sizeof stringer1, "Throw away %s", Drugs[itemID+1][d_name]);
					ShowPlayerDialog(playerid, 593, DIALOG_STYLE_INPUT, stringer1, "Enter the amount you want to throw away", "Select","Go out");
					return true;
        		}
				DropDrugPlayer(playerid, itemID, strval(inputtext));
			}
		case 594:
			{
				if(!response) return true;
				switch(listitem) {
					case 0 : {
						new shovel = GetPlayerWeapon(playerid);
						if(shovel != 6) return SendClientMessage(playerid, COLOR_WHITE, "You don't have a shovel!");

						if(PlayerInfo[playerid][p_drugs][0] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "You don't have any seeds!");
						if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "There is too little light in the room ;(");

						new o = FreeSlotForPlant();
						if(o == 0) return SendClientMessage(playerid, COLOR_WHITE, " There is a maximum number of bushes on the server!");

						PlayerInfo[playerid][p_drugs][0]--;

						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						PlantInfo[o][plant_status] = 1;
						PlantInfo[o][plant_pos][0] = pos[0];
						PlantInfo[o][plant_pos][1] = pos[1];
						PlantInfo[o][plant_pos][2] = pos[2];
						PlantInfo[o][plant_int] = GetPlayerInterior(playerid);
						PlantInfo[o][plant_vw] = GetPlayerVirtualWorld(playerid);
						PlantInfo[o][plant_prog] = 1;
						PlantInfo[o][plant_owner] = PlayerInfo[playerid][pID];
						PlantInfo[o][plant_obj_id] = CreateDynamicObject(19473, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2]-1.2, 0.0, 0.0, 0.0, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 150);
						PlantInfo[o][plant_3DText] = CreateDynamic3DTextLabel("The bush is not yet ripe", COLOR_WHITE, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 10.0+1.0);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s digs up the ground and plants something.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						CreatePlant(o);
					}
					case 1 : {
						new o = -1;
						for(new i = 0; i < MAX_PLANTS; i++) {
							if(PlantInfo[i][plant_status] == 2) {
								if(IsPlayerInRangeOfPoint(playerid, 2.0, PlantInfo[i][plant_pos][0], PlantInfo[i][plant_pos][1], PlantInfo[i][plant_pos][2])) {
									o = i;
								}
							}
						}
						if(o == -1) return SendClientMessage(playerid, COLOR_WHITE, " There is no ripe bush near you!");

						new randrug = 2 + random(3);
						if(PlayerInfo[playerid][p_drugs][6] >= 500) return SendClientMessage(playerid, COLOR_WHITE, " There is no space in your slot!");
						PlayerInfo[playerid][p_drugs][6] += randrug;
						PlantInfo[o][plant_status] = 0;
						DestroyDynamicObject(PlantInfo[o][plant_obj_id]);
						DestroyDynamic3DTextLabel(PlantInfo[o][plant_3DText]);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s plucks a bush and reaps the harvest.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						DeletePlants(o);
					}
					case 2 : {
						new o = -1;
						for(new i = 0; i < MAX_PLANTS; i++) {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, PlantInfo[i][plant_pos][0], PlantInfo[i][plant_pos][1], PlantInfo[i][plant_pos][2])) {
								o = i;
							}
						}
						if(o == -1) return SendClientMessage(playerid, COLOR_WHITE, "* There is no bush near you!");
						PlantInfo[o][plant_status] = 0;
						DestroyDynamicObject(PlantInfo[o][plant_obj_id]);
						DestroyDynamic3DTextLabel(PlantInfo[o][plant_3DText]);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s tramples a bush.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						DeletePlants(o);
					}
				}
			}
		case 5912: {
			if(!response) return true;
			switch(listitem) {
				case 0: {//�������� ��������
					new dialog[300];
					format(dialog, sizeof(dialog), "[1] %s\n[2] %s\n[3] %s", ServerName[0], ServerName[1], ServerName[2]);
					ShowPlayerDialog(playerid, 5913, DIALOG_STYLE_LIST, "HostName's", dialog, "Change", "Cancle");
				}
				case 1: {//��������/���������
					new dialog[300];
					format(dialog, sizeof(dialog), "[1] %s\n[2] %s\n[3] %s", ServerName[0], ServerName[1], ServerName[2]);
					ShowPlayerDialog(playerid, 5915, DIALOG_STYLE_LIST, "HostName's", dialog, "On/Off", "Cancle");
				}
				case 2: {//�����
					new query[500];
					ServerName[0] = "hostname [ENG] New York RolePlay | Advanced VIP System ", NameEnabled[0] = 1;
					ServerName[1] = "hostname [ENG] New York RolePlay | Gangs/Factions/Jobs ", NameEnabled[1] = 1;
					ServerName[2] = "hostname [ENG] New York RolePlay | Payday Boost x4 ", NameEnabled[2] = 1;
					format(query, sizeof(query), "UPDATE `hostnames` SET `one_name` = '%s', `two_name` = '%s', `three_name` = '%s', `one_enbl` = '1', `two_enbl` = '1', `three_enbl` = '1'", ServerName[0], ServerName[1], ServerName[2]);
					mysql_function_query(connects, query, false, "", "");
					SendClientMessage(playerid, -1, "Successfully reset the server name to Default!");
				}
			}
			return true;
		}
		case 5913: {
			if(!response) return true;
			switch(listitem) {
				case 0: SetPVarInt(playerid, "ItemL", 1);
				case 1: SetPVarInt(playerid, "ItemL", 2);
				case 2: SetPVarInt(playerid, "ItemL", 3);
			}
			ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			return true;
		}
		case 5914: {
			if(!response) return DeletePVar(playerid, "ItemL");
			new host[64];
			if(sscanf(inputtext, "s[64]", host)) return ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			if(strlen(host) < 15) return ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			new query[144];
			sscanf(host, "s[64]", ServerName[GetPVarInt(playerid, "ItemL") - 1]);
			switch(GetPVarInt(playerid, "ItemL") - 1) {
				case 0: format(query, sizeof(query), "UPDATE `hostnames` SET `one_name` = '%s'", ServerName[0]);
				case 1: format(query, sizeof(query), "UPDATE `hostnames` SET `two_name` = '%s'", ServerName[1]);
				case 2: format(query, sizeof(query), "UPDATE `hostnames` SET `three_name` = '%s'", ServerName[2]);
			}
			mysql_function_query(connects, query, false, "", "");
			DeletePVar(playerid, "ItemL");
			SendClientMessage(playerid, -1, "Name saved successfully!");
			return true;
		}
		case 5915: {
			if(!response) return true;
			if(NameEnabled[listitem] == 1) NameEnabled[listitem] = 0, SendClientMessage(playerid, -1, "Turned off!");
			else NameEnabled[listitem] = 1, SendClientMessage(playerid, -1, "turned on!");
			new query[144];
			format(query, sizeof(query), "UPDATE `hostnames` SET `one_enbl` = '%d', `two_enbl` = '%d', `three_enbl` = '%d'", NameEnabled[0], NameEnabled[1], NameEnabled[2]);
			mysql_function_query(connects, query, false, "", "");
			return true;
		}
		case 7000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SendClientMessage(playerid,0x6495EDFF,"<1> /pm | /c");
					case 1: SendClientMessage(playerid,0x6495EDFF,"<2> /pm | /c | /gg");
					case 2: SendClientMessage(playerid,0x6495EDFF,"<3> /pm | /c | /gg | /togphone");
					case 3: SendClientMessage(playerid,0x6495EDFF,"<4> /pm | /c | /gg | /togphone | /rmute");
					case 4: SendClientMessage(playerid,0x6495EDFF,"<5> /pm | /c | /gg | /togphone | /rmute | /mute");
					case 5: SendClientMessage(playerid,0x6495EDFF,"<6> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist");
					case 6: SendClientMessage(playerid,0x6495EDFF,"<7> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist | /hcheck");
					case 7: SendClientMessage(playerid,0x6495EDFF,"<8> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist | /hcheck | /offhelper | /sethelper");
					}
				}
				return true;
			}
		case 245:
			{
				if(!response) return true;
				switch(listitem)
				{
				case 0: PlayAudioStreamForPlayer(playerid, "http://g.top4top.io/m_2919cd7mp1.mp3)");
				case 1: PlayAudioStreamForPlayer(playerid, "http://k.top4top.io/m_2928g55ej1.mp3");
				case 2: PlayAudioStreamForPlayer(playerid, "http://a.top4top.io/m_292869ccw1.mp3");
				case 3: PlayAudioStreamForPlayer(playerid, "http://c.top4top.io/m_2970lrbrt1.mp3");
				case 4: PlayAudioStreamForPlayer(playerid, "http://k.top4top.io/m_2970fnklp1.mp3");
				case 5: PlayAudioStreamForPlayer(playerid, "http://e.top4top.io/m_29282d8wr1.mp3");
				case 6: PlayAudioStreamForPlayer(playerid, "http://e.top4top.io/m_2928ha8p81.mp3");
				}
				SetPlayerAttachedObject(playerid, 3, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
				SendClientMessage(playerid, -1, "{66CC00}Online radio is switched on");
				SendClientMessage(playerid, -1, "{66CC00}Use /head to remove or put on headphones");
				playerradio[playerid] = 1;
			}
		case 9150:
			{
		    	if(!response) return true;
		    	switch(listitem)
		    	{
		        	case 0: format(addbizz[playerid],256,"-2240.7820,137.2150,1035.4141,-2237.0664,130.2340,1035.4141,6,0,1");
		       	 	case 1: format(addbizz[playerid],256,"0.0,0.0,0.0,0.0,0.0,0.0,0,42,2");
		        	case 2: format(addbizz[playerid],256,"372.3061,-133.5236,1001.4922,374.7469,-119.3624,1001.4995,5,29,3");
		        	case 3: format(addbizz[playerid],256,"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,3");
		        	case 4: format(addbizz[playerid],256,"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
		        	case 5: format(addbizz[playerid],256,"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
		        	case 6: format(addbizz[playerid],256,"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
		        	case 7: format(addbizz[playerid],256,"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
		        	case 8: format(addbizz[playerid],256,"501.9752,-67.5652,998.7578,496.4381,-75.5758,998.7578,11,49,5");
		        	case 9: format(addbizz[playerid],256,"207.6152,-111.2655,1005.1328,207.5049,-100.3288,1005.2578,15,45,6");
		        	case 10: format(addbizz[playerid],256,"227.4678,-8.2005,1002.2109,210.2596,-8.2212,1005.2109,5,45,6");
		        	case 11: format(addbizz[playerid],256,"285.6278,-41.8042,1001.5156,295.8984,-38.5138,1001.5156,1,6,7");
		        	case 12: format(addbizz[playerid],256,"285.8170,-86.7527,1001.5229,295.6908,-80.8089,1001.5156,4,6,7");
		        	case 13: format(addbizz[playerid],256,"296.9726,-112.0702,1001.5156,287.2077,-106.3636,1001.5156,6,6,7");
		        	case 14: format(addbizz[playerid],256,"-401.7134,2227.2317,1801.0859,-398.3685,2229.9114,1800.10,1,7,9");
		    	}
		    	ShowPlayerDialog(playerid, 9151, 1, "IMPORTANT", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
			}
		case 9151:
			{
		    	if(!response) return true;
  				new price,name[32];
  				if(sscanf(inputtext,"p<,>is[32]",price,name)) return ShowPlayerDialog(playerid, 9151, 1, "Business", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
				if(price < 1) return ShowPlayerDialog(playerid, 9151, 1, "Business", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
				TOTALBIZZ++;
            	sscanf(addbizz[playerid],"p<,>ffffffiii",
            	BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
            	BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
				BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
		    	GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
            	strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), MAX_PLAYER_NAME);
            	BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
            	BizzInfo[TOTALBIZZ][bPrice] = price;
				BizzInfo[TOTALBIZZ][bEnter] = 100;
				BizzInfo[TOTALBIZZ][bTill] = 50;
				BizzInfo[TOTALBIZZ][bID] = TOTALBIZZ;
				BizzInfo[TOTALBIZZ][bMafia] = 0;
				if(BizzInfo[TOTALBIZZ][bType] > 2) BizzInfo[TOTALBIZZ][bIcon] = CreateDynamicMapIcon(BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], BizzInfo[TOTALBIZZ][bMIcon], 0,-1,-1,-1,200.0);
            	if(BizzInfo[TOTALBIZZ][bType] != 2 && BizzInfo[TOTALBIZZ][bType] != 8)
				{
			    	format(stringer, 100, "{ffff00}%s (# %i)\n{0eaa07}Business is for sale\nBusiness price: %d$", BizzInfo[TOTALBIZZ][bName], TOTALBIZZ, BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
			 		BizzInfo[TOTALBIZZ][bPickup] = CreatePickupAC(19132,1, BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
		 			BizzInfo[TOTALBIZZ][bPickupExit] = CreatePickupAC(19132, 1, BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bVirtual]);
                	if(BizzInfo[TOTALBIZZ][bType] == 1) {
						BizzInfo[TOTALBIZZ][bMenu] = CreatePickupAC(2663, 1, BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], BizzInfo[TOTALBIZZ][bVirtual]);
						CreateDynamic3DTextLabel("{0aa40d}List\ngoods",-1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],4.0);
					} else {
						BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicCP(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], 1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
					}
				}
				else
				{
			    	if(BizzInfo[TOTALBIZZ][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{0eaa07}Business is for sale\nBusiness price: %d$\n{FFFFFF}Price for 1 liter - {f9f906}%i$", BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bTill] / 3);
			    	else format(stringer, 90, "{0eaa07}Business is for sale\nBusiness price: %d$\nName: %s", BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
				}
				mysql_format(connects,mysql_query_, sizeof(mysql_query_), "INSERT INTO "TABLE_BIZZ" (`bType`, `bPrice`, `bEntrx`, `bEntry`, `bEntrz`, `bExitx`, `bExity`, `bExitz`, `bMenux`, `bMenuy`, `bMenuz`, `bInt`, `bVirtual`, `bMIcon`, `bName`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%f','%f','%f','%d','%d','%d','%e')",
				BizzInfo[TOTALBIZZ][bType],BizzInfo[TOTALBIZZ][bPrice],BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
				BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bMIcon],BizzInfo[TOTALBIZZ][bName]);
				mysql_function_query(connects, mysql_query_, false, "", "");
            	SendMes(playerid,COLOR_WHITE,"Business number %i created",TOTALBIZZ);
            	return SaveBizz(TOTALBIZZ);
			}
		case 9152:
			{
				if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	if(strcmp(BizzInfo[idx][bOwner],"None",true) != 0) return SendClientMessage(playerid,COLOR_GREY,"The business already has an owner!");
		    	PlayerInfo[playerid][pBank] -= BizzInfo[idx][bPrice];
				BizzInfo[idx][bBuyPrice] = BizzInfo[idx][bPrice];
				BizzInfo[idx][bTill] = 50;
				PlayerPlaySound(playerid, 31204, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "Congratulations! You bought a business");
				SendClientMessage(playerid, 0x66cc00ff, "{66cc00}Write {2c9cce}/business, {66cc00}to find out about the possibilities");
    			if(PlayerInfo[playerid][pQuest11] == 0)
       			{
      				PlayerInfo[playerid][pQuest11] = 1;
       				UpdatePlayerData(playerid, "pQuest11", PlayerInfo[playerid][pQuest11]);
    			}
				ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}New business", "{FFFFFF}You need to pay for the rent of the business at the nearest bank branch {dba002}(/gps)", "Ok", "");
				strmid(BizzInfo[idx][bOwner],PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), MAX_PLAYER_NAME);
				SaveBizz(idx);
				UpdateBizz(idx);
			}
		case 9122: {
			if(!response) return DeletePVar(playerid, "IdReport"); //
			new idx = GetPVarInt(playerid, "IdReport") - 1;
			switch(listitem) {
				case 0: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, I'm watching the player. Have a nice game on the. "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 1: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: No fouls were noted on the player. Good game. "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 2: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: The player was punished, thanks for the information. | Have a nice game "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 3: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, please don't Clutter The Reports. | Have a nice game "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 4: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Post Your Gameplay In Our Forum Get Some Rewards. - "PAGE_FORUM"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 5: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, You Can Boost Our Discord To Get Rewards "PAGE_SITE" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 6: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: To Report Open Ticket In Discord With Screenshot � "PAGE_SITE"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 7: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Our website � "PAGE_SITE" / IN CONTACT. � "PAGE_VK"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 8: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, you can file a complaint with the group in the cell. - "PAGE_FORUM"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 9: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: You Can Contact the Founders of the project in Discord "PAGE_SITE".", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 10: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Thank You For Playing On Our Server We Wish Plesant Game � "NAME_SERVER"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 11: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Refill the account on the Discord "PAGE_SITE" and buy in /mm > In addition", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
			}
			PlayerInfo[playerid][pRepAdm]++;
			SendClientMessage(idx, 0xff9945FF, stringer1);
			DeletePVar(idx, "RepUn"), DeletePVar(playerid, "IdReport");
			SCMAH(0xff9945FF, stringer1);
			return true;
		}
		case 9199: {
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			if(BizzInfo[idx][bType] == 2) format(stringer, 256, "[1] Business Information\n[2] Start business\n[3] Set a price for an item\n[4] Withdraw money from business\n[5] Sell business\n[6] Business advertising");
			else format(stringer, 256, "[1] Business Information\n[2] Start business\n[3] Set a price for an item\n[4] Set entry price\n[5] Withdraw money from business\n[6] Sell ??business\n[7] Business advertising");
			ShowPlayerDialog(playerid, 9153, 2, "Panel", stringer, "Select", "Cancle");
		}
		case 9153:
			{
		    	if(!response) return true;
		    	new i = GetPVarInt(playerid, "PlayerBizz");
				if(BizzInfo[i][bType] == 2) {
					switch(listitem)
					{
						case 0: BizzStats(playerid, i);
						case 1:
						{
							if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY,"The business is already open!");
							if(BizzInfo[i][bProduct] <= 50 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY,"There are no products in the business or no license!");
							BizzInfo[i][bLock] = 0;
							BizzInfo[i][bLockTime] = 0;
							SaveBizz(i);
							SendClientMessage(playerid, COLOR_LIGHTRED, "You started a business. Always keep an eye on the status of products and licenses");
							SendClientMessage(playerid, COLOR_LIGHTRED, "Otherwise, you may lose your business.");
						}
						case 2: ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
						case 3: ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
						case 4: ShowPlayerDialog(playerid, 9159, 0, "Sell business", "{ffffff}Do you want to sell your business?\n{AFAFAF}(to sell a business to another player enter /sellbiz [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the business back!", "Yes", "No");
						case 5: ShowPlayerDialog(playerid,5232,DIALOG_STYLE_MSGBOX,"{FFCC00}Business advertising","\n\n{FFFFFF} Advertising cost: {FFCC00}50.000${FFFFFF}\n- You can send an advertisement every 3 minutes.\n- Advertising text is entered by your hands.\n- People only see ads once!\n\nDo you really want to advertise your business?", "Accept", "Cancle");
					}
				} else {
					switch(listitem)
					{
						case 0: BizzStats(playerid, i);
						case 1:
						{
							if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY,"Business is already open!");
							if(BizzInfo[i][bProduct] <= 50 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY,"Business has no products or no license!");
							BizzInfo[i][bLock] = 0;
							BizzInfo[i][bLockTime] = 0;
							SaveBizz(i);
							SendClientMessage(playerid, COLOR_LIGHTRED, "You started a business. Always keep an eye on the status of products and licenses");
							SendClientMessage(playerid, COLOR_LIGHTRED, "Otherwise, you may lose your business.");
						}
						case 2: ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
						case 3:
						{
							ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
						}
						case 4: ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
						case 5: ShowPlayerDialog(playerid, 9159, 0, "Sell ??business", "{ffffff}Do you want to sell your business?\n{AFAFAF}(to sell a business to another player enter /sellbiz [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the business back!", "Yes", "No");
						case 6: ShowPlayerDialog(playerid,5232,DIALOG_STYLE_MSGBOX,"{FFCC00}Business Advertising ","\n\n{FFFFFF}Advertising cost: {FFCC00}50.000${FFFFFF}\n- You can send an advertisement every 3 minutes.\n- Advertising text is entered by your hands.\n- People only see ads once!\n\nDo you really want to advertise your business?", "Accept", "Cancle");
					}
				}
			}
		case 5232: {
			if(!response) return callcmd::business(playerid);
			if(GetPVarInt(playerid, #rekl_business))
			{
				if(!response) return DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
				if(PlayerInfo[playerid][pCash] < 50000) return SendClientMessage(playerid, -1, "You don't have 50.000$"), DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
				if(IsIpFound(inputtext)) return ShowPlayerDialog(playerid, 5232, DIALOG_STYLE_INPUT, "{FFCC00}Business advertising", "{FFFFFF}Please enter the text of the advertisement without using transliteration!\n- If your text contains insults or similar things, the advertisement will be canceled!", "Submit", "Cancle");
				new string[256], bizz = GetPVarInt(playerid, "PlayerBizz");
				format(string, 256, "{63CB00}[Business advertising: %s]: %s", BizzInfo[bizz][bName], inputtext);
				SendClientMessageToAll(COLOR_ORANGE, string);
				format(string, 144, "{63CB00}Sender: %s[%d]", PlayerInfo[playerid][pNames], playerid);
				SendClientMessageToAll(COLOR_ORANGE, string);
				PlayerInfo[playerid][pCash] -= 50000;
				SetPVarInt(playerid, #reklam_business, gettime()+180);
				return DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
			}
			if(GetPVarInt(playerid, #reklam_business) > gettime()) return callcmd::business(playerid), SendClientMessage(playerid, -1, "You have already advertised your business, the next advertisement can be submitted in 5 minutes!");
			return ShowPlayerDialog(playerid, 5232, DIALOG_STYLE_INPUT, "{FFCC00}Business advertising", "{FFFFFF}Please enter the ad text without using transliteration!\n- If your text contains insults or similar things, the advertisement will be canceled!", "Submit", "Cancle"), SetPVarInt(playerid, #rekl_business, true);
		}
		case 9156:
			{
		    	if(!response || !GetPlayerBizz(playerid)) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
				if(price < 1 || price > 10000000 || BizzInfo[i][bMoney] < price) return ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
				BizzInfo[i][bMoney]-=price;
				GiveMoney(playerid, price);
				SaveBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have withdrawn %s Money. Balance: %s Money", formatInt(price),formatInt(BizzInfo[i][bMoney]));
			}
		case 9159:
			{
		    	if(!response || !GetPlayerBizz(playerid)) return true;
				new i = GetPVarInt(playerid, "PlayerBizz");
				strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				BizzInfo[i][bLock] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "You sold your business.");
				SendClientMessage(playerid,COLOR_BLUE,"Half of the cost and proceeds are transferred to your bank account");
				GiveBank(playerid, (BizzInfo[i][bBuyPrice] / 2 + BizzInfo[i][bMoney]));
				BizzInfo[i][bBuyPrice] = 0;
				BizzInfo[i][bMoney] = 0;
				BizzInfo[i][bLic] = 0;
				BizzInfo[i][bEnter] = 100;
				BizzInfo[i][bTill] = 50;
				BizzInfo[i][bLockTime] = 0;
				BizzInfo[i][bProduct] = 0;
				SaveBizz(i);
				UpdateBizz(i);
				GameTextForPlayer(playerid,"The busines sold", 3000, 5);
			}
		case 9157:
			{
		    	if(!response) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
				if(price < 1 || price > 100) return ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
				BizzInfo[i][bTill] = price;
				SaveBizz(i);
				UpdateBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have set the price for the item: %i percent", price);
				return true;
			}
		case 9158:
			{
				if(!response) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
				if(price < 0 || price > 10000) return ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
				BizzInfo[i][bEnter] = price;
				SaveBizz(i);
				UpdateBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have set the entry price: %i Moneys", price);
				return true;
			}
		case 9291:
			{
		    	if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	if(strcmp(BizzInfo[idx][bOwner],"None",true) != 0 && (BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5))
		    	{
		        	if(PlayerInfo[playerid][pCash] < BizzInfo[idx][bEnter]) return SendClientMessage(playerid,COLOR_GREY,"You don't have enough money");
					PlayerInfo[playerid][pCash]-=BizzInfo[idx][bEnter];
					BizzInfo[idx][bMoney]+=BizzInfo[idx][bEnter];
					BizzPay[idx]+=BizzInfo[idx][bEnter];
				}
      			new Float:z;
			    SetPVarInt(playerid,"TIMEPICKUP",3);
			    SetPVarInt(playerid,"OLDPICKUP",BizzInfo[idx][bPickupExit]);
      			SetPPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
				SetPlayerInteriorEx(playerid,BizzInfo[idx][bInt]);
				SetPlayerVirtualWorldEx(playerid,BizzInfo[idx][bVirtual]);
				GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
			}
		case 9292:
			{
		    	if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	new Float:z;
			    SetPVarInt(playerid,"TIMEPICKUP",3);
			    SetPVarInt(playerid,"OLDPICKUP",BizzInfo[idx][bPickup]);
       	    	if(idx == 73)
       	    	{
 	    			if(AlhambraDJID == playerid) AlhambraDJID = INVALID_PLAYER_ID, SendClientMessage(playerid,COLOR_GREY,"You were a DJ and you left the club. The stand is free.");
			    	if(Music[playerid] == true)
				    {
			       		Music[playerid] = false;
				        SendClientMessage(playerid,COLOR_GREY,"[PlayList] Music turned off, you left the club.");
				        StopAudioStreamForPlayer(playerid);
				    }
        		}
		        else if(idx == 77)
		        {
			    	if(JizzyDJID == playerid) JizzyDJID = INVALID_PLAYER_ID, SendClientMessage(playerid,COLOR_GREY,"You were a DJ and you left the club. The stand is free.");
				    if(Music[playerid] == true)
				    {
        				Music[playerid] = false;
				        SendClientMessage(playerid,COLOR_GREY,"[PlayList] Music turned off, you left the club.");
				        StopAudioStreamForPlayer(playerid);
					}
     			}
      			SetPPos(playerid,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]);
				SetPlayerInteriorEx(playerid,0);
				SetPlayerVirtualWorldEx(playerid,0);
				GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
			}
		case 9231: {
		    	if(!response) return DeletePVar(playerid,"playerTarget");
				switch(listitem) {
			    	case 0: {
						if(!IsPlayerConnected(GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
						if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_RED, "Man is too far away!");
						new shltext[32];
						if(PlayerInfo[playerid][pGunLic]) { shltext = "There is"; } else { shltext = "No"; }
						SendClientMessage(GetPVarInt(playerid,"playerTarget"),COLOR_GREY, "-----------===[ PASSPORT ]===----------");
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Nickname: %s ",PlayerInfo[playerid][pNames]);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Age: %d  Telephone: %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pPnumber]);
						if(PlayerInfo[playerid][pFacePass] == 0)//��������� �������
						{
							SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: %s",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
							SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: %s",GetPlayerJobName(PlayerInfo[playerid][pJob]));
						}
						else if(PlayerInfo[playerid][pFacePass] == 1)//����������
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: Citizen");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 2)//FBI
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: FBI");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 3)//swat
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: S.W.A.T");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 4)//Administration of the President
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: Administration of the President");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Weapon permit: %s",shltext);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Crimes: %d",PlayerInfo[playerid][pKills]);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Obedience: %d",PlayerInfo[playerid][pZakonp]);
						if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pFacePass] == 0) SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_REDD, "Attention! This is a wanted man!");
						SendClientMessage(GetPVarInt(playerid,"playerTarget"),COLOR_GREY, "=============================");
						format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
						SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
						format(stringer1, sizeof(stringer1), "%s showed (a) his passport", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
			        	DeletePVar(playerid,"playerTarget");
			    	}
			    	case 1: {
						ShowPlayerDialog(playerid,9232,1,"Transferring money","{ffffff}�enter the amount you want to transfer:","Further","Close");
					}
					case 2: {
				    	if(PlayerCuffed[GetPVarInt(playerid,"playerTarget")] == 0) FIXES_ApplyAnimation(GetPVarInt(playerid,"playerTarget"),"GANGS", "hndshkfa",4.0, 0, 1, 1, 0, 0, 1);
				    	if(PlayerCuffed[playerid] == 0) FIXES_ApplyAnimation(playerid,"GANGS", "hndshkfa",4.0, 0, 1, 1, 0, 0, 1);
				    	format(stringer1,sizeof(stringer1),"%s said hello to %s",PlayerInfo[playerid][pNames],PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						DeletePVar(playerid,"playerTarget");
					}
					case 3: {
						format(stringer1,sizeof(stringer1),"%d",GetPVarInt(playerid,"playerTarget")), callcmd::present(playerid, stringer1);
						DeletePVar(playerid,"playerTarget");
					}
				}
			}
		case 9232: {
		    	if(!response) return 1;
		    	new price;
		    	if(sscanf(inputtext,"d",price)) return ShowPlayerDialog(playerid,9232,1,"Transferring money","{ffffff}�enter the amount you want to transfer:","Further","Close");
		    	if(price < 1 || price > 150000) return SendClientMessage(playerid, COLOR_GRAD1, "You cannot transfer less than 1 Money and more than 150000 Money.");
		    	if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You must stay in the game for another 2 hours (/mm - Statistics).");
		    	if(!IsPlayerConnected(GetPVarInt(playerid,"playerTarget"))) return true;
		    	if(GetPVarInt(playerid,"playerTarget") == INVALID_PLAYER_ID) return true;
		    	if(!ProxDetectorS(5.0, playerid, GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_GRAD1, "You're too far away.");
		    	if(PlayerInfo[playerid][pCash] < price) return true;
		    	GiveMoney(GetPVarInt(playerid,"playerTarget"), price);
		    	PlayerInfo[playerid][pCash] -= price;
		    	format(stringer1, sizeof(stringer1), "you passed %s[%i], %s Money.",PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames],GetPVarInt(playerid,"playerTarget"),formatInt(price));
		    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    	SendClientMessage(playerid, COLOR_GRAD1, stringer1);
		    	format(stringer1, sizeof(stringer1), "You received %s Money from %s[%i].",formatInt(price),PlayerInfo[playerid][pNames], playerid);
		    	SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_GRAD1, stringer1);
		    	PlayerPlaySound(GetPVarInt(playerid,"playerTarget"), 1052, 0.0, 0.0, 0.0);
		    	format(stringer1,sizeof(stringer1), "took out his wallet and handed over the money %s",PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
		    	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
			}
       case 1746:
	    	{
	        	if(!response) return true;
            	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 552 && ProductInfo[listitem+1][pType] != 2) return SendClientMessage(playerid,COLOR_GREY,"You cannot deliver groceries using this vehicle.!");
				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 440 && ProductInfo[listitem+1][pType] == 2) return SendClientMessage(playerid,COLOR_GREY,"You cannot deliver gasoline with this vehicle.!");
  		  		SetPVarInt(playerid, "ProductID", listitem+1);
  		  		format(stringer, 256, "{ffffff}Order number {8D8DFF}\t\t%i %s\n\n{ffffff}Ordered:\t\t{8D8DFF}%s\n{ffffff}Where:\t\t\t{8D8DFF}%s\n{ffffff}Quantity:\t\t{8D8DFF}%i\n{ffffff}Payment:\t\t{8D8DFF}%s{ffffff} Money",
				listitem+1, (!ProductInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Available)") : ("{FF6347}(Running)"), ProductInfo[listitem+1][pName], BizzInfo[ProductInfo[listitem+1][pBizzid]][bName],ProductInfo[listitem+1][pTill], formatInt(ProductInfo[listitem+1][pPrice]));
		    	return ShowPlayerDialog(playerid, 1747, 0, "Order", stringer, "Accept", "Back");
			}
		case 1747:
			{
		    	if(!response) { DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
				if(strcmp(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], PlayerInfo[playerid][pNames], true) == 0) { DeletePVar(playerid, "ProductID"); ProductList(playerid); return SendClientMessage(playerid, COLOR_GREY, "You can't complete your order!"); }
				if(ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] == true) { SendClientMessage(playerid, COLOR_GREY, "The order is already being fulfilled by someone!"); DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
				new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
				SendMes(playerid, TEAM_BLUE_COLOR, "You have accepted an order from %s. Go to the warehouse to load food/fuel. (/load)", ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
				GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
	    		DisablePlayerRaceCheckpoint(playerid);
	    		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = true;
				SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
  				return SendMes(playerid, COLOR_BLUE, "Marked on the map: %s. Distance: %.1f meters",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			}
		case 1202:
			{
		    	if(!response) return RemoveFromVehicle(playerid);
			    if(PlayerInfo[playerid][pCash] < 250) return SendClientMessage(playerid,COLOR_GREY,"You don't have enough money!"), RemoveFromVehicle(playerid);
	    		SetPVarInt(playerid,"JobVehicle",GetPlayerVehicleID(playerid));
		    	SendClientMessage(playerid,COLOR_WHITE,"You rented a car!");
		    	PlayerInfo[playerid][pCash]-=250;
		    	SendClientMessage(playerid,COLOR_WHITE,"Enter the command /plist to view orders!");
		   		SendClientMessage(playerid,COLOR_WHITE,"You can also take away products from the warehouse of movers/lumberjacks!");
				SendClientMessage(playerid,COLOR_BLUE,"Available commands: /plist, /load");
		   		return GameTextForPlayer(playerid,"~r~-$250", 5000, 1);
			}
		case 10:
			{
				if(!response) return MainMenuPl(playerid);
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT,"{FFD700}Report Message","{ffffff}Enter your report message in the text below.\n\n{63CB00}If you want to supply your player,\nSpecify its ID and reason.","Submit","Back");
				if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "You have a report mute!");
				if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "there is a time limit for sending a report, please wait.");
				SendMes(playerid,0x00cb00ff,"%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, (inputtext));
				format(stringer, sizeof(stringer), "%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, (inputtext));
				SCMAH(0x00cb00ff,stringer);
				strmid(RepInfo[playerid][Reptext], inputtext, 0, Reptext_SIZE, Reptext_SIZE);
				SetPVarInt(playerid,"RepUn",1);
				SendClientMessage(playerid, COLOR_WHITE, "Please wait, the admin will answar you soon.");
				SetPVarInt(playerid,"AntiFloodRep",gettime() + 10);
				return true;
			}
        case D_DUTY:
			{
		    	if(response)
		    	{
		        	switch(StartDuty[playerid])
		        	{
						case 0:
						{
					    	StartDuty[playerid] = 1;
					    	GiveWeapon(playerid, 41, 1000), SetPlayerHealthAC(playerid, 100), SetPlayerArmour(playerid, 100);
					    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "You started your working day");
						}
						case 1:
						{
					    	StartDuty[playerid] = 0;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "You have finished your working day");
						}
					}
				}
				else return true;
			}
		case D_DICE:
			{
	    		if(response)
	    		{
	        		if(DiceTable[playerid] != -1)
	        		{
		        		if(StartDice[DiceTable[playerid]] != 1)
		        		{
		            		if(ChooseBet[playerid] == 1)
		            		{
								GiveMoney(playerid, DiceTableInfo[DiceTable[playerid]][dBet]);
								DiceTableInfo[DiceTable[playerid]][dBank] -= DiceTableInfo[DiceTable[playerid]][dBet];
								format(stringer1, sizeof(stringer1), "%i$", DiceTableInfo[DiceTable[playerid]][dBank]);
								TextDrawSetString(DiceBankShow[DiceTable[playerid]], stringer1);
							}
						}
						OnPlayerExitDiceTable(playerid, DiceTable[playerid]);
					}
				}
				else return true;
			}
		case D_DICE+1:
			{
	    		if(response)
	    		{
	        		if(DiceTable[playerid] != -1)
	        		{
						OnPlayerExitDiceTable(playerid, DiceTable[playerid]);
					}
				}
				else return true;
			}
		case D_ROULE:
			{
	    		if(response)
	    		{
	        		new bet, tableid = RouleTable[playerid];
					if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
					if(StartRoule[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
					{
			    		new message[64], limit[2], dialog[128];
			    		switch(tableid)
			    		{
			        		case 0,4,9: limit[0] = 5000000, limit[1] = 10000000;
		        			case 1,5,8: limit[0] = 5000000, limit[1] = 10000000;
		        			case 2,6,11: limit[0] = 1000000, limit[1] = 5000000;
		        			case 3,7,10: limit[0] = 500000, limit[1] = 1000000;
			    		}
						format(message, sizeof(message), "Minimum amount %s Money, maximum- %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		format(dialog, sizeof(dialog), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount is %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		if(sscanf(inputtext, "d", bet)) return ShowPlayerDialog(playerid, D_ROULE, DIALOG_STYLE_INPUT, "Bid", dialog, "Next", "Cancle");
			   			if(bet < limit[0] || bet > limit[1]) return SendClientMessage(playerid, COLOR_SILVER, message);
						if(PlayerInfo[playerid][pCash] < bet) return SendClientMessage(playerid, COLOR_SILVER, "You don't have enough money");
						{
				  		    ChooseBet[playerid] = 1;
				  		    RouleBet[playerid] = bet;
				   		    PlayerInfo[playerid][pCash] -= bet;
				  		    DestroyObject(RouleChip[playerid]);
				   		    strmid(RouleNumber[playerid], GetRouleNumber(playerid), 0, strlen(GetRouleNumber(playerid)), sizeof(RouleNumber[]));
	               			TextDrawSetString(RouleNumberShow[tableid][RouleGamer[playerid]], RouleNumber[playerid]);
							format(stringer1, sizeof(stringer1), "~g~%d$", bet);
	               			TextDrawSetString(RouleBetShow[tableid][RouleGamer[playerid]], stringer1);
	               			SendClientMessage(playerid, 0x74A402AA, "Your bet has been accepted");
							switch(Casino[playerid])
							{
	   		                	case 1:
	 				        		{
					        			RouleChip[playerid] = CreateObject(1930, RouleTables[tableid][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[tableid][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 0.0, 0.0, 0.0);
					    			}
					    		case 2:
					    			{
					        			RouleChip[playerid] = CreateObject(1930, RouleTables[tableid][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[tableid][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 0.0, 0.0, 0.0);
					    			}
							}
						}
					}
				}
	   		    else return true;
			}
		case D_ROULE+1:
			{
	    		if(response)
	    		{
					if(RouleTable[playerid] != -1)
					{
			    		if(StartRoule[RouleTable[playerid]] != 1)
			    		{
                    		GiveMoney(playerid, RouleBet[playerid]);
			    		}
			    		OnPlayerExitRouleTable(playerid, RouleTable[playerid]);
					}
				}
				else return true;
			}
		case D_ROULE+2:
			{
	    		if(response)
	    		{
					if(RouleTable[playerid] != -1)
					{
			    		OnPlayerExitRouleTable(playerid, RouleTable[playerid]);
					}
	    		}
	    		else return true;
			}
 		case D_BLACKJACK:
			{
	    		if(response)
	    		{
		    		if(BlackJackTable[playerid] != -1)
					{
			    		new tableid = BlackJackTable[playerid];
			    		if(StartBlackJack[tableid] != 1)
			    		{
      		            	GiveMoney(playerid, BlackJackBet[playerid]);
			    		}
			    		OnPlayerExitBlackJackTable(playerid, tableid);
					}
				}
				else return true;
			}
		case D_BLACKJACK+1:
			{
				if(response)
				{
	    			if(BlackJackTable[playerid] != -1)
					{
			    		OnPlayerExitBlackJackTable(playerid, BlackJackTable[playerid]);
					}
				}
				else return true;
			}
		case D_BLACKJACK+2:
			{
	    		if(response)
	    		{
	        		new bet, tableid = BlackJackTable[playerid];
					if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
            		if(StartBlackJack[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
					{
			    		new message[64], limit[2], dialog[128];
			    		switch(BlackJackTable[playerid])
			    		{
			        		case 0,4,8: limit[0] = 1000000, limit[1] = 3000000;
			        		case 1,6,10: limit[0] = 1000000, limit[1] = 3000000;
			        		case 2,5,9: limit[0] = 500000, limit[1] = 1000000;
			        		case 3,7,11: limit[0] = 50000, limit[1] = 500000;
			    		}
			    		format(message, sizeof(message), "Minimum amount %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		format(dialog, sizeof(dialog), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount is %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
						if(sscanf(inputtext, "d", bet)) return ShowPlayerDialog(playerid, D_BLACKJACK+2, DIALOG_STYLE_INPUT, "Bid", dialog, "Next", "Cancle");
						if(bet < limit[0] || bet > limit[1]) return SendClientMessage(playerid, COLOR_SILVER, message);
						if(PlayerInfo[playerid][pCash] < bet) return SendClientMessage(playerid, COLOR_SILVER, "You don't have enough money");
						{
			    			ChooseBet[playerid] = 1;
				    		BlackJackBet[playerid] = bet;
				    		PlayerInfo[playerid][pCash] -= bet;
							format(stringer1, sizeof(stringer1), "%d$", bet);
	               			TextDrawSetString(BlackJackBetShow[tableid][BlackJackGamer[playerid]], stringer1);
	               			SendClientMessage(playerid, 0x74A402AA, "Your bet has been accepted");
						}
					}
				}
			}
		case 3439:
			{
				if(response)
				{
					if(listitem == 0)
					{
						ShowPlayerDialog(playerid, 3440, DIALOG_STYLE_INPUT, "Boxing lesson","Enter student [ID]","Get started", "Cancle");
						return true;
					}
					else if(listitem == 1)
					{
						ShowPlayerDialog(playerid, 3441, DIALOG_STYLE_INPUT, "Lesson on learning Kong - Fu","Enter the student's [ID]", "������", "Cancle");
						return true;
					}
					else	if(listitem == 2)
					{
						ShowPlayerDialog(playerid, 3444, DIALOG_STYLE_INPUT, "Lesson on learning Kick Boxing","Enter [ID] of the student", "Get started", "Cancle");
						return true;
					}
					else	if(listitem == 3)
					{
						ShowPlayerDialog(playerid, 3442, DIALOG_STYLE_INPUT, "Complete Boxing lesson","Enter student [ID]","Complete", "Cancle");
						return true;
					}
					else	if(listitem == 4)
					{
						ShowPlayerDialog(playerid, 3443, DIALOG_STYLE_INPUT, "Complete Kong FU lesson","Enter student [ID]","Complete", "Cancle");
						return true;
					}
					else		if(listitem == 5)
					{
						ShowPlayerDialog(playerid, 3445, DIALOG_STYLE_INPUT, "Complete the Kick Boxing lesson","Enter the [ID] of the student", "Complete", "Cancle");
						return true;
					}
				}
				else { return true; }
			}
			////////////////////-----------------------------------------------------
		case 3440:
			{
				if(response)
				{
					new idd = strval(inputtext);
					if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] The person was not found!");
					if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return  SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
					OldSkin[idd] = GetPlayerSkin(playerid);
					SetPlayerSkinEx(idd,81);
					PlayerInfo[idd][pBoxstyle] = 1;
					PlayerInfo[idd][pKstyle] = 0;
					PlayerInfo[idd][pKickstyle] = 0;
					format(stringer,sizeof(stringer), "started a boxing lesson with %s",PlayerInfo[idd][pNames]);
					SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
					udar[idd] = 0;
					SendMes(playerid,COLOR_GREEN,"You started your Boxing lesson with %s",PlayerInfo[idd][pNames]);
					SendClientMessage(idd, COLOR_GREEN, "Start your Boxing training at the punching bag on the left");
					return true;
				}
				else { return true; }
			}
			//============-----------------------------
		case 3442:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
				PlayerInfo[idd][pBoxstyle] = 0;
				if(PlayerInfo[idd][pMember] >= 1) SetPlayerSkinEx(idd,PlayerInfo[idd][pModel]);
				if(PlayerInfo[idd][pMember] == 0) SetPlayerSkinEx(idd,PlayerInfo[idd][pChar]);
				SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
				format(stringer,sizeof(stringer), "completed a Boxing lesson with %s",PlayerInfo[idd][pNames]);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
				SendClientMessage(idd, COLOR_LIGHTGREEN, "The trainer has completed your Boxing training session with you.");
				return true;
			}
		case 24127: // ������� �������
		{
			if(!response) return true;
			new pvarString[32], leader, fstring[512];
			format(pvarString, sizeof pvarString, "buylead_%i", listitem);
			leader = GetPVarInt(playerid, pvarString);
			SetPVarInt(playerid, "buylead", leader);
			format(fstring, sizeof fstring, "{ffffff}Do you really want to buy\nBuy faction leader rights {8BD032}%s{ffffff}?\nPrice: {8BD032}%i{ffffff} Cost.", GetPlayerFracName[leader], GetMemberPrice[leader]);
			ShowPlayerDialog(playerid, 24128, DIALOG_STYLE_MSGBOX, "{ffffff}Buying a leader", fstring, "Buy", "Cancle");
			return true;
		}
		case 24128: // ������������� �������
		{
			if(!response) return callcmd::buylead(playerid);
			new fractionid = GetPVarInt(playerid, "buylead");
			if(strlen(FractionNamess[fractionid]) || GetMemberPrice[fractionid] == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "This faction already has a leader!");
				return callcmd::buylead(playerid);
			}
			if(PlayerInfo[playerid][pGold] < GetMemberPrice[fractionid])
			{
				SendClientMessage(playerid, COLOR_GREY, "You don�t have Gold Bar, you can buy Gold Bar at bank");
				return callcmd::buylead(playerid);
			}
			PlayerInfo[playerid][pMember] = fractionid;
			PlayerInfo[playerid][pLeader] = fractionid;
			PlayerInfo[playerid][pJob] = 0;
			//-----------------------------------------
			switch(PlayerInfo[playerid][pMember]) {
				case 1,10,21: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 15;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (283) : (76);
				}
				case 2: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (165) : (141);
				}
				case 3,19: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 15;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (61) : (191);
				}
				case 4: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (70) : (219);
				}
				case 5: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (113) : (214);
				}
				case 6: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (186) : (169);
				}
				case 7: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (147) : (150);
				}
				case 11: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (59) : (172);
				}
				case 12: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (104) : (195);
				}
				case 13: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (110) : (190);
				}
				case 14: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (272) : (214);
				}
				case 15: {
					 PlayerInfo[playerid][pRank] = 10;
					 PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (270) : (56);
				}
				case 16: {
					PlayerInfo[playerid][pRank] = 13;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (187) : (211);
				}
				case 17: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (115) : (41);
				}
				case 18: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (173) : (226);
				}
				case 23: {
					PlayerInfo[playerid][pRank] = 12;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (294) : (169);
				}
				case 24: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (67) : (55);
				}
				case 25: {
					PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (285) : (76);
				}
				case 26: {
					PlayerInfo[playerid][pRank] = 10;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (295) : (12);
				}
				case 27,28: {
					PlayerInfo[playerid][pRank] = 5;
					PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (189) : (172);
				}
			}
			//-----------------------------------------
			PlayerInfo[playerid][pGold] -= GetMemberPrice[fractionid];
			SetPlayerToTeamColor(playerid);

			new query[400];
			format(query,sizeof(query),"UPDATE `accounts` SET `pMember` = '%d', `pRank` = '%d', `pModel` = '%d', `pLeader` = '%d', `pJob` = '0', `odet` = '%d', `vigs` = '%d', `pGold` = '%d' WHERE `pID` = '%d'",fractionid,PlayerInfo[playerid][pRank],PlayerInfo[playerid][pModel],fractionid,PlayerInfo[playerid][pOdet],PlayerInfo[playerid][pVigs], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
			mysql_function_query(connects, query, false, "", "");

			SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);
			return true;
		}
		case 3445:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
				PlayerInfo[idd][pKickstyle] = 0;
				if(PlayerInfo[idd][pMember] >= 1) SetPlayerSkinEx(idd,PlayerInfo[idd][pModel]);
				else if(PlayerInfo[idd][pMember] == 0) SetPlayerSkinEx(idd,PlayerInfo[idd][pChar]);
				SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
				format(stringer,sizeof(stringer), "completed a Kick Boxing lesson with %s",PlayerInfo[idd][pNames]);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
				SendClientMessage(idd, COLOR_LIGHTGREEN, "The trainer has completed Kick Boxing training with you");
				return true;
			}
		case 8922:
		    {
				if(!response) return true;
				switch(listitem)
				{
					case 0:
					{
						if(Pick == 1) return SendClientMessage(playerid, COLOR_GREY, "Elections are already underway in the state!");
						Pick = 1;
						format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_PICK"` SET pick='1'");
						mysql_function_query(connects, mysql_query_, false, "", "");
						SendClientMessageToAll(-1, "Attention! Presidential elections have begun in the state.");
						SendClientMessageToAll(-1, "You can vote at polling stations in City Halls.");
						//----------------------------------------------------------
						vibor[1] = CreateDynamic3DTextLabel("{66CC00}Polling station",-1,1482.2963,-1801.7992,2995.6279,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
						golos[0] = CreateDynamicObject(3861, 358.13, 195.62, 1014.24,   0.00, 0.00, 0.00);
						golos[1] = CreateDynamicObject(2420, 340.12, 191.84, 1013.18,   0.00, 0.00, 93.16);
						golos[2] = CreateDynamicObject(2420, 340.05, 193.43, 1013.17,   0.00, 0.00, 92.45);
						golos[3] = CreateDynamicObject(2420, 339.99, 195.15, 1013.17,   0.00, 0.00, 92.45);
						Pickup1[0] = CreatePickupAC(1314,23,1487.6428,-1806.0372,2995.6248, 1);
						Pickup1[1] = CreatePickupAC(1314,23,1493.7227,-1805.6587,2995.6226, 1);
						Pickup1[2] = CreatePickupAC(1314,23,1490.7253,-1805.9270,2995.6235, 1);
						mapa = CreatePickupAC(1581,23,1482.2963,-1801.7992,2995.6279, 1);
					}
					case 1:
					{
						if(Pick == 0) return SendClientMessage(playerid, COLOR_GREY, "There are no elections in the state!");
						SendClientMessage(playerid, COLOR_WHITE, "You've finished the State elections");
						ResetPick();
					}
					case 2:
					{
						if(Pick == 1) return SendClientMessage(playerid, COLOR_GREY, "The elections have already begun!");
						new str[255],sttr[255];
						for(new i = 0; i <= 6; i++)
						{
							format(str,sizeof(str),"%s\n", PickName[i]);
							strcat(sttr, str);
						}
						ShowPlayerDialog(playerid, 8925, 2, "Candidates", sttr,"Change", "Cancle");
					}
				}
			}
        case 8923:
		    {
				if(!response) return true;
				if(!strcmp(PlayerInfo[playerid][pNames],PickName[listitem],true)) return SendClientMessage(playerid, COLOR_GREY, "You can't vote for yourself!");
				if(PlayerInfo[playerid][pPayDayHad] < 1) return SendClientMessage(playerid, COLOR_GREY, "You can vote after 1 hours played!");
				PickTime[listitem]++;
				format(PickTimes, sizeof(PickTimes),"%d,%d,%d,%d,%d,%d,%d",PickTime[0],PickTime[1],PickTime[2],PickTime[3],PickTime[4],PickTime[5],PickTime[6]);
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_PICK"` SET times='%s'",PickTimes);
				mysql_function_query(connects, mysql_query_, false, "", "");
				PlayerInfo[playerid][pIzol] = 1;
				viborplayer[playerid] = 0;
				RemovePlayerAttachedObject(playerid, 5);
				SendClientMessage(playerid, -1, "{66CC00}Thank you!");
				SendClientMessage(playerid, -1, "{3399FF}Your vote has been counted");
			}
		case 8924:
		    {
		        if(!response) return true;
				SendClientMessage(playerid, -1, "To vote, go to one of the ballot boxes");
				viborplayer[playerid] = 1;
				SetPlayerAttachedObject(playerid, 5, 19167, 6, 0.265382, 0.041968, 0.000000, 119.981117, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // GTASAMap4 - 1111
			}
		case 8925:
			{
				if(!response) return true;
				format(stringer1, sizeof(stringer1), "Enter the name of the candidate for slot number #%i:", listitem);
				ShowPlayerDialog(playerid,8926, 1, "Candidate", stringer1, "Accept", "Cancle");
				SetPVarInt(playerid, "NumberPick", listitem);
			}
		case 8926:
			{
				if(!response) return DeletePVar(playerid, "NumberPick");
				new c = GetPVarInt(playerid, "NumberPick");
				if(strlen(inputtext) > 35) return SendClientMessage(playerid, COLOR_GREY, "Too many characters");
				if(sscanf(inputtext,"s[35]",PickName[c])) return ShowPlayerDialog(playerid, 8925, 1, "Candidate", "Enter your name | The consignment:", "Accept", "Cancle");
				format(PickNames, sizeof(PickNames), "%s, %s, %s, %s, %s, %s, %s",PickName[0], PickName[1], PickName[2], PickName[3], PickName[4], PickName[5], PickName[6]);
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_PICK"` SET Name = '%s'",PickNames);
				mysql_function_query(connects, mysql_query_, false, "", "");
				format(stringer1, sizeof(stringer1), "You have added: %s",PickName[c]);
   				SendClientMessage(playerid, COLOR_GREEN, stringer1);
				DeletePVar(playerid, "NumberPick");
			}
        case 9293:
			{
				if(!response) return true;
		    	new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		    	switch(listitem)
		    	{
    				case 0:
		        	{
						if(PlayerInfo[playerid][pCash] < till*6) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*6;
						BizzInfo[i][bMoney] += till*6;
						BizzPay[i] += till*6;
						new randphone = 10000 + random(899999);
						PlayerInfo[playerid][pPnumber] = randphone;
						SendMes(playerid, COLOR_BLUE, "{66cc00} You bought a new phone number: {ffcd00}%i", randphone);
					}
    				case 1:
		        	{
						if(PlayerInfo[playerid][pCash] < till*20) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*20;
						BizzInfo[i][bMoney] += till*20;
						BizzPay[i] += till*20;
						SendClientMessage(playerid, 0x6ab1ffaa,"{66cc00}You bought a phone book. Now you can find out the number of any person!");
						SendClientMessage(playerid, COLOR_WHITE, "{66cc00}Enter: {ffcd00}/number <id/name>.");
					}
    				case 2:
		        	{
						if(PlayerInfo[playerid][pCash] < till*60) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*60;
						BizzInfo[i][bMoney] += till*60;
						BizzPay[i] += till*60;
						SendClientMessage(playerid, 0x6ab1ffaa,"{66cc00}You bought a guide. To use enter {ffcd00}/dir.");
					}
    				case 3:
		        	{
						if(PlayerInfo[playerid][pCash] < till*20) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*20;
						BizzInfo[i][bMoney] += till*20;
						BizzPay[i] += till*20;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a camera");
						GiveWeapon(playerid, 43, 30);
					}
 					case 4:
		        	{
						if(PlayerInfo[playerid][pPhousekey] == 225) return SendClientMessage(playerid, COLOR_GREY,"You don't own the house!");
						if(PlayerInfo[playerid][pCash] < till*8) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*8;
						new house = PlayerInfo[playerid][pPhousekey];
						HouseInfo[house][hHel] +=5;
						BizzInfo[i][bMoney] += till*8;
						BizzPay[i] += till*8;
						SaveHouse(house);
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought 5 first aid kits for your home");
					}
					case 5:
		        	{
						if(PlayerInfo[playerid][pCash] < till*3) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*3;
						BizzInfo[i][bMoney] += till*3;
						BizzPay[i] += till*3;
						GiveWeapon(playerid, 14, 1);
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought flowers");
						SendClientMessage(playerid,COLOR_GREEN,"{66cc00}Use {ffcd00}/present {66cc00}to give them to someone");
					}
					case 6:
		        	{
						if(PlayerInfo[playerid][pCash] < till*4) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*4;
						BizzInfo[i][bMoney] += till*4;
						BizzPay[i] += till*4;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a condom ");
					}
					case 7:
		        	{
						if(PlayerInfo[playerid][pCash] < till*5) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*5;
						BizzInfo[i][bMoney] += till*5;
						BizzPay[i] += till*5;
						GiveWeapon(playerid, 41, 500);
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a pepper spray");
					}
					case 8:
		        	{
						if(PlayerInfo[playerid][pCash] < till*7) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(PlayerInfo[playerid][pOtmbI4ka] > 9)return SendClientMessage(playerid, COLOR_GREY,"You have the maximum number of picks.");
						PlayerInfo[playerid][pCash]-=till*7;
						BizzInfo[i][bMoney] += till*7;
						BizzPay[i] += till*7;
						PlayerInfo[playerid][pOtmbI4ka] += 3;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00} You bought a set of master keys ");
					}
					case 9:
		        	{
						if(PlayerInfo[playerid][pCash] < till*9) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(PlayerInfo[playerid][pVerevka] > 9)return SendClientMessage(playerid, COLOR_GREY,"You have the maximum number of ropes.");
						PlayerInfo[playerid][pCash]-=till*9;
						BizzInfo[i][bMoney] += till*9;
						BizzPay[i] += till*9;
						PlayerInfo[playerid][pVerevka] ++;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a rope");
					}
					case 10:
		        	{
						if(PlayerInfo[playerid][pCash] < till*12) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(PlayerInfo[playerid][Texts][2] >= 3) return SendClientMessage(playerid, COLOR_GREY,"You already have 3 masks, so much more to you?");
						PlayerInfo[playerid][pCash]-=till*12;
						BizzInfo[i][bMoney] += till*12;
						BizzPay[i] += till*12;
						PlayerInfo[playerid][Texts][2] ++;
						ApplyAnimation(playerid,"PED","FIGHT2IDLE",4.0,0,0,0,0,0,1);
						SetPlayerAttachedObject(playerid, 8, 19801, 5,  0.186999, 0.037000, 0.022999,  -102.499969, -179.900024, -91.400024,  1.000000, 1.000000, 1.000000);
						HealmeObject[playerid] = 2;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a mask. To use enter {ffcd00}/mask");
					}
					case 11:
		        	{
						if(PlayerInfo[playerid][pCash] < till*15) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(PlayerInfo[playerid][pHeal] >= 3) return SendClientMessage(playerid, COLOR_GREY,"You already have 3 first aid kits, where are you more?");
						PlayerInfo[playerid][pCash]-=till*15;
						BizzInfo[i][bMoney] += till*15;
						BizzPay[i] += till*15;
						PlayerInfo[playerid][pHeal] ++;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a first aid kit. To use enter {ffcd00}/healme");
					}
					case 12:
		        	{
						if(PlayerInfo[playerid][pCash] < till*70) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*70;
						BizzInfo[i][bMoney] += till*70;
						BizzPay[i] += till*70;
						GiveWeapon(playerid, 6, 1);
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You bought a shovel.");
					}
					case 13:
		        	{
						if(PlayerInfo[playerid][pCash] < till*30) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(PlayerInfo[playerid][p_drugs][0] >= 100) return SendClientMessage(playerid, COLOR_GREY,"You have too many seeds with you, where else can you go?");
						PlayerInfo[playerid][pCash]-=till*30;
						BizzInfo[i][bMoney] += till*30;
						BizzPay[i] += till*30;
						PlayerInfo[playerid][p_drugs][0] += 5;
						SendClientMessage(playerid, COLOR_BLUE, "{66cc00}You have bought a package of seeds! (5 items).");
					}
					case 14:
		        	{
						if(PlayerInfo[playerid][pCash] < till*50) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						if(GetPVarInt(playerid, "boomBox")) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}You already have a tape recorder");
						SetPVarInt(playerid, "boomBox", 1);
						SendClientMessage(playerid,COLOR_GREY,"{66cc00} You bought a tape recorder {ffcd00}'/recorder' {66cc00}- install");
						PlayerInfo[playerid][pCash]-=till*50;
						BizzInfo[i][bMoney] += till*50;
						BizzPay[i] += till*50;
					}
		    	}
		    	BizzInfo[i][bProduct] -= 50;
		    	SaveBizz(i);
		    	MagazineList(playerid, i);
		    	format(stringer1, 90, "%s buys something in the store",PlayerInfo[playerid][pNames]);
				ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			}
        case 9294:
			{
				if(!response) return true;
		    	new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill], inter = GetPlayerInterior(playerid),Float:health;
   		 		GetPlayerHealth(playerid,health);
		    	switch(listitem)
		    	{
		        	case 0:
		        	{
						if(PlayerInfo[playerid][pCash] < till*4) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash] -=till*4;
						BizzInfo[i][bMoney] += till*4;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*4;
						SaveBizz(i);
                    	PlayerInfo[playerid][pSatiety]+=30;
						if(inter == 5) format(stringer1, 90, "%s ate a small pizza",PlayerInfo[playerid][pNames]);
						else if(inter == 10) format(stringer1, 90, "%s ate a burger",PlayerInfo[playerid][pNames]);
						else if(inter == 9) format(stringer1, 90, "%s ate slices of pizza",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
						EatList(playerid, i);
					}
    				case 1:
		        	{
						if(PlayerInfo[playerid][pCash] < till*7) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*7;
						BizzInfo[i][bMoney] += till*7;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*7;
						SaveBizz(i);
                    	PlayerInfo[playerid][pSatiety]+=50;
						if(inter == 5) format(stringer1, 90, "%s ate a medium pizza",PlayerInfo[playerid][pNames]);
						else if(inter == 10) format(stringer1, 90, "%s ate a big burger",PlayerInfo[playerid][pNames]);
						else if(inter == 9) format(stringer1, 90, "%s ate a piece of chicken leg",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
						EatList(playerid, i);
					}
    				case 2:
		        	{
						if(PlayerInfo[playerid][pCash] < till*10) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*10;
						BizzInfo[i][bMoney] += till*10;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*10;
						SaveBizz(i);
                    	PlayerInfo[playerid][pSatiety]+=70;
						if(inter == 5) format(stringer1, 90, "%s ate a big pizza",PlayerInfo[playerid][pNames]);
						else if(inter == 10) format(stringer1, 90, "%s ate a hamburger",PlayerInfo[playerid][pNames]);
						else if(inter == 9) format(stringer1, 90, "%s ate a chicken leg",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
						EatList(playerid, i);
					}
		    	}
		    	if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
		    	SendMes(playerid,COLOR_WHITE,"Your satiety is replenished to %i percent",PlayerInfo[playerid][pSatiety]);
			}
		case 9295:
			{
		    	if(!response) return DeletePVar(playerid, "Bizzid");
		    	new i = GetPVarInt(playerid, "Bizzid"),till = BizzInfo[i][bTill];
		    	switch(listitem)
		    	{
		        	case 0..7:
		        	{
						SetPVarInt(playerid,"Itemid",listitem);
						ShowPlayerDialog(playerid, 9296, 1, "Ammo Nation","Enter the number of ammo\nthat will be included with the weapon.","Buy", "Back");
					}
					default:
					{
				    	if(PlayerInfo[playerid][pCash] < AmmoList[listitem][Cost]*till) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
				    	PlayerInfo[playerid][pCash] -=(AmmoList[listitem][Cost]*till);
						BizzInfo[i][bMoney] += (AmmoList[listitem][Cost]*till);
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += (AmmoList[listitem][Cost]*till);
						GiveWeapon(playerid,AmmoList[listitem][gunid],1);
						SaveBizz(i);
                        if(PlayerInfo[playerid][pQuest7] == 0)
                        {
                            PlayerInfo[playerid][pQuest7] = 1;
                            UpdatePlayerData(playerid, "pQuest7", PlayerInfo[playerid][pQuest7]);
                        }
						SendMes(playerid,COLOR_BLUE,"Thank you for your purchase. %s Money value.",formatInt(AmmoList[listitem][Cost]*till));
					}
				}
			}
		case 9296:
			{
			    if(!response) return true;
			    new i = GetPVarInt(playerid, "Bizzid"),till = BizzInfo[i][bTill],list = GetPVarInt(playerid, "Itemid"),price;
			    if(sscanf(inputtext, "i",price)) return MagazineAmmoList(playerid,GetPVarInt(playerid, "Bizzid"));
			    if(price < 1 || price > 999) return MagazineAmmoList(playerid,GetPVarInt(playerid, "Bizzid"));
		    	if(PlayerInfo[playerid][pCash] < (AmmoList[list][Cost]*till)*price) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
		    	PlayerInfo[playerid][pCash] -= (AmmoList[list][Cost]*till)*price;
				BizzInfo[i][bMoney] += (AmmoList[list][Cost]*till)*price;
				BizzInfo[i][bProduct] -= 50;
				BizzPay[i] += (AmmoList[list][Cost]*till)*price;
				GiveWeapon(playerid,AmmoList[list][gunid],price);
				SaveBizz(i);
			    if(PlayerInfo[playerid][pQuest7] == 0)
			    {
			    	PlayerInfo[playerid][pQuest7] = 1;
        			UpdatePlayerData(playerid, "pQuest7", PlayerInfo[playerid][pQuest7]);
			    }
				SendMes(playerid,COLOR_BLUE,"Thank you for your purchase. %s Money value.",formatInt((AmmoList[list][Cost]*till)*price));
				return true;
			}
		case 9297:
			{
		    	if(!response) return true;
		    	new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill],Float:health;
   		 		GetPlayerHealth(playerid,health);
		    	switch(listitem)
		    	{
		        	case 0:
		        	{
						if(PlayerInfo[playerid][pCash] < till*4) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*4;
						BizzInfo[i][bMoney] += till*4;
						BizzPay[i] += till*4;
						BizzInfo[i][bProduct] -= 50;
						SaveBizz(i);
						format(stringer1, 90, "%s drink water",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						PlayerInfo[playerid][pSatiety]+=10;
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
    				case 1:
		        	{
						if(PlayerInfo[playerid][pCash] < till*7) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*7;
						BizzInfo[i][bMoney] += till*7;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*7;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=20;
						format(stringer1, 90, "%s drink soda",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
    				case 2:
		        	{
						if(PlayerInfo[playerid][pCash] < till*10) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*10;
						BizzInfo[i][bMoney] += till*10;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*10;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=25;
						format(stringer1, 90, "%s drink Coca-Cola",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
    				case 3:
		        	{
						if(PlayerInfo[playerid][pCash] < till*15) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*15;
						BizzInfo[i][bMoney] += till*15;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*15;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=30;
						format(stringer1, 90, "%s drink beer",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
    				case 4:
		        	{
						if(PlayerInfo[playerid][pCash] < till*20) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*20;
						BizzInfo[i][bMoney] += till*20;
						BizzInfo[i][bProduct] -= 50;
						BizzPay[i] += till*20;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=40;
						format(stringer1, 90, "%s drink vodka",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
 					case 5:
		        	{
						if(PlayerInfo[playerid][pCash] < till*25) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*25;
						BizzInfo[i][bMoney] += till*25;
						BizzPay[i] += till*25;
						BizzInfo[i][bProduct] -= 50;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=50;
						format(stringer1, 90, "%s drink cognac",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
 					case 6:
		        	{
						if(PlayerInfo[playerid][pCash] < till*30) return SendClientMessage(playerid, COLOR_GREY,"Insufficient funds!");
						PlayerInfo[playerid][pCash]-=till*30;
						BizzInfo[i][bMoney] += till*30;
						BizzPay[i] += till*30;
						BizzInfo[i][bProduct] -= 50;
						SaveBizz(i);
						PlayerInfo[playerid][pSatiety]+=55;
	    				SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
						format(stringer1, 90, "%s drink absinthe",PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
						ClubList(playerid, i);
					}
		    	}
		    	if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
		    	SendMes(playerid,COLOR_WHITE,"Your satiety is replenished to %i percent",PlayerInfo[playerid][pSatiety]);
		    	if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid,20000);
			}
		case 7421: { //n[3] ����� �������\t\t {9994EB}49 ���\n[4] �������� ����� ������\t {9994EB}49 ���\n[5] �������� ������� ���\t {9994EB}49 ���\n[6] ������� '����������'\t{9994EB}299 ���\n[7] �������� ���\t\t{9994EB}199 ���\n[8] ��������� infernus\t\t{9994EB}199 ���\n[9] �������\t\t\t{9994EB}299 ���\n{FFD700}Information", "Select", "Back");
			if(!response) return true;
			switch(listitem) {
//				case 0: callcmd::buyadm(playerid);
				case 1: {//objects
//					ShowPlayerDialog(playerid,8001,DIALOG_STYLE_LIST,"VIP PASS OBJECTS","{FFFFFF}Chicken hat\nLight on head\nFlasher on head\nBlack mask\nBandana #1\nBandana #2\nBandana #3\nBandana #4\nBandana #5\nDragon mask\nLaser on head\nAlmighty set \nParrot on the shoulder\nBright light\nLarge M4 in hand\nPenis\nParrot costume\nDelete all objects","Buy","Close");

/*					{
						callcmd::cases(playerid);
						return SendClientMessage(playerid,-1, "{FFFF00} Special cases Box � {FF0000}'/cases' {FFFF00}add-on unit Legendery items!");
					}
					//ShowCMDBuyDialog(playerid);*/
				}
				case 2: {//objects
/*					if(PlayerInfo[playerid][pVigs] < 1) return SendClientMessage(playerid, COLOR_WHITE, "� ��� ���� ���������!");
					if(PlayerInfo[playerid][pRub] < 49) return SendClientMessage(playerid, COLOR_GREY, "� ��� ������������ ������, ��������� �� ����� �� ����� {FFCD00}"PAGE_SITE" -> �����");
					new query[100];
					PlayerInfo[playerid][pVigs]--;
					PlayerInfo[playerid][pRub] -= 49;
					UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
					format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pVigs],PlayerInfo[playerid][pID]);
		   			mysql_function_query(connects, query, false, "", "");
					SendClientMessage(playerid, COLOR_WHITE, "You have lost your mind!");*/
				}
				case 3: {//changepass
//					if(PlayerInfo[playerid][pRub] < 49) return SendClientMessage(playerid, COLOR_GREY, "� ��� ������������ ������, ��������� �� ����� �� ����� {FFCD00}"PAGE_SITE" -> �����");
//					ShowPlayerDialog(playerid, 7422, DIALOG_STYLE_INPUT, "Changing the admin-password", "Enter a new admin password, in the field:", "Next", "Cancle");
				}
				case 4: {//invisible
/*					if(PlayerInfo[playerid][pRub] < 299) return SendClientMessage(playerid, COLOR_GREY, "You don�t have enough Donate Points, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
					if(PlayerInfo[playerid][pInv] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You have already purchased this opportunity!");
					PlayerInfo[playerid][pInv] = 1;
					PlayerInfo[playerid][pRub] -= 299;
					UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
					UpdatePlayerData(playerid, "pInv", PlayerInfo[playerid][pInv]);
					SendClientMessage(playerid, COLOR_WHITE, "When you have finished collecting the speed function'!");*/
//					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Invisible Function", "{328fed}This function has been deleted from {FFFF00}Europa {2cdb0d}Legacy {FF0000}RolePlay", "Close", "");
				}
				case 5: {//nick
					if(PlayerInfo[playerid][pDonatemoney2] < 25000) return SendClientMessage(playerid, COLOR_GREY, "You don�t have enough Donate Points, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
					if(PlayerInfo[playerid][pBlNick] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You have already purchased this opportunity!");
					PlayerInfo[playerid][pBlNick] = 1;
					PlayerInfo[playerid][pDonatemoney2] -= 25000;
					format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `pRub` = '%d', `pBlNick` = '1' WHERE `pID` = '%d'", PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
					mysql_function_query(connects, stringer1, false, "", "");
					SendClientMessage(playerid, -1, "You have successfully copied this function!");
//					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Invisible Function", "{328fed}This function has been deleted from {FFFF00}Europa {2cdb0d}Legacy {FF0000}RolePlay", "Close", "");

				}
				case 6: {//acar
/*					if(PlayerInfo[playerid][pDonatemoney2] < 35000) return SendClientMessage(playerid, COLOR_GREY, "You don�t have enough Donate Points, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
					new string[144];
					format(string, sizeof(string), "If you want to buy a MIGHTY /acar?\n- YOU GET VISIBILITY:\n%s", CMD_desc[4]);
					ShowPlayerDialog(playerid, 7491, DIALOG_STYLE_MSGBOX, "Group box /acar", string, "Buy", "Cancle");*/
				}
				case 7: {//Rankup factions
					ShowPlayerDialog(playerid,10062,DIALOG_STYLE_LIST,"{FFFF00}Factions Ranks","[1] Rank Up 650-Fpoints [New]","Select","Close");
				}
				case 8: {//ban
/*				    if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid, 0xafafafff, "{FFFF00}Available with 6 level controls! Use � {FF0000}'/buyadm' {FFFF00}for the 6-level add-on unit");
					if(PlayerInfo[playerid][pRub] < 99) return SendClientMessage(playerid, COLOR_GREY, "� You are not sufficiently large, please add them to the site� {FFCD00}"PAGE_SITE" -> �����");
					if(PlayerInfo[playerid][pcBan] > 0) return SendClientMessage(playerid, COLOR_WHITE, "� ��� ��� ������� ��� �����������!");
					PlayerInfo[playerid][pcBan] = 1;
					PlayerInfo[playerid][pRub] -= 99;
					format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `pRub` = '%d', `pcBan` = '1' WHERE `pID` = '%d'", PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
					mysql_function_query(connects, stringer1, false, "", "");
					SendClientMessage(playerid, -1, "When you have finished the file you have access to the command '/ban'");*/
				}
				case 9: {//warn
/*				    if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid, 0xafafafff, "{FFFF00}Available with 6 level controls! Use � {FF0000}'/buyadm' {FFFF00}for the 6-level add-on unit");
					if(PlayerInfo[playerid][pRub] < 79) return SendClientMessage(playerid, COLOR_GREY, "� ��� ������������ ������, ��������� �� ����� �� ����� {FFCD00}"PAGE_SITE" -> �����");
					if(PlayerInfo[playerid][pcWarn] > 0) return SendClientMessage(playerid, COLOR_WHITE, "� ��� ��� ������� ��� �����������!");
					PlayerInfo[playerid][pcWarn] = 1;
					PlayerInfo[playerid][pRub] -= 79;
					format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `pRub` = '%d', `pcWarn` = '1' WHERE `pID` = '%d'", PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
					mysql_function_query(connects, stringer1, false, "", "");
					SendClientMessage(playerid, -1, "You have successfully purchased access to the team '/warn'");*/
				}

				case 10: //
				{
                    new string4[777];
                    strcat(string4, "{FFD700}[1] Function 'Privacy'\r\n");
                    strcat(string4, "{FFFFFF}You or you are not able to TP, you are not /admins, you cannot be followed in /re. \r\n\n");
                    strcat(string4, "");
                    strcat(string4, "{FFD700}[2] Nickname Blinking\r\n");
                    strcat(string4, "{FFFFFF}Your NickName has a red color\r\n\n");
                    strcat(string4, "");
                    strcat(string4, "{FFD700}[3] MIGHTY infernus (/acar)\r\n");
                    strcat(string4, "{FFFFFF}After the purchase, you will receive an MIGHTY infernus (/acar)\r\n\n");
                    strcat(string4, "");
                    strcat(string4, "{FFD700}[4] coming soon\r\n");
                    strcat(string4, "{FFFFFF}coming soon\r\n\n");
                    strcat(string4, "");
                    strcat(string4, "{FFD700}[5] coming soon\r\n");
                    strcat(string4, "{FFFFFF}coming soon\r\n");
                    strcat(string4, "{FFFFFF}coming soon\r\n\n");
                    strcat(string4, "");
                    strcat(string4, "{FFD700}[6] coming soon\r\n");
                    strcat(string4, "{FFFFFF}coming soon\r\n");
                    strcat(string4, "{FFFFFF}coming soon\r\n\n");
                    ShowPlayerDialog(playerid, 8008, DIALOG_STYLE_MSGBOX, "{0099CC}Information", string4, "Back", "");
			   }
			}
			return true;
		}
		case 7491: {
			if(!response) return true;
			new query[200];
			PlayerInfo[playerid][pDonatemoney2] -= 35000;
			UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
			mysql_format(connects, query, sizeof query, "SELECT * FROM `accounts` WHERE `Name` = '%e'", PlayerInfo[playerid][pNames]);
			mysql_function_query(connects, query, true, "BuyCmdCallback", "dd", playerid, 4);
			return true;
		}
		case 1634: {
			if(!response) return true;
			switch(listitem) {
				case 0: {
					SetPPos(playerid,1486.5603,-1809.6616,2995.6206);
					SetPlayerFacingAngle(playerid, 88.1807);
				}
				case 1: {
					SetPlayerInteriorEx(playerid,0);
					SetPlayerVirtualWorldEx(playerid, 0);
					SetPPos(playerid,1435.2,-1786.442,33.43);
					SetPlayerFacingAngle(playerid, 90.3133);
					DisablePlayerCheckpoint(playerid);
					PicCP[playerid] = 0;
					CP[playerid] = 0;
				}
				case 2: {
					SetPlayerInteriorEx(playerid,0);
					SetPlayerVirtualWorldEx(playerid, 0);
					SetPPos(playerid,1409.6736,-1790.5062,13.5469);
					SetPlayerFacingAngle(playerid, 90.9699);
					DisablePlayerCheckpoint(playerid);
					PicCP[playerid] = 0;
					CP[playerid] = 0;
				}
			}
			return true;
		}
		case 1633: {
			if(!response) return true;
			if(PlayerInfo[playerid][pRub] < 299) return SendClientMessage(playerid, COLOR_WHITE, "You are not inadequate!");
			if(strlen(inputtext) < 2 || strlen(inputtext) > 15) return ShowPlayerDialog(playerid, 1633, DIALOG_STYLE_INPUT, "Prefix box�", "Enter the text of the fix in the field:\nThe fix does not erase less than 2 or more than 15 symbols!", "Next", "Cancle");
			if(IsIpFound(inputtext)) ShowPlayerDialog(playerid, 1633, DIALOG_STYLE_INPUT, "Prefix box", "Enter the text of the fix in the field:\nThe fix does not erase less than 2 or more than 15 symbols!", "Next", "Cancle");
			new string[144], query[144];
			PlayerInfo[playerid][pRub] -= 299;
			sscanf(inputtext, "s[15]", PlayerInfo[playerid][pPrefix]);
			format(query, sizeof(query), "UPDATE `accounts` SET `pPrefix` = '%s', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pPrefix], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
			mysql_function_query(connects, query, false, "", "");
			format(string, sizeof(string), "Adminstrator %s bought prefix '%s'", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pPrefix]);
			SendAdminMessage(COLOR_GREY, string);
			return true;
		}
		case 7422: {
			if(!response) return true;
			new pass;
			if(sscanf(inputtext, "d", pass)) return ShowPlayerDialog(playerid, 7422, DIALOG_STYLE_INPUT, "Changing the admin-password", "Enter a new admin password, in the field:", "Next", "Cancle");
			if(pass < 1000 || pass > 9999) return ShowPlayerDialog(playerid, 7422, DIALOG_STYLE_INPUT, "Changing the admin-password", "Enter the new admin password, in the field:", "Next", "Cancle");
			new query[100], string[144];
			PlayerInfo[playerid][pRub] -= 49;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			PlayerInfo[playerid][pDostup] = pass;
			format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNT"` SET `pDostup` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pDostup],PlayerInfo[playerid][pID]);
			mysql_function_query(connects, query, false, "", "");
			format(string, sizeof(string), "You can safely change the password from the addon. New password: %d", PlayerInfo[playerid][pDostup]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return true;
		}
		case 7423: {
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 7423, DIALOG_STYLE_INPUT, "change nickname", "�enter your new nickname in the field below:", "Next", "Cancle");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 7423, DIALOG_STYLE_INPUT, "change nickname", "�enter your new nickname in the field below:", "Next", "Cancle");
			new str_bukvi = 0;
			for(new i = 0; i < strlen(inputtext); i++)
			{
				switch(inputtext[i])
				{
					case 'A'..'Z':
					{
						str_bukvi++;
					}
					case 'a'..'z', '_':
					{
					}
					default:
					{
						return ShowPlayerDialog(playerid, 7423, DIALOG_STYLE_INPUT, "change nickname", "�enter your new nickname in the field below:", "Next", "Cancle");
					}
				}
			}
			if(str_bukvi < 2) return ShowPlayerDialog(playerid, 7423, DIALOG_STYLE_INPUT, "change nickname", "�enter your new nickname in the field below:", "Next", "Cancle");
			SetPVarInt(playerid, "ChangeAdminName", 1);
			format(stringer, sizeof(stringer), "SELECT * FROM `accounts` WHERE `Name` = '%s'", inputtext);
			mysql_function_query(connects, stringer, true, "OnPlayerCheckName", "is", playerid, inputtext);
		}
		case 7425: {
			if(!response) return true;
			format(stringer, sizeof(stringer), "{FFFFFF}[1] {1AFF00}Open {FFFFFF}or {FF0000}close {FFFFFF}House\n[2] Sell house to the Goverment\n[3] Sell home transport\n[4] Mark transport on GPS\n[5] Deliver transport to your home (1000$)\n[6] On the account of the apartment: %d Money\n[7] Restore health (%d)\n[8] Cupboard\n[9] Safe\n[10] Register\n[11] Repair", HouseInfo[PlayerInfo[playerid][pPhousekey]][hTakings], HouseInfo[PlayerInfo[playerid][pPhousekey]][hHel]);
			ShowPlayerDialog(playerid, 5300, DIALOG_STYLE_LIST, "{dba002}Change home settings", stringer, "Select", "Cancle");
			return true;
		}
		case 7763:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(ContractInfo[playerid][cZakaz] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "You've already taken one order, cancel it if you can't handle it");
						SearchingHit(playerid);
					}
					if(listitem == 1)
					{
						if(ContractInfo[playerid][cZakaz] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "You don't have an order.");
						SendMes(playerid,COLOR_YELLOW,"Order for %s[%d] | %d years on staff| payment %s Money",PlayerInfo[ContractInfo[playerid][cZakaz]][pNames],ContractInfo[playerid][cZakaz], PlayerInfo[ContractInfo[playerid][cZakaz]][pLevel], formatInt(PlayerInfo[ContractInfo[playerid][cZakaz]][pHeadValue]));
					}
					if(listitem == 2)
					{
						if(ContractInfo[playerid][cZakaz] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "You don't have an order.");
						format(stringer,sizeof(stringer),"Hitman %s refused to fulfill the order for %s",PlayerInfo[playerid][pNames],PlayerInfo[ContractInfo[playerid][cZakaz]][pNames]);
						SendFamilyMessage(23,COLOR_LIGHTRED,stringer);
						ContractInfo[ContractInfo[playerid][cZakaz]][cHitman] = INVALID_PLAYER_ID;
						ContractInfo[playerid][cZakaz] = INVALID_PLAYER_ID;
					}
					if(listitem == 3) callcmd::find(playerid);
					if(listitem == 4) ShowPlayerDialog(playerid,7766,DIALOG_STYLE_INPUT,"{FFFFFF}Fake passport","{FFFFFF}[1] Real passport\n[2] Citizen's passport\n[3] FBI passport\n[4] SWAT passport\n[5] Government passport","Take","Cancle");
					if(listitem == 5) SetPlayerColor(playerid,0xFFFFFFAA);
				}
			}
		case 7765:
			{
				if(!response) return true;
				new i = playerid;
				switch(listitem)
		    	{
		        	case 0:
		        	{
		        		if(GetPlayerMoney(i) > 10000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 100); GiveWeapon(i, 25, 50);
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 1");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 1:
					{
						if(GetPlayerMoney(i) > 20000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 100); GiveWeapon(i, 25, 50); GiveWeapon(i, 31, 100);
							PlayerInfo[playerid][pCash] -= 20000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 2");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 2:
					{
						if(GetPlayerMoney(i) > 30000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 300); GiveWeapon(i, 25, 50); GiveWeapon(i, 30, 300);
							PlayerInfo[playerid][pCash] -= 30000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 3");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 3:
					{
						if(GetPlayerMoney(i) > 40000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 31, 500); GiveWeapon(i, 34, 20);
							PlayerInfo[playerid][pCash] -= 40000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 4");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 4:
					{
						if(GetPlayerMoney(i) > 50000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 30, 500); GiveWeapon(i, 34, 20);
							PlayerInfo[playerid][pCash] -= 50000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 5");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 5:
					{
						if(GetPlayerMoney(i) > 60000)
						{
							GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 100); GiveWeapon(i, 31, 500); GiveWeapon(i, 34, 20);
							PlayerInfo[playerid][pCash] -= 60000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 6");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
					case 6:
					{
						if(GetPlayerMoney(i) > 70000)
						{
							GiveWeapon(i, 24, 100); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 100); GiveWeapon(i, 30, 500); GiveWeapon(i, 34, 50);
							PlayerInfo[playerid][pCash] -= 70000;
							SendClientMessage(i, COLOR_LIGHTBLUE, "You purchased a weapon set # 7");
						}
						else SendClientMessage(i, COLOR_WHITE, "You don't have enough money");
					}
				}
				return true;
			}
		case 7766:
			{
				if(response)
				{
					new i = playerid;
					if(!strcmp(inputtext, "1",true))
					{
						PlayerInfo[playerid][pFacePass] = 0;
						SendClientMessage(i, COLOR_WHITE, "You took a ''real passport''''.");
					}
					else if(!strcmp(inputtext, "2",true))
					{
						PlayerInfo[playerid][pFacePass] = 1;
						SendClientMessage(i, COLOR_WHITE, "You forged a citizen's passport''.");
					}
					else if(!strcmp(inputtext, "3",true))
					{
						PlayerInfo[playerid][pFacePass] = 2;
						SendClientMessage(i, COLOR_WHITE, "You forged an FBI agent's passport''.");
					}
					else if(!strcmp(inputtext, "4",true))
					{
						PlayerInfo[playerid][pFacePass] = 3;
						SendClientMessage(i, COLOR_WHITE, "You forged a ''SWAT passport''''.");
					}
					else if(!strcmp(inputtext, "5",true))
					{
						PlayerInfo[playerid][pFacePass] = 4;
						SendClientMessage(i, COLOR_WHITE, "You forged ''government passport''.");
					}
					else SendClientMessage(i, COLOR_WHITE, "You entered an incorrect dialing number.");
				}
			}
		case 22831:
		{
			if(!response) return 1;
			if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 22831, DIALOG_STYLE_INPUT, "{FFCC00}Game mod error message", "{FFFFFF}Write in the window the bug you found. And we will definitely fix it!","Submit","Cancle");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 150) return ShowPlayerDialog(playerid, 22831, DIALOG_STYLE_INPUT, "{FFCC00}Game mod error message", "{FFFFFF}Write in the window the bug you found. And we will definitely fix it!","Submit","Cancle");
			{
				new str[250];
				format(str, sizeof(str), "Your nickname: %s | Flaw: %s ", PlayerInfo[playerid][pNames], inputtext);
				SendClientMessage(playerid, -1, str);
				SendClientMessage(playerid, COLOR_GREY,"Information was sent successfully.");
				SetPVarInt(playerid, "bug_time", gettime() + 30);
				new mystring[250];
				mysql_format(connects, mystring, sizeof mystring, "INSERT INTO `bugs` (`Name`, `Description`) VALUES ('%e', '%e')", PlayerInfo[playerid][pNames], inputtext);
				mysql_query(connects, mystring);
				return 1;
			}
		}
		case 2290:
			{

				new namealko[30]; new prodalko; new Float:health; new alkogoll;
				GetPlayerHealth(playerid,health);
				if(health >= 100) return SendClientMessage(playerid,COLOR_GREY,"You don't want to drink!");
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerHealthAC(playerid, health + 15.0),prodalko = 1,namealko = "water";
					case 1: SetPlayerHealthAC(playerid, health + 15.0),prodalko = 1,namealko = "soda";
					case 2: SetPlayerHealthAC(playerid, health + 20.0),prodalko = 2,namealko = "beer",alkogoll = 1000;
					case 3: SetPlayerHealthAC(playerid, health + 25.0),prodalko = 3,namealko = "wine",alkogoll = 2000;
					case 4: SetPlayerHealthAC(playerid, health + 30.0),prodalko = 4,namealko = "whisky",alkogoll = 2000;
					case 5: SetPlayerHealthAC(playerid, health + 40.0),prodalko = 5,namealko = "absinthe",alkogoll = 3000;
					case 6: SetPlayerHealthAC(playerid, health + 25.0),prodalko = 3,namealko = "vodka",alkogoll = 3000;
					}
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+alkogoll);
					format(stringer,sizeof(stringer),"%s drank %s",PlayerInfo[playerid][pNames],namealko);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
					if(PlayerInfo[playerid][pMember] == 13) FracAlko[0][aVagos] -= prodalko;
					else if(PlayerInfo[playerid][pMember] == 12) FracAlko[0][aBallas] -= prodalko;
					else if(PlayerInfo[playerid][pMember] == 18) FracAlko[0][aRifa] -= prodalko;
					else if(PlayerInfo[playerid][pMember] == 17) FracAlko[0][aAztec] -= prodalko;
					else if(PlayerInfo[playerid][pMember] == 15) FracAlko[0][aGrove] -= prodalko;
					callcmd::drink(playerid, "");
				}
			}
        case 2213:
            {
                if(!response) return 1;
                new actplayerid = GetPVarInt(playerid,"actplayerid");
                if(!IsPlayerConnected(actplayerid) || PlayerInfo[actplayerid][pMember] != PlayerInfo[playerid][pMember]) return 1;
                new fractionid = PlayerInfo[actplayerid][pMember]-1;
                new skinid = gFractionSkin[fractionid][listitem];
                if(skinid == PlayerInfo[actplayerid][pMember]) return 1;
                new mes[128];
                format(mes,sizeof(mes),"%s sets You a faction skin",PlayerInfo[playerid][pNames]);
                SendClientMessage(actplayerid,COLOR_LIGHTBLUE,mes);
                format(mes,sizeof(mes),"You have set %s faction \"Skin\"!",PlayerInfo[actplayerid][pNames]);
                SendClientMessage(playerid,COLOR_LIGHTBLUE,mes);
                PlayerInfo[actplayerid][pModel] = skinid;
                SetPlayerSkinEx(actplayerid,skinid);
            }
		case 3443:
			{
				if(response)
				{
					new idd = strval(inputtext);
					if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
					if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return		 SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
					PlayerInfo[idd][pKstyle] = 0;
					if(PlayerInfo[idd][pMember] >=1) {	SetPlayerSkinEx(idd,PlayerInfo[idd][pModel]);}
					if(PlayerInfo[idd][pMember] ==0) {	SetPlayerSkinEx(idd,PlayerInfo[idd][pChar]);}
					SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
					format(stringer,sizeof(stringer), "completed Kong Fu lesson with %s",PlayerInfo[idd][pNames]);
					udar[idd] = 0;
					SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
					SendClientMessage(idd, COLOR_LIGHTGREEN, "The trainer has completed Kong Fu training with you");
					return true;
				}
				else { return true; }
			}

		case 1005:
			{
				new playerd = GetPVarInt(playerid, "PlayerZone"), price = GetPVarInt(playerid, "ZonePrice"), i = GetPVarInt(playerid, "ZoneID");
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < price)
					{
						format(stringer,128,"Player %s does not have enough funds", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
						DeletePVar(playerid, "PlayerZone");
						DeletePVar(playerid, "ZonePrice");
						DeletePVar(playerid, "ZoneID");
						return SendClientMessage(playerid, COLOR_GREY, "Insufficient funds");
					}
					GZInfo[i][gFrak] = PlayerInfo[playerid][pMember];
					GangZoneStopFlashForAll(GZInfo[i][id]);
					GangZoneHideForAll(GZInfo[i][id]);
					GangZoneShowForAll(GZInfo[i][id],GetGangZoneColor(i));
					SaveGZ(i);
					PlayerInfo[playerid][pCash] -= price;
					GiveMoney(playerd, price);
					format(stringer,144,"You sold your zone to %s for %s Money", PlayerInfo[playerid][pNames], formatInt(price)), SendClientMessage(playerd,0x6495EDFF, stringer);
					format(stringer,144,"You bought the zone from %s. Price: %s", PlayerInfo[playerd][pNames], formatInt(price)), SendClientMessage(playerid,0x6495EDFF, stringer);
					format(stringer, 144, "[F] %s sells the zone to a gang %s (%s)",PlayerInfo[playerid][pNames], GetPlayerFracName[PlayerInfo[playerd][pMember]], PlayerInfo[playerd][pNames]);
					SendFamilyMessage(PlayerInfo[playerd][pMember], COLOR_LIGHTRED, stringer);
					format(stringer, 100, "[F] %s buys a zone from a gang %s (%s)",PlayerInfo[playerd][pNames], GetPlayerFracName[PlayerInfo[playerid][pMember]], PlayerInfo[playerid][pNames]);
					SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, stringer);
					FrakCD1[PlayerInfo[playerd][pMember]] = 1;
				}
				else format(stringer,128,"%s declined an offer to buy a zone for %s Money", PlayerInfo[playerid][pNames], formatInt(price)), SendClientMessage(playerd,0x6495EDFF, stringer);
				DeletePVar(playerid, "PlayerZone");
				DeletePVar(playerid, "ZonePrice");
				DeletePVar(playerid, "ZoneID");
				return true;
			}
		case 1006:
			{
				new playerd = GetPVarInt(playerid, "PlayerDrugs"), narkid = GetPVarInt(playerid, "PlayerDrugsID"), price = GetPVarInt(playerid, "DrugsPrice"), gramm = GetPVarInt(playerid, "PlayerDrugsKG");
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < price)
					{
						format(stringer,128,"Player %s has insufficient funds", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
						DeletePVar(playerid, "PlayerDrugs");
						DeletePVar(playerid, "PlayerDrugsID");
						DeletePVar(playerid, "DrugsPrice");
						DeletePVar(playerid, "PlayerDrugsKG");
						return SendClientMessage(playerid, COLOR_GREY, "Insufficient funds");
					}
					PlayerInfo[playerid][pCash] -= price;
					GiveMoney(playerd, price);
					PlayerInfo[playerd][p_drugs][narkid] -= gramm;
					PlayerInfo[playerid][p_drugs][narkid] += gramm;
					format(stringer,144,"You sold the drug %s (%i grams) for %i Money. Drug %s in pocket: %i", Drugs[narkid][d_name],gramm, price, Drugs[narkid][d_name], PlayerInfo[playerd][p_drugs][narkid]), SendClientMessage(playerd,0x6495EDFF, stringer);
					format(stringer,144,"You bought drugs from %s'a %s (%i grams). Price: %i", PlayerInfo[playerd][pNames], Drugs[narkid][d_name],gramm, price), SendClientMessage(playerid,0x6495EDFF, stringer);
					format(stringer, 144, "%s took out the drugs and handed them over %s",PlayerInfo[playerd][pNames], PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
				}
				else format(stringer,128,"%s declined an offer to buy drugs from you", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
				DeletePVar(playerid, "PlayerDrugs");
				DeletePVar(playerid, "PlayerDrugsID");
				DeletePVar(playerid, "DrugsPrice");
				DeletePVar(playerid, "PlayerDrugsKG");
				return true;
			}
		case 1008:
			{
				new playerd = GetPVarInt(playerid, "HHouse"), price = GetPVarInt(playerid, "HHouseMoney");
				if(SELL[1][playerd] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "The player who sold you the house has left the game.");
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < price)
					{
						format(stringer,128,"Player %s does not have enough funds", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
						DeletePVar(playerid, "HHouse");
						DeletePVar(playerid, "HHouseMoney");
						SELL[1][playerd] = INVALID_PLAYER_ID;
						return SendClientMessage(playerid, COLOR_GREY, "Insufficient funds!");
					}
					PlayerInfo[playerid][pCash] -= price;
					GiveMoney(playerd, price);
					PlayerInfo[playerid][pPhousekey] = PlayerInfo[playerd][pPhousekey];
					strmid(HouseInfo[PlayerInfo[playerd][pPhousekey]][hOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
					PlayerInfo[playerd][pPhousekey] = 255;
					format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hOwner` = '%s' WHERE hID = '%i'",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pPhousekey]);
					mysql_function_query(connects, mysql_query_, false, "", "");
					if(caridhouse[playerd] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(caridhouse[playerd]);
						caridhouse[playerd] = INVALID_VEHICLE_ID;
						DeletePVar(playerd, "CarNomer");
					}
					if(caridhouse[playerid] == INVALID_VEHICLE_ID)
					{
						caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][1], 7200, 0);
						VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
						VEHICLE[caridhouse[playerid]][vLock] = 1;
						//if(PlayerInfo[playerid][pCar2] == 542 && PlayerInfo[playerid][pClover] == 1) SupremeCar(caridhouse[playerid]);
						LinkVehicleToInterior(caridhouse[playerid], 1);
		            	SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
						Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
						AddTune(playerid, 0);
						SetPVarInt(playerid, "CarNomer", 0);
					}
					format(stringer,144,"You sold the house for %s Money.", formatInt(price)), SendClientMessage(playerd,0x6495EDFF, stringer);
					format(stringer,144,"You bought a house from %s. Price: %s", PlayerInfo[playerd][pNames], formatInt(price)), SendClientMessage(playerid,0x6495EDFF, stringer);
					format(stringer, 144, "%s took out the documents for the house and handed them over %s",PlayerInfo[playerd][pNames], PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
				}
				else format(stringer,128,"%s declined an offer to buy your house", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
				SELL[1][playerd] = INVALID_PLAYER_ID;
				DeletePVar(playerid, "HHouse");
				DeletePVar(playerid, "HHouseMoney");
				return true;
			}
		case 1009:
			{
				new playerd = GetPVarInt(playerid, "PBizz"), price = GetPVarInt(playerid, "PBizzMoney");
				if(SELL[2][playerd] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "The player who sold you the business has left the game.");
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < price)
					{
						format(stringer,128,"Player %s does not have enough funds", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
						DeletePVar(playerid, "PBizz");
						DeletePVar(playerid, "PBizzMoney");
						SELL[2][playerd] = INVALID_PLAYER_ID;
						return SendClientMessage(playerid, COLOR_GREY, "Insufficient funds!");
					}
					PlayerInfo[playerid][pCash] -= price;
					GiveMoney(playerd, price);
					strmid(BizzInfo[GetPVarInt(playerd, "PlayerBizz")][bOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), MAX_PLAYER_NAME);
				    SaveBizz(GetPVarInt(playerd, "PlayerBizz"));
				    UpdateBizz(GetPVarInt(playerd, "PlayerBizz"));
					format(stringer,144,"You sold the business (%s) for %s Money.", BizzInfo[GetPVarInt(playerd, "PlayerBizz")][bName], formatInt(price)), SendClientMessage(playerd,0x6495EDFF, stringer);
					format(stringer,144,"You bought a business from %s'a (%s). Price: %s", PlayerInfo[playerd][pNames], BizzInfo[GetPVarInt(playerd, "PlayerBizz")][bName], formatInt(price)), SendClientMessage(playerid,0x6495EDFF, stringer);
					format(stringer, 144, "%s took out the business documents and handed them over %s",PlayerInfo[playerd][pNames], PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
				}
				else format(stringer,128,"%s declined an offer to buy your business", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
				SELL[2][playerd] = INVALID_PLAYER_ID;
				DeletePVar(playerid, "PBizz");
				DeletePVar(playerid, "PBizzMoney");
				return true;
			}
		case 1119:
			{
				if(!response) return true;
				if(IsAGang(playerid)) {
					if(GangInfo[PlayerInfo[playerid][pMember]][capture] > 0) {
						PlayerTextDrawHide(playerid, CaptureTD[playerid][0]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][1]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][2]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][3]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][4]);
						if(!PlayerInfo[playerid][pAlcoInvenxua]) ClearKillFeed(playerid);
					}
				}
				new query[256];
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pRank] = 0;
				PlayerInfo[playerid][pJob] = 0;
				PlayerInfo[playerid][pCash] -= 100000;
				PlayerInfo[playerid][pOdet] = 0;
				SetPlayerArmour(playerid,0);
				SetPlayerColor(playerid, 0xe6e6e6FF);
				SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
                SpawnPlayerEx(playerid);
				SendClientMessage(playerid, COLOR_BLUE, "You have left your organization, now you are a citizen!");
//				SendClientMessage(playerid, 0x6495EDFF, "������ �� ����� �����������...");
				format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `pJob` = '0', `odet` = '0', `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
				mysql_function_query(connects, query, false, "", "");
				return true;
			}
		case 1007:
			{
				new playerd = GetPVarInt(playerid, "PlayerGun"), weapon = GetPVarInt(playerid, "PlayerGun_"), price = GetPVarInt(playerid, "PlayerGPrice");
				if(response)
				{
					if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Selling weapons to level 1 players is prohibited!");
					if(PlayerInfo[playerid][pCash] < price)
					{
						format(stringer,100,"Player %s does not have enough funds", PlayerInfo[playerid][pNames]);
						SendClientMessage(playerd,0x6495EDFF, stringer);
						DeletePVar(playerid, "PlayerGun");
						DeletePVar(playerid, "PlayerGun_");
						DeletePVar(playerid, "PlayerGAmmo");
						DeletePVar(playerid, "PlayerGPrice");
						return SendClientMessage(playerid, COLOR_GREY, "Insufficient funds");
					}
					PlayerInfo[playerid][pCash] -= price;
					GiveMoney(playerd, price);
					PlayerInfo[playerd][pMats] -=GetPVarInt(playerid,"PlayerGAmmo");
					GiveWeapon(playerid,weapon,GetPVarInt(playerid,"PlayerGAmmo"));
					format(stringer,144,"You sold a weapon to %s for %s Money. Materials left: %i", PlayerInfo[playerid][pNames], formatInt(price), PlayerInfo[playerd][pMats]);
					SendClientMessage(playerd,0x6495EDFF, stringer);
					format(stringer,144,"You bought a weapon from %sc %i with ammunition. Price: %s", PlayerInfo[playerd][pNames], GetPVarInt(playerid, "PlayerGAmmo"), formatInt(price));
					SendClientMessage(playerid,0x6495EDFF, stringer);
					format(stringer, 144, "%s made a weapon and handed it over %s",PlayerInfo[playerd][pNames], PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
				}
				else format(stringer,128,"%s declined the offer to buy weapons from you", PlayerInfo[playerid][pNames]), SendClientMessage(playerd,0x6495EDFF, stringer);
				DeletePVar(playerid, "PlayerGun");
				DeletePVar(playerid, "PlayerGun_");
				DeletePVar(playerid, "PlayerGAmmo");
				DeletePVar(playerid, "PlayerGPrice");
				return true;
			}
			//============-----------------------------
		case 3444:
			{
				if(response)
				{
					new idd = strval(inputtext);
					if(idd == INVALID_PLAYER_ID)
					if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
					if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return	SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
					OldSkin[idd] = GetPlayerSkin(playerid);
					SetPlayerSkinEx(idd,80);
					PlayerInfo[idd][pKstyle] = 0;
					PlayerInfo[idd][pBoxstyle] = 0;
					PlayerInfo[idd][pKickstyle] = 1;
					format(stringer,sizeof(stringer), "started a Kick Boxing lesson with %s",PlayerInfo[idd][pNames]);
					udar[idd] = 0;
					SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
					SendMes(playerid,COLOR_GREEN,"You started the Kick Boxing lesson with %s",PlayerInfo[idd][pNames]);
					SendClientMessage(idd, COLOR_GREEN, "Start Kick Boxing training in the ring with a partner");
					return true;
				}
				else { return true; }
			}
		case 3441:
			{
				if(response)
				{
					new idd = strval(inputtext);
					if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
					if(!IsPlayerInRangeOfPoint(idd, 30.0,768.1588,6.5715,1000.7144)) return	SendClientMessage(playerid, COLOR_GRAD1, "Man not in the gym");
					OldSkin[idd] = GetPlayerSkin(playerid);
					if (PlayerInfo[playerid][pSex] == 1)
					{SetPlayerSkinEx(idd,204);}
					else {SetPlayerSkinEx(idd,203);}
					PlayerInfo[idd][pKstyle] = 1;
					PlayerInfo[idd][pBoxstyle] = 0;
					PlayerInfo[idd][pKickstyle] = 0;
					format(stringer,sizeof(stringer), "started the Kong Fu lesson with %s",PlayerInfo[idd][pNames]);
					udar[idd] = 0;
					SetPlayerChatBubble(playerid,stringer,COLOR_PURPLE,30.0,10000);
					SendMes(playerid,COLOR_GREEN,"You started your Kong Fu lesson with%s",PlayerInfo[idd][pNames]);
					SendClientMessage(idd, COLOR_GREEN, "Start your Kong Fu training at the pear on the right");
					return true;
				}
				else { return true; }
			}
		case 9195:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: ShowPlayerDialog(playerid,32250,1,"Information:","Put the first aid kits","Next","Cancle");
					case 1: ShowPlayerDialog(playerid,32256,1,"Information:","Put money","Next","Cancle");
					case 2: ShowPlayerDialog(playerid,32253,1,"Information:","Put materials","Next","Cancle");
					case 3: ShowPlayerDialog(playerid,32251,1,"Information:","Get first aid kits","Next","Cancle");
					case 4: ShowPlayerDialog(playerid,32254,1,"Information:","Take money","Next","Cancle");
					case 5: ShowPlayerDialog(playerid,32255,1,"Information:","Take materials","Next","Cancle");
					}
				}
				else
				{
					return true;
				}
			}
		case 32252: {
				if(response) {
					ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");}}
		case 32250:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32250,1,"{1e90ff}Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}No less than 1 or more than 5 first-aid kits!");
							if(PlayerInfo[playerid][pHeal] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that many first aid kits!");
							if(FracBank[0][fGroven] >= 10000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							FracBank[0][fGroven] += dengi;
							PlayerInfo[playerid][pHeal] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fGroven]", FracBank[0][fGroven]);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account with less than 1 and more than 5 first aid kits");
							if(PlayerInfo[playerid][pHeal] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD} You don't have that many first aid kits!");
							if(FracBank[0][fBallasn] >= 10000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							FracBank[0][fBallasn] += dengi;
							PlayerInfo[playerid][pHeal] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fBallasn]", FracBank[0][fBallasn]);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account with less than 1 and more than 5 first aid kits");
							if(PlayerInfo[playerid][pHeal] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that many first aid kits!");
							if(FracBank[0][fRifan] >= 10000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							FracBank[0][fRifan] += dengi;
							PlayerInfo[playerid][pHeal] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fRifan]", FracBank[0][fRifan]);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account with less than 1 and more than 5 first aid kits");
							if(PlayerInfo[playerid][pHeal] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that many first aid kits!");
							if(FracBank[0][fVagosn] >= 10000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							FracBank[0][fVagosn] += dengi;
							PlayerInfo[playerid][pHeal] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fVagosn]", FracBank[0][fVagosn]);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32250,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account with less than 1 and more than 5 first aid kits");
							if(PlayerInfo[playerid][pHeal] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that many first aid kits!");
							if(FracBank[0][fAztekn] >= 10000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							FracBank[0][fAztekn] += dengi;
							PlayerInfo[playerid][pHeal] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fAztekn]", FracBank[0][fAztekn]);
						}
					}
                    format(stringer1, 90, "{3399FF}%s [id %d] put it in the gang safe {66CC00}%i PCS. first aid kits", PlayerInfo[playerid][pNames], playerid, strval(inputtext));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
			}
		case 32256:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32256,1,"{1e90ff}Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot top up an account with less than 1 and more than 1,000,000 money");
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that much money!");
							if(FracBank[0][fGrove] >= 10000000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}gang safe overflowing!");
							FracBank[0][fGrove] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fGrove]", FracBank[0][fGrove]);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(FracBank[0][fBallas] >= 10000000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot top up an account with less than 1 and more than 1,000,000 money");
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that much money!");
							FracBank[0][fBallas] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fBallas]", FracBank[0][fBallas]);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(FracBank[0][fRifa] >= 10000000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot top up an account with less than 1 and more than 1,000,000 money");
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that much money!");
							FracBank[0][fRifa] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fRifa]", FracBank[0][fRifa]);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(FracBank[0][fVagos] >= 10000000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot top up an account with less than 1 and more than 1,000,000 money");
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that much money!");
							FracBank[0][fVagos] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fVagos]", FracBank[0][fVagos]);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(FracBank[0][fAztek] >= 10000000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32256,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot top up an account with less than 1 and more than 1,000,000 money");
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have that much money!");
							FracBank[0][fAztek] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fAztek]", FracBank[0][fAztek]);
						}
					}
					format(stringer1, 90, "{3399FF}%s [id %d] put it in the gang safe {66CC00}%s Money", PlayerInfo[playerid][pNames], playerid, formatInt(strval(inputtext)));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
			}
		case 32253:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32253,1,"{1e90ff}Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account less than 1 and more than 1000 materials");
							if(PlayerInfo[playerid][pMats] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have as many materials!");
							if(groovmatbi >= 300000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							groovmatbi += dengi;
							PlayerInfo[playerid][pMats] -= dengi;
							skladband();
							SetOtherInt("groovmatbi", groovmatbi);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account less than 1 and more than 1000 materials");
							if(PlayerInfo[playerid][pMats] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have as many materials!");
							if(ballasmatbi >= 300000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							ballasmatbi += dengi;
							PlayerInfo[playerid][pMats] -= dengi;
							skladband();
							SetOtherInt("ballasmatbi", ballasmatbi);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account less than 1 and more than 1000 materials");
							if(PlayerInfo[playerid][pMats] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have as many materials!");
							if(rifamatbi >= 300000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							rifamatbi += dengi;
							PlayerInfo[playerid][pMats] -= dengi;
							skladband();
							SetOtherInt("rifamatbi", rifamatbi);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account less than 1 and more than 1000 materials");
							if(PlayerInfo[playerid][pMats] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have as many materials!");
							if(vagosmatbi >= 300000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							vagosmatbi += dengi;
							PlayerInfo[playerid][pMats] -= dengi;
							skladband();
							SetOtherInt("vagosmatbi", vagosmatbi);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000) return ShowPlayerDialog(playerid,32253,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can not top up the account less than 1 and more than 1000 materials");
							if(PlayerInfo[playerid][pMats] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You don't have as many materials!");
							if(aztekmatbi >= 300000) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}The closet is full!");
							aztekmatbi += dengi;
							PlayerInfo[playerid][pMats] -= dengi;
							skladband();
							SetOtherInt("aztekmatbi", aztekmatbi);
						}
					}
					format(stringer1, 90, "{3399FF}%s [id %d] put in the safe of the gang {66CC00}%i materials", PlayerInfo[playerid][pNames], playerid, strval(inputtext));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
			}
		case 32251:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can take first-aid kits only from rank 1");
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot take less than 1 or more than 5 first aid kits!");
							if(FracBank[0][fGroven] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Grove doesn't have that many first aid kits");
							if(PlayerInfo[playerid][pHeal] >= 5) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							PlayerInfo[playerid][pHeal] += dengi;
							FracBank[0][fGroven] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fGroven]", FracBank[0][fGroven]);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can take first-aid kits only from rank 1");
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot take less than 1 or more than 5 first aid kits!");
							if(FracBank[0][fBallasn] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Ballas doesn't have that many first aid kits");
							if(PlayerInfo[playerid][pHeal] >= 5) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							PlayerInfo[playerid][pHeal] += dengi;
							FracBank[0][fBallasn] -= dengi;
							skladband();
							SetOtherInt("FracBank[0][fBallasn]", FracBank[0][fBallasn]);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can take first-aid kits only from rank 1");
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot take less than 1 or more than 5 first aid kits!");
							if(FracBank[0][fVagosn] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Vagos doesn't have that many first aid kits");
							if(PlayerInfo[playerid][pHeal] >= 5) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fVagosn] -= dengi;
							PlayerInfo[playerid][pHeal] += dengi;
							skladband();
							SetOtherInt("FracBank[0][fVagosn]", FracBank[0][fVagosn]);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can take first-aid kits only from rank 1");
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot take less than 1 or more than 5 first aid kits!");
							if(FracBank[0][fAztekn] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Varios Los Aztecas doesn't have that many first aid kits");
							if(PlayerInfo[playerid][pHeal] >= 5) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fAztekn] -= dengi;
							PlayerInfo[playerid][pHeal] += dengi;
							skladband();
							SetOtherInt("FracBank[0][fAztekn]", FracBank[0][fAztekn]);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can take first-aid kits only from rank 1");
							if(dengi < 1 || dengi > 5) return ShowPlayerDialog(playerid,32251,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot take less than 1 or more than 5 first aid kits!");
							if(FracBank[0][fRifan] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Rifa doesn't have that many first aid kits");
							if(PlayerInfo[playerid][pHeal] >= 5) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fRifan] -= dengi;
							PlayerInfo[playerid][pHeal] += dengi;
							skladband();
							SetOtherInt("FracBank[0][fRifan]", FracBank[0][fRifan]);
						}
					}
					format(stringer1, 90, "{3399FF}%s [id %d] took (a) from the safe of the gang {66CC00}%i pcs. first aid kits", PlayerInfo[playerid][pNames], playerid, strval(inputtext));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
				else return true;
			}
		case 32254:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"{1e90ff}Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}�You can only steal money from rank 8!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 1,000,000 money");
							if(FracBank[0][fGrove] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}don't have that many money!");
							if(PlayerInfo[playerid][pCash] >= 2000000) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fGrove] -= dengi;
							GiveMoney(playerid, dengi);
							skladband();
							SetOtherInt("FracBank[0][fGrove]", FracBank[0][fGrove]);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take money from rank 8!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 1,000,000 money");
							if(FracBank[0][fBallas] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}don't have that many money!");
							if(PlayerInfo[playerid][pCash] >= 2000000) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fBallas] -= dengi;
							GiveMoney(playerid, dengi);
							skladband();
							SetOtherInt("FracBank[0][fBallas]", FracBank[0][fBallas]);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take money from rank 8!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 1,000,000 money");
							if(FracBank[0][fRifan] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}don't have that many money!");
							if(PlayerInfo[playerid][pCash] >= 2000000) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fRifa] -= dengi;
							GiveMoney(playerid, dengi);
							skladband();
							SetOtherInt("FracBank[0][fRifa]", FracBank[0][fRifa]);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take money from rank 8!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 1,000,000 money");
							if(FracBank[0][fVagos] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}don't have that many money!");
							if(PlayerInfo[playerid][pCash] >= 2000000) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fVagos] -= dengi;
							GiveMoney(playerid, dengi);
							skladband();
							SetOtherInt("FracBank[0][fVagos]", FracBank[0][fVagos]);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take money from rank 8!");
							if(dengi < 1 || dengi > 1000000) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 1,000,000 money");
							if(FracBank[0][fAztek] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You can only take money from rank 8!");
							if(PlayerInfo[playerid][pCash] >= 2000000) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							FracBank[0][fAztek] -= dengi;
							GiveMoney(playerid, dengi);
							skladband();
							SetOtherInt("FracBank[0][fAztek]", FracBank[0][fAztek]);
						}
					}
					format(stringer1, 90, "{3399FF}%s [id %d] took it from the gang's warehouse {66CC00}%s Money", PlayerInfo[playerid][pNames], playerid, formatInt(strval(inputtext)));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
				else
				{
					return true;
				}
			}
		case 32255:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"{1e90ff}Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take materials from rank 1!");
							if(dengi < 1 || dengi > 5500) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 5500 materials!");
							if(groovmatbi < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Only materials are missing in the closet!");
							if(PlayerInfo[playerid][pMats] >= 5500) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							groovmatbi -= dengi;
							PlayerInfo[playerid][pMats] += dengi;
							skladband();
							SetOtherInt("groovmatbi", groovmatbi);
						}
					case 12:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take materials from rank 1!");
							if(dengi < 1 || dengi > 5500) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 5500 materials!");
							if(ballasmatbi < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Only materials are missing in the closet!");
							if(PlayerInfo[playerid][pMats] >= 5500) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							ballasmatbi -= dengi;
							PlayerInfo[playerid][pMats] += dengi;
							skladband();
							SetOtherInt("ballasmatbi", ballasmatbi);
						}
					case 18:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take materials from rank 1!");
							if(dengi < 1 || dengi > 5500) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 5500 materials!");
							if(rifamatbi < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Only materials are missing in the closet!");
							if(PlayerInfo[playerid][pMats] >= 5500) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							rifamatbi -= dengi;
							PlayerInfo[playerid][pMats] += dengi;
							skladband();
							SetOtherInt("rifamatbi", rifamatbi);
						}
					case 13:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take materials from rank 1!");
							if(dengi < 1 || dengi > 5500) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 5500 materials!");
							if(vagosmatbi < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Only materials are missing in the closet!");
							if(PlayerInfo[playerid][pMats] >= 5500) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							vagosmatbi -= dengi;
							PlayerInfo[playerid][pMats] += dengi;
							skladband();
							SetOtherInt("vagosmatbi", vagosmatbi);
						}
					case 17:
						{
							if(!strlen(inputtext)) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle");
							new dengi;
							dengi = strval(inputtext);
							if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,-1,"{F70000}x {ADAEAD}You can only take materials from rank 1!");
							if(dengi < 1 || dengi > 5500) return ShowPlayerDialog(playerid,32254,1,"Information:","","Next","Cancle"), SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}You cannot withdraw an account less than 1 and more than 5500 materials!");
							if(aztekmatbi < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"{F70000}x {ADAEAD}Only materials are missing in the closet!");
							if(PlayerInfo[playerid][pMats] >= 5500) return SendClientMessage(playerid, COLOR_GREY, "Can't take more");
							aztekmatbi -= dengi;
							PlayerInfo[playerid][pMats] += dengi;
							skladband();
							SetOtherInt("aztekmatbi", aztekmatbi);
						}
					}
					format(stringer1, 90, "{3399FF}%s [id %d] took from the gang safe {66CC00}%i materials", PlayerInfo[playerid][pNames], playerid, strval(inputtext));
			        SendFamilyMessage(PlayerInfo[playerid][pMember], -1, stringer1);
				}
				else
				{
					return true;
				}
			}
		case 1775:
			{
				if(!response) return true;
				PlayerInfo[playerid][pJob] = 13;
				SendClientMessage(playerid, COLOR_WHITE, "You have been successfully hired as a Car Theft Driver");
				return SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
			}
		case 7983: {
			if(!response) {
				PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pTargetPlayer] = -1;
				PlayerInfo[playerid][pSelectPlayer] = -1;
				return true;
			}
			new string[144];
			switch(listitem) {
				case 0: {
					format(string, sizeof(string), "{0099CC}%s offered to shake your hand.", PlayerInfo[playerid][pNames]);
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}You offered to shake hands %s", PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pNames]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}Press {03c03c}Y {FFFFFF}to accept the offer or {ff7518}N {FFFFFF}to refuse.", PlayerInfo[playerid][pNames]);
					PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pTargetAction] = 1;
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
				}
				case 1: {
					format(string, sizeof(string), "{0099CC}%s offered to show you my passport.", PlayerInfo[playerid][pNames]);
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}You offered to show the player's passport %s", PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pNames]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}Press {03c03c}Y {FFFFFF}to accept the offer or {ff7518}N {FFFFFF}to refuse.", PlayerInfo[playerid][pNames]);
					PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pTargetAction] = 2;
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
				}
				case 2: {
					format(string, sizeof(string), "{0099CC}%s offered to show you the licenses.", PlayerInfo[playerid][pNames]);
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}You offered to show the licenses to the player %s", PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pNames]);
					SendClientMessage(playerid, COLOR_WHITE, string);
                    format(string, sizeof(string), "{FFFFFF}Press {03c03c}Y {FFFFFF}to accept the offer or {ff7518}N {FFFFFF}to refuse.", PlayerInfo[playerid][pNames]);
					PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pTargetAction] = 3;
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
					}
				case 3: {
					format(string, sizeof(string), "{0099CC}%s offered to show you his weapon skills.", PlayerInfo[playerid][pNames]);
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFFFF}You offered to show the player's weapon skills %s", PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pNames]);
					SendClientMessage(playerid, COLOR_WHITE, string);
                    format(string, sizeof(string), "{FFFFFF}Press {03c03c}Y {FFFFFF}to accept the offer or {ff7518}N {FFFFFF}to refuse.", PlayerInfo[playerid][pNames]);
					PlayerInfo[PlayerInfo[playerid][pSelectPlayer]][pTargetAction] = 4;
					SendClientMessage(PlayerInfo[playerid][pSelectPlayer], COLOR_WHITE, string);
				}
			}
			return true;
		}
		case 793:
		    {
				if(response && (listitem == 0 || listitem == 1))
				{
					new page;
					if(!listitem) page = GetPVarInt(playerid, #page_str)*15;
					else page = (GetPVarInt(playerid, #page_str)-2)*15;
					if(listitem == 1 && page == -15) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}There are no more pages!");
					mysql_format(connects, mysql_query_,sizeof(mysql_query_) ,"SELECT `Name`, `pGetonDate`, `pOnline` FROM `"TABLE_ACCOUNT"` WHERE `pGetonIP` = '%s' ORDER BY `Name` DESC LIMIT %d,15",check_getip,page);
					if(!listitem) mysql_tquery(connects, mysql_query_, "Logs", "ddd",playerid, 3, GetPVarInt(playerid, #page_str)+1);
					else if(page != 0) mysql_tquery(connects, mysql_query_, "Logs", "ddd",playerid, 3, GetPVarInt(playerid, #page_str)-1);
					else mysql_tquery(connects, mysql_query_, "Logs", "ddd",playerid, 3, page+1);
					return true;
				}
				DeletePVar(playerid, #page_str);
				strmid(check_getip, "", 0, strlen(""), 32);
				return true;
		    }
		case 758:
			{
				if(!response) return DeletePVar(playerid, #page_str);
				if(listitem == 0 || listitem == 1)
				{
					new page;
					if(!listitem) page = GetPVarInt(playerid, #page_str)*15;
					else page = (GetPVarInt(playerid, #page_str)-2)*15;
					if(listitem == 1 && page == -15) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}There are no more pages!");
					mysql_format(connects, mysql_query_,sizeof(mysql_query_) ,"SELECT `pMember`,`pRank`,`Name`,`pGetonDate`,`pID` FROM `"TABLE_ACCOUNT"` WHERE `pMember` = '%d' AND `pLeader` = '0' AND `pOnline` = '1001' ORDER BY `pRank` DESC LIMIT %d,15",PlayerInfo[playerid][pMember],page);
					if(!listitem) mysql_tquery(connects, mysql_query_, "OnLeaderPanel", "dd",playerid, GetPVarInt(playerid, #page_str)+1);
					else if(page != 0) mysql_tquery(connects, mysql_query_, "OnLeaderPanel", "dd",playerid, GetPVarInt(playerid, #page_str)-1);
					else mysql_tquery(connects, mysql_query_, "OnLeaderPanel", "dd",playerid, page+1);
				}
				else
				{
					page_number[playerid] = listitem-2;
					mysql_format(connects, mysql_query_,sizeof(mysql_query_),"SELECT `Name`,`pGetonDate`,`pRank`,`vigs` FROM `"TABLE_ACCOUNT"` WHERE `pID` = '%d'",page_identifier[playerid][page_number[playerid]]);
					mysql_tquery(connects, mysql_query_, "OFFStats", "d", playerid);
				}
				return true;
			}
		case 759:
			{
				if(!response) return 1;
				if(listitem > 3) {
					mysql_format(connects, mysql_query_,sizeof(mysql_query_),"SELECT `Name`,`pRank`,`vigs` FROM `"TABLE_ACCOUNT"` WHERE `pID` = '%d'",page_identifier[playerid][page_number[playerid]]);
					mysql_tquery(connects, mysql_query_, "OFFLP_DATA", "ddd", playerid, page_identifier[playerid][page_number[playerid]], listitem);
				}
				else {
					mysql_format(connects, mysql_query_,sizeof(mysql_query_),"SELECT `Name`,`pGetonDate`,`pRank`,`vigs` FROM `"TABLE_ACCOUNT"` WHERE `pID` = '%d'",page_identifier[playerid][page_number[playerid]]);
					mysql_tquery(connects, mysql_query_, "OFFStats", "d", playerid);
				}
				return true;
			}
			//-------------- ------------------------- [ ������� ]--------------
		case 3002:
			{

				if(response)
				{
					if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Price for Calls and SMS","Enter the amount","Ok","Cancle");
					new moneys = strval(inputtext);
					if(moneys < 1 || moneys > 5000)
					{
						SendClientMessage(playerid, COLOR_GREY, "Minimum amount - 1, maximum - 5000!");
						ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Price for Calls and SMS","Enter the amount","Ok","Cancle");
						return 1;
					}

					format(stringer, sizeof(stringer), "[SN] Price for Calls and SMS, in the amount of %d Money. installed by the Editor-in-Chief %s.", moneys, PlayerInfo[playerid][pNames]);
					SendFamilyMessage(16,COLOR_YELLOW2, stringer);
					smspricels = moneys;
					return 1;
				}
				else
				{
					return 1;
				}
			}
		case 32:
			{
				if(response)
				{
					if(!strlen(inputtext))
					{
						ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Price per ad","Enter amount","Ok","Cancle");
					}
					new moneys = strval(inputtext);
					if(moneys < 1 || moneys > 5000)
					{
						SendClientMessage(playerid, COLOR_GREY, "Minimum amount - 1, maximum - 5000!");
						ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Price per ad","Enter amount","Ok","Cancle");
						return 1;
					}
					format(stringer, sizeof(stringer), "The price for advertisements is %d Money. Set by the Editor-in-Chief %s.", moneys, PlayerInfo[playerid][pNames]);
					SendFamilyMessage(16,COLOR_YELLOW2, stringer);
					addd = moneys;
					return 1;
				}
				else
				{
					return 1;
				}
			}
		case 2224:
			{
				if(response)
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(listitem == 0) { ShowAdvertList(playerid); }
					if(listitem == 1)
					{
						if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1]) { } else { SendClientMessage(playerid, COLOR_GREY, "You are not in a reporter's car/helicopter!"); return true;}
						if(PEfir[playerid] != 999)
						{
							PEfir[playerid] = 999;
							format(stringer, sizeof(stringer), "[SN] %s went live", PlayerInfo[playerid][pNames]);
							SendFamilyMessage(16,COLOR_BLUE, stringer);
						}
						else SendClientMessage(playerid, COLOR_WHITE, "You're already on air");
					}
					if(listitem == 2)
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							format(stringer, sizeof(stringer), "[SN] %s kicked out of the live broadcast", PlayerInfo[playerid][pNames]);
							SendFamilyMessage(16,COLOR_BLUE, stringer);
							return true;
						}
						else SendClientMessage(playerid, COLOR_GRAD1, "You're off the air");
					}
					if(listitem == 3)
					{
						format(stringer, sizeof(stringer), "[SN] %s started accepting calls from listeners", PlayerInfo[playerid][pNames]);
						SendFamilyMessage(16,COLOR_BLUE, stringer);
						smsls = 1;
						return true;
					}
					if(listitem == 4)
					{
						format(stringer, sizeof(stringer), "[SN] %s finished receiving calls from listeners", PlayerInfo[playerid][pNames]);
						SendFamilyMessage(16,COLOR_BLUE, stringer);
						smsls = 0;
						return true;
					}
					if(listitem == 5)
					{
						if(PlayerInfo[playerid][pLeader] ==16)return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Price for Calls and SMS to number 11888","Enter amount","Ok","Cancle");
					}
					if(listitem == 6)
					{
						if(PlayerInfo[playerid][pLeader] ==16)return ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Advertising Price","Enter Amount","Ok","Cancle");
					}
				}
				else
				{
					return true;
				}
			}
		case 11518:
			{
				if(!response) return 1;
				if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked]) return ShowAdvertList(playerid);
				SetPVarInt(playerid,"editadvert",listitem);
				gAdvert[listitem][adCheking] = true;
				format(stringer,sizeof(stringer),"%s\n[1]Send\n[2]Edit\n[3]Delete and send to administration\n[4]Delete",gAdvert[listitem][adText]);
				ShowPlayerDialog(playerid,11519,2,gAdvert[listitem][adSender],stringer,"Ok","Cancle");
			}
		case 11519:
			{
				new iddd = GetPVarInt(playerid,"editadvert");
				if(!response)
				{
					gAdvert[iddd][adCheking] = false;
					return ShowAdvertList(playerid);
				}
				switch(listitem)
				{
				case 1:
					{
						gAdvert[iddd][adTime] = gAdvertTime;
						gAdvertTime += 30;
						format(gAdvert[iddd][adCheker],MAX_PLAYER_NAME,"%s",PlayerInfo[playerid][pNames]);
						gAdvert[iddd][adCheking] = false;
						gAdvert[iddd][adCheked] = true;
						GiveMoney(playerid, 25000);
						ShowAdvertList(playerid);
					}
				case 2:
					{
						ShowPlayerDialog(playerid,11511,1,gAdvert[iddd][adSender],gAdvert[iddd][adText],"OK","Cancle");
					}
				case 3:
					{
						format(stringer1,sizeof(stringer1),"[AD] %s: %s (sent: %s[%d])",gAdvert[iddd][adSender],gAdvert[iddd][adText], PlayerInfo[playerid][pNames],playerid);
						SendAdminMessage(COLOR_YELLOW,stringer1);
						SendClientMessage(playerid,COLOR_YELLOW,stringer1);
						strdel(gAdvert[iddd][adSender],0,24);
						gAdvert[iddd][adPhone] = 0;
						strdel(gAdvert[iddd][adText],0,100);
						strdel(gAdvert[iddd][adCheker],0,24);
						gAdvert[iddd][adBusy] = false;
						gAdvert[iddd][adCheked] = false;
						gAdvert[iddd][adCheking] = false;
						gAdvert[iddd][adTime] = 0;
						if(gAdvertCount > 0) gAdvertCount--;
						ShowAdvertList(playerid);
					}
				case 4:
					{
						strdel(gAdvert[iddd][adSender],0,24);
						gAdvert[iddd][adPhone] = 0;
						strdel(gAdvert[iddd][adText],0,100);
						strdel(gAdvert[iddd][adCheker],0,24);
						gAdvert[iddd][adBusy] = false;
						gAdvert[iddd][adCheked] = false;
						gAdvert[iddd][adCheking] = false;
						gAdvert[iddd][adTime] = 0;
						if(gAdvertCount > 0) gAdvertCount--;
						ShowAdvertList(playerid);
					}
				default: {gAdvert[iddd][adCheking] = false; ShowAdvertList(playerid);}
				}
			}
		case 11511:
			{
				new iddd = GetPVarInt(playerid,"editadvert");
				if(!response)
				{
					gAdvert[iddd][adCheking] = false;
					return ShowAdvertList(playerid);
				}
				if(IsAIP(inputtext))
				{
					SendClientMessage(playerid, -1, "Suspicion of advertising!");
					gAdvert[iddd][adCheking] = false;
					return true;
				}
				format(gAdvert[iddd][adText],100,"%s",inputtext);
				gAdvert[iddd][adTime] = gAdvertTime;
			    gAdvertTime += 30;
				format(gAdvert[iddd][adCheker],MAX_PLAYER_NAME,"%s",PlayerInfo[playerid][pNames]);
				gAdvert[iddd][adCheking] = false;
				gAdvert[iddd][adCheked] = true;
				ShowAdvertList(playerid);
			}
			//------------------------------------- [ jobs ]-------------------------------------------
		case 10092:
			{
				if(response)
				{
					useguns[playerid] = 1;
					ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "Device to work"," Mechanic (( 2 lvl ))\n Taxi driver (( 2 lvl ))\n Hot dog seller (( 3 lvl )\n Incosator (( 3 lvl ))\n Carrier of products (( 4 lvl ))\n Trainer (( 5 lvl ))", "Selcet", "Exit");
					return true;
				}
				else { return true; }
			}
		case 70:
			{
			    new house = PlayerInfo[playerid][pPhousekey];
				if(response)
				{
					for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
						{
							if(GetPlayerVirtualWorld(playerid) == i+50)
							{
								SetPlayerInteriorEx(playerid,0);
								SetPlayerVirtualWorldEx(playerid,0);
								SetPPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
								PlayerInfo[playerid][pLocal] = 255;
								SetPVarInt(playerid, "ExitHouse",1);
								return true;
							}
						}
					}
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 20.0,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz])) return SendClientMessage(playerid, COLOR_GRAD1,"You can only enter the garage in your own home..");
					SetPlayerInteriorEx(playerid, 1);
					SetPlayerVirtualWorldEx(playerid, house+50);
					SetPPos(playerid,2548.1746,-1541.5149,2023.58590);
					SetPlayerFacingAngle(playerid, 359.3530);
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 2900, 0, "d", playerid);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				return true;
			}
		case 76:
		    {
				if(!response)
				{
					SendClientMessage(playerid, -1, "You declined the invite");
					SendClientMessage(GetPVarInt(playerid, "Player"),-1,"The player declined the invite");
					DeletePVar(playerid, "Player");
					return 1;
				}
				new ids = GetPVarInt(playerid, "Player");
				if(!PlayerInfo[ids][pMember]) return DeletePVar(playerid, "Player");
				for(new i;i<12;i++)
				{
					new skinid = gFractionSkin[PlayerInfo[ids][pMember]-1][i];
					if(!skinid) break;
					if(!i) format(stringer,sizeof(stringer),"Skin %d [%d]",i+1,skinid);
					else format(stringer,sizeof(stringer),"%s\nSkin %d [%d]",stringer,i+1,skinid);
				}
				ShowPlayerDialog(ids,1144,2,PlayerInfo[playerid][pNames],stringer,"OK","");
				SendClientMessage(playerid,COLOR_WHITE,"Wait, the leader is choosing a skin for you");
				SetPlayerToTeamColor(playerid);
				SetPVarInt(ids,"Player",playerid);
				DeletePVar(playerid, "Player");
				return 1;
		    }
    		case 700:
			{
			    if(!response) return true;
			    switch(listitem)
			    {
       				case 0:
			        {
						ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_MSGBOX, "The task - #0", "{00FF00}Always on style\n\n{FFFFFF}Reward:\n+20 EXP\n{CD853F}+100 Donate Points\n\n{00FF00}Description:\n{00FF00}Buy clothes from a clothing store (/gps -> 4 -> 6)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
			        case 1:
			        {
						ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_MSGBOX, "The task - #1", "{00FF00}Home, lovely home\n\n{ffffff}Reward:\n{FFFFFF}+20 EXP\n{CD853F}+1000 Donate Points\n\n{00FF00}Description:\n{00FF00}Drink the house in Los-Santos\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 2:
					{
						ShowPlayerDialog(playerid, 2002, DIALOG_STYLE_MSGBOX, "The task - #2", "{00FF00}This is the starting point, chuvak!\n\n{ffffff}Reward:\n{FFFFFF}+20 EXP\n{CD853F}+500 Donate Points\n\n{00FF00}Description:\n{00FF00}Enjoy your car in any car (/gps -> 6)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
		            }
					case 3:
					{
						ShowPlayerDialog(playerid, 2003, DIALOG_STYLE_MSGBOX, "The task - #3", "{00FF00}Room by car\n\n{ffffff}Reward:\n{FFFFFF}+10 EXP\n{CD853F}+1000 Donate Points\n\n{00FF00}Description:\n{00FF00}Enjoy your car in any car (/gps -> 1 -> 4)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 4:
					{
						ShowPlayerDialog(playerid, 2004, DIALOG_STYLE_MSGBOX, "The task - #4", "{00FF00}Start to load\n\n{ffffff}Reward:\n{FFFFFF}+1 LVL\n+30 EXP\n{CD853F}+100 Donate Points\n\n{00FF00}Description:\n{00FF00}Run your car in the car (/gps -> 4 -> 8 -> 1)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 5:
					{
						ShowPlayerDialog(playerid, 2005, DIALOG_STYLE_MSGBOX, "The task - #5", "{00FF00}Other accessories\n\n{ffffff}Reward:\n{FFFFFF}+10 EXP\n{CD853F}+700 Donate Points\n\n{00FF00}Description:\n{00FF00} Drink any accessory in the accessory store (/gps -> 4 -> 9)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 6:
					{
						ShowPlayerDialog(playerid, 2006, DIALOG_STYLE_MSGBOX, "The task - #6", "{00FF00}First spray\n\n{FFFFFF}Reward:\n+10 EXP\n{CD853F}+600 Donate Points\n\n{00FF00}Description:\n{00FF00}Drink Anything From AmmoNation (/gps -> 4 -> 7)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 7:
					{
						ShowPlayerDialog(playerid, 2007, DIALOG_STYLE_MSGBOX, "The task - #7", "{00FF00}Get your skills!\n\n{FFFFFF}Reward:\n+30 EXP\n{CD853F}+3000 Donate Points\n\n{00FF00}Description:\n{00FF00}Take a study at one time from the server: PaintBall, Redumping, Mark, Debaby, Tonki\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 8:
					{
						ShowPlayerDialog(playerid, 2008, DIALOG_STYLE_MSGBOX, "The task - #8", "{00FF00}Choose your path\n\n{FFFFFF}Reward:\n+2 LVL\n{CD853F}+1000 Donate Points\n\n{00FF00}Description:\n{00FF00}Enter into any function.\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 9:
					{
						ShowPlayerDialog(playerid, 2009, DIALOG_STYLE_MSGBOX, "The task - #9", "{00FF00}Let's feed the ball\n\n{FFFFFF}Reward:\n+25 EXP\n{CD853F}+1500 Donate Points\n\n{00FF00}Description:\n{00FF00}Play in casino LS (/gps -> 1 -> 10)\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 10:
					{
						ShowPlayerDialog(playerid, 2010, DIALOG_STYLE_MSGBOX, "The task - #10", "{00FF00}About all life\n\n{FFFFFF}Reward:\n+5 LVL\n+60 EXP\n{CD853F}+4000 Donate Points\n\n{00FF00}Description:\n{00FF00}Drink any food in the same city.\n\n{ffffff}Click on the button {FF8C00}\'Take\'{ffffff} to get a prize!", "Take", "Back");
					}
					case 11:
					{
						ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{cccccc}Information", "{cccccc}Complete our new quests and earn\non this donat points, rubles, game level and other goodies", "Ok", "");
					}
			    }
			}
/*        case 1144:
			{
				if(!response) return 1;
				new actplayerid = GetPVarInt(playerid, "Player");
				new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][listitem];
				new string[144];
				PlayerInfo[actplayerid][pMember] = PlayerInfo[playerid][pMember];
				PlayerInfo[actplayerid][pRank] = 1;
				PlayerInfo[actplayerid][pModel] = skinid;
				PlayerInfo[actplayerid][pJob] = 0;
				if(!PlayerInfo[actplayerid][pAlcoInvenxua]) PlayerInfo[actplayerid][pVigs] = 0;
				SetPlayerToTeamColor(playerid);
				SendMes(playerid,-1,"%s ��� ������ �� ������� \"%s\"",PlayerInfo[actplayerid][pNames],GetPlayerFracName[PlayerInfo[actplayerid][pMember]]);
				SendMes(playerid,-1,"�� ���� ������� �� ������� \"%s\"",GetPlayerFracName[PlayerInfo[actplayerid][pMember]]);
    			if(PlayerInfo[playerid][pQuest9] == 0)
       			{
          			PlayerInfo[playerid][pQuest9] = 1;
            		UpdatePlayerData(playerid, "pQuest9", PlayerInfo[playerid][pQuest9]);
       			}
				format(string, sizeof(string), "%s ����� ���� �����������!", PlayerInfo[actplayerid][pNames]);
				SendRadioMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
				SetPlayerSkinEx(actplayerid,skinid);
				switch(PlayerInfo[actplayerid][pMember])
				{
					case 1..4, 7, 10, 11, 19, 21, 25, 26: PlayerInfo[actplayerid][pOdet] = 1, SendClientMessage(actplayerid,COLOR_BLUE,"��� ������� ���� ������� �����!");
				}
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '%d', `pRank` = '1', `pJob` = '0', `pModel` = '%d', `odet` = '%d', `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[actplayerid][pMember],skinid,PlayerInfo[actplayerid][pOdet],PlayerInfo[actplayerid][pVigs],PlayerInfo[actplayerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				DeletePVar(playerid, "Player");
				return 1;
			}*/
	        case 1144:
            {
                if(!response) return 1;
                new actplayerid = GetPVarInt(playerid, "Player");
                new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][listitem];
                PlayerInfo[actplayerid][pMember] = PlayerInfo[playerid][pMember];
                PlayerInfo[actplayerid][pRank] = 1;
                PlayerInfo[actplayerid][pModel] = skinid;
                PlayerInfo[actplayerid][pJob] = 0;
                if(!PlayerInfo[actplayerid][pAlcoInvenxua]) PlayerInfo[actplayerid][pVigs] = 0;
                SetPlayerToTeamColor(playerid);
                SendMes(playerid,COLOR_LIGHTBLUE,"%s acceptes your invite to %s",PlayerInfo[actplayerid][pNames],GetPlayerFracName[PlayerInfo[actplayerid][pMember]]);
                SendMes(playerid,COLOR_LIGHTBLUE,"%s invites you to the faction \"%s\"",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[actplayerid][pMember]]);
                if(PlayerInfo[playerid][pQuest9] == 0)
                   {
                      PlayerInfo[playerid][pQuest9] = 1;
                      UpdatePlayerData(playerid, "pQuest9", PlayerInfo[playerid][pQuest9]);
                   }
                SetPlayerSkinEx(actplayerid,skinid);
                SetPlayerToTeamColor(actplayerid);
                switch(PlayerInfo[actplayerid][pMember])
                {
                    case 1..4, 7, 10, 11, 19, 21, 25, 26: PlayerInfo[actplayerid][pOdet] = 1, SendClientMessage(actplayerid,COLOR_BLUE,"Your working day has started successfully!");
                }
                format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '%d', `pRank` = '1', `pJob` = '0', `pModel` = '%d', `odet` = '%d', `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[actplayerid][pMember],skinid,PlayerInfo[actplayerid][pOdet],PlayerInfo[actplayerid][pVigs],PlayerInfo[actplayerid][pID]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                DeletePVar(playerid, "Player");
                return 1;
            }
		case 10022:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pVodPrava] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "You already have a car license!");
					if(PlayerInfo[playerid][pCash] < 500) return  SendClientMessage(playerid, COLOR_GREY, "You don't have enough money!");
					SendClientMessage(playerid, 0x5aa8e0FF, "Car License Test Startedgo outside and get into the car.");
					SendClientMessage(playerid, 0x5aa8e0FF, "go outside and get into the car.");
					PlayerInfo[playerid][pCash]-=350;
					LessonStat[playerid] = 0;
					LessonCar[playerid] = 1;
					TakingLesson[playerid] = 1;
					SetPlayerRaceCheckpoint(playerid, 1, -2077.2729,-92.4760,34.1641,-2077.2729,-92.4760,35.1641, 6.0);
					return true;
				}
				else { return true; }
			}
		case 10099:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pJob] != 15)
					{
						PlayerInfo[playerid][pJob] = 15;
						SendClientMessage(playerid, COLOR_WHITE, "You were successfully recruited by DiskJokey [DJ].");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in /mm to see commands..");
					}
					else return SendClientMessage(playerid,COLOR_GREY,"You are already a DJ. ");
				}
			}
		case 10098:
			{
				if(response)
				{
					useguns[playerid] = 0;
					if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "You are a member of the organization ");
					if(listitem == 0)
					{
						if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "You need level 2!");
						PlayerInfo[playerid][pJob] = 2;
						SendClientMessage(playerid, COLOR_WHITE, "You were successfully hired as a mechanic.");
						SendClientMessage(playerid, 0x6495EDFF, "Type /mm to see commands. ");
						SendClientMessage(playerid, 0x6495EDFF, "To hitch a car, enter /trailer next to it");
						return true;
					}
					else if(listitem == 1)
					{
						if(PlayerInfo[playerid][pLevel] < 2) return 	SendClientMessage(playerid, COLOR_GRAD1, "You need level 2!");
						PlayerInfo[playerid][pJob] = 4;
						SendClientMessage(playerid, COLOR_WHITE, "You were successfully hired as a taxi driver.");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
						return true;
					}
					else if(listitem == 2)
					{
						if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GRAD1, "You need level 3!");
						PlayerInfo[playerid][pJob] = 3;
						SendClientMessage(playerid, COLOR_WHITE, "You have been successfully hired as a hot dog seller.");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
						return true;
					}
					else if(listitem == 3)
					{
						if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GRAD1, "You need level 3!");
						PlayerInfo[playerid][pJob] = 8;
						SendClientMessage(playerid, COLOR_WHITE, "You have been successfully hired by");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
						return true;
					}
					else if(listitem == 4)
					{
						if(PlayerInfo[playerid][pLevel] < 4) return	SendClientMessage(playerid, COLOR_GRAD1, "You need level 4!");
						PlayerInfo[playerid][pJob] = 5;
						SendClientMessage(playerid, COLOR_WHITE, "You have been successfully hired as a grocery distributor.");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
						return true;
					}
					else if(listitem == 5)
					{
						if(PlayerInfo[playerid][pLevel] < 5) return	SendClientMessage(playerid, COLOR_GRAD1, "You need level 5!");
						PlayerInfo[playerid][pJob] = 6;
						SendClientMessage(playerid, COLOR_WHITE, "You were successfully hired as a trainer");
						SendClientMessage(playerid, 0x6ab1ffaa, "Type in / mm to see commands.");
						return true;
					}
				}
				else
				{
					useguns[playerid] = 0;
					return true;
				}
			}
			//============================/healid � �������======================
		case 5522:
			{
				if(response)
				{
					new Float:tempheal;
					GetPlayerHealth(playerid,tempheal);
					if(tempheal >= 100.0) return SendClientMessage(HealOffer[playerid], COLOR_GRAD1,"This person is healthy!");
					if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return 	SendClientMessage(HealOffer[playerid], COLOR_GREY, "This person does not have so much money on hand!");
					GiveMoney(HealOffer[playerid], HealPrice[playerid]);
					PlayerInfo[playerid][pCash] -=HealPrice[playerid];
					SendMes(HealOffer[playerid],0x6ab1ffaa,"You cured %s for %d Money",PlayerInfo[playerid][pNames], HealPrice[playerid]);
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					format(stringer, sizeof(stringer), "~g~+100hp", playerid);
					GameTextForPlayer(playerid, stringer, 5000, 1);
					SetPlayerHealthAC(playerid, 100);
					if(PlayerInfo[playerid][pHospital] == 1) PlayerInfo[playerid][pHospital] = 0, SendClientMessage(playerid,COLOR_GREEN,"The medic has accelerated your course of treatment. You can now leave the hospital.");
					return true;
				}
				else { return true; }
			}
		case 6622:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < FreePrice[playerid])
					{
						SendClientMessage(FreeOffer[playerid], COLOR_GREY, "This man doesn't have that much money in his hands!");
						SendClientMessage(playerid, COLOR_GREY, "You don't have that much money!");
						return true;
					}
					GiveMoney(FreeOffer[playerid], FreePrice[playerid]);
					PlayerInfo[playerid][pCash] -=FreePrice[playerid];
					SendMes(playerid,0x6ab1ffaa,"Lawyer %s released you for %s Money!",PlayerInfo[FreeOffer[playerid]][pNames], formatInt(FreePrice[playerid]));
					SendMes(FreeOffer[playerid],0x6ab1ffaa,"You released %s for %s Money!",PlayerInfo[playerid][pNames], formatInt(FreePrice[playerid]));
					SetPlayerInteriorEx(playerid, 0);
					SetPPos(playerid,1553.4962,-1675.2714,16.1953);//������
					SetPlayerFacingAngle(playerid, 95.0636);
					PlayerInfo[playerid][pJailTime] = 0;
					PlayerInfo[playerid][pJailed] = 0;
					PlayerInfo[playerid][pUsedJail] = 0;
					format(stringer, sizeof(stringer), "~g~Freedom");
					PlayerInfo[playerid][pWanted] = 0;
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerVirtualWorldEx(playerid, 0);
					GameTextForPlayer(playerid, stringer, 5000, 1);
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pBank] < FreePrice[playerid])
					{
						SendClientMessage(FreeOffer[playerid], COLOR_GREY, "This man doesn't have that much money in the bank!");
						SendClientMessage(playerid, COLOR_GREY, "You don't have that much money!");
						return true;
					}
					GiveMoney(FreeOffer[playerid], FreePrice[playerid]);
					PlayerInfo[playerid][pBank] -=FreePrice[playerid];
					SendMes(playerid,0x6ab1ffaa,"Lawyer %s released you for %s Money!",PlayerInfo[FreeOffer[playerid]][pNames], formatInt(FreePrice[playerid]));
					SendMes(FreeOffer[playerid],0x6ab1ffaa,"You released %s for %s Money!",PlayerInfo[playerid][pNames], formatInt(FreePrice[playerid]));
					SetPlayerInteriorEx(playerid, 0);
					SetPPos(playerid,1553.4962,-1675.2714,16.1953);//������
					SetPlayerFacingAngle(playerid, 95.0636);
					PlayerInfo[playerid][pJailTime] = 0;
					PlayerInfo[playerid][pJailed] = 0;
					PlayerInfo[playerid][pUsedJail] = 0;
					format(stringer, sizeof(stringer), "~g~Freedom");
					PlayerInfo[playerid][pWanted] = 0;
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerVirtualWorldEx(playerid, 0);
					GameTextForPlayer(playerid, stringer, 5000, 1);
					return true;
				}
			}
		//------------------------------------[ ������ �������� ]-----------------
		case 7777:
			{
				if(!response) return true;
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pVodPrava] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "This player already has Car License. rights!");
						SendMes(playerid,0x6ab1ffaa,"You have issued a driver's license %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						PlayerInfo[ChosenPlayer[playerid]][pVodPrava] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor issued you a driver's license");
					}
					case 1:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pFlyLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "This player already has this license!");
						SendMes(playerid,0x6ab1ffaa,"You have issued an air transport license %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						PlayerInfo[ChosenPlayer[playerid]][pFlyLic] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor issued you an air transport license");
					}
					case 2:
					{
					    if(PlayerInfo[ChosenPlayer[playerid]][pFishLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "This player already has this license!");
						SendMes(playerid,0x6ab1ffaa,"Have you issued a fishing license? %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						PlayerInfo[ChosenPlayer[playerid]][pFishLic] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor issued you a fishing license");
					}
					case 3:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pBoatLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "This player already has this license!");
						SendMes(playerid,0x6ab1ffaa,"Have you issued a water transport license? %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						PlayerInfo[ChosenPlayer[playerid]][pBoatLic] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor has issued you a boating license");
					}
					case 4:
					{
					    if(PlayerInfo[ChosenPlayer[playerid]][pGunLic] == 1) return	SendClientMessage(playerid, COLOR_GRAD1, "This player already has this license!");
						SendMes(playerid,0x6ab1ffaa,"Have you issued a weapons license? %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						PlayerInfo[ChosenPlayer[playerid]][pGunLic] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor gave you a weapons license");
					}
					case 5:
					{
						if(TakingLesson[ChosenPlayer[playerid]] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "You have already started a lesson with this player!");
						SendMes(playerid,0x6ab1ffaa,"You started the lesson from %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						TakingLesson[ChosenPlayer[playerid]] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor has started your driving lesson");
					}
					case 6:
					{
						if(TakingLesson[ChosenPlayer[playerid]] == 0) return	SendClientMessage(playerid, COLOR_GRAD1, "You did not start the lesson with this player!");
						SendMes(playerid,0x6ab1ffaa,"You have completed lesson c %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						TakingLesson[ChosenPlayer[playerid]] = 0;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor has completed your driving lesson");
					}
					case 7:
					{
						if(GetPlayerBizz(ChosenPlayer[playerid]) == 0) return SendClientMessage(playerid,COLOR_GREY,"The player does not own a business!");
				        new i = GetPVarInt(ChosenPlayer[playerid],"PlayerBizz");
						SendMes(playerid,0x6ab1ffaa,"Have you issued a business license? %s.",PlayerInfo[ChosenPlayer[playerid]][pNames]);
						BizzInfo[i][bLic] = 1;
						SendClientMessage(ChosenPlayer[playerid], 0x6ab1ffaa, "The instructor has issued you a business license");
					}
					case 8:
					{
						if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "You need rank 3");
						if(soglasen[ChosenPlayer[playerid]] == 0)
						{
							format(stringer,sizeof(stringer), "Instructor %s suggests you install a new license plate\n- Do you agree?", PlayerInfo[playerid][pNames]);
							ShowPlayerDialog(ChosenPlayer[playerid],2527,DIALOG_STYLE_MSGBOX,"Agreement",stringer, "Yes", "No");
							SendClientMessage(playerid, 0x6ab1ffaa, "The person must confirm the installation of the number");
							return true;
						}
						ShowPlayerDialog(playerid,2526,DIALOG_STYLE_INPUT,"::: Issuance of a car number","Car number:","Ok","Cancle");
					}
				}
				return true;
			}
		case 7779:
			{
				if(!response) return true;
				switch(listitem)
				{
				case 0:	ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "�Get a driver�s license","Enter the person�s [ID]", "Get", "Cancle");
				case 1:	ShowPlayerDialog(playerid, 103, DIALOG_STYLE_INPUT, "Select an air transport license","Enter the person's [ID]","Select", "Cancle");
				case 2: ShowPlayerDialog(playerid, 104, DIALOG_STYLE_INPUT, "Select fishing license","Enter person's [ID]","Select", "Cancle");
				case 3:	ShowPlayerDialog(playerid, 105, DIALOG_STYLE_INPUT, "Select a license to drive water transport","Enter the [ID] of the person", "Select", "Cancle");
				case 4:	ShowPlayerDialog(playerid, 106, DIALOG_STYLE_INPUT, "Select weapon license","Enter person's [ID]","Select", "Cancle");
				case 5:	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_INPUT, "Select drugs","Enter person's [ID]","Select", "Cancle");
				case 6:	ShowPlayerDialog(playerid, 109, DIALOG_STYLE_INPUT, "Select weapon","Enter person's [ID]", "Select", "Cancle");
				case 7: ShowPlayerDialog(playerid, 110, DIALOG_STYLE_INPUT, "Select materials","Enter person's [ID]","Select", "Cancle");
				}
				return true;
			}
		case 100:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took your driver's license.", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pVodPrava] = 0;
				format(stringer, sizeof(stringer), "%s took %s' driver's license", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took away your driver's license %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 77:
		    {
				if(!response) return true;
				if(GetPVarInt(playerid,"CarNomer") == 0) Sellcars(playerid,PlayerInfo[playerid][pCar]), PlayerInfo[playerid][pCar] = 462;
				else Sellcars(playerid,PlayerInfo[playerid][pCar2]), PlayerInfo[playerid][pCar2] = 462;
				if(caridhouse[playerid] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerid]);
				caridhouse[playerid] = CreateVehicleEx(462,2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1],7200, 0);
				VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
				VEHICLE[caridhouse[playerid]][vLock] = 1;
				LinkVehicleToInterior(caridhouse[playerid], 1);
			    SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
				PlayerInfo[playerid][pFuelcar] = 100.0;
				Fuell[caridhouse[playerid]] = 100.0;
				SendClientMessage(playerid,COLOR_WHITE,"You sold your car!");
				DeleteVehicleTune(playerid, GetPVarInt(playerid,"CarNomer"), 1);
		    }
        case 79:
			{
				new playerd = GetPVarInt(playerid, "CarPlayer"), price = GetPVarInt(playerid, "CarPrice");
				if(SELL[0][playerd] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "The player who sold you the car has left the game.");
				if(response)
				{
					if(PlayerInfo[playerid][pCash] < price)
					{
						SendClientMessage(playerid, COLOR_GREY, "You don't have enough money");
						format(stringer1, 100, "%s doesn't have enough funds", PlayerInfo[playerid][pNames]);
						SendClientMessage(playerd,COLOR_WHITE,stringer1);
						DeletePVar(playerid, "CarPrice");
						DeletePVar(playerid, "CarPlayer");
						SELL[0][playerd] = INVALID_PLAYER_ID;
						return true;
					}
					if(listitem == 0)
					{
						if(GetPVarInt(playerd,"CarNomer") == 0) PlayerInfo[playerid][pCar] = PlayerInfo[playerd][pCar];
						else PlayerInfo[playerid][pCar] = PlayerInfo[playerd][pCar2];
						SetPVarInt(playerid, "CarNomer", 0);
					}
					else if(listitem == 1)
					{
						if(GetPVarInt(playerd,"CarNomer") == 0) PlayerInfo[playerid][pCar2] = PlayerInfo[playerd][pCar];
						else PlayerInfo[playerid][pCar2] = PlayerInfo[playerd][pCar2];
						SetPVarInt(playerid, "CarNomer", 1);
					}
					if(GetPVarInt(playerd,"CarNomer") == 0) PlayerInfo[playerd][pCar] = 462;
					else PlayerInfo[playerd][pCar2] = 462;
				    cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] = cTune[playerd][GetPVarInt(playerd,"CarNomer")][0];
				    cColor[playerid][GetPVarInt(playerid,"CarNomer")][0] = cColor[playerd][GetPVarInt(playerd,"CarNomer")][0];
				    cColor[playerid][GetPVarInt(playerid,"CarNomer")][1] = cColor[playerd][GetPVarInt(playerd,"CarNomer")][1];
				    for(new i = 1; i <= 14; i++) cTune[playerid][GetPVarInt(playerid,"CarNomer")][i] = cTune[playerd][GetPVarInt(playerd,"CarNomer")][i];
					if(caridhouse[playerid] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerid]);
					if(caridhouse[playerd] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerd]);
					// ����������:
					if(GetPVarInt(playerid,"CarNomer") == 0) caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1], 7200, 0);
					else caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar2], 2531.6418,-1546.1769,2023.1758,90.0000, cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1], 7200, 0);
					VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
					VEHICLE[caridhouse[playerid]][vLock] = 1;
					LinkVehicleToInterior(caridhouse[playerid], 1);
			        SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
					Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
					AddTune(playerid, GetPVarInt(playerid,"CarNomer"));
					SaveVehicleTuning(playerid, GetPVarInt(playerid,"CarNomer"));
					// ��������:
					caridhouse[playerd] = CreateVehicleEx(462, 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerd][GetPVarInt(playerd,"CarNomer")][0], cColor[playerd][GetPVarInt(playerd,"CarNomer")][0],7200, 0);
					VEHICLE[caridhouse[playerd]][vHealth] = 1000.0;
					VEHICLE[caridhouse[playerd]][vLock] = 1;
					LinkVehicleToInterior(caridhouse[playerd], 1);
			        SetVehicleVirtualWorld(caridhouse[playerd], PlayerInfo[playerd][pPhousekey]+50);
					Fuell[caridhouse[playerd]] = PlayerInfo[playerd][pFuelcar] + 20.0;
					DeleteVehicleTune(playerd, GetPVarInt(playerd,"CarNomer"), 1);
					format(stringer1, 100, "You sold the car %s for%s Money", PlayerInfo[playerid][pNames], formatInt(price));
					SendClientMessage(playerd,COLOR_LIGHTBLUE,stringer1);
					format(stringer1, 100, "%s sold you a car for %s Money", PlayerInfo[playerd][pNames], formatInt(price));
					SendClientMessage(playerid,COLOR_LIGHTBLUE,stringer1);
					GiveMoney(playerd, price);
					PlayerInfo[playerid][pCash] -= price;
				}
				else
				{
					format(stringer1, 100, "%s rejected the offer to sell", PlayerInfo[playerid][pNames]);
					SendClientMessage(playerd,COLOR_LIGHTBLUE,stringer1);
				}
				SELL[0][playerd] = INVALID_PLAYER_ID;
				DeletePVar(playerid, "CarPrice");
				DeletePVar(playerid, "CarPlayer");
		    }
		case 103:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took away your air transport license", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pFlyLic] = 0;
				format(stringer, sizeof(stringer), "%s took away %s' air transport license", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took away your air transport license from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 104:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took your fishing license", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pBoatLic] = 0;
				format(stringer, sizeof(stringer), "%s took away %s' fishing license", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took away the fishing license from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 105:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took away your water transport license", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pFishLic] = 0;
				format(stringer, sizeof(stringer), "%s took away %s' water transport license", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took away your boating license from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 106:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took your gun license", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pGunLic] = 0;
				format(stringer, sizeof(stringer), "%s took %s' weapons license", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took away the gun license from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 108:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took all your drugs", PlayerInfo[playerid][pNames]);
				for(new i = 0; i < 7; i++) PlayerInfo[idd][p_drugs][i] = 0;
				format(stringer, sizeof(stringer), "%s took drugs from %s", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took the drugs from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 109:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took your weapon", PlayerInfo[playerid][pNames]);
				ResetWeapons(idd);
				format(stringer, sizeof(stringer), "%s took %s' weapon", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took the weapon from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 110:
			{
				if(!response) return true;
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Not near you!");
				SendMes(idd,0x6ab1ffaa,"%s took the materials from you", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pMats] = 0;
				format(stringer, sizeof(stringer), "%s took materials from %s", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer);
				SendMes(playerid,0x6ab1ffaa,"You took the materials from %s.",PlayerInfo[idd][pNames],idd);
				ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
				return true;
			}
		case 9956:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(TaxiDrivers < 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "No taxi drivers nearby");
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
							return true;
						}
						format(stringer, sizeof(stringer), "Dispatcher: A man needs a taxi! {FFFFFF}( Usage: /accept taxi to accept a call)");
						SendJobMessage(4, COLOR_RED, stringer);
						SendClientMessage(playerid, 0x6ab1ffaa, "You called a taxi driver, wait for him at this place.");
						TaxiCall = playerid;
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					else if(listitem == 1)
					{ // ������
						if(Medics < 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "There are no doctors on duty at the moment!");
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
							return true;
						}
						format(stringer, sizeof(stringer), "Dispatcher: A person needs medical attention! {FFFFFF}( Usage: /accept medic to accept the challenge )");
						SendRadioMessage(4, COLOR_RED, stringer);
						SendClientMessage(playerid, 0x6ab1ffaa, "Your request for medical assistance has been sent. ?give an answer.");
						MedicCall = playerid;
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					else if(listitem == 2)
					{ // ��������
						if(Mechanics < 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "There are no mechanics on duty at the moment!");
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
							return true;
						}
						format(stringer, sizeof(stringer), "Dispatcher: A person needs help from a mechanic. {FFFFFF}( Usage: /accept mechanic to accept the challenge )");
						SendJobMessage(2, COLOR_RED, stringer);
						SendClientMessage(playerid, 0x6ab1ffaa, "Your request to call a mechanic has been sent. ?give an answer.");
						MechanicCall = playerid;
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					else if(listitem == 3)
					{
						if(Police < 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "There are no patrol officers on duty at the moment!");
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
							return true;
						}
						format(stringer, sizeof(stringer), "Dispatcher: A person needs police help. {FFFFFF}( Usage: /accept police to accept the call )");
						SendRadioMessage(1, COLOR_RED, stringer);
						SendRadioMessage(10, COLOR_RED, stringer);
						SendRadioMessage(21, COLOR_RED, stringer);
						SendClientMessage(playerid, 0x6ab1ffaa, "Your request to call the police has been sent. ?give an answer.");
						PoliceCall = playerid;
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
				}
				else { SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE); }
				return true;
			}
		case 5454:
			{
				if(response)
				{
					if(listitem == 0) ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) Leaders","Select","Cancle");
					if(listitem == 1)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Lawyers online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 6) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d",PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 2)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Doctors online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 3)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Media online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] == 16) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 4)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Instructors online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 5) ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) Leaders","Select","Cancle");
					else if(listitem == 6) ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) Leaders","Select","Cancle");
					else if(listitem == 7)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Mechanics online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 2) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 8)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Taxi drivers online:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 4) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 9)
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Online food distributors:");
						foreach(Player,i)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 5) SendMes(playerid,COLOR_GRAD1,"%s | Phone number: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
							}
						}
					}
					else if(listitem == 10) ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) Leaders","Select","Cancle");
					else if(listitem == 11) ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) Leaders","Select","Cancle");
					else if(listitem == 12) callcmd::admins(playerid);
					else if(listitem == 13) callcmd::leaders(playerid);
				}
				else return true;
			}
		case 8240:
			{
				if(response)
				{
					SetPlayerInteriorEx(playerid,7);
					SetPlayerVirtualWorldEx(playerid, 15);
					SetPPos(playerid,302.3128,-140.9305,1004.0625);
					SetPlayerFacingAngle(playerid, 318.5262);
					return true;
				}
				else
				{
					SetPlayerInteriorEx(playerid, 0);
					SetPPos(playerid,2278.3853,2460.9187,38.6837);
					SetPlayerFacingAngle(playerid, 357.9236);
					return true;
				}
			}
		case 8241:
			{
				if(response)
				{
					SetPlayerInteriorEx(playerid,7);
					SetPlayerVirtualWorldEx(playerid, 15);
					SetPPos(playerid,302.3128,-140.9305,1004.0625);
					SetPlayerFacingAngle(playerid, 318.5262);
					return true;
				}
				else
				{
					SetPlayerInteriorEx(playerid, 0);
					SetPPos(playerid,2294.0447,2468.8052,10.8203);
					SetPlayerFacingAngle(playerid, 90.8629);
					return true;
				}
			}
		case 8242:
			{
				if(response)
				{
					SetPlayerInteriorEx(playerid,15);
					SetPPos(playerid,1752.0131,-1915.6555,1961.1769);
					SetPlayerFacingAngle(playerid, 86.1662);
					SetPlayerVirtualWorldEx(playerid, 1);
					return true;
				}
				else
				{
					SetPlayerInteriorEx(playerid,0);
					SetPPos(playerid,1650.2810,-1640.6709,83.7788);
					SetPlayerFacingAngle(playerid, 313.9981);
					SetPlayerVirtualWorldEx(playerid, 0);
					return true;
				}
			}
		case 8243:
			{
				if(response)
				{
					SetPlayerInteriorEx(playerid,0);
					SetPPos(playerid,1658.2383,-1693.4553,15.6094);
					SetPlayerFacingAngle(playerid, 175.8234);
					SetPlayerVirtualWorldEx(playerid, 0);
					if(PEfir[playerid] != 255)
					{
						SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
						PEfir[playerid] = 255;
					}
					if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
					{
						Pefir[playerid] = 0;
						PEfir[playerid] = 255;
						SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
					}
					return true;
				}
				else
				{
					SetPlayerInteriorEx(playerid,0);
					SetPPos(playerid,1650.2810,-1640.6709,83.7788);
					SetPlayerFacingAngle(playerid, 313.9981);
					SetPlayerVirtualWorldEx(playerid, 0);
					if(PEfir[playerid] != 255)
					{
						SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
						PEfir[playerid] = 255;
					}
					if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
					{
						Pefir[playerid] = 0;
						PEfir[playerid] = 255;
						SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
					}
					return true;
				}
			}
		case 2013:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //����
						gun = 24; ammo = 50;
						yakuzamats -= 70;
					}
					else if(listitem == 1)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //������
						gun = 25; ammo = 15;
						yakuzamats -= 50;
					}
					else if(listitem == 2)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //ri��
						gun = 33; ammo = 10;
						yakuzamats -= 100;
					}
					else if(listitem == 3)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");//m4
						gun = 31; ammo = 100;
						yakuzamats -= 500;
					}
					else if(listitem == 4)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //ak47
						gun = 30; ammo = 100;
						yakuzamats -= 500;
					}
					else if(listitem == 5)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //mp5
						gun = 29; ammo = 200;
						yakuzamats -= 400;
					}
					else if(listitem == 6)
					{
						if(yakuzamats <= 50)return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!"); //sdpistol
						gun = 23; ammo = 100; yakuzamats -= 100;
					}
					GetWeaponName(gun, gunname, sizeof(gunname));
					GiveWeapon(playerid, gun, ammo);
					SendClientMessage(playerid,COLOR_WHITE,"You took a weapon from the warehouse");
					format(stringer, sizeof(stringer), "%s took a weapon from a warehouse", PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer);
					SetOtherInt("yakuzamats", yakuzamats);
					return true;
				}
				else { return true; }
			}
		case 2014:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(lcnmats <= 50) return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 24; ammo = 50; lcnmats -= 70;
					}
					else if(listitem == 1)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 25; ammo = 15; lcnmats -= 50;
					}
					else if(listitem == 2)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 33; ammo = 10; lcnmats -= 100;
					}
					else if(listitem == 3)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 31; ammo = 100; lcnmats -= 500;
					}
					else if(listitem == 4)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 30; ammo = 100; lcnmats -= 500;
					}
					else if(listitem == 5)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 29; ammo = 200; lcnmats -= 400;
					}
					else if(listitem == 6)
					{
						if(lcnmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 23; ammo = 100; lcnmats -= 100;
					}
					GetWeaponName(gun, gunname, sizeof(gunname));
					GiveWeapon(playerid, gun, ammo);
					SendClientMessage(playerid, 0x6ab1ffaa, "You took the weapon from the garden skl");
					format(stringer, sizeof(stringer), "%s took a weapon from a warehouse", PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer);
					SetOtherInt("lcnmats", lcnmats);
					return true;
				}
				else { return true; }
			}
		case 2015:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 24; ammo = 50; rmmats -= 70;
					}
					else if(listitem == 1)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 25; ammo = 15; rmmats -= 50;
					}
					else if(listitem == 2)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 33; ammo = 10; rmmats -= 100;
					}
					else if(listitem == 3)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 31; ammo = 100; rmmats -= 500;
					}
					else if(listitem == 4)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 30; ammo = 100; rmmats -= 500;
					}
					else if(listitem == 5)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 29; ammo = 200; rmmats -= 400;
					}
					else if(listitem == 6)
					{
						if(rmmats <= 50)  return  SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
						gun = 23; ammo = 100; rmmats -= 100;
					}

					GetWeaponName(gun, gunname, sizeof(gunname));
					GiveWeapon(playerid, gun, ammo);
					SendClientMessage(playerid, 0x6ab1ffaa, "You took a weapon from the warehouse");

					format(stringer, sizeof(stringer), "%s took a weapon from a warehouse", PlayerInfo[playerid][pNames]);
					ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer);
					SetOtherInt("rmmats", rmmats);
					return true;
				}
				else { return true; }
			}
			//==================================[MMenu]=================
		case 9596:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 6: return SendMes(playerid,0x6ab1ffaa,"In the Yakuza Mafia Bank: %s Money", formatInt(MafiaBank[0][nYakuza]));
							case 14: return SendMes(playerid,0x6ab1ffaa,"In the Russian mafia bank: %s Money", formatInt(MafiaBank[0][nRm]));
							case 5: return SendMes(playerid,0x6ab1ffaa,"In the LCN mafia bank: %s Money", formatInt(MafiaBank[0][nLcn]));
							}
						}
					case 1:
						{
							format(stringer,sizeof(stringer),"Mafia bank account replenishment");
							ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
						}
					case 2:
						{
							if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,COLOR_GREY,"This command is not available to you.");
							format(stringer,sizeof(stringer),"Withdrawing money from a mafia bank");
							ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
						}
					case 3:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 6: return SendMes(playerid,0x6ab1ffaa,"In the mafia warehouse %d swear words", yakuzamats);
							case 5: return SendMes(playerid,0x6ab1ffaa,"In the mafia warehouse %d swear words", lcnmats);
							case 14: return SendMes(playerid,0x6ab1ffaa,"In the mafia warehouse %d swear words", rmmats);
							}
						}
					case 4: callcmd::bizlist(playerid, "");
					}
				}
			}
		case 22255:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 6:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up your account with less than 1 and more than 1,000,000 Moneys");
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money");
							PlayerInfo[playerid][pCash] -= dengi;
							MafiaBank[0][nYakuza] += dengi;
							SendMes(playerid,0x6ab1ffaa,"You put it in the Yakuza mafia bank: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s put it in the mafia bank %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(6, COLOR_YELLOW2, stringer);
							SetOtherInt("rmmats", rmmats);
							return true;
						}
					case 14:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Close");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up your account with less than 1 or more 1000000 Money");
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Close");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money");
							PlayerInfo[playerid][pCash] -= dengi;
							MafiaBank[0][nRm] += dengi;
							SendMes(playerid,0x6ab1ffaa,"You deposited in the Russian mafia bank: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s put it in the mafia bank %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(14, COLOR_YELLOW2, stringer);
							SetOtherInt("rmmats", rmmats);
							return true;
						}
					case 5:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Close");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up your account with less than 1 or more 1000000 Money");
								format(stringer,sizeof(stringer),"Mafia bank account replenishment");
								ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Close");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money");
							PlayerInfo[playerid][pCash] -= dengi;
							MafiaBank[0][nLcn] += dengi;
							SendMes(playerid,0x6ab1ffaa,"You deposited LCN in the mafia bank: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s put it in the mafia bank %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(5, COLOR_YELLOW2, stringer);
							SetOtherInt("rmmats", rmmats);
							return true;
						}
					}
				}
			}//case 22255
		case 22256:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 6:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from a mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 or more 1000000 Money");
								format(stringer,sizeof(stringer),"Withdrawing money from a mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(MafiaBank[0][nYakuza] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There's not that much money in the Yakuza Bank");
							GiveMoney(playerid, dengi);
							MafiaBank[0][nYakuza] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You withdrew from the Yakuza mafia bank: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s withdrawn from mafia bank %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(6, COLOR_YELLOW2, stringer);
							SetOtherInt("MafiaBank[0][nYakuza]", MafiaBank[0][nYakuza]);
							return true;
						}
					case 14:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from a mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 or more 1000000 Money");
								format(stringer,sizeof(stringer),"Withdrawing money from a mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(MafiaBank[0][nRm] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There's not that much money in the Yakuza Bank");
							GiveMoney(playerid, dengi);
							MafiaBank[0][nRm] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You withdraw from the mafia bank Russan Mafia: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s withdrawn from mafia bank %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(14, COLOR_YELLOW2, stringer);
							SetOtherInt("MafiaBank[0][nRm]", MafiaBank[0][nRm]);
							return true;
						}
					case 5:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"Cannot withdraw less than 1 and more than 1,000,000 Money");
								format(stringer,sizeof(stringer),"Withdrawing money from the mafia bank");
								ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(MafiaBank[0][nLcn] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There is not that much money in Yakuza Bank");
							GiveMoney(playerid, dengi);
							MafiaBank[0][nLcn] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the LCN mafia bank: %s Money", formatInt(dengi));
							format(stringer, sizeof(stringer), "%s withdrew from the bank of the mafia %s Money", PlayerInfo[playerid][pNames],formatInt(dengi));
							SendFamilyMessage(5, COLOR_YELLOW2, stringer);
							SetOtherInt("MafiaBank[0][nLcn]", MafiaBank[0][nLcn]);
							return true;
						}
					}
				}
			}
		case 9391:
			{
				if(!response) return 1;
				switch(listitem)
				{
					case 0: {
   		 				mysql_format(connects, mysql_query_,sizeof(mysql_query_) ,"SELECT `pMember`,`pRank`,`Name`,`pGetonDate`,`pID` FROM `"TABLE_ACCOUNT"` WHERE `pMember` = '%d' AND `pLeader` = '0' AND `pOnline` = '1001' ORDER BY `pRank` DESC LIMIT 0,15",PlayerInfo[playerid][pMember]);
						mysql_tquery(connects, mysql_query_, "OnLeaderPanel", "dd",playerid, 1);
					}
					case 1..4:
					{
						stringer[0] = 0;
						for(new i; i < 15; i++)
						{
							if(!strlen(fRankName[PlayerInfo[playerid][pMember]-1][i])) continue;
							format(stringer,sizeof(stringer),"%s%i. %s%s\n", stringer,i+1,(i+1==gFractionRank[PlayerInfo[playerid][pMember]-1][listitem-1])?("{ff0000}"):("{FFFFFF}"),fRankName[PlayerInfo[playerid][pMember]-1][i]);
						}
						SetPVarInt(playerid,"leader_rank", listitem);
						ShowPlayerDialog(playerid,9392,DIALOG_STYLE_LIST,"{ffff00}Select rank",stringer,"Select", "Close");
					}
					case 5:
					{
						stringer[0] = 0;
						for(new i; i < 15; i++)
						{
						    if(!strlen(fRankName[PlayerInfo[playerid][pMember]-1][i])) continue;
							format(stringer,sizeof(stringer),"%s%s\n",stringer,fRankName[PlayerInfo[playerid][pMember]-1][i]);
						}
						ShowPlayerDialog(playerid,9393,DIALOG_STYLE_LIST,"{ffff00}Select rank",stringer,"Select","Close");
						return 1;
					}
				}
				return true;
			}
		case 9392:
			{
				if(!response) return DeletePVar(playerid,"leader_rank");
				if(!PlayerInfo[playerid][pMember]) return 1;
				new select_listitem = GetPVarInt(playerid,"leader_rank");
				gFractionRank[PlayerInfo[playerid][pMember]-1][select_listitem-1] = listitem + 1;
            	format(mysql_query_, sizeof(mysql_query_),"UPDATE `fraction_ranks` SET `settings` = '%i,%i,%i,%i' WHERE `fracid` = '%i'",gFractionRank[PlayerInfo[playerid][pMember]-1][0],gFractionRank[PlayerInfo[playerid][pMember]-1][1],gFractionRank[PlayerInfo[playerid][pMember]-1][2],gFractionRank[PlayerInfo[playerid][pMember]-1][3],PlayerInfo[playerid][pMember]-1);
                mysql_tquery(connects,mysql_query_,"","");
				DeletePVar(playerid,"leader_rank");
				callcmd::lpanel(playerid);
				return 1;
			}
		case 9393:
			{
				if(!response) return 1;
				if(!PlayerInfo[playerid][pMember]) return 1;
				ShowPlayerDialog(playerid, 9394, DIALOG_STYLE_LIST, "{ffff00}Rank management", "{FFFFFF}Rank name change", "Select", "Cancle");
				return SetPVarInt(playerid,"edit_rank",listitem);
			}
		case 9394:
			{
				if(!response) return DeletePVar(playerid,"edit_rank");
				if(!PlayerInfo[playerid][pMember]) return 1;
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 9395, DIALOG_STYLE_INPUT, "{ffff00}Rank name change", "{FFFFFF}Use a rank name", "Select", "Cancle");
				}
				return 1;
			}
		case 9395:
			{
				if(!response) return DeletePVar(playerid,"edit_rank");
				if(!PlayerInfo[playerid][pMember]) return 1;
				if(strlen(inputtext) <= 0 || strlen(inputtext) >= 40) return ShowPlayerDialog(playerid, 9395, DIALOG_STYLE_INPUT, "{ffff00}Rank name change", "{FFFFFF}Use a rank name", "Select", "Cancle");
				new slot = GetPVarInt(playerid, "edit_rank");
				SendMes(playerid, -1, "You changed the rank of #%d from %s to %s",slot+1,fRankName[PlayerInfo[playerid][pMember]-1][slot],inputtext);
				strmid(fRankName[PlayerInfo[playerid][pMember]-1][slot], inputtext, 0, strlen(inputtext));
				mysql_format(connects, mysql_query_, sizeof(mysql_query_),"UPDATE `fraction_ranks` SET `rang_%i` = '%e' WHERE `fracid` = '%i'",slot,fRankName[PlayerInfo[playerid][pMember]-1][slot], PlayerInfo[playerid][pMember]-1);
                mysql_tquery(connects,mysql_query_,"","");
                DeletePVar(playerid,"edit_rank");
				return 1;
			}
		case 6050:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pAlcoInvenxua] >= 13)
							{
								for(new i; i<50; i++) SendClientMessageToAll(0x00000000,"");
								SendClientMessageToAll(COLOR_LIGHTRED,"The chat has been cleared by the administration!");
							}
						}
					case 1: ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "Apparatus employed"," Mechanic (( 2 lvl ))\n Taxi driver (( 2 lvl ))\n Hot dog seller (( 3 lvl )\n Incosator (( 3 lvl ))\n Carrier of products (( 4 lvl ))\n Trainer (( 5 lvl ))", "Select", "Exit");
					case 2:
						{
							SendMes(playerid,COLOR_GRAD1,"In stock Army area 51: %d/500000 mats", armmatbi),SendMes(playerid,COLOR_GRAD1,"In the army safe Aircraft carrier: %d/100000 mats", armmatsf);
							SendMes(playerid,COLOR_GRAD1,"In stock FBI %d/100000 mats", fbimats),SendMes(playerid,COLOR_GRAD1,"In stock LSPD %d/100000 mats", lspdmatbi);
							SendMes(playerid,COLOR_GRAD1,"In stock SFPD %d/100000 mats", sfpdmats),SendMes(playerid,COLOR_GRAD1,"In stock LVPD %d/100000 mats", lvpdmats);
							SendMes(playerid,COLOR_GRAD1,"In the Yakuza Mafia safe %d/50000 mats", yakuzamats),SendMes(playerid,COLOR_GRAD1,"At the Mafia safe LCN %d/50000 mats", lcnmats);
							SendMes(playerid,COLOR_GRAD1,"In stock Russian Mafia %d/50000 mats", rmmats),SendMes(playerid,COLOR_GRAD1,"In stock Los Santos Vagos %d/50000 mats", vagosmatbi);
							SendMes(playerid,COLOR_GRAD1,"In stock Rifa Gang %d/50000 mats", rifamatbi),SendMes(playerid,COLOR_GRAD1,"In stock Aztek Gang %d/50000 mats", aztekmatbi);
							SendMes(playerid,COLOR_GRAD1,"In stock Grove Street %d/50000 mats", groovmatbi),SendMes(playerid,COLOR_GRAD1,"In stock Ballas Gang %d/50000 mats", ballasmatbi);
						}
					case 3: ShowPlayerDialog(playerid,4385,DIALOG_STYLE_LIST, "Weather list", "[1] Sunny weather\n[2] Very sunny weather\n[3] Storm\n[4] Overcast and foggy\n[5] Gloomy and rainy\n[6] Sandstorm\n[7] Hazy and greenish\n[8] In the colors of a pale orange\n[9] Fresh in blue colors\n[10] Foggy and gray\n[11] Dark obscure brown", "Put", "Menu");
					case 4: ShowPlayerDialog(playerid,4395,DIALOG_STYLE_LIST, "Change time of day", "Night - 0 hours\nNight - 1 hours\nNight - 2 hours\nNight - 3 hours\nNight - 4 hours\nNight - 5 hours\nMorning - 6 o'clock\nMorning - 7 o'clock\nMorning - 8 o'clock\nMorning - 9 o'clock\nMorning - 10 o'clock\nMorning - 11 o'clock\nMorning - 12 o'clock\nMorning - 13 o'clock\nMorning - 14 o'clock\nMorning - 15 o'clock\nMorning - 16 o'clock\nMorning - 17 o'clock\nEvening - 18 hours\nEvening - 19 hours\nEvening - 20 hours\nEvening - 21 hours\nEvening - 22 hours\nEvening - 23 hours", "Install", "Menu");
					}
				}
				else return callcmd::apanel(playerid, "");
			}
			//==================================================================================================================================================================================//
		case 6019:
			{
				if(response)
				{
					switch(listitem)
					{
						case 0:
						{
							if (PlayerInfo[playerid][pFull] >= 4)
							{
								SaveAccounts(); SaveOther(); SaveHousee();
								SaveAll();
								SendClientMessage(playerid,COLOR_GRAD1,"Saved");
							}
						}
						case 1: { if (PlayerInfo[playerid][pAlcoInvenxua] >= 13) SaveAll(),SaveHousee(),SendClientMessage(playerid,COLOR_GRAD1,"Houses and busines are saved"); }
						case 2: { if(PlayerInfo[playerid][pAlcoInvenxua] >= 13) PayDay(); }
						case 3:
			    		{
			        		new nama[10];
       						new randband[5] = {15,12,18,17,13};
			        		for(new i = 0; i < sizeof(TotalGraf); i++) TotalGraf[i] = 0;
			        		for(new i = 0; i < sizeof(GZLogo); i++)
			        		{
			            		GZLogoInfo[i][gOwner][0] = randband[random(5)];
			            		GZLogoInfo[i][gOwner][1] = randband[random(5)];
                        		switch(GZLogoInfo[i][gOwner][0])
					    		{
									case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++,nama[0]++;
									case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++,nama[2]++;
									case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++,nama[6]++;
									case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++,nama[4]++;
									case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++,nama[8]++;
								}
				  				GZLogoInfo[i][gFinish][0] = 1000;
					   			switch(GZLogoInfo[i][gOwner][1])
					    		{
									case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++,nama[1]++;
									case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++,nama[3]++;
									case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++,nama[7]++;
									case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++,nama[5]++;
									case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0),nama[9]++;
								}
				        		GZLogoInfo[i][gFinish][1] = 1000;
								SaveGZLogo(i);
			        		}
			        		skladband();
			        		SendMes(playerid, COLOR_GRAD1, "{228B22}%d | %d | {9400D3}%d | %d | {00FFFF}%d | %d | {4682B4}%d | %d | {FFD700}%d | %d",nama[0],nama[1],nama[2],nama[3],nama[4],nama[5],nama[6],nama[7],nama[8],nama[9]);//GROVE,BALLAS,AZTEC,RIFA,VAGOS
			        		return true;
			    		}
			    		case 4:
			    		{
	        				if(FD(playerid))
    						{
    							CallRemoteFunction("SAMP_AC_SHOW_CENTRAL_DIALOG","d", playerid);
    						}
    						return 1;
			    		}
					}
				}
				else return callcmd::apanel(playerid, "");
			}
			//==================================================================================================================================================================================//
		case 4385:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetWeather(10);
					case 1: SetWeather(2);
					case 2: SetWeather(8);
					case 3: SetWeather(9);
					case 4: SetWeather(14);
					case 5: SetWeather(19);
					case 6: SetWeather(20);
					case 7: SetWeather(23);
					case 8: SetWeather(27);
					case 9: SetWeather(30);
					case 10: SetWeather(33);
					}
					format(stringer1, sizeof(stringer1), "Adminstrator %s changed the weather", PlayerInfo[playerid][pNames]);
					SendAdminMessage(COLOR_GREY,stringer1);
				}
				else { callcmd::apanel(playerid, ""); return true; }
			}
			//==================================================================================================================================================================================//
		case 4395:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetWorldTime(0);
					case 1: SetWorldTime(1);
					case 2: SetWorldTime(2);
					case 3: SetWorldTime(3);
					case 4: SetWorldTime(4);
					case 5: SetWorldTime(5);
					case 6: SetWorldTime(6);
					case 7: SetWorldTime(7);
					case 8: SetWorldTime(8);
					case 9: SetWorldTime(9);
					case 10: SetWorldTime(10);
					case 11: SetWorldTime(11);
					case 12: SetWorldTime(12);
					case 13: SetWorldTime(13);
					case 14: SetWorldTime(14);
					case 15: SetWorldTime(15);
					case 16: SetWorldTime(16);
					case 17: SetWorldTime(17);
					case 18: SetWorldTime(18);
					case 19: SetWorldTime(19);
					case 20: SetWorldTime(20);
					case 21: SetWorldTime(21);
					case 22: SetWorldTime(22);
					case 23: SetWorldTime(23);
					case 24: SetWorldTime(24);
					}
                    format(stringer1, sizeof(stringer1), "Adminstrator %s changed the time of day", PlayerInfo[playerid][pNames]);
					SendAdminMessage(COLOR_GREY,stringer1);
				}
				else { callcmd::apanel(playerid, ""); return true; }
			}
			//=======================================[GMENU]============================
		case 22249:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{

							if(!IsATerra (playerid)) return	SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							}
							new mati = strval(inputtext);
							if(mati < 1 || mati > 250)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot put less than 1 and more than 250");
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pMats] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that many curse words!");
							if(groovmatbi  >= 100000) return SendClientMessage(playerid,COLOR_GRAD1,"The gang safe is full!");
							groovmatbi  += mati;
							PlayerInfo[playerid][pMats] -= mati;

							SendMes(playerid,COLOR_GRAD1,"You have %d materials with you", PlayerInfo[playerid][pMats]);
							format(stringer, sizeof(stringer), "%s put materials in the gang safe", PlayerInfo[playerid][pNames]);
							ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
							return true;
						}
					case 12:
						{

							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							}
							new mati = strval(inputtext);
							if(mati < 1 || mati > 250)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot put less than 1 and more than 250");
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pMats] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have enough mats!");
							if(ballasmatbi  >= 100000) return SendClientMessage(playerid,COLOR_GRAD1,"The gang safe is full!");
							ballasmatbi  += mati;
							PlayerInfo[playerid][pMats] -= mati;

							SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
							format(stringer, sizeof(stringer), "%s put materials in the gang safe", PlayerInfo[playerid][pNames]);
							ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
							return true;
						}
					case 13:
						{

							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							}
							new mati;
							mati = strval(inputtext);
							if(mati < 1 || mati > 250)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot put less than 1 and more than 250");
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pMats] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have enough mats!");
							if(vagosmatbi  >= 100000) return SendClientMessage(playerid,COLOR_GRAD1,"The gang safe is full!");
							vagosmatbi  += mati;
							PlayerInfo[playerid][pMats] -= mati;

							SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
							format(stringer, sizeof(stringer), "%s put materials in the gang safe", PlayerInfo[playerid][pNames]);
							ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
							return true;
						}
					case 17:
						{

							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							}
							new mati;
							mati = strval(inputtext);
							if(mati < 1 || mati > 250)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot put less than 1 and more than 250");
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pMats] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have enough mats!");
							if(aztekmatbi  >= 100000) return SendClientMessage(playerid,COLOR_GRAD1,"The gang safe is full!");
							aztekmatbi  += mati;
							PlayerInfo[playerid][pMats] -= mati;

							SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
							format(stringer, sizeof(stringer), "%s put materials in the gang safe", PlayerInfo[playerid][pNames]);
							ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
							return true;
						}
					case 18:
						{

							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							}
							new mati;
							mati = strval(inputtext);
							if(mati < 1 || mati > 250)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot put less than 1 and more than 250");
								format(stringer,sizeof(stringer),"Put materials in the gang safe");
								ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pMats] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have enough mats!");
							if(rifamatbi  >= 100000) return SendClientMessage(playerid,COLOR_GRAD1,"The gang safe is full!");
							rifamatbi  += mati;
							PlayerInfo[playerid][pMats] -= mati;

							SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
							format(stringer, sizeof(stringer), "%s put materials in the gang safe", PlayerInfo[playerid][pNames]);
							ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
							return true;
						}
					}
				}
			}
		case 22248:
			{
				if(response)
				{
					new matsss = 0;
					switch(PlayerInfo[playerid][pDonateRank])
					{
					case 0: matsss = 250;
					case 1: matsss = 500;
					case 2: matsss = 750;
					case 3: matsss = 1000;
					}
					if(!IsATerra (playerid)) return	SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
					if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 1)//������ � 3 �����
					{
						if(ballasmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe");
						if(PlayerInfo[playerid][pMats] > matsss) return SendClientMessage(playerid,COLOR_GRAD1,"Can't take more");

						if(!strlen(inputtext))
						{
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
						}
						new mati = strval(inputtext);
						if((PlayerInfo[playerid][pMats] + mati) > matsss) return SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
						if(mati < 1 || mati > 250)
						{
							SendClientMessage(playerid, COLOR_GREY, "You cannot take less than 1 and more than 250");
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							return true;
						}
						ballasmatbi -= mati;
						PlayerInfo[playerid][pMats] += mati;
						SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);

						format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
						return true;
					}
					if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 1)//������ � 3 �����
					{
						if(groovmatbi <= 0)return SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe");
						if(PlayerInfo[playerid][pMats] > matsss) return SendClientMessage(playerid,COLOR_GRAD1,"Can't take more");

						if(!strlen(inputtext))
						{
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
						}
						new mati = strval(inputtext);
						if((PlayerInfo[playerid][pMats] + mati) > matsss) return SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
						if(mati < 1 || mati > 250)
						{
							SendClientMessage(playerid, COLOR_GREY, "You cannot take less than 1 and more than 250");
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							return true;
						}
						groovmatbi -= mati;
						PlayerInfo[playerid][pMats] += mati;
						SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);

						format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
						return true;
					}
					if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 1)//������ � 3 �����
					{
						if(vagosmatbi <= 0)return SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe");
						if(PlayerInfo[playerid][pMats] > matsss) return SendClientMessage(playerid,COLOR_GRAD1,"Can't take more");

						if(!strlen(inputtext))
						{
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
						}
						new mati = strval(inputtext);
						if((PlayerInfo[playerid][pMats] + mati) > matsss) return SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
						if(mati < 1 || mati > 250)
						{
							SendClientMessage(playerid, COLOR_GREY, "You cannot take less than 1 and more than 250");
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							return true;
						}
						vagosmatbi -= mati;
						PlayerInfo[playerid][pMats] += mati;
						SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);

						format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
						return true;
					}
					if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 1)//������ � 3 �����
					{
						if(aztekmatbi <= 0)return SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe");
						if(PlayerInfo[playerid][pMats] > matsss) return SendClientMessage(playerid,COLOR_GRAD1,"Can't take more");

						if(!strlen(inputtext))
						{
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
						}
						new mati;
						mati = strval(inputtext);
						if((PlayerInfo[playerid][pMats] + mati) > matsss) return SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
						if(mati < 1 || mati > 250)
						{
							SendClientMessage(playerid, COLOR_GREY, "You cannot take less than 1 and more than 250 ");
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							return true;
						}
						aztekmatbi -= mati;
						PlayerInfo[playerid][pMats] += mati;

						format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
						return true;
					}
					if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 1)//������ � 3 �����
					{
						if(rifamatbi <= 0)return SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe");
						if(PlayerInfo[playerid][pMats] > matsss) return SendClientMessage(playerid,COLOR_GRAD1,"Can't take more");

						if(!strlen(inputtext))
						{
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
						}
						new mati;
						mati = strval(inputtext);
						if((PlayerInfo[playerid][pMats] + mati) > matsss) return SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);
						if(mati < 1 || mati > 250)
						{
							SendClientMessage(playerid, COLOR_GREY, "You cannot take less than 1 and more than 250");
							format(stringer,sizeof(stringer),"Take materials from the gang safe");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the number of materials",stringer,"Ok","Exit");
							return true;
						}
						rifamatbi -= mati;
						PlayerInfo[playerid][pMats] += mati;
						SendMes(playerid,COLOR_WHITE,"You have %d materials with you", PlayerInfo[playerid][pMats]);

						format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
						return true;
					}
				}
			}
		case 8454:
			{
				if(!response) return 1;
				if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,COLOR_GREY,"Sorry, the ad queue is busy, please try again later");
				new texts1[100];
				GetPVarString(playerid,"advert",texts1,100);
				DeletePVar(playerid,"advert");
				new price = strlen(texts1) * addd;
				if(PlayerInfo[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_WHITE,  "You don't have enough money");
				gAdvertCount ++;
				new slot = -1;
				for(new i;i<MAX_ADVERT_COUNT;i++)
				{
					if(!gAdvert[i][adBusy]) {slot = i; break;}
				}
				if(slot == -1) return SendClientMessage(playerid,COLOR_GREY,"ERROR (#111)");
				PlayerInfo[playerid][pCash] -= price;
				FracBank[0][fLsnews] += price;
				gAdvert[slot][adMoney] = price;
				format(gAdvert[slot][adSender],24,"%s",PlayerInfo[playerid][pNames]);
				gAdvert[slot][adPhone] = PlayerInfo[playerid][pPnumber];
				format(gAdvert[slot][adText],100,"%s",texts1);
				gAdvert[slot][adBusy] = true;
				adverttime = 30;
				SendClientMessage(playerid,-1,"Your ad has been sent for processing.");
				SendFamilyMessage(16,CBLUE, "[R] New announcement has arrived | See: /n");
			}
		case 9595:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: return callcmd::get(playerid, "guns");
					case 1:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 12: return SendMes(playerid,COLOR_WHITE,"In the gang safe of your gang %d mats", ballasmatbi);
							case 13: return SendMes(playerid,COLOR_WHITE,"In the gang safe of your gang %d mats", vagosmatbi);
							case 15: return SendMes(playerid,COLOR_WHITE,"In the gang safe of your gang %d mats", groovmatbi);
							case 17: return SendMes(playerid,COLOR_WHITE,"In the gang safe of your gang %d mats", aztekmatbi);
							case 18: return SendMes(playerid,COLOR_WHITE,"In the gang safe of your gang %d mats", rifamatbi);
							}
						}
					case 2:
						{
							format(stringer,sizeof(stringer),"Top up the gang's bank account");
							ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
						}
					case 3:
						{
							format(stringer,sizeof(stringer),"Withdrawing money from the gang's account");
							ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
						}
					case 4:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 15: return SendMes(playerid,COLOR_WHITE,"At Bank Grove: %s Money", formatInt(FracBank[0][fGrove]));//grove
							case 12: return SendMes(playerid,0x6495EDFF,"At Bank Ballas: %s Money", formatInt(FracBank[0][fBallas]));//
							case 13: return SendMes(playerid,0x6ab1ffaa,"At Bank Vagos: %s Money", formatInt(FracBank[0][fVagos]));//
							case 17: return SendMes(playerid,0x6495EDFF,"At Bank Aztec: %s Money", formatInt(FracBank[0][fAztek]));//
							case 18: return SendMes(playerid,0x6495EDFF,"At Bank Rifa: %s Money", formatInt(FracBank[0][fRifa]));//
							}
						}
					case 5: ShowPlayerDialog(playerid, 30004, DIALOG_STYLE_LIST,"Sale of mafia materials","��\nYakuza\nLa Cosa Nostra","Ok","Cancle");
					case 6:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 15: return SendMes(playerid,COLOR_WHITE,"In stock Grove: %d alcohol", FracAlko[0][aGrove]);//grove
							case 12: return SendMes(playerid,0x6495EDFF,"In stock Ballas: %d alcohol", FracAlko[0][aBallas]);//
							case 13: return SendMes(playerid,0x6ab1ffaa,"In stock Vagos: %d alcohol", FracAlko[0][aVagos]);//
							case 17: return SendMes(playerid,0x6495EDFF,"In stock Aztec: %d alcohol", FracAlko[0][aAztec]);//
							case 18: return SendMes(playerid,0x6495EDFF,"In stock Rifa: %d alcohol", FracAlko[0][aRifa]);//
							}
						}
					case 7:
						{
							if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid, -1, "Only the leader or deputy can manage the Varios Los Aztecas!");
							switch(PlayerInfo[playerid][pMember])
							{
							case 15: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {00CC00}Grove Street");
							case 12: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {CC00FF}Ballas Gang");
							case 13: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {ffcd00}Los Santos Vagos");
							case 17: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {00F5FF}Varios Los Aztecas");
							case 18: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {6666ff}Rifa Gang");
							}
							return ShowPlayerDialog(playerid,1405,DIALOG_STYLE_MSGBOX,"{F3FF02}Gang safe management.",stringer,"Open","Close");
						}
					}
				}
			}
		case 1405:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15: if(FracBank[0][fLock][0] == 1) FracBank[0][fLock][0] = 0;
					case 12: if(FracBank[0][fLock][1] == 1) FracBank[0][fLock][1] = 0;
					case 13: if(FracBank[0][fLock][2] == 1) FracBank[0][fLock][2] = 0;
					case 17: if(FracBank[0][fLock][3] == 1) FracBank[0][fLock][3] = 0;
					case 18: if(FracBank[0][fLock][4] == 1) FracBank[0][fLock][4] = 0;
					}
					format(stringer1, sizeof(stringer1), "[GANG] The gang safe is opened by the player %s.", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(PlayerInfo[playerid][pMember],0x00CC00AA,stringer1);
					skladband();
				}
				else
				{
				    switch(PlayerInfo[playerid][pMember])
					{
					case 15: if(FracBank[0][fLock][0] == 0) FracBank[0][fLock][0] = 1;
					case 12: if(FracBank[0][fLock][1] == 0) FracBank[0][fLock][1] = 1;
					case 13: if(FracBank[0][fLock][2] == 0) FracBank[0][fLock][2] = 1;
					case 17: if(FracBank[0][fLock][3] == 0) FracBank[0][fLock][3] = 1;
					case 18: if(FracBank[0][fLock][4] == 0) FracBank[0][fLock][4] = 1;
					}
					format(stringer1, sizeof(stringer1), "[GANG] The gang safe is closed by the player %s.", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(PlayerInfo[playerid][pMember],0xFF6600AA,stringer1);
					skladband();
				}
				format(stringer,sizeof(stringer),"%d, %d, %d, %d, %d",FracBank[0][fLock][0],FracBank[0][fLock][1],FracBank[0][fLock][2],
		    	FracBank[0][fLock][3],FracBank[0][fLock][4]);
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_OTHER"` SET sklads = '%s'",stringer);
				mysql_function_query(connects, mysql_query_, false, "", "");
			}
		case 9599:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(!IsATerra (playerid)) return	SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
							format(stringer,sizeof(stringer),"Take out the materials from the glass");
							ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"Enter the collection of materials",stringer,"Ok","Exit");
						}
					case 1:
						{
							if(!IsATerra (playerid)) return	SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
							format(stringer,sizeof(stringer),"Put materials in the gang safe");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"Enter the collection of materials",stringer,"Ok","Exit");
						}
					case 2:
						{
							return true;
						}
					case 3:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 23, 100);
									rifamatbi  -= 100;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 23, 100);
									ballasmatbi  -= 100;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 23, 100);
									groovmatbi -= 100;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 23, 100);
									aztekmatbi -= 100;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 23, 100);
									vagosmatbi -= 100;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 4:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 24, 100);
									rifamatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 24, 100);
									ballasmatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 24, 100);
									groovmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 24, 100);
									aztekmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 24, 100);
									vagosmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 5:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 25, 100);
									rifamatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 25, 100);
									ballasmatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 25, 100);
									groovmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 25, 100);
									aztekmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 25, 100);
									vagosmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 6:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 29, 100);
									rifamatbi  -= 200;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 29, 100);
									ballasmatbi  -= 200;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 29, 100);
									groovmatbi -= 200;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 29, 100);
									aztekmatbi -= 200;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 29, 100);
									vagosmatbi -= 200;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 7:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 30, 100);
									rifamatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 30, 100);
									ballasmatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 30, 100);
									groovmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 30, 100);
									aztekmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 30, 100);
									vagosmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 8:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 31, 100);
									rifamatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 31, 100);
									ballasmatbi  -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 31, 100);
									groovmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 31, 100);
									aztekmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 31, 100);
									vagosmatbi -= 300;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					case 9:
						{
							switch(PlayerInfo[playerid][pMember])
							{
							case 18:
								{
									if(rifamatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 33, 100);
									rifamatbi  -= 500;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 12:
								{
									if(ballasmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 33, 100);
									ballasmatbi  -= 500;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 15:
								{
									if(groovmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 33, 100);
									groovmatbi -= 500;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 17:
								{
									if(aztekmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 33, 100);
									aztekmatbi -= 500;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							case 13:
								{
									if(vagosmatbi  <= 0) { SendClientMessage(playerid, COLOR_GREY, "No materials in the organization safe"); return true; }
									if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
									GiveWeapon(playerid, 33, 100);
									vagosmatbi -= 500;


									format(stringer, sizeof(stringer), "%s take(s) materials from the organization safe", PlayerInfo[playerid][pNames]);
									ProxDetector(playerid, 15.0, COLOR_PURPLE, stringer);
									return true;
								}
							}
						}
					}
					skladband();
				}
			}
		case 22250:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Top up the gang's bank account");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up an account less than 1 or more than 1000000 Money");
								format(stringer,sizeof(stringer),"Replenishment of the gang's bank account ");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money!");
							FracBank[0][fGrove] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You put in Bank Grove: %s Money", formatInt(dengi));
							SetOtherInt("FracBank[0][fGrove]", FracBank[0][fGrove]);
						}
					case 12:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Top up the gang's bank account");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up an account less than 1 or more than 1000000 Money");
								format(stringer,sizeof(stringer),"Replenishment of the gang's bank account ");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money!");
							FracBank[0][fBallas] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You put in Bank Ballas: %d Money", dengi);
							SetOtherInt("FracBank[0][fBallas]", FracBank[0][fBallas]);
						}
					case 18:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Top up the gang's bank account");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up an account less than 1 or more than 1000000 Money");
								format(stringer,sizeof(stringer),"Replenishment of the gang's bank account ");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money!");
							FracBank[0][fRifa] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You put in Bank Rifa: %d Money", dengi);
							SetOtherInt("FracBank[0][fRifa]", FracBank[0][fRifa]);
						}
					case 13:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Top up the gang's bank account");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up an account less than 1 or more than 1000000 Money");
								format(stringer,sizeof(stringer),"Replenishment of the gang's bank account ");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money!");
							FracBank[0][fVagos] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You put in Bank Vagos: %d Money", dengi);
							SetOtherInt("FracBank[0][fVagos]", FracBank[0][fVagos]);
						}
					case 17:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Top up the gang's bank account");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Close");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot top up an account less than 1 or more than 1000000 Money");
								format(stringer,sizeof(stringer),"Replenishment of the gang's bank account ");
								ShowPlayerDialog(playerid,22250,DIALOG_STYLE_INPUT,"Enter payment amount",stringer,"Ok","Exit");
								return true;
							}
							if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money!");
							FracBank[0][fAztek] += dengi;
							PlayerInfo[playerid][pCash] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You put in Bank Vagos: %d Money", dengi);
							SetOtherInt("FracBank[0][fAztek]", FracBank[0][fAztek]);
						}
					}
				}
			}
		case 22251:
			{
				if(response)
				{
					switch(PlayerInfo[playerid][pMember])
					{
					case 15:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 and more than 1000000 Money ");
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(FracBank[0][fGrove] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There's not that much money in the Grove bank");
							GiveMoney(playerid, dengi);
							FracBank[0][fGrove] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the bank Grove: %d Money", dengi);
							SetOtherInt("FracBank[0][fGrove]", FracBank[0][fGrove]);
							return true;
						}
					case 12:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 and more than 1000000 Money ");
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(FracBank[0][fBallas] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There is no money in the Balls jar");
							GiveMoney(playerid, dengi);
							FracBank[0][fBallas] -= dengi;
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the bank Ballas: %d Money", dengi);
							SetOtherInt("FracBank[0][fBallas]", FracBank[0][fBallas]);
							return true;
						}
					case 13:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 and more than 1000000 Money ");
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(FracBank[0][fVagos] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There is not that much money in the Vagos bank");
							FracBank[0][fVagos] -= dengi;
							GiveMoney(playerid, dengi);
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the bank Vagos: %d Money", dengi);
							SetOtherInt("FracBank[0][fVagos]", FracBank[0][fVagos]);
							return true;
						}
					case 17:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 and more than 1000000 Money ");
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(FracBank[0][fAztek] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"There is not that much money in the Vagos bank");
							FracBank[0][fAztek] -= dengi;
							GiveMoney(playerid, dengi);
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the bank Aztec: %d Money", dengi);
							SetOtherInt("FracBank[0][fAztek]", FracBank[0][fAztek]);
							return true;
						}
					case 18:
						{
							if(!strlen(inputtext))
							{
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
							}
							new dengi;
							dengi = strval(inputtext);
							if(dengi < 1 || dengi > 1000000)
							{
								SendClientMessage(playerid,COLOR_GRAD1,"You cannot withdraw less than 1 and more than 1000000 Money ");
								format(stringer,sizeof(stringer),"Withdrawing money from the gang's account ");
								ShowPlayerDialog(playerid,22251,DIALOG_STYLE_INPUT,"Enter the amount",stringer,"Ok","Exit");
								return true;
							}
							if(FracBank[0][fRifa] < dengi) return SendClientMessage(playerid,COLOR_GRAD1,"Rifa bank doesn't have that much money");
							FracBank[0][fRifa] -= dengi;
							GiveMoney(playerid, dengi);
							SendMes(playerid,0x6ab1ffaa,"You have withdrawn from the bank Rifa: %d Money", dengi);
							SetOtherInt("FracBank[0][fRifa]", FracBank[0][fRifa]);
							return true;
						}
					}
				}
				else { return true; }
			}
		case 8023:
			{
				if(response)
				{
				    new carid = GetPlayerVehicleID(playerid);
				    if(carid == 0 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
					switch(listitem)
					{
					case 0: callcmd::engggg(playerid, "");
					case 1:
						{
							GetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,boot,objective);
							if(light == 0)
							{
								SetVehicleParamsEx(carid,engine,true,alarm,doorss,bonnet,boot,objective);
								//Updatespeedometr(playerid,0)
							}
							else
							{
								SetVehicleParamsEx(carid,engine,false,alarm,doorss,bonnet,boot,objective);
								//Updatespeedometr(playerid,0)
							}
						}
					case 2: callcmd::lock(playerid, "");
					case 3:
						{
							GetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,boot,objective);
							if(bonnet == 0) SetVehicleParamsEx(carid,engine,light,alarm,doorss,true,boot,objective);
							else SetVehicleParamsEx(carid,engine,light,alarm,doorss,false,boot,objective);
							//Updatespeedometr(playerid,0)
						}
					case 4:
						{
							GetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,boot,objective);
							if(boot == 0) SetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,true,objective);
							else SetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,false,objective);
							//Updatespeedometr(playerid,0)
						}
					case 5: callcmd::fillcar(playerid, "");
					case 6:
						{
							format(stringer1,sizeof(stringer1),"Model ON: %s",VehicleNameS[GetVehicleModel(carid)-400]);
							ShowPlayerDialog(playerid,193,DIALOG_STYLE_MSGBOX,"Information",stringer1,"Close","");
						}
					}
				}
			}
		case 8000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
							SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s has given you an object]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You have given an object to player %s [Chicken Hat]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 1:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
							SetPlayerAttachedObject(objectplayerid,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s has given you an object.]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave the object to the player %s [Fire on the head]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 2:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
							SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s given you an object [A miguelka for the head]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You given the object to the player %s [A miguelka for the head]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 3:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
							SetPlayerAttachedObject(objectplayerid,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s given you an object [�The black mask]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Black Mask]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 4:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s given you an object [Bandaana #1]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"given you an object %s [Bandaana #1]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 5:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Bandana #2]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Bandana #2]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 6:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Bandana #3]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Bandana #3]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 7:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Bandana #4]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Bandana #4]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 8:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Bandana #5]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Bandana #5]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 9:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
							SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Dragon Mask]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Dragon Mask]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 10:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
							SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Laser on head]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"gave you the object [Laser on head]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 11:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
							{
								RemovePlayerAttachedObject(objectplayerid, 0);
								RemovePlayerAttachedObject(objectplayerid, 1);
								RemovePlayerAttachedObject(objectplayerid, 4);
							}
							SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
							SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
							SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Almighty Kit]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Almighty Set]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 12:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
							SetPlayerAttachedObject(objectplayerid,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Parrot on shoulder]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Parrot on the shoulder]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 13:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
							SetPlayerAttachedObject(objectplayerid,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you an object [bright light]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"We gave the object to the player %s [bright light]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 14:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
							SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Big M4 in hand]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Large M4 to hand]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 15:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
							SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Penis]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Penis]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 16:
						{
							if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
							SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s gave you the object [Parrot Costume]",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You gave an object to player %s [Parrot Costume]",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					case 17:
						{
							RemovePlayerAttachedObject(objectplayerid, 0);
							RemovePlayerAttachedObject(objectplayerid, 1);
							RemovePlayerAttachedObject(objectplayerid, 2);
							RemovePlayerAttachedObject(objectplayerid, 3);
							RemovePlayerAttachedObject(objectplayerid, 4);
							RemovePlayerAttachedObject(objectplayerid, 5);
							RemovePlayerAttachedObject(objectplayerid, 6);
							RemovePlayerAttachedObject(objectplayerid, 7);
							RemovePlayerAttachedObject(objectplayerid, 8);
							RemovePlayerAttachedObject(objectplayerid, 9);
							SendMes(objectplayerid,0x6ab1ffaa,"Adminstrator %s deleted all your objects",PlayerInfo[playerid][pNames]);
							SendMes(playerid,0x6ab1ffaa,"You have removed all objects from the player %s",PlayerInfo[objectplayerid][pNames]);
							return true;
						}
					}
				}
			}
		case 8001:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
							SetPlayerAttachedObject(playerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit");
							return true;
						}
					case 1:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
							SetPlayerAttachedObject(playerid,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Fire on the head]]");
							return true;
						}
					case 2:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
							SetPlayerAttachedObject(playerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [A miguelka for the head]");
							return true;
						}
					case 3:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
							SetPlayerAttachedObject(playerid,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [�The black mask]");
							return true;
						}
					case 4:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Bandaana #1]");
							return true;
						}
					case 5:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Bandana #2]");
							return true;
						}
					case 6:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Bandana #3]");
							return true;
						}
					case 7:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Bandana #4]");
							return true;
						}
					case 8:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Bandana #5]");
							return true;
						}
					case 9:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
							SetPlayerAttachedObject(playerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Dragon Mask]");
							return true;
						}
					case 10:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
							SetPlayerAttachedObject(playerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Laser on head]");
							return true;
						}
					case 11:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0) || IsPlayerAttachedObjectSlotUsed(playerid, 1) || IsPlayerAttachedObjectSlotUsed(playerid, 4))
							{
								RemovePlayerAttachedObject(playerid, 0);
								RemovePlayerAttachedObject(playerid, 1);
								RemovePlayerAttachedObject(playerid, 4);
							}
							SetPlayerAttachedObject(playerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
							SetPlayerAttachedObject(playerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
							SetPlayerAttachedObject(playerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Almighty Kit]");
							return true;
						}
					case 12:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
							SetPlayerAttachedObject(playerid,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Parrot on shoulder]");
							return true;
						}
					case 13:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
							SetPlayerAttachedObject(playerid,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [bright light]");
							return true;
						}
					case 14:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
							SetPlayerAttachedObject(playerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Big M4 in hand]");
							return true;
						}
					case 15:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
							SetPlayerAttachedObject(playerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Penis]");
							return true;
						}
					case 16:
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
							SendMes(playerid,0x6ab1ffaa,"Succussfully Use VIP Kit [Parrot Costume]");
							return true;
						}
					case 17:
						{
							RemovePlayerAttachedObject(playerid, 0);
							RemovePlayerAttachedObject(playerid, 1);
							RemovePlayerAttachedObject(playerid, 2);
							RemovePlayerAttachedObject(playerid, 3);
							RemovePlayerAttachedObject(playerid, 4);
							RemovePlayerAttachedObject(playerid, 5);
							RemovePlayerAttachedObject(playerid, 6);
							RemovePlayerAttachedObject(playerid, 7);
							RemovePlayerAttachedObject(playerid, 8);
							RemovePlayerAttachedObject(playerid, 9);
							SendMes(playerid,0x6ab1ffaa,"You Removed All VIP Kit!");
							return true;
						}
					}
				}
			}
		case 2017:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDedMoroz] == 1) return SendClientMessage(playerid, -1, "You already have this suit!");
							if(PlayerInfo[playerid][pRub] < 300) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough rubles to buy!");
							PlayerInfo[playerid][pDedMoroz] += 1;
      				   		PlayerInfo[playerid][pRub] -= 300;
      				   		UpdatePlayerData(playerid, "pDedMoroz", PlayerInfo[playerid][pDedMoroz]);
      				   		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
							SCM(playerid,0x6ab1ffaa,"You bought a Santa Claus costume.");
							return true;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pNinja] == 1) return SendClientMessage(playerid, -1, "You already have this costume!");
							if(PlayerInfo[playerid][pRub] < 280) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough rubles to buy!");
      				   		PlayerInfo[playerid][pNinja] += 1;
      				   		PlayerInfo[playerid][pRub] -= 280;
      				   		UpdatePlayerData(playerid, "pNinja", PlayerInfo[playerid][pNinja]);
      				   		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
							SCM(playerid,0x6ab1ffaa,"You bought a Ninja Suit.");
							return true;
						}
					}
				}
			}
		case 2020:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pDedUse] == 0)
			    {
			        RemovePlayerAttachedObject(playerid, 8);
			        RemovePlayerAttachedObject(playerid, 9);
			        RemovePlayerAttachedObject(playerid, 0);
					SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
			 		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
				 	SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
				 	SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
				 	SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
				 	SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
				 	SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
				 	SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
				 	SetPlayerSkin(playerid, 189);
			        PlayerInfo[playerid][pDedUse] = 1;
			        PlayerInfo[playerid][pNinjaUse] = 0;
			        UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
			        UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
			        SendClientMessage(playerid,-1,"You put on a Santa Claus costume!");
			    }
			    else
			    {
					RemovePlayerAttachedObject(playerid, 2);
					RemovePlayerAttachedObject(playerid, 1);
					RemovePlayerAttachedObject(playerid, 1);
					RemovePlayerAttachedObject(playerid, 3);
					RemovePlayerAttachedObject(playerid, 6);
					RemovePlayerAttachedObject(playerid, 5);
					RemovePlayerAttachedObject(playerid, 4);
					RemovePlayerAttachedObject(playerid, 7);
					PlayerInfo[playerid][pDedUse] = 0;
     				UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
					CheckItem(playerid);
					for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
					SendClientMessage(playerid,-1,"You took off your Santa Claus costume!");
					return true;
			    }
				return true;
			}
			return true;
		}
		case 2021:
		{
		    if(response)
			{
				if(PlayerInfo[playerid][pNinjaUse] == 0)
				{
					RemovePlayerAttachedObject(playerid, 2);
					RemovePlayerAttachedObject(playerid, 1);
					RemovePlayerAttachedObject(playerid, 1);
					RemovePlayerAttachedObject(playerid, 3);
					RemovePlayerAttachedObject(playerid, 6);
					RemovePlayerAttachedObject(playerid, 5);
					RemovePlayerAttachedObject(playerid, 4);
					RemovePlayerAttachedObject(playerid, 7);
					RemovePlayerAttachedObject(playerid, 0);
  					SetPlayerAttachedObject(playerid, 8, 339, 1, 0.3649, -0.1169, 0.0919, 0.0000, -123.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
					SetPlayerAttachedObject(playerid, 9, 339, 1, 0.3029, -0.1289, -0.1920, 0.6999, -69.7000, 0.2000, 1.0000, 1.0000, 1.0000, 0, 0);
					PlayerInfo[playerid][pNinjaUse] = 1;
			        PlayerInfo[playerid][pDedUse] = 0;
			        UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
			        UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
					SetPlayerSkin(playerid, 203);
					SCM(playerid,-1,"You put on the Ninja suit!");
				}
				else
				{
					RemovePlayerAttachedObject(playerid, 8);
					RemovePlayerAttachedObject(playerid, 9);
					PlayerInfo[playerid][pNinjaUse] = 0;
			        UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
					CheckItem(playerid);
					for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
					SCM(playerid,-1,"You have taken off your Ninja suit!");
				}
				return true;
			}
			return 1;
		}
		case 2022:
		{
			if(response)
			{
  				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pDedUse] == 0)
					    {
     						RemovePlayerAttachedObject(playerid, 8);
     						RemovePlayerAttachedObject(playerid, 9);
     						RemovePlayerAttachedObject(playerid, 0);
							SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
					 		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
						 	SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
						 	SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
						 	SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
						 	SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
						 	SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
						 	SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
						 	SetPlayerSkin(playerid, 189);
					        PlayerInfo[playerid][pDedUse] = 1;
					        PlayerInfo[playerid][pNinjaUse] = 0;
  			        		UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
			        		UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
					        SendClientMessage(playerid,-1,"You put on a Santa Claus costume!");
					    }
						else
						{
 							RemovePlayerAttachedObject(playerid, 2);
							RemovePlayerAttachedObject(playerid, 1);
							RemovePlayerAttachedObject(playerid, 1);
							RemovePlayerAttachedObject(playerid, 3);
							RemovePlayerAttachedObject(playerid, 6);
							RemovePlayerAttachedObject(playerid, 5);
							RemovePlayerAttachedObject(playerid, 4);
							RemovePlayerAttachedObject(playerid, 7);
							PlayerInfo[playerid][pDedUse] = 0;
       						UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
							CheckItem(playerid);
							for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
							SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
							SendClientMessage(playerid,-1,"You took off your Santa Claus costume!");
						}
					}
					case 1:
					{
						if(PlayerInfo[playerid][pNinjaUse] == 0)
						{
							RemovePlayerAttachedObject(playerid, 2);
							RemovePlayerAttachedObject(playerid, 1);
							RemovePlayerAttachedObject(playerid, 1);
							RemovePlayerAttachedObject(playerid, 3);
							RemovePlayerAttachedObject(playerid, 6);
							RemovePlayerAttachedObject(playerid, 5);
							RemovePlayerAttachedObject(playerid, 4);
							RemovePlayerAttachedObject(playerid, 7);
							RemovePlayerAttachedObject(playerid, 0);
		  					SetPlayerAttachedObject(playerid, 8, 339, 1, 0.3649, -0.1169, 0.0919, 0.0000, -123.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
							SetPlayerAttachedObject(playerid, 9, 339, 1, 0.3029, -0.1289, -0.1920, 0.6999, -69.7000, 0.2000, 1.0000, 1.0000, 1.0000, 0, 0);
							PlayerInfo[playerid][pNinjaUse] = 1;
							PlayerInfo[playerid][pDedUse] = 0;
       						UpdatePlayerData(playerid, "pDedUse", PlayerInfo[playerid][pDedUse]);
		        			UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
							SetPlayerSkin(playerid, 203);
							SCM(playerid,-1,"You put on the Ninja suit!");
						}
						else
						{
							RemovePlayerAttachedObject(playerid, 8);
							RemovePlayerAttachedObject(playerid, 9);
							PlayerInfo[playerid][pNinjaUse] = 0;
    						UpdatePlayerData(playerid, "pNinjaUse", PlayerInfo[playerid][pNinjaUse]);
							CheckItem(playerid);
							for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
							SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
							SCM(playerid,-1,"You have taken off your Ninja suit!");
						}
						return true;
					}
				}
			}
			return true;

		}
		case 2023:
		{
			ShowPlayerDialog(playerid, 9777, DIALOG_STYLE_MSGBOX, "{FFFF00}Information","You can get costumes for free by completing holiday quests.\nIf you don�t want to complete quests, then you can purchase costumes at /donaterub","Back","Buy");
		}
		case 9777:
			{
				callcmd::donaterub(playerid);
			}
		case 1999:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pRub] < 15) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough rubles to buy!");
					switch(listitem)
					{
					case 0:
						{
						    if(PlayerInfo[playerid][pIznas] == 1) return SendClientMessage(playerid, -1, "You already have this command");
      				   		PlayerInfo[playerid][pIznas] += 1;
      				   		PlayerInfo[playerid][pRub] -= 30;
      				   		UpdatePlayerData(playerid, "pIznas", PlayerInfo[playerid][pIznas]);
      				   		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
							SendClientMessage(playerid, COLOR_WHITE, "You bought the command /raped!");
							return true;
						}
					case 1:
						{
						    if(PlayerInfo[playerid][pMinet] == 1) return SendClientMessage(playerid, -1, "You already have this command");
      				   		PlayerInfo[playerid][pMinet] += 1;
      				   		PlayerInfo[playerid][pRub] -= 30;
      				   		UpdatePlayerData(playerid, "pMinet", PlayerInfo[playerid][pMinet]);
      				   		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
							SendClientMessage(playerid, COLOR_WHITE, "You bought the command /blowjb!");
							return true;
						}
					}
				}
			}
			//-----------------------------[ Bank dialogue]----------------------
		case 8810:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST, "Account management", "[1] My accounts\n[2] Open a new account", "Select", "Back");
					case 1:
						{
							if(GetPlayerBizz(playerid) > 0) ShowPlayerDialog(playerid, 2929, 1, "Top up business account", "Enter the number of days to pay for the business\n\nNote:\tFrom 1 before 30 days", "Top up", "Back");
							else SendClientMessage(playerid, COLOR_GREY, "You are not a businessman!");
							return true;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_WHITE, "You have no home");
							ShowPlayerDialog(playerid, 9521, DIALOG_STYLE_LIST, "{FFD700}ATM","- for 2 days\n- for 7 days\n- for 30 days","Select", "Exit");
							return 1;
						}
					case 3:
						{
							if(PlayerInfo[playerid][pHousecash] <=0) return	SendClientMessage(playerid, COLOR_GRAD1, "No money for your house");
							GiveMoney(playerid, PlayerInfo[playerid][pHousecash]);
							SendMes(playerid,COLOR_WHITE,"::: Returned to you %d Money for your home :::", PlayerInfo[playerid][pHousecash]);
							PlayerInfo[playerid][pHousecash] = 0;
							return true;
						}
					case 4: if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid,COLOR_GREY,"You have no business"); else ShowPlayerDialog(playerid, 2928, 1, "Products", "{ffffff}Enter the number of products and payment through the sign ',':\n\nOn {8D8DFF}50{ffffff} units of production accounted for {8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
					case 5: ShowPlayerDialog(playerid, 10059, DIALOG_STYLE_LIST, "Buy Gold Bar", "[1] 2.000.000$ for 1 Gold Bar;\n[2] 20.000.000$ for 10 Gold Bar;\n[3] 40.000.000$ for 20 Gold Bar;\n[4] 60.000.000$ for 30 Gold Bar;\n[5] 100.000.000$ for 50 Gold Bar.", "Exchange", "Back");
					case 6: ShowPlayerDialog(playerid, 10060, DIALOG_STYLE_LIST, "Sell Gold Bar", "[1] 1.500.000$ for 1 Gold Bar;\n[2] 15.000.000$ for 10 Gold Bar;\n[3] 30.000.000$ for 20 Gold Bar;\n[4] 45.000.000$ for 30 Gold Bar;\n[5] 75.000.000$ for 50 Gold Bar.", "Exchange", "Back");

					}
				}
				else return GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
			}
		case 2019:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							new string[210];
							format(string, sizeof(string), "{FFFFFF}Current tariff: (1 rub == 40 donate rubs)\n\n{FFFFFF}On your account {63CB00}%d rubs\n{FFFFFF}The maximum available to get donated points %d\n\n{FFFFFF}How much do you want to exchange rubles?", PlayerInfo[playerid][pRub], PlayerInfo[playerid][pRub] * 200);
							ShowPlayerDialog(playerid, 9667, DIALOG_STYLE_INPUT, "{FFD700}Donate glasses", string, "Next", "Cancle");
						}
					case 1:
						{
							new string[200];
							format(string, sizeof(string), "{FFFFFF}Current tariff: (5 rubs == 1 rehearsal hour)\n\n{FFFFFF}On your account {63CB00}%d rubs\n\n{FFFFFF}How much do you want to exchange rubles?", PlayerInfo[playerid][pRub]);
							ShowPlayerDialog(playerid, 9685, DIALOG_STYLE_INPUT, "{FFD700}Replay Hours", string, "Next", "Cancle"); //
						}
					}
				}
			}
  		case 5000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1406.2530517578,998.36901855469,1024.1569824219);
								return true;
							}
							else SetPPos(playerid, -1406.2530517578,998.36901855469,1024.1569824219);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,15);
							SetPlayerVirtualWorldEx(playerid,1);
							return true;
						}
					case 1:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -973.0014,1070.3645,1345.0042);
								return true;
							}
							else SetPPos(playerid, -973.0014,1070.3645,1345.0042);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,10);
							SetPlayerVirtualWorldEx(playerid,1);
							return true;
						}
					case 2:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2689.5959,2136.0581,55.4296);
								return true;
							}
							else SetPPos(playerid, -2689.5959,2136.0581,55.4296);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 3:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1544.1018,-1353.2571,329.4744);
								return true;
							}
							else SetPPos(playerid, 1544.1018,-1353.2571,329.4744);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 4:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2215.4548,-1147.4694,1025.7969);
								return true;
							}
							else SetPPos(playerid, 2215.4548,-1147.4694,1025.7969);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,15);
							SetPlayerVirtualWorldEx(playerid,1);
							return true;
						}
					case 5:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 774.2140,-48.9116,1000.5859);
								return true;
							}
							else SetPPos(playerid, 774.2140,-48.9116,1000.5859);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,6);
							SetPlayerVirtualWorldEx(playerid,1);
							return true;
						}
					case 6:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 963.4188,2108.2925,1011.0303);
								return true;
							}
							else SetPPos(playerid, 963.4188,2108.2925,1011.0303);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,1);
							SetPlayerVirtualWorldEx(playerid,1);
						}
					case 7:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1596.1976,618.8392,36.3317);
								return true;
							}
							else SetPPos(playerid, -1596.1976,618.8392,36.3317);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 8:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1398.0653,-217.0289,1051.1158);
								return true;
							}
							else SetPPos(playerid, -1398.0653,-217.0289,1051.1158);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,7);
							SetPlayerVirtualWorldEx(playerid,1);
						}
					case 9:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2317.4775,1544.8871,18.7734);
								return true;
							}
							else SetPPos(playerid, -2317.4775,1544.8871,18.7734);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 10:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2625.1697,1406.9091,7.1016);
								return true;
							}
							else SetPPos(playerid, -2625.1697,1406.9091,7.1016);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 11:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1831.5061,-1679.6296,13.5469);
								return true;
							}
							else SetPPos(playerid, 1831.5061,-1679.6296,13.5469);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 12:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 286.9399,-1815.6683,4.2496);
								return true;
							}
							else SetPPos(playerid, 286.9399,-1815.6683,4.2496);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 13:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1476.6449,-1712.8483,-82.9631);
								return true;
							}
							else SetPPos(playerid, 1476.6449,-1712.8483,-82.9631);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					}
				}
			}
		case 4000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 967.8237,-943.9907,40.6260);
								return true;
							}
							else SetPPos(playerid, -1406.2530517578,998.36901855469,1024.1569824219);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 1:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1480.9031,-1765.7985,18.7958);
								return true;
							}
							else SetPPos(playerid, 1480.9031,-1765.7985,18.7958);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 2:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1263.7864,-2047.2393,59.3151);
								return true;
							}
							else SetPPos(playerid, 1263.7864,-2047.2393,59.3151);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 3:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 777.7466,-1326.2512,13.5469);
								return true;
							}
							else SetPPos(playerid, 777.7466,-1326.2512,13.5469);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 4:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1545.7412,-1675.5740,13.5610);
								return true;
							}
							else SetPPos(playerid, 1545.7412,-1675.5740,13.5610);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 5:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1632.8252,687.8867,7.1875);
								return true;
							}
							else SetPPos(playerid, -1632.8252,687.8867,7.1875);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 6:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2235.4844,2453.8391,10.7495);
								return true;
							}
							else SetPPos(playerid, 2235.4844,2453.8391,10.7495);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 7:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1177.7603,-1323.6040,14.0866);
								return true;
							}
							else SetPPos(playerid, 1177.7603,-1323.6040,14.0866);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 8:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2046.6017,-77.4933,35.1719);
								return true;
							}
							else SetPPos(playerid, -2046.6017,-77.4933,35.1719);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,15);
							SetPlayerVirtualWorldEx(playerid,1);
						}
					case 9:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1658.6249,-1693.4465,15.6094);
								return true;
							}
							else SetPPos(playerid, 1658.6249,-1693.4465,15.6094);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 10:
						{
							if (GetPlayerState(playerid) == 2)//Sfa
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1530.6942,484.4259,7.1797);
								return true;
							}
							else SetPPos(playerid, -1530.6942,484.4259,7.1797);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 11:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 348.2563,1795.4601,18.2253);
								return true;
							}
							else SetPPos(playerid, 348.2563,1795.4601,18.2253);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 12:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1447.9338,751.2480,10.8203);
								return true;
							}
							else SetPPos(playerid, 1447.9338,751.2480,10.8203);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 13:
						{
							if (GetPlayerState(playerid) == 2)//Yakuza
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1463.2810,2773.0479,10.6719);
								return true;
							}
							else SetPPos(playerid, 1463.2810,2773.0479,10.6719);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 14:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 949.2507,1733.4224,8.6484);
								return true;
							}
							else SetPPos(playerid, 949.2507,1733.4224,8.6484);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 15:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2743.0103,-1177.4921,69.4034);
								return true;
							}
							else SetPPos(playerid, 2743.0103,-1177.4921,69.4034);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 16:
						{
							if (GetPlayerState(playerid) == 2)//Ballas
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2002.2544,-1129.0349,25.4454);
								return true;
							}
							else SetPPos(playerid, 2002.2544,-1129.0349,25.4454);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 17:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2463.8145,-1659.1553,13.3093);
								return true;
							}
							else SetPPos(playerid, 2463.8145,-1659.1553,13.3093);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 18:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1702.4064,-2112.7881,13.3828);
								return true;
							}
							else SetPPos(playerid, 1702.4064,-2112.7881,13.3828);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 19:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2184.7957,-1774.6335,13.3667);
								return true;
							}
							else SetPPos(playerid, 2184.7957,-1774.6335,13.3667);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 20:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2484.1370,2405.5347,16.1988);
								return true;
							}
							else SetPPos(playerid, -2484.1370,2405.5347,16.1988);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 21:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1304.3981,1295.9324,10.8203);
								return true;
							}
							else SetPPos(playerid, 1304.3981,1295.9324,10.8203);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 22:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2021.1836,1007.8068,10.8203);
								return true;
							}
							else SetPPos(playerid, 2021.1836,1007.8068,10.8203);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 23:
						{
							if (GetPlayerState(playerid) == 2)//Casino Caligulas
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2195.1516,1677.0779,12.3672);
								return true;
							}
							else SetPPos(playerid, 2195.1516,1677.0779,12.3672);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					}
				}
			}
		case 2928:
			{
				if(!response) return ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Banking services","{ffffff}[1] Account management\n[2] Transfer to business account\n[3] House Tax Pay\n[4] Withdraw money for home\n[5] Order business products", "Choice", "Close");
				new price, till, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "p<,>ii",till,price)) return ShowPlayerDialog(playerid, 2928, 1, "��������", "{ffffff}Enter the number of products and payment via the sign ',':\n\nOn {8D8DFF}50{ffffff} units of production account for {8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
		    	if(BizzInfo[i][bType] != 2)
		    	{
					if(till < 50 || till > 20000-BizzInfo[i][bProduct])
					{
			    		SendClientMessage(playerid, COLOR_GREY, "Number of products from 1 to 20000!");
		 				return ShowPlayerDialog(playerid, 2928, 1, "Products", "{ffffff}Enter the number of products and payment via the sign ',':\n\nOn {8D8DFF}50{ffffff} units of production account for {8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
					}
				}
				else
				{
			    	if(till < 50 || till > 50000-BizzInfo[i][bProduct])
					{
			    		SendClientMessage(playerid, COLOR_GREY, "Number of products from 1 to 50000!");
		 				return ShowPlayerDialog(playerid, 2928, 1, "Products", "{ffffff}Enter the number of products and payment via sign ',':\n\nOn {8D8DFF}50{ffffff} units of production account for{8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
					}
				}
				if(price < 5000 || price > 100000)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Price for work from 5000 to 100000!");
					return ShowPlayerDialog(playerid, 2928, 1, "Products", "{ffffff}Enter the number of products and payment via the sign ',':\n\nOn {8D8DFF}50{ffffff} units of production account for {8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
				}
				if(PlayerInfo[playerid][pBank] < price+till) return SendClientMessage(playerid,COLOR_GREY,"In your bank account Insufficient funds!"), ShowPlayerDialog(playerid, 2928, 1, "Products", "{ffffff}Enter the number of products and payment via the sign ',':\n\n�� {8D8DFF}50{ffffff} units of production account for{8D8DFF}50 {ffffff}Money\n\n", "Accept", "Back");
				if(BizzInfo[i][bProdStat] == true) return SendClientMessage(playerid,COLOR_GREY,"Products for your business have already been ordered! Wait for your order to be completed.");
				if(TOTALPRODUCT >= 55) return SendClientMessage(playerid,COLOR_GREY,"The maximum number of available orders has been reached. Please try again later!");
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pNames],0,strlen(PlayerInfo[playerid][pNames]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = price;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = i;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				ProductInfo[TOTALPRODUCT][pType] = BizzInfo[i][bType];
				BizzInfo[i][bProdStat] = true;
				PlayerInfo[playerid][pBank] -= price;
				SendMes(playerid,COLOR_WHITE, "You ordered %i products, payment %i Money. Account balance: %i Money", till, price, PlayerInfo[playerid][pBank]);
				foreach(Player,p) if(PlayerInfo[p][pJob] == 5) SendMes(p,  COLOR_LIGHTBLUE, "A new order has arrived from %s. Use: /plist",PlayerInfo[playerid][pNames]);
				return true;
			}
		case 2929:
			{
				if(!response) return true;
		    	if(strval(inputtext) > 30 || strval(inputtext) < 1 || (BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bMoney]/1000/24)+strval(inputtext) > 30) return SendClientMessage(playerid,COLOR_GREY,"Wrong amount / Business has already been paid!");
		    	if(PlayerInfo[playerid][pBank] < 1000*(strval(inputtext)*24)) return SendClientMessage(playerid,COLOR_GREY,"Insufficient funds in the bank account");
				PlayerInfo[playerid][pBank]-=1000*(strval(inputtext)*24);
				BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bMoney] += (strval(inputtext)*24)*1000;
		    	format(stringer1,168,"__________________________________\nYour business is paid for:\t%i days\nOld balance:\t%i Money\nNew balance:\t%i Money\n__________________________________",floatround((BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bMoney]/1000)/24),PlayerInfo[playerid][pBank]+(1000*strval(inputtext))*24,PlayerInfo[playerid][pBank]);
				ShowPlayerDialog(playerid, 000,DIALOG_STYLE_MSGBOX, "Main account balance",stringer1, "Close", "");
			}
		case 8816:
			{
				if(!response) return ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operations history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
				if(!strlen(inputtext))// ���� ��������� ������ ������, ������� ��� ����� ����
				{
					format(stringer,sizeof(stringer), "Your account balance: %d virtual.\nEnter the amount you need", PlayerInfo[playerid][pBank]);
					return ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT,"To deposit",stringer,"Next","Back");
				}
				new summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
				if(summa < 1) return SendClientMessage(playerid, COLOR_GREY, "You cannot put less than 1 Money!");
				PlayerInfo[playerid][pCash] -=summa;
				SendClientMessage(playerid, COLOR_YELLOW2, "::: Please take your check :::");
				GiveBank(playerid, summa);
				SendMes(playerid,COLOR_WHITE,"Credit: %d Money",summa);
				SendClientMessage(playerid, COLOR_GRAD6, "");
				SendMes(playerid,COLOR_WHITE,"New balance: %d Money", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_YELLOW2, "::: Please take your check :::");
				Transfer_Log(playerid, PlayerInfo[playerid][pID], 0, summa, 0, PlayerInfo[playerid][pNames]); // ���
				return true;
			}
		case 8817:
			{
                return ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operation history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
			}
		case 8831:
			{
				if(!response) return ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operation history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
				new playerd, price;
				if(sscanf(inputtext, "di",playerd, price)) return ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter player ID and Money amount separated by space\n\nExample: 45 15761", "Accept", "Back");
				if(!IsPlayerConnected(playerd) || gPlayerLogged[playerd] == 0) { ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter player ID and Money amount separated by space\n\nExample: 45 15761", "Accept", "Back"); return SendClientMessage(playerid, COLOR_GREY, "The player does not exist!"); }
				if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter player ID and Money amount separated by space\n\nExample: 45 15761", "Accept", "Back"); return SendClientMessage(playerid, COLOR_GREY, "There are not enough funds in the account!"); }
				if(price < 1) return ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter player ID and Money amount separated by space\n\nExample: 45 254000", "Accept", "Back");
				if(PlayerInfo[playerd][pBank] + price < 0) return SendClientMessage(playerid, COLOR_WHITE, "He has a bank savings limit!");
				PlayerInfo[playerid][pBank] -= price+money;
				GiveBank(playerd, price);
				SendMes(playerid, TEAM_BLUE_COLOR, "You have transferred Moneys to the %s: %s account. Account balance: %s Moneys", PlayerInfo[playerd][pNames], formatInt(price), formatInt(PlayerInfo[playerid][pBank]));
				SendMes(playerd, TEAM_BLUE_COLOR, "%s has transferred: %s Moneys to your account. Now on the account: %s Moneys", PlayerInfo[playerid][pNames], formatInt(price), formatInt(PlayerInfo[playerd][pBank]));
				Transfer_Log(playerid, PlayerInfo[playerid][pID], 2, price, PlayerInfo[playerd][pID], PlayerInfo[playerd][pNames]); // ���
				return ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operation history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
			}
		case 8814:
			{
				if(!response) return ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operations history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Cashless transfer", "Select", "Back");
				if(!strlen(inputtext))// ���� ��������� ������ ������, ������� ��� ����� ����
				{
					format(stringer,sizeof(stringer), "Your account balance: %s Money\nEnter the amount you want", formatInt(PlayerInfo[playerid][pBank]));
					return ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT,"Withdrawal from the account",stringer,"Next","Back");
				}
				new summa = strval(inputtext);
				if(PlayerInfo[playerid][pBank] < summa) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
				if(summa < 1) return SendClientMessage(playerid, COLOR_GREY, "You cannot remove less than 1 virtual!");
				GiveMoney(playerid, summa);
				SendClientMessage(playerid, COLOR_YELLOW2, "::: Please take your check :::");
				PlayerInfo[playerid][pBank] -= summa;
				SendMes(playerid,COLOR_GRAD4,"Withdrawn from account: %s Money",formatInt(summa));
				SendClientMessage(playerid, COLOR_GRAD6, "");
				SendMes(playerid,0xFEBC41AA,"New balance: %s Money", formatInt(PlayerInfo[playerid][pBank]));
				SendClientMessage(playerid, COLOR_YELLOW2, "::: Please take your check :::");
				Transfer_Log(playerid, PlayerInfo[playerid][pID], 1, summa, 0, PlayerInfo[playerid][pNames]); // ���
				return true;
			}
		case 9998:
			{
				if(response)
				{
					new Float:health;
					GetPlayerHealth(playerid,health);
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pCash] < 750) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 750;
							SetPlayerHealthAC(playerid, health+10.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Beer");
						}
					case 1:
						{
							if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 1000;
							SetPlayerHealthAC(playerid, health+15.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Wine");
						}
					case 2:
						{
							if(PlayerInfo[playerid][pCash] < 1250) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 1250;
							SetPlayerHealthAC(playerid, health+20.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Port wine");
						}
					case 3:
						{
							if(PlayerInfo[playerid][pCash] < 1500) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 1500;
							SetPlayerHealthAC(playerid, health+25.0);
							SendClientMessage(playerid, COLOR_NEWS, "�� ������ �����");
						}
					case 4:
						{
							if(PlayerInfo[playerid][pCash] < 1750) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 1750;
							SetPlayerHealthAC(playerid, health+30.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Tequila");
						}
					case 5:
						{
							if(PlayerInfo[playerid][pCash] < 2500) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 2500;
							SetPlayerHealthAC(playerid, health+35.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Cognac");
						}
					case 6:
						{
							if(PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 3000;
							SetPlayerHealthAC(playerid, health+40.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Whiskey");
						}
					case 7:
						{
							if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
							PlayerInfo[playerid][pCash] -= 5000;
							SetPlayerHealthAC(playerid, health+50.0);
							SendClientMessage(playerid, COLOR_NEWS, "You bought Absinthe");
						}
					}
					SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
					if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid,20000);
					FIXES_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					return true;
				}
				else return true;
			}
		case 9999:
			{
				if(!response) return callcmd::atm(playerid);
				if(!strlen(inputtext))
				{
					format(stringer,sizeof(stringer), "On your phone account: %d Money\nEnter the amount you want to put on your phone",PlayerInfo[playerid][pMobile]);
					return ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"Mob account phone",stringer,"Next","Back");
				}
				new moneys = strval(inputtext);
				if(moneys < 1 || moneys > 15000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Minimum amount - 1, maximum - 15000!");
					format(stringer,sizeof(stringer), "On your phone account: %d Money\nEnter the amount you want to put on your phone",PlayerInfo[playerid][pMobile]);
					return ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"Mob account phone",stringer,"Next","Back");
				}
				if(PlayerInfo[playerid][pCash] < moneys) return	SendClientMessage(playerid, COLOR_GRAD1, "{FF3200} ! {FEFEFE} -You don't have that much money!");
				if(PlayerInfo[playerid][pMobile] >= 5000) return SendClientMessage(playerid, COLOR_GRAD1, "{FF3200} ! {FEFEFE} -Your balance is more than 5000 Money, payment is not possible!");
				PlayerInfo[playerid][pCash] -= moneys;
				PlayerInfo[playerid][pMobile] +=moneys;
				SendClientMessage(playerid, COLOR_NEWS, "== [ Mobile balance ] ==");
				SendMes(playerid,COLOR_WHITE,"- Amount to pay %d Money", moneys);
				SendClientMessage(playerid, COLOR_WHITE, "- Commission 0 Money");
				SendClientMessage(playerid, COLOR_WHITE, "- Your request has been accepted, await the receipt of funds");
				SendMes(playerid,COLOR_WHITE,"- Your balance is %d Money", PlayerInfo[playerid][pMobile]);
				SendClientMessage(playerid, COLOR_NEWS, "== [ Mobile balance ] ==");
				SendMes(playerid,COLOR_YELLOW,"SMS: Your balance has been replenished with %d virtual. Sender: New York Telecom", moneys);
				return true;
			}
		case 2000:
			{
			    if(!PlayerInfo[playerid][pQuest1]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!");
				if(PlayerInfo[playerid][pQuest1Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest1Done] = 1;
				PlayerInfo[playerid][pExp] += 20;
				PlayerInfo[playerid][pDonatemoney2] += 100;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
				UpdatePlayerData(playerid, "pQuest1Done", PlayerInfo[playerid][pQuest1Done]);
			}
		case 2001:
			{
	  			if(!PlayerInfo[playerid][pQuest2]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest2Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest2Done] = 1;
				PlayerInfo[playerid][pExp] += 20;
				PlayerInfo[playerid][pDonatemoney2] += 1000;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest2Done", PlayerInfo[playerid][pQuest2Done]);
			}
		case 2002:
			{
   				if(!PlayerInfo[playerid][pQuest3]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest3Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest3Done] = 1;
				PlayerInfo[playerid][pExp] += 20;
				PlayerInfo[playerid][pDonatemoney2] += 500;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest3Done", PlayerInfo[playerid][pQuest3Done]);
			}
		case 2003:
			{
				if(!PlayerInfo[playerid][pQuest4]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest4Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest4Done] = 1;
				PlayerInfo[playerid][pExp] += 10;
				PlayerInfo[playerid][pDonatemoney2] += 1000;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest4Done", PlayerInfo[playerid][pQuest4Done]);
			}
		case 2004:
			{
				if(!PlayerInfo[playerid][pQuest5]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest5Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest5Done] = 1;
				PlayerInfo[playerid][pLevel] += 1;
				PlayerInfo[playerid][pExp] += 30;
				PlayerInfo[playerid][pDonatemoney2] += 1000;
				UpdatePlayerData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest5Done", PlayerInfo[playerid][pQuest5Done]);
			}
		case 2005:
			{
				if(!PlayerInfo[playerid][pQuest6]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest6Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest6Done] = 1;
				PlayerInfo[playerid][pExp] += 10;
				PlayerInfo[playerid][pDonatemoney2] += 700;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest6Done", PlayerInfo[playerid][pQuest6Done]);
			}
		case 2006:
			{
				if(!PlayerInfo[playerid][pQuest7]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest7Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest7Done] = 1;
				PlayerInfo[playerid][pExp] += 10;
				PlayerInfo[playerid][pDonatemoney2] += 600;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest7Done", PlayerInfo[playerid][pQuest7Done]);
			}
		case 2007:
			{
				if(!PlayerInfo[playerid][pQuest8]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest8Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest8Done] = 1;
				PlayerInfo[playerid][pExp] += 30;
				PlayerInfo[playerid][pDonatemoney2] += 3000;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest8Done", PlayerInfo[playerid][pQuest8Done]);
			}
		case 2008:
			{
				if(!PlayerInfo[playerid][pQuest10]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest10Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest10Done] = 1;
				PlayerInfo[playerid][pExp] += 25;
				PlayerInfo[playerid][pDonatemoney2] += 1500;
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest10Done", PlayerInfo[playerid][pQuest10Done]);
			}
		case 2009:
			{
				if(!PlayerInfo[playerid][pQuest9]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest9Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest9Done] = 1;
				PlayerInfo[playerid][pLevel] += 2;
				PlayerInfo[playerid][pDonatemoney2] += 1000;
                UpdatePlayerData(playerid, "pLevel", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest9Done", PlayerInfo[playerid][pQuest9Done]);
			}
		case 2010:
			{
				if(!PlayerInfo[playerid][pQuest11]) return SendClientMessage(playerid, -1, "{4682B4}The Quest In Progress And Dont Forget To Finish Advance Congrats!!");
				if(PlayerInfo[playerid][pQuest11Done] == 1) return SendClientMessage(playerid, -1, "{4682B4}The Quest Already Finish And Claimed Your Gift Can't Repeat Quest Thanks you!");
				SCM(playerid,-1,"{42aaff}Congratulations! You Finish The Quest Succesfully 'OH YEAH BABY' Keep It Up Get More Donate Money And EXP!");
				PlayerInfo[playerid][pQuest11Done] = 1;
				PlayerInfo[playerid][pLevel] += 5;
				PlayerInfo[playerid][pExp] += 60;
				PlayerInfo[playerid][pDonatemoney2] += 4000;
				UpdatePlayerData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
                UpdatePlayerData(playerid, "pExp", PlayerInfo[playerid][pExp]);
                UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
                UpdatePlayerData(playerid, "pQuest11Done", PlayerInfo[playerid][pQuest11Done]);
			}
			//------------------------------------[ �������� ] ---------------------------
		case 8900:
			{
				if(!response) return GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
				switch(listitem)
				{
					case 0:
					{
						format(stringer,sizeof(stringer), "Your account balance: %s Money", formatInt(PlayerInfo[playerid][pBank]));
						ShowPlayerDialog(playerid,8904,DIALOG_STYLE_LIST,stringer," - 500$\n - 1000$\n - 5000$\n - 10000$\n - 20000$\n - 50000$\n - 100000$","Ok","Back");
					}
					case 1:
					{
						format(stringer,sizeof(stringer), "_________________________\nYou have %s Money on your account\n_________________________",formatInt(PlayerInfo[playerid][pBank]));
						ShowPlayerDialog(playerid,8905,DIALOG_STYLE_MSGBOX,"{FFD700}ATM",stringer,"Back","");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_WHITE, "You have no home");
						ShowPlayerDialog(playerid, 9521, DIALOG_STYLE_LIST, "{FFD700}ATM","- for 2 days\n- for 30 days","Translate", "Exit");
					}
					case 3: ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"{FFD700}ATM","Mobile top-up\nUse an amount from $500 to $15,000","Introduce","Close");
					case 4:
					{
						if(GetPlayerBizz(playerid) > 0) ShowPlayerDialog(playerid, 2929, 1, "Top up business account", "Enter the number of days to pay for the business\n\nNote:\tFrom 1 to 30 days", "Top up", "Back");
						else SendClientMessage(playerid, COLOR_GREY, "You are not a businessman!");
					}
				}
				return true;
			}
		case 4001:
		{
			switch(response)
			{
				case 0: return 1;
				case 1:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 2);
					SetPPos(playerid, 1494.5049,1303.9475,1093.2891);
			        SetPlayerFacingAngle(playerid, 353.7651);
				}
			}
		}
		case 4002:
		{
			switch(response)
			{
				case 0: return 1;
				case 1:
				{
				    SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetPPos(playerid, 944.8320,-1721.3160,13.7208);
					SetPlayerFacingAngle(playerid, 80.6609);
				}
			}
			return 1;
		}
		case 8904:
			{
				if(response)
				{
					if(listitem == 0) { money = 500; }
					else if(listitem == 1) { money = 1000; }
					else if(listitem == 2) { money = 5000; }
					else if(listitem == 3) { money = 10000; }
					else if(listitem == 4) { money = 20000; }
					else if(listitem == 5) { money = 50000; }
					else if(listitem == 6) { money = 100000; }
					if (money > PlayerInfo[playerid][pBank]) return ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_MSGBOX, "{FFD700}ATM", "There is not enough money in your account!", "<< Back", "");
					GiveMoney(playerid, money);
					PlayerInfo[playerid][pBank] = PlayerInfo[playerid][pBank]-money;
					SendMes(playerid,0x6495EDFF,"You have withdrawn from your account: %d Money. Remaining: %d Money", money,PlayerInfo[playerid][pBank]);
					format(stringer, sizeof(stringer), "~b~+%d", money);
					GameTextForPlayer(playerid, stringer, 3000, 1);
					return true;
				}
				else return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "{FFD700}ATM", "[1]{ffffff} Withdraw cash\n[2]{ffffff} Balance\n[3]{ffffff} House Tax Pay\n[4]{ffffff} Top up phone account\n[5] {ffffff}Top up business account", "Select", "Close");
			}
		case 8905: if(response) return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "{FFD700}ATM", "[1]{ffffff} Withdraw cash\n[2]{ffffff} Balance\n[3]{ffffff} House Tax Pay\n[4]{ffffff} Top up phone account\n[5] {ffffff}Top up business account", "Select", "Close");
		case 9521:
			{
				if(response)
				{
					new plata,day,bouse = PlayerInfo[playerid][pPhousekey];
					if(HouseInfo[bouse][hKlass] == 0) plata = 300;
					else if(HouseInfo[bouse][hKlass] == 1) plata = 600;
					else if(HouseInfo[bouse][hKlass] == 2) plata = 900;
					else if(HouseInfo[bouse][hKlass] == 3) plata = 1200;
					else if(HouseInfo[bouse][hKlass] == 4) plata = 1500;
					else if(HouseInfo[bouse][hKlass] == 5) plata = 1800;
					if(listitem == 0) day = 2;
					else if(listitem == 1) day = 7;
					else if(listitem == 2) day = 30;
					new takking = day*8*plata;
					if (PlayerInfo[playerid][pBank] < takking) return SendMes(playerid, COLOR_GREY, "To fund your account you need %d",takking), ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_MSGBOX, "{FFD700}ATM", "There is not enough money in your account!", "Back", "");
					else
					{
						PlayerInfo[playerid][pBank] -= takking,HouseInfo[bouse][hTakings] += takking;
						SendMes(playerid,0x6495EDFF, "You have deposited %d Money into the account of your apartment. Apartment account: %d Money", takking, HouseInfo[bouse][hTakings]);
						SaveHouse(bouse);
						return true;
					}
				}
				else return true;
			}
		case 5230:
			{
				if(!response) return true;
				new idd;
				if(sscanf(inputtext,"d",idd) || !IsPlayerConnected(idd)) return SearchingHit(playerid);
				if(PlayerInfo[idd][pHeadValue] == 0) return SendClientMessage(playerid,COLOR_GREY,"Player not booked.");
				if(ContractInfo[idd][cHitman] != INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"The order you chose has already been taken by someone.");
				format(stringer1, sizeof(stringer1), "Hitman %s[%d] took the order #%d (%s ($%d))",PlayerInfo[playerid][pNames],playerid,idd,PlayerInfo[idd][pNames],PlayerInfo[idd][pHeadValue]);
				SendFamilyMessage(23, COLOR_GREEN, stringer1);
				ContractInfo[playerid][cZakaz] = idd;
				ContractInfo[idd][cHitman] = playerid;
			}
		case 5350:
			{
				if(response)
				{
					if(listitem == 0) ShowPlayerDialog(playerid,5351,DIALOG_STYLE_INPUT,"Own melody","Enter a direct link to play your melody","Ok","Back");
					else if(listitem == 1)
					{
						callcmd::dj(playerid, "");
						foreach(Player, i)
						{
							if(GetDistanceBetweenPlayers(playerid,i) < MGM[4])
							{
								SendClientMessage(i,COLOR_WHITE,"[PlayList] Music disabled DJ.");
								StopAudioStreamForPlayer(i);
								Music[playerid] = false;
							}
						}
					}
					else if(listitem == 2)
					{
						if(IsPlayerInRangeOfPoint(playerid, 2.0,487.35198974609,-2.1640000343323,1002.3829956055)) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
						else if(IsPlayerInRangeOfPoint(playerid, 1.0,-2648.001953125,1422.7509765625,906.46099853516)) JizzyDJ = false, JizzyDJID = INVALID_PLAYER_ID;
						SendClientMessage(playerid,COLOR_WHITE,"You have moved away from the DJ remote control'�.");
						callcmd::dj(playerid, "");
					}
				}
			}
		case 5351:
			{
				if(response)
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
					strmid(URLW, inputtext, 0, strlen(inputtext), 255);
					MGM[4] = 100; MGM[1] = X; MGM[2] = Y; MGM[3] = Z;
					callcmd::dj(playerid, "");
					foreach(Player, i)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < MGM[4])
						{
							SendClientMessage(i,COLOR_WHITE,"[PlayList] Track set DJ.");
							StopAudioStreamForPlayer(i);
							PlayAudioStreamForPlayer(i, URLW, MGM[1], MGM[2], MGM[3], MGM[4], true);
							Music[i] = true;
						}
					}
				}
				else callcmd::dj(playerid, "");
			}
		case 3939:
			{
		    	if(!response) return 1;
				new skin = gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinID];
				switch(listitem)
				{
					case 0: PlayerInfo[playerid][pSkinhome][0] = skin;
					case 1: PlayerInfo[playerid][pSkinhome][1] = skin;
					case 2: PlayerInfo[playerid][pSkinhome][2] = skin;
				}
				PlayerInfo[playerid][pChar] = skin;
   				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
		    	SetPVarInt(playerid,"CloserInClothes", true);
		    	CancelSelectTextDraw(playerid);
 		  		for(new i=0; i<5; i++)
				{
			    	if(gSkinShopDraw[i]==Text:-1) continue;
			    	TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
				}
				if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
				{
			    	PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
				}
				new bizid = GetPVarInt(playerid, "Bizzid");
				SetPlayerVirtualWorldEx(playerid, BizzInfo[bizid][bVirtual]);
				SetPPos(playerid,BizzInfo[bizid][bMenux],BizzInfo[bizid][bMenuy],BizzInfo[bizid][bMenuz]);
				SetPlayerInteriorEx(playerid,BizzInfo[bizid][bInt]);
				PlayerInfo[playerid][pCash] -= gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice];
	        	BizzInfo[bizid][bMoney] += gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice];
				BizzPay[bizid] += gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice];
				BizzInfo[bizid][bProduct] -= 50;
				SaveBizz(bizid);
				DeletePVar(playerid,"Bizzid");
   				DeletePVar(playerid,"PlayerSkinSlot");
            	DeletePVar(playerid,"PlayerInClothes");
            	DeletePVar(playerid,"OldSkin");
             	if(PlayerInfo[playerid][pQuest1] == 0)
             	{
             		PlayerInfo[playerid][pQuest1] = 1;
             		UpdatePlayerData(playerid, "pQuest1", PlayerInfo[playerid][pQuest1]);
             	}
		    	return 1;
			}
		case 5300://"{FFFFFF}[1] {1AFF00}Open {FFFFFF}or {df5802}close {FFFFFF}house\n[2] Sell house to the state\n[3] Sell household vehicles\n[4] Mark vehicles on GPS \n[5] Deliver transport to the house ($1000)\n
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(HouseInfo[house][hLock] == 1)
							{
								HouseInfo[house][hLock] = 0;
								GameTextForPlayer(playerid, "~g~Unlocked", 5000, 6);
								PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
								Update3dHouse3d(house);
								return true;
							}
							if(HouseInfo[house][hLock] == 0)
							{
								HouseInfo[house][hLock] = 1;
								GameTextForPlayer(playerid, "~r~Locked", 5000, 6);
								PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
								Update3dHouse3d(house);
								return true;
							}
						}
					case 1: ShowPlayerDialog(playerid,5033,DIALOG_STYLE_MSGBOX,"{dba002}Sale of property","{ffffff}Do you want to sell your home?\n{AFAFAF}(to sell the house to another player enter /sellhouse [playerid] [price])\n\n{FF6347}Attention! You will only get half the cost of the house back!","Yes","No");
					case 2: {
						new string[144];
						format(string, sizeof(string), "1-Slot: %s(%d)\n2-Slot %s(%d)", VehicleNameS[PlayerInfo[playerid][pCar] - 400], PlayerInfo[playerid][pCar], VehicleNameS[PlayerInfo[playerid][pCar2] - 400], PlayerInfo[playerid][pCar2]);
						ShowPlayerDialog(playerid, 9514, DIALOG_STYLE_LIST, "{dba002}Sale of home vehicles", string, "Next", "Cancle");
					}
					case 3: {
						if(caridhouse[playerid] != INVALID_VEHICLE_ID && GetVehicleVirtualWorld(caridhouse[playerid]) == 0) {
							new Float:hVehPos[3];
							GetVehiclePos(caridhouse[playerid], hVehPos[0], hVehPos[1], hVehPos[2]);
							SetPlayerCheckpoint(playerid, hVehPos[0], hVehPos[1], hVehPos[2], 5.0);
							SetPVarInt(playerid, "FindAuto", 1);
							SendClientMessage(playerid, COLOR_WHITE, "Your transport is marked with a red mark on the map!");
						}
						return true;
					}
					case 4: callcmd::fixcar(playerid);
					case 7://����
					{
					    SendClientMessage(playerid, COLOR_REDD, "Use the 'Fast Run' key (spacebar by default))");
						SendClientMessage(playerid, COLOR_REDD, "�use the '�up,down' key (W,S by default)");
						SendClientMessage(playerid, COLOR_GRAD1, "If you accidentally press 'Enter' and the menu disappears, press 'Enter' again");
					    if(PlayerInfo[playerid][pMember] >= 1)
						{
							switch(PlayerInfo[playerid][pMember])
							{
  								case 1: ChosenSkin[playerid] = 59;
		    					case 2: ChosenSkin[playerid] = 286;
		    					case 3: ChosenSkin[playerid] = 287;
		    					case 4: ChosenSkin[playerid] = 70;
		    					case 5: ChosenSkin[playerid] = 223;
		    					case 6: ChosenSkin[playerid] = 120;
		    					case 7: ChosenSkin[playerid] = 57;
		    					case 10: ChosenSkin[playerid] = 280;
		    					case 11: ChosenSkin[playerid] = 59;
		    					case 12: ChosenSkin[playerid] = 102;
		    					case 13: ChosenSkin[playerid] = 108;
		    					case 14: ChosenSkin[playerid] = 111;
		    					case 15: ChosenSkin[playerid] = 106;
		    					case 16: ChosenSkin[playerid] = 250;
		    					case 17: ChosenSkin[playerid] = 114;
		    					case 18: ChosenSkin[playerid] = 173;
		    					case 19: ChosenSkin[playerid] = 287;
		    					case 21: ChosenSkin[playerid] = 280;
		    					case 23: ChosenSkin[playerid] = JoinPed[105][0];
		    					case 24: ChosenSkin[playerid] = JoinPed[110][0];
		    					case 25: ChosenSkin[playerid] = JoinPed[5][0];
		    					case 26: ChosenSkin[playerid] = 17;
		    					default: return true;
	    					}
        					ShowMenuForPlayer(ChoseSkin,playerid);
							SetPlayerInteriorEx(playerid,5);
							SetPlayerVirtualWorldEx(playerid,playerid+1);
							new rand = random(sizeof(gInviteSpawns));
							SetPPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
							SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
							SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
							SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
							TogglePlayerControllable(playerid, false);
							SelectChar[playerid] = INVALID_PLAYER_ID;
							SelectCharID[playerid] = PlayerInfo[playerid][pMember];
							SelectCharPlace[playerid] = 1;
							PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
							return true;
						}
					    SetPlayerSkinEx(playerid,PlayerInfo[playerid][pSkinhome][0]);
						ShowMenuForPlayer(HouseShaw,playerid);
		    			SetPlayerInteriorEx(playerid,14);
						new homes =2 + random(100);
						SetPlayerVirtualWorldEx(playerid,homes);
						SetPPos(playerid, 199.2331,-157.8733,1000.5234);
						SetPlayerFacingAngle(playerid,230.1906);
						SetPlayerCameraPos(playerid,199.2331+3, -157.8733,1000.5234);
						SetPlayerCameraLookAt(playerid,199.2331,-157.8733,1000.5234);
						TogglePlayerControllable(playerid, false);
						SelectCharPlace[playerid] = 1;
					}
					case 8://����
					{
					    new bouse = PlayerInfo[playerid][pPhousekey];
					    format(stringer, sizeof(stringer), "Put down weapons\nDrugs\nFirst Aid Kit (%d)\nMoney (%d$)\nMaterials (%d)\nDeagle (%d cartridge)\nAK47 (%d cartridge)\nShotGun (%d cartridge)\nM4 (%d cartridge )\nSD-Pistol (%d cartridge)\nRifle (%d cartridge)\nMP5 (%d cartridge)",
						HouseInfo[bouse][hNark], HouseInfo[bouse][hMoney], HouseInfo[bouse][hMatel],HouseInfo[bouse][hduggl],HouseInfo[bouse][hak47],HouseInfo[bouse][hshotgun],HouseInfo[bouse][hm4],HouseInfo[bouse][hsdpist],HouseInfo[bouse][hrifle],HouseInfo[bouse][hsmg]);
						ShowPlayerDialog(playerid, 3940, DIALOG_STYLE_LIST, "{dba002}Information about the safe", stringer, "Select", "Cancle");
					}
					case 9: ShowPlayerDialog(playerid, 3944, DIALOG_STYLE_LIST, "{dba002}Registration", "Registration\nExtract", "Select", "Cancle");
					case 10:
					{
				        if(GetPVarInt(playerid,"RepairHouse") == 0)
				        {
					        if(HouseInfo[house][hKlass] == 0) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 100000 Money\n[2] Price 100000 Money\n[3] Price 100000 Money\n[4] Price 100000 Money\n[5] VIP #1 - 1.000.000 Money", "View", "Close");
					        else if(HouseInfo[house][hKlass] == 1) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 250000 Money\n[2] Price 250000 Money\n[3] Price 250000 Money\n[4] Price 250000 Money\n[5] VIP #1 - 1.000.000 Money", "View", "Close");
					        else if(HouseInfo[house][hKlass] == 2) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 500000 Money\n[2] Price 500000 Money\n[3] Price 500000 Money\n[4] Price 500000 Money\n[5] Price 500000 Money\n[6] Price 500000 Money\n[7] Price 500000 Money\n[8] VIP #1 - 1.000.000 Money", "View", "Close");
					        else if(HouseInfo[house][hKlass] == 3) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 750000 Money\n[2] Price 750000 Money\n[3] Price 750000 Money\n[4] VIP #1 - 1.000.000 Money", "View", "Close");
					        else if(HouseInfo[house][hKlass] == 4) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 1000000 Money\n[2] Price 1000000 Money\n[3] Price 1000000 Money\n[4] Price 1000000 Money\n[5] Price 1000000 Money\n[6] Price 1000000 Money\n[7] VIP #1 - 1.000.000 Money", "View", "Close");
					        else ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "{dba002}Repair", "[1] Price 1500000 Money\n[2] Price 1500000 Money\n[3] Price 1500000 Money\n[4] Price 1500000 Money\n[5] VIP #1 - 1.000.000 Money", "View", "Close");
					    }
					    else return true;
				    }
					default: return true;
					}
				}
			}
		case 9514: {
			if(!response) return true;
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid, COLOR_WHITE, "You cannot sell this vehicle!");
					DestroyVehicleEx(caridhouse[playerid]);
					Sellcars(playerid, PlayerInfo[playerid][pCar]);
					PlayerInfo[playerid][pCar] = 462;
					caridhouse[playerid] = CreateVehicleEx(462, 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][0],7200, 0);
					VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
					VEHICLE[caridhouse[playerid]][vLock] = 1;
					LinkVehicleToInterior(caridhouse[playerid], 1);
			        SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
					Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
					DeleteVehicleTune(playerid, 0, 1);
				}
				case 1: {
					if(PlayerInfo[playerid][pCar2] == 462) return SendClientMessage(playerid, COLOR_WHITE, "You cannot sell this vehicle!");
					DestroyVehicleEx(caridhouse[playerid]);
					Sellcars(playerid, PlayerInfo[playerid][pCar2]);
					PlayerInfo[playerid][pCar2] = 462;
					caridhouse[playerid] = CreateVehicleEx(462, 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][1][0], cColor[playerid][1][0],7200, 0);
					VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
					VEHICLE[caridhouse[playerid]][vLock] = 1;
					LinkVehicleToInterior(caridhouse[playerid], 1);
			        SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
					Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
					DeleteVehicleTune(playerid, 1, 1);
				}
			}
			new string[144];
			format(string, sizeof(string), "You sold your car in the %d slot!", listitem + 1);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return true;
		}
		case 27:
			{
		    	if(!response)
		    	{
		        	DeletePVar(playerid,"RepairHouse");
		        	return SpawnPlayerEx(playerid);
				}
				return RepairHouse(playerid,GetPVarInt(playerid, "RepairHouse")-1,1);
			}
		case 29:
			{
		    	if(!response) return true;
		    	new i = PlayerInfo[playerid][pPhousekey], cost;
		    	switch(HouseInfo[i][hKlass])
		    	{
					case 0: cost = 100000, SetPVarInt(playerid, "RepairItem", 4);
					case 1: cost = 250000, SetPVarInt(playerid, "RepairItem", 4);
					case 2: cost = 500000, SetPVarInt(playerid, "RepairItem", 7);
					case 3: cost = 750000, SetPVarInt(playerid, "RepairItem", 3);
					case 4: cost = 1000000, SetPVarInt(playerid, "RepairItem", 6);
					case 5: cost = 1500000, SetPVarInt(playerid, "RepairItem", 4);
				}
				if(PlayerInfo[playerid][pBank] < cost || (listitem == GetPVarInt(playerid, "RepairItem") && PlayerInfo[playerid][pBank] < 1000000)) return SendClientMessage(playerid,COLOR_GREY,"������������ ������� �� ���������� �����!");
				SetPVarInt(playerid,"RepairHouse",listitem+1);
				SendClientMessage(playerid,COLOR_BLUE,"Use /hmenu to continue!");
				return RepairHouse(playerid,listitem,0);
			}
		case 2917: {
			if(!response) return true;
			if(PlayerInfo[playerid][pAlcoInvenxua] < 3) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
			new minute, reason[128], ids = gSpecID[playerid];
			if(sscanf(inputtext, "ds[128]",minute,reason)) return ShowPlayerDialog(playerid, 2917, DIALOG_STYLE_INPUT, "Recon Jail","Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 30 Cheat)", "Next", "Cancle");
			if(minute < 0 || minute > 60) return ShowPlayerDialog(playerid, 2917, DIALOG_STYLE_INPUT, "Recon Jail", "Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 30 Cheat)", "Next", "Cancle");
			if(minute == 0)
			{
				if(PlayerInfo[ids][pJailed] != 4) return SendClientMessage(playerid, COLOR_WHITE, "The player is not in jail!");
				format(stringer1, sizeof(stringer1), "you have been released Adminstrator�� %s",PlayerInfo[playerid][pNames]);
				SendClientMessage(ids, COLOR_LIGHTRED, stringer1);
				format(stringer1, sizeof(stringer1), "Adminstrator %s freed player %s from demorgan", PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames]);
				SendAdminMessage(COLOR_GREY,stringer1);
				PlayerInfo[ids][pJailed] = 0;
				PlayerInfo[ids][pJailTime] = 0;
				SpawnPlayerEx(ids);
				return true;
			}
			ResetWeapons(ids);
			SetPlayerInteriorEx(ids, 6);
			switch(random(3)) {
				case 0: SetPPos(ids,5512.0732,1249.1172,23.1886), SetPlayerFacingAngle(ids, 120.3213);
				case 1: SetPPos(ids,5524.6377,1241.7778,23.1886), SetPlayerFacingAngle(ids, 102.7743);
				case 2: SetPPos(ids,5517.6646,1255.9296,23.1886), SetPlayerFacingAngle(ids, 99.9542);
//				case 0: SetPPos(ids,346.7122, 306.7019, 999.4639), SetPlayerFacingAngle(ids, 120.3213);
//				case 1: SetPPos(ids,344.0128, 304.9643, 999.4639), SetPlayerFacingAngle(ids, 102.7743);
//				case 2: SetPPos(ids,347.7505, 302.1187, 999.4639), SetPlayerFacingAngle(ids, 99.9542);
			}
			PlayerInfo[ids][pJailed] = 4;
			PlayerInfo[ids][pMestoJail] = 0;
			PlayerInfo[ids][pJailTime] = minute*60;
			format(stringer1, sizeof(stringer1), "Adminstrator %s put you in demorgan for %i minutes(UL). Reason: %s",PlayerInfo[playerid][pNames], minute, reason);
			SendClientMessage(ids, COLOR_LIGHTRED, stringer1);
			format(stringer1, sizeof(stringer1), "Adminstrator %s put player %s in demorgan for %i minutes(UL). Reason: %s", PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames], minute, reason);
			SendAdminMessage(COLOR_GREY,stringer1);
		}
		case 2913:
			{
				if(!response) return true;
				if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
//				if(AntiBan[playerid] >= 60) return SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."), AntiBan[playerid] = 180;
				new minute, reason[128], ids = gSpecID[playerid];
				if(sscanf(inputtext, "ds[128]", minute, reason)) return ShowPlayerDialog(playerid, 2913, DIALOG_STYLE_INPUT, "Recon Mute", "Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 20 Mat)", "Next", "Cancle");
				if(minute < 0 || minute > 60) return ShowPlayerDialog(playerid, 2913, DIALOG_STYLE_INPUT, "Recon Mute", "Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 20 Mat)", "Next", "Cancle");
				AntiBan[playerid] += 30;
				PlayerInfo[playerid][pMuteAdm]++;
				if(minute == 0) {
					if(!PlayerInfo[ids][pMuted]) return SendClientMessage(playerid, COLOR_WHITE, "The player does not have a chat ban.");
					PlayerInfo[ids][pMuted] = 0;
					PlayerInfo[ids][pMuteTime] = 0;
					format(stringer1, sizeof(stringer1), "Adminstrator %s removed the chat ban %s.",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames]);
					SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,ids);
					return true;
				}
				PlayerInfo[ids][pMuteTime] = minute*60;
				PlayerInfo[ids][pMuted] = 1;
				format(stringer1, sizeof(stringer1), "Adminstrator %s gave a chat ban to a player %s. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames],reason);
				SendAdminMessageToAll(COLOR_LIGHTRED ,stringer1,ids);
				format(stringer1, sizeof(stringer1), "You have been banned from chat for %i minutes", minute);
				SendClientMessage(ids, COLOR_WHITE, stringer1);
				return true;
			}
		case 2914:
			{
				if(!response) return true;
				if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
//				if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
				new reason[128], ids = gSpecID[playerid];
				if(sscanf(inputtext, "s[128]", reason)) return ShowPlayerDialog(playerid, 2914, DIALOG_STYLE_INPUT, "Recon Kick", "Give the reason Kick'a:", "Next", "Cancle");
				if(PlayerInfo[ids][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be kicked!");
				format(stringer1, sizeof(stringer1), "Adminstrator %s ������ %s. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames],reason);
				SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,ids);
				AntiBan[playerid] += 30;
				PlayerInfo[playerid][pKickAdm]++;
				SendClientMessage(ids, COLOR_LIGHTRED, "You have been disconnected from the server for violating server rules.");
				SendClientMessage(ids, COLOR_LIGHTRED, "Please don't violate it in the future. Have a good game!");
				format(stringer1, sizeof(stringer1), "kicked, with a reason: %s", reason);
				Admin_Log(playerid, stringer1, PlayerInfo[ids][pNames], gettime());
				KickEx(ids);
				return true;
			}//
		case 2915: {
			if(!response) return true;
			if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
//			if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
			new reason[128], ids = gSpecID[playerid];
			if(sscanf(inputtext, "s[128]", reason)) return ShowPlayerDialog(playerid, 2915, DIALOG_STYLE_INPUT, "Recon Warn", "Give the reason Warn'a:", "Next", "Cancle");
			if(PlayerInfo[ids][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be brewed!");
			PlayerInfo[ids][pWarns] += 1;
			AntiBan[playerid] += 30;
			if(PlayerInfo[ids][pWarns] >= 3)
			{
				PlayerInfo[ids][pMember] = 0;
				PlayerInfo[ids][pRank] = 0;
				PlayerInfo[ids][pLeader] = 0;
				PlayerInfo[ids][pJob] = 0;
				PlayerInfo[ids][punWarns] = 0;
				PlayerInfo[ids][punWarnstime] = 0;
				format(stringer1, sizeof(stringer1), "[WARN] Adminstrator %s blocked %s for 2 days. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames],reason);
				SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,ids);
				format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[ids][pNames],PlayerInfo[ids][pIP],PlayerInfo[ids][pIpReg]);
				SendAdminMessage(COLOR_WHITE,stringer1);
				SendClientMessage(ids, COLOR_LIGHTRED, "You have been found to be violating server rules. If you do not agree with the Administrator's opinion,");
				SendClientMessage(ids, COLOR_LIGHTRED, "press the F8 key (screenshot), then the TAB + F8 keys and write a complaint to the VK group - "PAGE_FORUM"");
				ServerBan(playerid, PlayerInfo[ids][pNames], 2, reason);
				KickEx(ids);
				return true;
			}
			format(stringer1, sizeof(stringer1), "Adminstrator %s gave out Warn %s [%d/3]. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames],PlayerInfo[ids][pWarns],reason);
			SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,ids);
			SendClientMessage(ids, COLOR_YELLOW, "If you do not agree with the punishment, take a screenshot by pressing F8, then Tab+F8 and file a complaint in the VK group - "PAGE_FORUM"");
			PlayerInfo[ids][pMember] = 0;
			PlayerInfo[ids][pRank] = 0;
			PlayerInfo[ids][pLeader] = 0;
			PlayerInfo[ids][pJob] = 0;
			PlayerInfo[ids][punWarns] = 1;
			PlayerInfo[ids][punWarnstime] = 0;
			format(stringer1, sizeof(stringer1), "issued a warning with a reason: %s", reason);
			Admin_Log(playerid, stringer1, PlayerInfo[ids][pNames], gettime());
			KickEx(ids);
			return true;
		}
		case 2916: {
			if(!response) return true;
			if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
			if(PlayerInfo[playerid][pcBan] == 0) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//			if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
			new ids, days, reason[128];
			if(sscanf(inputtext, "dds[128]",ids,days,reason)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ban [id] [days] [reason]");
			if(PlayerInfo[ids][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Administrator cannot be banned!");
			switch(PlayerInfo[ids][pDonateRank])
			{
				case 1: if(days > 5 || days < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 or more 5");
				case 2: if(days > 7 || days < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 or more 4");
				case 3: if(days > 7 || days < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 or more 2");
				default: if(days > 7 || days < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 or more 7");
			}
			AntiBan[playerid] += 30;
			PlayerInfo[ids][pLeader] = 0;
			PlayerInfo[ids][pMember] = 0;
			PlayerInfo[ids][pJob] = 0;
			PlayerInfo[ids][pRank] = 0;
			format(stringer1, sizeof(stringer1), "Administrator %s has blocked %s for %d days. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[ids][pNames],days,reason);
			SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,ids);
			format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[ids][pNames],PlayerInfo[ids][pIP],PlayerInfo[ids][pIpReg]);
			SendAdminMessage(COLOR_LIGHTRED,stringer1);
			SendClientMessage(ids, COLOR_LIGHTRED, "You have been found to be violating server rules. If you do not agree with the Administrator's opinion,");
			SendClientMessage(ids, COLOR_LIGHTRED, "press the F8 key (screenshot), then the TAB + F8 keys and write a complaint to the VK group - "PAGE_FORUM"");
			ServerBan(playerid, PlayerInfo[ids][pNames], days, reason);
			KickEx(ids);
			return true;
		}
		case 3940:
			{
			    if(!response) return true;
       			switch(listitem)
		        {
		            case 0:
		            {
						for(new i = 0; i < 13; i++)
						{
	    					if(PlayerInfo[playerid][Weapon][i] > 0 && PlayerInfo[playerid][Ammo][i] > 0)
	    					{
	    						if(PlayerInfo[playerid][Weapon][i] == 24) HouseInfo[PlayerInfo[playerid][pPhousekey]][hduggl] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 30) HouseInfo[PlayerInfo[playerid][pPhousekey]][hak47] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 25) HouseInfo[PlayerInfo[playerid][pPhousekey]][hshotgun] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 31) HouseInfo[PlayerInfo[playerid][pPhousekey]][hm4] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 23) HouseInfo[PlayerInfo[playerid][pPhousekey]][hsdpist] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 33) HouseInfo[PlayerInfo[playerid][pPhousekey]][hrifle] += PlayerInfo[playerid][Ammo][i];
	    						else if(PlayerInfo[playerid][Weapon][i] == 29) HouseInfo[PlayerInfo[playerid][pPhousekey]][hsmg] += PlayerInfo[playerid][Ammo][i];
	    					}
						}
						SendClientMessage(playerid,COLOR_BLUE,"You put all your guns in the safe.");
						SaveHouse(PlayerInfo[playerid][pPhousekey]);
						ResetWeapons(playerid);
		            }
		            case 1:
					{
						new hm = PlayerInfo[playerid][pPhousekey];
						format(stringer,sizeof(stringer),"Seeds (%d)\nCocaine (%d)\nCrack (%d)\nHeroin (%d)\nLSD (%d)\nMethanphentamine (%d)\nMarijuana(%d)", HouseInfo[hm][hdrugs][0], HouseInfo[hm][hdrugs][1], HouseInfo[hm][hdrugs][2], HouseInfo[hm][hdrugs][3], HouseInfo[hm][hdrugs][4], HouseInfo[hm][hdrugs][5], HouseInfo[hm][hdrugs][6]);
			 	    	ShowPlayerDialog(playerid, 599, DIALOG_STYLE_LIST, "Information about drugs", stringer, "Select", "Cancle");
				    }
          			case 2: ShowPlayerDialog(playerid, 3941, DIALOG_STYLE_LIST, "Information � first aid kits","Put\nTake", "Select", "Cancle");
	            	case 3: ShowPlayerDialog(playerid, 3942, DIALOG_STYLE_LIST, "Information � money","Put\nTake", "Select", "Cancle");
		            case 4: ShowPlayerDialog(playerid, 3943, DIALOG_STYLE_LIST, "Information � materials","Put\nTake", "Select", "Cancle");
		            case 5: // ����
		            {
		                if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hduggl] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Not in your safe Deagle.");
   			    		return ShowPlayerDialog(playerid, 3947, DIALOG_STYLE_INPUT, "Take weapon: Deagle","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
		            }
		            case 6://�� 47
		            {
                        if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hak47] <= 0) return SendClientMessage(playerid, COLOR_GREY, " your safe is not there $ 47.");
   			    		return ShowPlayerDialog(playerid, 3948, DIALOG_STYLE_INPUT, "Take weapon: AK47","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
		            }
		            case 7://��������
		            {
		                if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hshotgun] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There's no ShotGun in your safe.");
   			    		return ShowPlayerDialog(playerid, 5432, DIALOG_STYLE_INPUT, "Take weapon: ShotGun","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
		            }
		            case 8://m4
		            {
                        if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hm4] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There's no M4 in your safe.");
   			    		return ShowPlayerDialog(playerid, 5433, DIALOG_STYLE_INPUT, "Take weapon: M4","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
		            }
                    case 9://Sd- pistol
		            {
                        if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hsdpist] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There is no SDpist in your safe.");
   			    		return ShowPlayerDialog(playerid, 5434, DIALOG_STYLE_INPUT, "Take a weapon: SDpist","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
		            }
		            case 10://nRifle
		            {
                        if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hrifle] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There is no Rifle in your safe.");
   			    		return ShowPlayerDialog(playerid, 5435, DIALOG_STYLE_INPUT, "Take weapon: Rifle","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
		            }
		            case 11://MP5
		            {
                        if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hsmg] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There is no MP5 in your safe.");
   			    		return ShowPlayerDialog(playerid, 5436, DIALOG_STYLE_INPUT, "Take weapon: MP5","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
		            }
		        }
			}
		case 3947://����
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 3947, DIALOG_STYLE_INPUT, "Take weapon: Deagle","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hduggl] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hduggl] -= price;
          		GiveWeapon(playerid, 24, price);
				SendMes(playerid,-1,"You took %d Deagle ammo from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 3948://ak
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 3948, DIALOG_STYLE_INPUT, "Take weapon: AK47","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hak47] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hak47] -= price;
          		GiveWeapon(playerid, 30, price);
				SendMes(playerid,-1,"You took %d AK47 ammo from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 5432://��������
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 5432, DIALOG_STYLE_INPUT, "Take weapon: ShotGun","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hshotgun] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hshotgun] -= price;
          		GiveWeapon(playerid, 25, price);
				SendMes(playerid,-1,"You took %d ShotGun ammo from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 5433://m4
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 5433, DIALOG_STYLE_INPUT, "Take weapon: M4","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hm4] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You can't take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hm4] -= price;
          		GiveWeapon(playerid, 31, price);
				SendMes(playerid,-1,"You took %d M4 cartridge from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 5434://sd
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 5434, DIALOG_STYLE_INPUT, "Take a weapon: SDpist","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hsdpist] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hsdpist] -= price;
          		GiveWeapon(playerid, 23, price);
				SendMes(playerid,-1,"You took %d SDpist cartridge from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 5435://rifle
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 5435, DIALOG_STYLE_INPUT, "Take weapon: Rifle","Enter how many rounds do you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hrifle] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hrifle] -= price;
          		GiveWeapon(playerid, 33, price);
				SendMes(playerid,-1,"You took %d Rifle ammo from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 5436://mp5
   			{
	    		if(!response) return true;
       			new price;
  				if(sscanf(inputtext,"i",price)) return ShowPlayerDialog(playerid, 5436, DIALOG_STYLE_INPUT, "Take weapon: MP5","Enter how many rounds you want to take from the safe?", "Select", "Cancle");
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hsmg] < price) return SendClientMessage(playerid,COLOR_GRAD1,"There aren't that many bullets in your safe!");
				if(price < 1 || price > 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You cannot take less than 1 or more than 1000 rounds!");
          		HouseInfo[PlayerInfo[playerid][pPhousekey]][hsmg] -= price;
          		GiveWeapon(playerid, 29, price);
				SendMes(playerid,-1,"You took %d MP5 cartridge from the safe!",price);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
		case 3941://�����
   			{
	    		if(!response) return true;
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    switch(listitem)
       			{
			        case 0: ShowPlayerDialog(playerid, 3951, DIALOG_STYLE_INPUT, "Put","Enter how many first aid kits you want to put in the safe?", "Select", "Cancle");
			   		case 1://�����
		   			{
 			    		if(HouseInfo[bouse][hNark] <= 0) return SendClientMessage(playerid, COLOR_GREY, "No first aid kits in the safe.");
   			    		ShowPlayerDialog(playerid, 3952, DIALOG_STYLE_INPUT, "Take","Enter how many first aid kits you want to take from the safe ?", "Select", "Cancle");
		   			}
				}
			}
		case 3942://������
   			{
			   if(!response) return true;
      		   new bouse = PlayerInfo[playerid][pPhousekey];
			   switch(listitem)
			   {
			       case 0: ShowPlayerDialog(playerid, 3953, DIALOG_STYLE_INPUT, "Put","Enter how much money you want to put in the safe?", "Select", "Cancle");
	   		       case 1://�����
			   	   {
				   	  if(HouseInfo[bouse][hMoney] <= 0) return SendClientMessage(playerid, COLOR_GREY, "No money in the safe.");
				   	  ShowPlayerDialog(playerid, 3954, DIALOG_STYLE_INPUT, "Take","Enter how much money you want to take from the safe?", "Select", "Cancle");
			   	   }
		 		}
			}
		case 3943://������
   			{
			  	if(!response) return true;
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    switch(listitem)
			    {
			       case 0: ShowPlayerDialog(playerid, 3955, DIALOG_STYLE_INPUT, "Put","Enter how many materials you want to put in the safe?", "Select", "Cancle");
	   			   case 1://�����
		   		   {
			   		 if(HouseInfo[bouse][hMatel] <= 0) return SendClientMessage(playerid, COLOR_GREY, "No materials in the safe.");
			   		 ShowPlayerDialog(playerid, 3956, DIALOG_STYLE_INPUT, "Take","Enter how much materials you want to take from the safe?", "Select", "Cancle");
	   			   }
		 		}
			}
		case 3951://�������� �����
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    if(!response) return true;
       			new nark = strval(inputtext);
				if(PlayerInfo[playerid][pHeal] < nark) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that many first aid kits.");
		        if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3951, DIALOG_STYLE_INPUT, "Put","Enter how many first aid kits you want to put in the safe?", "Select", "Cancle");
		        if(nark > 1000 || nark < 0) return ShowPlayerDialog(playerid, 3951, DIALOG_STYLE_INPUT, "Put","Cannot be less than 1 or more than 1000!", "Select", "Cancle");
          		PlayerInfo[playerid][pHeal] -= strval(inputtext);
          		HouseInfo[bouse][hNark] += strval(inputtext);
                format(stringer1,sizeof(stringer1),"You put in the safe: %d first aid kits",strval(inputtext));
               	SendClientMessage(playerid,0x29FF00AA,stringer1);
               	SaveHouse(PlayerInfo[playerid][pPhousekey]);
                return true;
			}
		case 3952://����� �����
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    if(!response) return true;
			    new nark = strval(inputtext);
			    if(HouseInfo[bouse][hNark] - nark < 0) return SendClientMessage(playerid, COLOR_GREY, "There aren't that many first aid kits in the safe!");
			    if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3952, DIALOG_STYLE_INPUT, "Take","Enter how many first aid kits you want to take from the safe ?", "Select", "Cancle");
			    if(nark > 1000 || nark < 0) return ShowPlayerDialog(playerid, 3952, DIALOG_STYLE_INPUT, "Take","Cannot be less than 1 or more than 1000", "Select", "Cancle");
			    if(PlayerInfo[playerid][pHeal] >= 1000) return SendClientMessage(playerid,COLOR_GRAD1,"You can't take more");
                PlayerInfo[playerid][pHeal] += strval(inputtext);
                HouseInfo[bouse][hNark] -= strval(inputtext);
                format(stringer1,sizeof(stringer1),"You took from the safe: %d pieces of first aid kits",strval(inputtext));
                SendClientMessage(playerid,0x29FF00AA,stringer1);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
				return true;
			}//
		case 3953://�������� ������
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    if(!response) return true;
       			new mones = strval(inputtext);
       			if(PlayerInfo[playerid][pCash] < mones) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much money.");
       			if(HouseInfo[bouse][hMoney] + mones < 0) return SendClientMessage(playerid,COLOR_GRAD1,"Can't put more!");
			    if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3953, DIALOG_STYLE_INPUT, "Put","Enter how much money you want to put in the safe?", "Select", "Cancle");
       			if(mones > 100000000 || mones < 0) return ShowPlayerDialog(playerid, 3953, DIALOG_STYLE_INPUT, "Put","Cannot be less than 1 or greater than 100000000", "Select", "Cancle");
       			PlayerInfo[playerid][pCash] -= strval(inputtext);
       			HouseInfo[bouse][hMoney] += strval(inputtext);
			    format(stringer1,sizeof(stringer1),"You put in the safe: %d Money",strval(inputtext));
                SendClientMessage(playerid,0x29FF00AA,stringer1);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
				return true;
			}
		case 3954://����� ������
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    if(!response) return true;
			    new mones = strval(inputtext);
			    if(HouseInfo[bouse][hMoney] - mones < 0) return SendClientMessage(playerid, COLOR_GREY, "There is not that much money in the safe!");
			    if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3954, DIALOG_STYLE_INPUT, "Take","Enter how much money you want to take from the safe?", "Select", "Cancle");
			    if(mones > 100000000 || mones < 0) return ShowPlayerDialog(playerid, 3954, DIALOG_STYLE_INPUT, "Take","Cannot be less than 1 or more than 100000000", "Select", "Cancle");
		     	GiveMoney(playerid, strval(inputtext));
		     	HouseInfo[bouse][hMoney] -= strval(inputtext);
			    format(stringer1,sizeof(stringer1),"You took from the safe: %d Money ",strval(inputtext));
                SendClientMessage(playerid,0x29FF00AA,stringer1);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
				return true;
			}
		case 3955://�������� �����
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
			    if(!response) return true;
			    new metal = strval(inputtext);
			    if(PlayerInfo[playerid][pMats] < metal) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much metal.");
			    if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3955, DIALOG_STYLE_INPUT, "Put","Enter how many materials you want to put in the safe?", "Select", "Cancle");
			    if(metal > 5000 || metal < 0) return ShowPlayerDialog(playerid, 3955, DIALOG_STYLE_INPUT, "Put","Cannot be less than 1 or more than 5000", "Select", "Cancle");
			    PlayerInfo[playerid][pMats] -= strval(inputtext);
			    HouseInfo[bouse][hMatel] += strval(inputtext);
			    format(stringer1,sizeof(stringer1),"You put %d metal in the safe ",strval(inputtext));
                SendClientMessage(playerid,0x29FF00AA,stringer1);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
				return true;
			}
		case 3956://����� �����
			{
			    new bouse = PlayerInfo[playerid][pPhousekey];
                if(!response) return true;
                new metal = strval(inputtext);
                if(HouseInfo[bouse][hMatel] - metal < 0) return SendClientMessage(playerid, COLOR_GREY, "There aren't that many materials in the safe!");
                if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3956, DIALOG_STYLE_INPUT, "Take","Enter how much materials you want to take from the safe?", "Select", "Cancle");
			    if(metal > 5000 || metal < 0) return ShowPlayerDialog(playerid, 3956, DIALOG_STYLE_INPUT, "Take","Cannot be less than 1 or more than 5000", "Select", "Cancle");
			    PlayerInfo[playerid][pMats] += strval(inputtext);
			    HouseInfo[bouse][hMatel] -= strval(inputtext);
			    format(stringer1,sizeof(stringer1),"You took %d metal from the safe ",strval(inputtext));
                SendClientMessage(playerid,0x29FF00AA,stringer1);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
			    return true;
			}
		case 599://����� �����
			{
			    if(!response) return true;
			    SetPVarInt(playerid, "DrugsMenuDialog", listitem);
				format(stringer, sizeof stringer, "%s: %d gr.", Drugs[listitem+1][d_name], HouseInfo[PlayerInfo[playerid][pPhousekey]][hdrugs][listitem]);
				return ShowPlayerDialog(playerid, 600, DIALOG_STYLE_LIST, stringer, "[1] Take\n[2] Put", "Select","Cancle");
			}
		case 600:
			{
				if(!response) return true;
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog");
				switch(listitem) {
					case 0:
					{
			   		 	if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hdrugs][itemID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "No drugs in the safe.");
			   		 	ShowPlayerDialog(playerid, 602, DIALOG_STYLE_INPUT, "Take","Enter how much drugs you want to take from the safe?", "Select", "Cancle");
	   	            }
		   			case 1: ShowPlayerDialog(playerid, 601, DIALOG_STYLE_INPUT, "Put","Enter how much drug you want to put in the safe?", "Select", "Cancle");
				}
				return true;
			}
		case 601://�������� �����
			{
			    if(!response) return true;
			    new bouse = PlayerInfo[playerid][pPhousekey], itemID = GetPVarInt(playerid, "DrugsMenuDialog");
			    if(PlayerInfo[playerid][p_drugs][itemID] < strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have that much dope.");
			    if(!strval(inputtext)) return ShowPlayerDialog(playerid, 601, DIALOG_STYLE_INPUT, "Put","Enter how much drug you want to put in the safe?", "Select", "Cancle");
			    if(strval(inputtext) > 100 || strval(inputtext) < 0) return ShowPlayerDialog(playerid, 601, DIALOG_STYLE_INPUT, "Put","Cannot be less than 1 or more than 100", "Select", "Cancle");
			    PlayerInfo[playerid][p_drugs][itemID] -= strval(inputtext);
			    HouseInfo[bouse][hdrugs][itemID] += strval(inputtext);
                SendMes(playerid,0x29FF00AA,"You put the drug in the safe: %s (%d grams). Now in the safe: %d grams.",Drugs[itemID+1][d_name],strval(inputtext),HouseInfo[bouse][hdrugs][itemID]);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
				return true;
			}
		case 602://����� �����
			{
                if(!response) return true;
                new bouse = PlayerInfo[playerid][pPhousekey], itemID = GetPVarInt(playerid, "DrugsMenuDialog");
                if(HouseInfo[bouse][hdrugs][itemID] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "There isn't that much drug in the safe!");
                if(!strval(inputtext)) return ShowPlayerDialog(playerid, 602, DIALOG_STYLE_INPUT, "Take","Enter how much drug you want to take from the safe?", "Select", "Cancle");
			    if(strval(inputtext) > 100 || strval(inputtext) < 0) return ShowPlayerDialog(playerid, 602, DIALOG_STYLE_INPUT, "Take","Cannot be less than 1 or more than 100", "Select", "Cancle");
			    PlayerInfo[playerid][p_drugs][itemID] += strval(inputtext);
			    HouseInfo[bouse][hdrugs][itemID] -= strval(inputtext);
                SendMes(playerid,0x29FF00AA,"You took the drug from the safe: %s (%d grams). Now in the safe: %d grams.",Drugs[itemID+1][d_name],strval(inputtext),HouseInfo[bouse][hdrugs][itemID]);
                SaveHouse(PlayerInfo[playerid][pPhousekey]);
			    return true;
			}
		case 3944://���������
			{
			    if(!response) return true;
			    switch(listitem)
			    {
			      	case 0: ShowPlayerDialog(playerid,3945, DIALOG_STYLE_INPUT, "{dba002}Registration","Enter [ID] of the person\n you want to register in your home", "Register", "Cancle");
					case 1: ShowPlayerDialog(playerid,3946, DIALOG_STYLE_INPUT, "{dba002}Check out","Enter [ID] of the person\n you want to register in your home", "Check out", "Cancle");
				}
			}
		case 3945:
   			{
   			    if(!response) return true;
                new ids = strval(inputtext);
				if(!IsPlayerConnected(ids) || ids == INVALID_PLAYER_ID || ids == playerid) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(PlayerInfo[ids][pPhousekey] != 255 || PlayerInfo[ids][pHomez] != 255) return SendClientMessage(playerid, COLOR_RED, "This person has his own home or is already registered somewhere");
				if(!ProxDetectorS(5.0, playerid, ids)) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
				format(stringer, sizeof(stringer), "%s invites you to move into his house.\nDo you agree?",PlayerInfo[playerid][pNames]);
				ShowPlayerDialog(ids, 3949, 0, "Moving into a house", stringer, "Yes", "No");
				format(stringer1,sizeof(stringer1),"You offered %s to move into your home",PlayerInfo[ids][pNames]);
                SendClientMessage(playerid,0x29FF00AA,stringer1);
				SetPVarInt(ids, "PodPiska", playerid);
				return true;
   			}
		case 3946:
   			{
   			    if(!response) return true;
  				new ids = strval(inputtext);
				if(!IsPlayerConnected(ids) || ids == INVALID_PLAYER_ID || ids == playerid) return	SendClientMessage(playerid, COLOR_GREY, "[ERROR] Person not found!");
				if(PlayerInfo[ids][pHomez] != PlayerInfo[playerid][pPhousekey]) return SendClientMessage(playerid, COLOR_RED, "This person is not registered here");
				PlayerInfo[ids][pHomez] = 255;
				format(stringer1,sizeof(stringer1), "You have checked %s out of your home",PlayerInfo[ids][pNames]);
				SendClientMessage(playerid, COLOR_RED, stringer1);
				format(stringer1,sizeof(stringer1), "The owner of the house has written you out %s",PlayerInfo[playerid][pNames]);
				SendClientMessage(ids, COLOR_RED, stringer1);
				return true;
   			}
		case 3949:
			{
		    	if(!response) return true;
				PlayerInfo[playerid][pHomez] = PlayerInfo[GetPVarInt(playerid,"PodPiska")][pPhousekey];
				format(stringer1,sizeof(stringer1), "You have registered player %s in your house.",PlayerInfo[playerid][pNames]);
				SendClientMessage(GetPVarInt(playerid,"PodPiska"), COLOR_RED, stringer1);
				format(stringer1,sizeof(stringer1), "%s registered you in his house.",PlayerInfo[GetPVarInt(playerid,"PodPiska")][pNames]);
				SendClientMessage(playerid, COLOR_RED, stringer1);
				DeletePVar(playerid, "PodPiska");
			}
		case 5033:
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(!response || house == 255) return true;
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				if(caridhouse[playerid] != INVALID_VEHICLE_ID)
				{
					DestroyVehicleEx(caridhouse[playerid]);
					caridhouse[playerid] = INVALID_VEHICLE_ID;
					DeletePVar(playerid, "CarNomer");
				}
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				GiveMoney(playerid, HouseInfo[house][hValue]);
				format(stringer, sizeof(stringer), "House sold for %d Money", HouseInfo[house][hValue]);
				SendClientMessage(playerid, COLOR_WHITE, stringer);
				foreach(Player,i)
				{
					if(PlayerInfo[i][pHomez] == PlayerInfo[playerid][pPhousekey])
					{
						PlayerInfo[i][pHomez] = 255;
						SendClientMessage(i, COLOR_LIGHTRED, "The house in which you were registered was sold by its owner.");
					}
				}
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT" SET pHomez = '255' WHERE pHomez = '%d'",house);
				mysql_function_query(connects, mysql_query_, false, "", "");
				BuyHouse(house);
				SaveHouse(house);
				HouseInfo[house][hRobhouse] = false;
				PlayerInfo[playerid][pPhousekey] = 255;
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pPhousekey` = '255' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				return true;
			}
		case 9979:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pJob] != 14)
					{
						SendClientMessage(playerid, COLOR_RED, "You got a job as a boxer. (( /mm> server commands ))");
						PlayerInfo[playerid][pJob] = 14;
					}
					else SendClientMessage(playerid, COLOR_RED, "You already work at a boxer's job.");
				}
			}
		case 9678:
			{
				if(response)
				{
					GiveWeapon(playerid, 3, 1);
					GiveWeapon(playerid, 24, 49);
					GiveWeapon(playerid, 29, 210);
					GiveWeapon(playerid, 17, 1);
					SetPlayerHealthAC(playerid, 100);
					SetPlayerArmour(playerid, 120);
					PlayerInfo[playerid][pGunlspdTime] = 60;
					PlayerInfo[playerid][pSatiety] = 100;
					SendClientMessage(playerid, COLOR_GREEN,"Issued: Baton, Advanced Armor, Desert Eagle (6 clips), MP5 (6 clips), 1 smoke bomb");//Favorite color
					Police +=1;
				}
				else
				{
					GiveWeapon(playerid, 3, 1);
					GiveWeapon(playerid, 23, 102);
					GiveWeapon(playerid, 25, 50);
					GiveWeapon(playerid, 17, 1);
					SetPlayerHealthAC(playerid, 100);
					SetPlayerArmour(playerid, 120);
					PlayerInfo[playerid][pGunlspdTime] = 60;
					PlayerInfo[playerid][pSatiety] = 100;
					SendClientMessage(playerid, COLOR_GREEN,"Issued: Baton, Advanced Armor, SDPistol(6 Clips), Shotgun (50 Clips), 1 Smoke Bomb");//������� ����
					Police +=1;
				}
			}
		case 19:
			{
				if(response)
				{
					if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid,COLOR_GRAD1,"You are a member of a faction");
					if(PlayerInfo[playerid][pJob] == 7) return SendClientMessage(playerid,COLOR_GRAD1,"Are you already settled?");
					SetPlayerSkinEx(playerid,27);
					PlayerInfo[playerid][pJob] = 7;
					SendClientMessage(playerid,COLOR_GREEN,"Take orders from customers and earn money");
					SendClientMessage(playerid,COLOR_WHITE,"More details about the work can be found in INFO");
				}
				else
				{
					if(PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"You didn't take the job");
					SendClientMessage(playerid,COLOR_YELLOW,"::: The working day is over�� :::");
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
					PlayerInfo[playerid][pJob] = 0;
					return true;
				}
			}
		case 3725:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(FD(playerid))
						{
							if(PlayerInfo[playerid][pFull] < 4) return true;
							new i;
							for(new h = 0; h < sizeof(HouseInfo); h++)
							{
								if(HouseInfo[h][hOwned] == 1)
								{
									strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
									HouseInfo[h][hHel] = 0;
									HouseInfo[h][hLock] = 1;
									HouseInfo[h][hOwned] = 0;
									HouseInfo[h][hTakings] = 0;
									HouseInfo[h][hVec] = 0;
									HouseInfo[h][hVehSost] = 0;
									BuyHouse(h);
									SaveHouse(h);
									HouseInfo[h][hRobhouse] = false;
									i++;
								}
							}
							mysql_function_query(connects, "UPDATE "TABLE_ACCOUNT" SET `pPhousekey` = '255' WHERE `pPhousekey` != 255", true, "", "d", playerid);
							SendMes(playerid, COLOR_GRAD1, "All occupied houses were sold. There were %d in total.",i), i=0;
						}
						return true;
					}
					else if(listitem == 1)
					{
						if(PlayerInfo[playerid][pFull] < 4) return true;
						ShowPlayerDialog(playerid, 2725, DIALOG_STYLE_LIST, "Interior", "Wooden\nMarble\nPalace\nNormal Style\nOrdinary Wood\nNormal Int\nRed Devero\nNormal3\nBum Style", "Ok", "Close");
						return true;
					}
					else if(listitem == 2)
					{
						if(PlayerInfo[playerid][pFull] < 4) return true;
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							if(HouseInfo[h][hValue] <= 250000 && HouseInfo[h][hValue] > 2500000) { HouseInfo[h][hKlass] = 0; }
							else if(HouseInfo[h][hValue] <= 450000 && HouseInfo[h][hValue] > 4500000) { HouseInfo[h][hKlass] = 1; }
							else if(HouseInfo[h][hValue] <= 1500000 && HouseInfo[h][hValue] > 13000000) { HouseInfo[h][hKlass] = 2; }
							else if(HouseInfo[h][hValue] <= 2500000 && HouseInfo[h][hValue] > 22000000) { HouseInfo[h][hKlass] = 3; }
							else if(HouseInfo[h][hValue] < 4500000 && HouseInfo[h][hValue] > 30000000) { HouseInfo[h][hKlass] = 4; }
						}
						SendClientMessage(playerid, COLOR_GRAD1, "Distributed by house class");
					}
					else if(listitem == 3)
					{
						if(PlayerInfo[playerid][pFull] < 4) return true;
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							new cens = HouseInfo[h][hKlass];
							if(cens == 0 )//���� �����
							{
								HouseInfo[h][hInt] = 10;
								HouseInfo[h][hExitx] = 2261.3103;
								HouseInfo[h][hExity]= -1136.4467;
								HouseInfo[h][hExitz] =1050.6328;
							}
							if(cens == 1 )
							{
								HouseInfo[h][hInt] = 2;
								HouseInfo[h][hExitx] = 225.9761;
								HouseInfo[h][hExity]= 1239.9126;
								HouseInfo[h][hExitz] =1082.1406;
							}
							if(cens == 2 )
							{
								HouseInfo[h][hInt] = 10;
								HouseInfo[h][hExitx] = 23.8334;
								HouseInfo[h][hExity]= 1340.4812;
								HouseInfo[h][hExitz] =1084.3750;
							}
							if(cens == 3 )
							{
								HouseInfo[h][hInt] = 4;
								HouseInfo[h][hExitx] = -261.9759;
								HouseInfo[h][hExity]= 1456.8844;
								HouseInfo[h][hExitz] = 1084.3672;
							}
							if(cens == 4 )
							{
								HouseInfo[h][hInt] = 2;
								HouseInfo[h][hExitx] = 491.0190;
								HouseInfo[h][hExity]= 1399.0691;
								HouseInfo[h][hExitz] =1080.2578;
							}
							SendClientMessage(playerid, COLOR_GRAD1, "The houses are distributed by interiors");
						}
					}
					else if(listitem == 4)
					{
						if(PlayerInfo[playerid][pFull] < 4) return true;
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							if(HouseInfo[h][hValue] <=90000)
							{
								HouseInfo[h][hValue] = 300000;
								SendClientMessage(playerid, COLOR_GRAD1, "Done!");
							}
						}
					}
					else if(listitem == 5)
					{
						if(PlayerInfo[playerid][pFull] < 4) return true;
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							if(HouseInfo[h][hKlass] == 0) HouseInfo[h][hValue] = 2500000, HouseInfo[h][hInt] = 1, HouseInfo[h][hExitx] = 223.1219, HouseInfo[h][hExity] = 1287.841, HouseInfo[h][hExitz] = 1082.141;
							else if(HouseInfo[h][hKlass] == 1) HouseInfo[h][hValue] = 4500000, HouseInfo[h][hInt] = 6, HouseInfo[h][hExitx] = 2196.4541, HouseInfo[h][hExity] = -1204.37097, HouseInfo[h][hExitz] = 1049.0229;
							else if(HouseInfo[h][hKlass] == 2) HouseInfo[h][hValue] = 13000000, HouseInfo[h][hInt] = 10, HouseInfo[h][hExitx] = 2270.0449, HouseInfo[h][hExity] = -1210.494, HouseInfo[h][hExitz] = 1047.563;
							else if(HouseInfo[h][hKlass] == 3) HouseInfo[h][hValue] = 22000000, HouseInfo[h][hInt] = 9, HouseInfo[h][hExitx] = 2317.8068, HouseInfo[h][hExity] = -1026.3859, HouseInfo[h][hExitz] = 1050.2180;
							else if(HouseInfo[h][hKlass] == 4) HouseInfo[h][hValue] = 30000000, HouseInfo[h][hInt] = 5, HouseInfo[h][hExitx] = 140.2610, HouseInfo[h][hExity] = 1366.435, HouseInfo[h][hExitz] = 1083.859;
							else HouseInfo[h][hValue] = 45000000, HouseInfo[h][hInt] = 5, HouseInfo[h][hExitx] = 140.2610, HouseInfo[h][hExity] = 1366.435, HouseInfo[h][hExitz] = 1083.859;
						}
						SendClientMessage(playerid, COLOR_GRAD1, "Distributed by prices ");
					}
					else if(listitem == 6)
					{
						new bstring[300];
						mysql_format(connects, bstring, sizeof bstring, "UPDATE `bizz` SET `bOwner` = 'None' WHERE 1");
						mysql_query(connects, bstring);
						SCM(playerid,-1,"{FF0000}[SYSTEM] {FFFFFF}All businesses have been sold!");
					}
				}
				else { callcmd::apanel(playerid, ""); return true; }
			}
		case 2725:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:	ShowPlayerDialog(playerid, 2726, DIALOG_STYLE_INPUT, "Wood style","Enter your house number", "Ok", "Cancle");
					case 1:	ShowPlayerDialog(playerid, 2727, DIALOG_STYLE_INPUT, "Marble","Enter your house number", "Ok", "Cancle");
					case 2: ShowPlayerDialog(playerid, 2728, DIALOG_STYLE_INPUT, "Castle","Enter your house number", "Ok", "Cancle");
					case 3:	ShowPlayerDialog(playerid, 2729, DIALOG_STYLE_INPUT, "Regular style","Enter your house number", "Ok", "Cancle");
					case 4:	ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_INPUT, "Ordinary tree","Enter your house number", "Ok", "Cancle");
					case 5: ShowPlayerDialog(playerid, 2731, DIALOG_STYLE_INPUT, "Regular style - 2","Enter your house number", "Ok", "Cancle");
					case 6:	ShowPlayerDialog(playerid, 2732, DIALOG_STYLE_INPUT, "Red tree","Enter your house number", "Ok", "Cancle");
					case 7: ShowPlayerDialog(playerid, 2733, DIALOG_STYLE_INPUT, "Normal style - 3","Enter your house number", "Ok", "Cancle");
					case 8: ShowPlayerDialog(playerid, 2734, DIALOG_STYLE_INPUT, "Cheap style","Enter your house number", "Ok", "Cancle");
					}

				}
				else { return true; }
			}
			//--------------
		case 2726:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 4;
					HouseInfo[house][hExitx] = -261.9759;
					HouseInfo[house][hExity]= 1456.8844;
					HouseInfo[house][hExitz] = 1084.3672;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
					return true;
				}
				else { return true; }
			}
		case 2727:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 6;
					HouseInfo[house][hExitx] = 234.1571;
					HouseInfo[house][hExity]= 1064.9569;
					HouseInfo[house][hExitz] = 1084.2104;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
					return true;
				}
				else { return true; }
			}
		case 2728:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 5;
					HouseInfo[house][hExitx] = 140.9131;
					HouseInfo[house][hExity]= 1367.9713;
					HouseInfo[house][hExitz] = 1083.8621;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				else { return true; }
			}
		case 2729:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 5;
					HouseInfo[house][hExitx] = 22.7783;
					HouseInfo[house][hExity]= 1404.9600;
					HouseInfo[house][hExitz] = 1084.4297;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				else { return true; }
			}
		case 2730:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 10;
					HouseInfo[house][hExitx] = 23.8334;
					HouseInfo[house][hExity]= 1340.4812;
					HouseInfo[house][hExitz] =1084.3750;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				else { return true; }
			}
		case 2731:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 4;
					HouseInfo[house][hExitx] = 261.0654;
					HouseInfo[house][hExity]= 1284.2991;
					HouseInfo[house][hExitz] =1080.2578;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				else { return true; }
			}
		case 2732:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 2;
					HouseInfo[house][hExitx] = 491.0190;
					HouseInfo[house][hExity]= 1399.0691;
					HouseInfo[house][hExitz] =1080.2578;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				return true;
			}
		case 2733:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 2;
					HouseInfo[house][hExitx] = 225.9761;
					HouseInfo[house][hExity]= 1239.9126;
					HouseInfo[house][hExitz] =1082.1406;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				else { return true; }
			}
		case 2734:
			{
				if(response)
				{
					new house = strval(inputtext);
					HouseInfo[house][hInt] = 10;
					HouseInfo[house][hExitx] = 2261.3103;
					HouseInfo[house][hExity]= -1136.4467;
					HouseInfo[house][hExitz] =1050.6328;
					SendClientMessage(playerid, COLOR_GREEN, "The interior of the house has been changed");
				}
				return true;
			}
		case 1994:
			{
		    	if(!response) return 1;
		    	switch(listitem)
		    	{
		        	case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
		        	case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
		        	case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
		        	case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
		        	case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		        	case 5: FIXES_ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		        	case 6: FIXES_ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
					case 7: FIXES_ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
					case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
					case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
					case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
					case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
					case 12: FIXES_ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
					case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
					case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
					case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
					case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
					case 17: FIXES_ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
					case 18: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
					case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
					case 20: FIXES_ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
					case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
					case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
					case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
					case 24: FIXES_ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		        	case 25: FIXES_ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		        	case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		        	case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
					case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
					case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
					case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
					case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
					case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
					case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
					case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
					case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
					case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
					case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
					case 38: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
					case 39: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
					case 40: FIXES_ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
					case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
					case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
					case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
					case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		        	case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		        	case 46: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		        	case 47: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		        	case 48: FIXES_ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
					case 49: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
					case 50: FIXES_ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
					case 51: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
					case 52: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
					case 53: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
					case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
					case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
					case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
					case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
					case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
					case 59: FIXES_ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
					case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
					case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
					case 62: FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
					case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
		    	}
    	    	SetPVarInt(playerid,"Animation", 1);
		    	return 1;
			}
		case 28:
			{
		    	if(!response) return true;
		    	if(IsACop(playerid)) return true;
		        PlayerInfo[playerid][pJob] = 1;
		        PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
                SendClientMessage(playerid,COLOR_WHITE,"Congratulations! You are hired.");
		    }
		case 969:
		{
			if(!response) return true;
			new string[144];
			new GangName[5] = {15, 17, 12, 18, 13};
			if(!b_Ghetto{listitem}) {
				b_Ghetto{listitem} = true;
				format(string, sizeof(string), "Adminstrator: %s froze the gang %s", PlayerInfo[playerid][pNames], GetPlayerFracName[GangName[listitem]]);
			}
			else {
				b_Ghetto{listitem} = false;
				format(string, sizeof(string), "Adminstrator: %s froze the gang %s", PlayerInfo[playerid][pNames], GetPlayerFracName[GangName[listitem]]);
			}
			SendAdminMessage(COLOR_GREY, string);
			ShowDialogGhetto(playerid);
			return true;
		}
        case 432:
			{
				if(!response) return PlayerInfo[playerid][pLocal] = 255;
				switch(random(2))
				{
				case 0:
					{
						switch(random(2))
						{
						case 0: SendClientMessage(playerid, -1,"Tricky castle! You can't break into a house!");
						case 1:
							{
								SetPlayerExtra(playerid, INVALID_PLAYER_ID, 2, "Home robbery");
								SendClientMessage(playerid, -1,"The alarm went off in the house! Get away from here!");
							}
						}
						PlayerInfo[playerid][pLocal] = 255;
						return true;
					}
				case 1:
					{
						new i = PlayerInfo[playerid][pLocal];
						SendClientMessage(playerid, -1,"You opened the house! Get lost!");
						SendClientMessage(playerid, -1,"Clean out the house - /robhouse");
						SetPlayerInteriorEx(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorldEx(playerid,i+50);
						SetPPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						return true;
					}
				}
			}
		case 10075:
			{
				if(response)
				{
					for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						{
							if(strcmp(PlayerInfo[playerid][pNames], HouseInfo[i][hOwner], true) == 0 && PlayerInfo[playerid][pPhousekey] == 255) PlayerInfo[playerid][pPhousekey] = i;
							if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pHomez] == i || IsACop(playerid) || IsAArm(playerid) || PlayerInfo[playerid][pAlcoInvenxua] >= 3)
							{
								SetPlayerInteriorEx(playerid,HouseInfo[i][hInt]);
								SetPlayerVirtualWorldEx(playerid,i+50);
								SetPPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
								TogglePlayerControllable(playerid, false);
								SetTimerEx("UnFreez", 2900, 0, "d", playerid);
								PlayerInfo[playerid][pLocal] = i;
								return true;
							}
							else if(IsAGang(playerid))
							{
								PlayerInfo[playerid][pLocal] = i;
								if(PlayerInfo[playerid][Texts][1] == 0) ShowPlayerDialog(playerid, 432, DIALOG_STYLE_MSGBOX,"Suggestion","Hey, do you want to open this house?","Dare","Get out");
								else return SendClientMessage(playerid, COLOR_GREY, "You've already been involved in a house robbery, wait a little longer.");
								return true;
							}
							else GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
				else return true;
			}
		case 10026:
			{
				if(!response) return true;
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
					{
						if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
						{
							SendClientMessage(playerid, COLOR_RED, "You already have a house (/hmenu > [2]Sell a house to the state)");
							return true;
						}
						if(PlayerInfo[playerid][pCash] < HouseInfo[h][hValue]) return SendClientMessage(playerid, COLOR_WHITE, "You don't have that much money on hand!");
						PlayerInfo[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						HouseInfo[h][hHel] = 0;
						HouseInfo[h][hTakings] = 1500;
						strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
						PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
						SetPlayerInteriorEx(playerid,HouseInfo[h][hInt]);
						SetPPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						PlayerInfo[playerid][pLocal] = h;
						SetPlayerVirtualWorldEx(playerid,h+50);
						PlayerPlaySound(playerid, 31204, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, "Congratulations! You bought a house");
						SendClientMessage(playerid, 0x66cc00ff, "Use {2c9cce}/hmenu{66cc00}, to find out about the possibilities");
						GameTextForPlayer(playerid, "~b~~h~Welcome ~g~to~n~~y~new ~w~home", 5000, 1);
                        if(PlayerInfo[playerid][pQuest2] == 0)
                        {
                       		PlayerInfo[playerid][pQuest2] = 1;
                            UpdatePlayerData(playerid, "pQuest2", PlayerInfo[playerid][pQuest2]);
                        }
						ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}New house", "{FFFFFF}You need to pay Tax for the house at the nearest bank branch {dba002}(/gps)", "Ok", "");
						if(PlayerInfo[playerid][pCar] == 0) PlayerInfo[playerid][pCar] = 462;
						if(PlayerInfo[playerid][pCar2] == 0) PlayerInfo[playerid][pCar2] = 462;
						SaveHouse(h);
						new house = PlayerInfo[playerid][pPhousekey];
						if(caridhouse[playerid] == INVALID_VEHICLE_ID)
						{
							caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][1],7200, 0);
							VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
							VEHICLE[caridhouse[playerid]][vLock] = 1;
							//if(PlayerInfo[playerid][pCar2] == 542 && PlayerInfo[playerid][pClover] == 1) SupremeCar(caridhouse[playerid]);
							LinkVehicleToInterior(caridhouse[playerid], 1);
		                    SetVehicleVirtualWorld(caridhouse[playerid], house+50);
							Fuell[caridhouse[playerid]] = 100.0;
							PlayerInfo[playerid][pFuelcar] = 100.0;
							SetPVarInt(playerid, "CarNomer", 0);
							AddTune(playerid, 0);
						}
      					SetTimerEx("freezeplayer", 3000, false, "i", playerid);
						TogglePlayerControllable(playerid,0);
						BuyHouse(house);
						OnPlayerUpdateRL(playerid);
						return true;
					}
				}
			}
		case 3326:
			{
				if(!response) return true;
				if(!IsAGang(playerid)) return ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the drug", "How muddy you are,", "Go away", "");
				switch(listitem)
    			{
        			case 0: ShowPlayerDialog(playerid, 3327, DIALOG_STYLE_MSGBOX, "Dialogue with the drug lord", "Mmmm, I've been waiting for you for a long time, choose", "Next", "Bye"), SetPVarInt(playerid, "Narko", 1);
        			case 1: ShowPlayerDialog(playerid, 3327, DIALOG_STYLE_MSGBOX, "�Dialogue with the drug lord", "Hmmm... and what do you have?", "Reply", "Bye"), SetPVarInt(playerid, "Narko", 2);
        			case 2: ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the drug lord", "Make a mistake again, that guy at the entrance will fuck you.", "Bye", "");
    			}
    			return true;
			}
		case 3327: {
			if(response) return ShowPlayerDialog(playerid, 3328, DIALOG_STYLE_LIST, "Dialogue with the drug lord", "Seeds\nCocaine\nCrack\nHeroin\nLSP\nMethanphentamine", "Select", "Bye");
			else if(GetPVarInt(playerid,"Narko")) DeletePVar(playerid,"Narko");
		}
		case 3328: {
			if(!response) return true;
			SetPVarInt(playerid, "Vrach", listitem);
			if(GetPVarInt(playerid,"Narko") == 1) ShowPlayerDialog(playerid, 3329, DIALOG_STYLE_INPUT, "Dialogue with the drug lord", "Tell me the quantity in grams, baby", "Order", "Bye");
			else if(GetPVarInt(playerid,"Narko") == 2) ShowPlayerDialog(playerid, 3330, DIALOG_STYLE_INPUT, "Dialogue with the drug lord", "Exactly what is needed! How much are you willing to sell!? How much?\n{00FFFF}(Enter the quantity of the drug and the price per gram separated by commas. For example: 10,5)", "Order", "Bye");
			return true;
		}
		case 3329: {
			if(!response) return true;
			new price, narkoid = GetPVarInt(playerid,"Vrach");
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, 3329, DIALOG_STYLE_INPUT, "Dialogue with a drug lord", "Nonono... I just need a number", "Order", "bye");
			if(price < 1 || price > 150) return ShowPlayerDialog(playerid, 3329, DIALOG_STYLE_INPUT, "Dialogue with the drug lord", "Are you planning to eat him with spoons?", "Order", "bye");
		    if(PlayerInfo[playerid][pCash] < (pricelist*price)) return ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the drug lord", "You can see that you are a beggar, get out of here", "Leave", "");
		    if(PlayerInfo[playerid][p_drugs][narkoid] >= 100) return ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the drug lord", "Baby, there are rumors that you have a lot of this drug. Why else would you want?", "Leave", "");
		    PlayerInfo[playerid][pCash] -=price*pricelist;
		    PlayerInfo[playerid][p_drugs][narkoid] += price;
		    switch(GZInfo[47][gFrak])
		    {
		    case 12: FracBank[0][fBallas] += price*pricelist;
		    case 13: FracBank[0][fAztek] += price*pricelist;
		    case 15: FracBank[0][fGrove] += price*pricelist;
		    case 17: FracBank[0][fVagos] += price*pricelist;
		    case 18: FracBank[0][fRifa] += price*pricelist;
		    }
		    SendMes(playerid,0x6ab1ffaa,"You bought %d grams of drugs for %d Money", price,price*pricelist);
		    DeletePVar(playerid,"Vrach");
		    return ShowPlayerDialog(playerid, 3327, DIALOG_STYLE_MSGBOX, "Dialogue with the drug lord", "I like you... Anything else?", "Yes", "No");
		}
		case 3330: {
			if(!response) return true;
			new narko,price, narkoid = GetPVarInt(playerid,"Vrach");
			if(sscanf(inputtext, "p<,>ii",narko,price)) return ShowPlayerDialog(playerid, 3330, DIALOG_STYLE_INPUT, "Dialogue with the drug lord", "Name the quantity and price per gram, you stupid sheep!!!!\n{00FFFF}(Enter the quantity of the drug, and the price per gram, separated by a comma. For example: 10,5)", "Order", "bye");
			if(price < 1 || price > 50) return ShowPlayerDialog(playerid, 3330, DIALOG_STYLE_INPUT, "Dialogue with a drug lord", "Man... For that kind of money, no one will ever buy anything from you!\n{00FFFF}(Enter the quantity of the drug, and the price per gram, separated by a comma. For example: 10,5)", "Order", "bye");
			if(narko > PlayerInfo[playerid][p_drugs][narkoid] || narko == 0) return ShowPlayerDialog(playerid, 3330, DIALOG_STYLE_INPUT, "Dialogue with the drug lord", "It�s obvious that you�re deceiving.\n{00FFFF}(Enter the quantity of the drug and the price per gram separated by a comma. For example: 10,5)", "Order", "bye");
		    PlayerInfo[playerid][pCash] +=price*narko;
		    PlayerInfo[playerid][p_drugs][narkoid] -= narko;
		    SendMes(playerid,0x6ab1ffaa,"You sold %d grams of drugs for %d Money", narko,price*narko);
		    DeletePVar(playerid,"Vrach");
		    return ShowPlayerDialog(playerid, 3327, DIALOG_STYLE_MSGBOX, "Dialogue with a drug lord", "Do you want to sell anything else?", "Yes", "No");
		}
		case 3321:
			{
				if(!response) return true;
				if(PlayerInfo[playerid][pMedCard] == 1) return ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "I've already seen you here. Why do you need another honey. map?", "Bye", "");
				switch(listitem)
    			{
        			case 0:
					{
						new medic;
						foreach(Player,i)
						{
							if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] >= 6)
							{
								medic++;
							    break;
							}
						}
  	                	if(medic) return ShowPlayerDialog(playerid, 3323, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "Hi. I'm not alone here, see another doctor.", "answer", "Bye"), SetPVarInt(playerid, "Vrach", 1);
  	                	else return ShowPlayerDialog(playerid, 3323, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "Zdarova, why do you need honey. book, little one?", "answer", "Bye"), SetPVarInt(playerid, "Vrach", 2);
				    }
        			case 1: ShowPlayerDialog(playerid, 3323, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "Take it easy please.", "answer", "Bye"), SetPVarInt(playerid, "Vrach", 3);
        			case 2: ShowPlayerDialog(playerid, 3323, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "I broke people like you in the zone, you better get out of here, otherwise I'll call the guard.", "answer", "Bye"), SetPVarInt(playerid, "Vrach", 3);
        			case 3: ShowPlayerDialog(playerid, 3323, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "It depends on what you can offer me.", "answer", "Bye"), SetPVarInt(playerid, "Vrach", 4);
        			case 4: ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "Well, get out of here.", "Close", "");
    			}
    			return true;
			}
		case 3323:
			{
	    		if(!response) return DeletePVar(playerid,"Vrach");
				if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid,3322,DIALOG_STYLE_LIST, "Dialogue with doctor","But you seem to be free\nDo you even know who I am? Tomorrow your hospital will be demolished\nMaybe, nevertheless, can we come to an agreement?\nOkay, thanks, all the best\nEh, it's a pity ...", "Order", "Cancle");
				else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid,3322,DIALOG_STYLE_LIST, "Dialogue with doctor","It's none of your business\nThey are drafted into the army;(\nHow, how do I know, the brothers said I did\nDo not make me angry, you bastard\nWithout a medical card, nowadays there is no way", "Order", "Cancle");
				else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid,3322,DIALOG_STYLE_LIST, "Dialogue with doctor","Excuse me. I'd better go.\nMaybe we start our conversation again?\nSo fuck you\nWhat kind of someone will listen to you?\nWell, bitch ... I'll be back with the brothers", "Order", "Cancle");
				else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid,3322,DIALOG_STYLE_LIST, "Dialogue with doctor","What do you want?\nWhere have you seen it, what would you pay for?\n15000 Money, will it suit you?\nI don't feel sorry for the attendants, I take a bath in them\nI have no money ;(", "Order", "Cancle");
				return true;
			}
		case 3322:
			{
	    		if(!response) return DeletePVar(playerid,"Vrach");
				switch(listitem)
    			{
        			case 0:
					{
						if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "So what of this? Don't interfere with my work. All the best", "Close", "");
						else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Well... It�s really not my business. Only, it's not free.", "Reply", "Bye"), SetPVarInt(playerid, "WinVrach", 1);
						else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Okay, go and don�t come back", "Yeah(", "");
						else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "I need money. Why are you so slow-witted?", "Reply", "Bye");
				    }
        			case 1:
					{
						if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid,3321,DIALOG_STYLE_LIST, "Petya: I�ll pretend that I didn�t hear that.","Good afternoon, where can I get honey from you. card?\nWhat are you doing, bro, are you tired of living?\nWhat am I supposed to do? What are you doing, you bastard\nYou have 5 seconds to prescribe me honey. card\nNo - no, nothing", "Order", "Cancle");
						else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with a doctor", "Army? No, then I won't give it to you. Then you will thank me.", "Thank you", "");
						else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid,3321,DIALOG_STYLE_LIST, "Petya: Maybe we can start our conversation again?","Good afternoon, where can I get honey from you. card?\nWhat are you doing, bro, are you tired of living?\nWhat am I supposed to do? What are you doing, you bastard\nYou have 5 seconds to prescribe me honey. card\nNo - no, nothing", "Order", "Cancle");
						else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Since you are so boring, then get out of here without medical help. cards.", "Be sad", "");
				    }
        			case 2:
					{
						if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "If you have money, you can even negotiate with me.", "Reply", "Bye");
						else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Brothers? Are you a bitch, a bandit?", "Leave", "");
						else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "You go, lout", "Leave", "");
						else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "It will be quite satisfactory if you add 5000 Moneys to them.", "Reply", "Close");
				    }
				    case 3:
					{
						if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Good luck to you. I have never seen such polite people in a hospital.", "Bye", "");
						else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "If you�re going to be rude somewhere else, get out of here", "Be sad", "");
						else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Like you're on my territory, fraer.", "(((", "");
						else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Well, then prepare 50,000 Moneys, major", "Reply", "Close");
				    }
				    case 4:
					{
						if(GetPVarInt(playerid,"Vrach") == 1) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Me too. Sometimes I want to kill those scoundrels who work with me.", "Yeah", "");
						else if(GetPVarInt(playerid,"Vrach") == 2) ShowPlayerDialog(playerid, 3324, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Yes, I understand you. Keep the honey. card, but it costs money ;(", "Reply", "Close"), SetPVarInt(playerid, "WinVrach", 1);
						else if(GetPVarInt(playerid,"Vrach") == 3) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Forgive me ((((", "Ok", "");
						else if(GetPVarInt(playerid,"Vrach") == 4) ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Then wait for other doctors, kind ones, in scrubs.", "Bye", "");
				    }
    			}
    			DeletePVar(playerid,"Vrach");
				return true;
			}
		case 3324:
			{
	    		if(!response) return true;
				return ShowPlayerDialog(playerid,3325,DIALOG_STYLE_LIST, "Dialogue with doctor Petya","Give Petya 20,000 Money\nGive Petya 50,000 Money\nDemand honey. free card\nLeave", "Order", "Cancle");
			}
		case 3325:
			{
				if(!response) return true;
				switch(listitem)
    			{
        			case 0: PlayerInfo[playerid][pCash] -= 20000;
        			case 1: PlayerInfo[playerid][pCash] -= 50000;
					case 3: return true;
    			}
    			if(GetPVarInt(playerid,"WinVrach"))
    			{
    				PlayerInfo[playerid][pMedCard] = 1;
	    			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `medcard` = '1' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
	    			mysql_function_query(connects, mysql_query_, false, "", "");
	    			SendClientMessage(playerid,0xFFFFFFFF,"Congratulations! You got honey. map.");
	    			DeletePVar(playerid,"WinVrach");
	    		}
	    		else ShowPlayerDialog(playerid, 12034, DIALOG_STYLE_MSGBOX, "Dialogue with the doctor", "Thank you. But honey. I won't give you a card. I should have been more polite.", "Be sad", "");
    			return true;
			}
		case 20011:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: if(PlayerInfo[playerid][pAlcoInvenxua] >= 1) SendClientMessage(playerid,0xFFFFFFFF,"< 1 > /admins, /mutelist, /jaillist, /skin, /togphone, /pm, /re, /sethp /agm, /reoff, (/a)dmin, /prison, /gg, /alogin, /tp");
					case 1: if(PlayerInfo[playerid][pAlcoInvenxua] >= 2) SendClientMessage(playerid,0xFFFFFFFF,"< 2 > /goto, /ptp, /hp, /mute, /rmute, /alock");
					case 2: if(PlayerInfo[playerid][pAlcoInvenxua] >= 3) SendClientMessage(playerid,0xFFFFFFFF,"< 3 > /slap, /gethere, /getstats, /warehouse, /freeze, /unfreeze, /forceskin, /clear");
					case 3: if(PlayerInfo[playerid][pAlcoInvenxua] >= 4) SendClientMessage(playerid,0xFFFFFFFF,"< 4 > /jail, /unjail, /kick, /kickpb, /spbikes");
					case 4: if(PlayerInfo[playerid][pAlcoInvenxua] >= 5) SendClientMessage(playerid,0xFFFFFFFF,"< 5 > /gm, /veh, /delveh, /warn, /warnmans, /iwep, /history");
					case 5: if(PlayerInfo[playerid][pAlcoInvenxua] >= 6) SendClientMessage(playerid,0xFFFFFFFF,"< 6 > /spveh, /ban, /givegun, /namestore, /mpwin, /mp");
					case 6: if(PlayerInfo[playerid][pAlcoInvenxua] >= 7) SendClientMessage(playerid,0xFFFFFFFF,"< 7 > /getban");
					case 7: if(PlayerInfo[playerid][pAlcoInvenxua] >= 8) SendClientMessage(playerid,0xFFFFFFFF,"< 8 > /uval, /templeader, /unwarn, /getip, /amembers, /aad, /getoffstats, /dvall, /fuelcars"),SendClientMessage(playerid,0xFFFFFFFF,"< 8 > /clearweapons, /balance, /setarmor, /setam, /am, /gangsafe, /mast");
					case 8: if(PlayerInfo[playerid][pAlcoInvenxua] >= 9) SendClientMessage(playerid,0xFFFFFFFF,"< 9 > /offban, /offwarn, /getip, /getbanip");
					case 9: if(PlayerInfo[playerid][pAlcoInvenxua] >= 10) SendClientMessage(playerid,0xFFFFFFFF,"< 10 > /offleader, /banip, /setmats, /uval, /chatsms, /chat, /setskin, /setleader, /givebil"),SendClientMessage(playerid,0xFFFFFFFF,"< 10 > /o(oc), /chatsms, /agl, /forceskin, /givemedcard, /gzcolor");
					case 10: if(PlayerInfo[playerid][pAlcoInvenxua] >= 11) SendClientMessage(playerid,0xFFFFFFFF,"< 11 > /clearchat(/cc), /prefix, /offhelper, /hcheck, /object, /startpb, /startrace, /startbase, /offgoto, /getpick, /setskin"),SendClientMessage(playerid,0xFFFFFFFF,"< 11 >/setbizprod, /agiverank, /unbanip, /avig, /aunvig, /getschet, /setbizmafia, /setmats, /noooc");
					case 11: if(PlayerInfo[playerid][pAlcoInvenxua] >= 12) SendClientMessage(playerid,0xFFFFFFFF,"< 12 > /election, /object, /weather, /setadmins");
					case 12: if(PlayerInfo[playerid][pAlcoInvenxua] >= 13) SendClientMessage(playerid,0xFFFFFFFF,"< 13 > /givedonate, /giverub, /givegold, /gm, /asetadmins, /aa, /checkdonate"),SendClientMessage(playerid,0xFFFFFFFF,"< 13 > /mark, /gotomark, /gotoco, /ap, /house, /biz"),SendClientMessage(playerid,0xFFFFFFFF,"< 13 > /realodbans, /skick, /prefix, /obj, /getip, /weather, /pgetip, /agetipreg");
					}
				}
//				else { callcmd::admpanel(playerid, ""); }
			}
		case 10025:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							ShowPlayerDialog(playerid, 8402, DIALOG_STYLE_INPUT, "{63CB00}Server Commands", "{FFFFFF}Enter your interstate command\nto receive the description(example: /mainmenu):\n", "Next", "Cancle");
							return 1;
						}
					case 1:
						{
/*							SendClientMessage(playerid,COLOR_YELLOW,"/time /id /gps /viphelp /myskill /rep(ort) /change [house / bizz]");
							SendClientMessage(playerid,COLOR_YELLOW,"/witness /drink /buybiz /mask /limit /present /showmedcard");
							SendClientMessage(playerid,COLOR_YELLOW,"/atm /dice /showpass /mystyle /satiety /healme");
							SendClientMessage(playerid,COLOR_YELLOW,"/licenses /box /kongfu /kickbox /getbizstats /window");
							SendClientMessage(playerid,COLOR_YELLOW,"/eject /pay /directory /mydebts /repaydebt /offalend");
							SendClientMessage(playerid,COLOR_YELLOW,"Shortcuts: /drugs /givedrug /ddrug /pdrug /plant");
							SendClientMessage(playerid,COLOR_YELLOW,"Weapons: /dgun /pgun");*/
							new str[2000];
							format(str,sizeof(str),"/time /id /gps /viphelp /myskill /rep(ort) /change [house / bizz]");
							format(str,sizeof(str),"%s\n/witness /drink /buybiz /mask /limit /present /showmedcard",str);
    						format(str,sizeof(str),"%s\n/atm /dice /showpass /mystyle /healme",str);
    						format(str,sizeof(str),"%s\n/licenses /box /kongfu /kickbox /getbizstats /window",str);
    						format(str,sizeof(str),"%s\n/eject /pay /paygold /directory /offalend",str);
    						format(str,sizeof(str),"%s\n/drugs /givedrug /ddrug /pdrug /plant",str);
    						format(str,sizeof(str),"%s\n/dgun /pgun",str);
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands",str,"Close","");
							return 1;
						}
					case 2:
						{
/*							SendClientMessage(playerid,COLOR_YELLOW,"(/o)oc - Global chat");
							SendClientMessage(playerid,COLOR_YELLOW,"(/ad)vertise - Annotation");
							SendClientMessage(playerid,COLOR_YELLOW,"(/gov)erment - State news");
							SendClientMessage(playerid,COLOR_YELLOW,"/f - Gang chat");
							SendClientMessage(playerid,COLOR_YELLOW,"/k - Family chat");
							SendClientMessage(playerid,COLOR_YELLOW,"(/s)hout - Shout a message");
							SendClientMessage(playerid,COLOR_YELLOW,"(/m)egaphone - Smartphone on a service");
							SendClientMessage(playerid,COLOR_YELLOW,"(/r)adio - ��� ��������������� ����������� (�������/FBI � �.�)");
							SendClientMessage(playerid,COLOR_YELLOW,"(/d)epartaments - ����� ��� ��������������� �����������");
							SendClientMessage(playerid,COLOR_YELLOW,"(/me) - �������� (������: ���_������� ����� ����)");
							SendClientMessage(playerid,COLOR_YELLOW,"(/todo) - �����*�������� (������: ���� ���������!*�������� ������� ������������ �� ����� ��������)");*/
							ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "(/o)oc (/ad)vertise (/gov)erment /f /k (/s)hout\n(/m)egaphone (/r)adio (/d)epartaments (/me) (/todo) /bc", "Close", "");
							return 1;
						}
					case 3:
						{
/*							SendClientMessage(playerid,COLOR_YELLOW,"(/c)all - ��������� (����� �������� ����� ������ ����� /number)");
							SendClientMessage(playerid,COLOR_YELLOW,"/sms - ��������� ��� ���������");
							SendClientMessage(playerid,COLOR_YELLOW,"(/p)ickup - Answer the call");
							SendClientMessage(playerid,COLOR_YELLOW,"(/h)angup - End the phone conversation");
							SendClientMessage(playerid,COLOR_YELLOW,"/number - Find out the number");*/
							ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "(/c)all\n/sms\n(/p)ickup\n(/h)angup\n/number", "Close", "");
							return 1;
						}
					case 9:
						{
							switch(PlayerInfo[playerid][pJob])
							{
//							case 1: { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "[Job] --> /rob", "Close", ""); }
							case 2:
								{
//									ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "/refill /trailer", "Close", "");
//									SendClientMessage(playerid,COLOR_YELLOW,"[�������] /trailer - ��������� ���������");
								}
							case 3: { SendClientMessage(playerid,COLOR_YELLOW,"/hotdog"); }
							case 4: { SendClientMessage(playerid,COLOR_YELLOW,"/fare"); }
							case 5: { SendClientMessage(playerid,COLOR_YELLOW,"/plist, /load"); }
							case 6: { SendClientMessage(playerid,COLOR_YELLOW,"/fgstyle"); }
							case 8: { SendClientMessage(playerid,COLOR_YELLOW,"/bankup"); }
							case 13: { SendClientMessage(playerid,COLOR_YELLOW,"/jackcar /dropcar"); }
//							case 14: SendClientMessage(playerid,COLOR_YELLOW,"/fight [id]","Close");
							}
							if (IsACop(playerid))
							{
								if(PlayerInfo[playerid][pMember] == 26 || PlayerInfo[playerid][pLeader] == 26)
								{
									new str[2000];
							        format(str,sizeof(str),"(/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /cuff /shield /members /rankup");
							        format(str,sizeof(str),"%s\n/frisk /take (/gov)ernment /gangsafe /ticket /givecopkeys /cput /ceject /uncuff /followme /rankup",str);
    					        	format(str,sizeof(str),"%s\n/bizlock /undemote /nalog /takekazna /rankup",str);
					        	    ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands",str,"Close","");
								    SendClientMessage(playerid, COLOR_YELLOW, "(/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /cuff /shield /members /rankup");
								    SendClientMessage(playerid, COLOR_YELLOW, "/frisk /take (/gov)ernment /gangsafe /ticket /givecopkeys /cput /ceject /uncuff /followme /rankup");
									return SendClientMessage(playerid, COLOR_YELLOW, "/bizlock /undemote /nalog /takekazna /rankup");
								}
								new str[2000];
							    format(str,sizeof(str),"(/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /cuff /shield");
							    format(str,sizeof(str),"%s\n/members /frisk /take (/gov)ernment /gangsafe /ticket /givecopkeys",str);
    					    	format(str,sizeof(str),"%s\n[/spy FBI] /cput /ceject /followme /uncuff /block /rb /rbinfo /removerb /removerball",str);
						    	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands",str,"Close","");
						//		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "(/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /cuff /shield\n/members /frisk /take (/gov)ernment /gangsafe /ticket /givecopkeys\n/cput /ceject /uncuff /block /rb /rbinfo /removerb /removerball", "Close", "");
//								SendClientMessage(playerid, COLOR_YELLOW, "/frisk /take (/gov)ernment /gangsafe /ticket /givecopkeys /cput /ceject /uncuff /block");
//								SendClientMessage(playerid, COLOR_YELLOW, "/rb - ���������� ����, /rbinfo - Information � ������, /removerb - ������� ����, /removerball - �������� ��� �����");
								if(PlayerInfo[playerid][pMember] == 2)
								{
									SendClientMessage(playerid, COLOR_WHITE, "/demote /ftazer /bizlock /spy /rankup");
								}
							}
							else if (IsAArm(playerid))
							{
								new str[2000];
							    format(str,sizeof(str),"(/r)adio (/d)epartments (/m)egaphone /shield (/gov)ernment /gangsafe");
							    format(str,sizeof(str),"%s\n/showudost /members /getgun /carmat /carm /givebil",str);
							    ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands",str,"Close","");
//								ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "(/r)adio (/d)epartments (/m)egaphone /shield\n(/gov)ernment /gangsafe /showudost\n/members /getgun /carmat /carm", "Close", "");
//								SendClientMessage(playerid, COLOR_YELLOW, "(/gov)ernment  /gangsafe /showudost /members /getgun");
//								SendClientMessage(playerid, COLOR_YELLOW, "����: /carmat /carm ");
								return 1;
							}
							else if (PlayerInfo[playerid][pMember] == 23) { SendClientMessage(playerid, COLOR_YELLOW, "(/f)amily /hitmenu /fquest /members /hmask /tie /untie /klyap /klyapoff /cput /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 24) { SendClientMessage(playerid, COLOR_YELLOW, "(/f)amily - Faction chat /fquest /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { SendClientMessage(playerid, COLOR_YELLOW, "Medic: /sethpprice /heal /lomka /healaddict /members (/gov)ernment (/r)adio (/d)epartments /mdpell /narkoz /givemedcard /rankup"); }
							else if (ISAMAFIA(playerid)) { SendClientMessage(playerid, COLOR_YELLOW, "(/f)amily  /fquest /tie /untie /takephone /getweapon /bizlist /bizwar /mafiabalance /materials buy"), SendClientMessage(playerid, 0x20A8A8AA, "<> /mafiawithdraw /mafiabankput /gangsafe /setdebt /debtors /klyap /klyapoff /cput /rankup");  }
							else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) { SendClientMessage(playerid, COLOR_YELLOW, "City Hall: /r,  /free, (/d)epartments, (/gov)ernment, /nalog /takekazna (for the leader), /mxpell /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) { SendClientMessage(playerid, COLOR_YELLOW, "Sa News: /npanel,  /news /live (/f)amily /newsbank /newswithdraw /yes [id] /off /mxpell /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 27 || PlayerInfo[playerid][pLeader] == 27) { SendClientMessage(playerid, COLOR_YELLOW, "Casino Four Dragons: /(f)amily, /startblackjack, /roule, /startdice, /setbet /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 28 || PlayerInfo[playerid][pLeader] == 28) { SendClientMessage(playerid, COLOR_YELLOW, "Casino Caligulas: /(f)amily, /startblackjack, /roule, /startdice, /setbet /rankup"); }
							else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) { SendClientMessage(playerid, COLOR_YELLOW, "Instructors: /(f)amily (/d)epartments (/gov)ernment /axpell /rankup"); SendClientMessage(playerid, 0x20A8A8AA, "Instructors: /take /duty ([?]Double click on nickname via TAB)"); }
							else if (PlayerInfo[playerid][pMember] == 23) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/f /hitmenu /fquest /spy /members /hmask /tie\n/untie /klyap /klyapoff /cput /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 24) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/f - Faction Chat /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/sethpprice /heal /lomka /healaddict /members\n(/gov)ernment (/r)adio (/d)epartments /mdpell\n/narkoz /givemedcard /rankup", "Close", ""); }
							else if (ISAMAFIA(playerid)) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/f  /fquest /tie /untie /takephone /getweapon\n/bizlist /bizwar /mafiabalance /materials buy\n/mafiawithdraw /mafiabankput /gangsafe /setdebt\n/debtors /klyap /klyapoff /cput /rankup", "Close", "");  }
							else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/r  /free (/d)epartments (/gov)ernment\n/nalog and /takekazna  /mxpell /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "Sa News: /news /live (/f)amily /newsbank\n/newswithdraw /yes [id] /off /mxpell /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 27 || PlayerInfo[playerid][pLeader] == 27) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "Casino Four Dragons: /f /fquest /startblackjack /roule /startdice /setbet /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 28 || PlayerInfo[playerid][pLeader] == 28) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "Casino Caligulas: /f /fquest /startblackjack /roule /startdice /setbet /rankup", "Close", ""); }
							else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) { ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/f (/d)epartments (/gov)ernment /axpell /take /duty /rankup", "Close", ""); }
							else if (IsAGang(playerid))
							{
								SendClientMessage(playerid, COLOR_YELLOW, "(/f)amily  /materials 'get' /selldrugs /sellzone /gunlist / capture");
								SendClientMessage(playerid, COLOR_YELLOW, "/materials 'put' /unloading /get guns /keys /gmenu /members /switchskin");
								SendClientMessage(playerid, COLOR_YELLOW, "Deputies: /invite /uninvite");
								SendClientMessage(playerid, COLOR_YELLOW, "Ghetto: /sellgun /robhouse");
								SendClientMessage(playerid, COLOR_YELLOW, "Drug den: /setdrugsprice");
								ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Gangs Help", "/f  /materials 'get' /selldrugs /sellzone /gunlist /capture\n/materials 'put' /unloading /get guns /keys /gmenu /members /switchskin\n/invite /uninvite /sellgun /robhouse /setdrugspirce" ,"Close", "");
							}
						}
					case 4:
						{
/*							if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 21) SendClientMessage(playerid, 0x20A8A8AA, "/iinvite - ��������� �� ����� / �������");
							if(PlayerInfo[playerid][pLeader] >= 1) SendClientMessage(playerid, COLOR_YELLOW, "/lpanel - ���� ������, /invite - ������� ������, /rank - ��������/�������� ������");
							if(PlayerInfo[playerid][pLeader] >= 1) SendClientMessage(playerid, COLOR_YELLOW, "/uninvite - ������� ������, /changeskin - ������� ���� ������, /drive - ������� ���� ��������� �� ����� (��� ����)");
							if(PlayerInfo[playerid][pLeader] >= 1) SendClientMessage(playerid, COLOR_YELLOW, "/fvig - ������ ������� ������, /funvig - ����� ������� ������");
							if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 19) SendClientMessage(playerid, 0x20A8A8AA, "/givebil - ������ ������� �����");*/
							if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 21) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Leader Help", "/iinvite [Army/Police]", "Close", "");
							if(PlayerInfo[playerid][pLeader] >= 1) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/lpanel - Leader menu\n/invite - Invite player\n/giverank - Give player rank", "Close", "");
							if(PlayerInfo[playerid][pLeader] >= 1) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/uninvite - Kick player, /changeskin - Change player skin, /drive - return all vehicles to respawn (for gangs)", "Close", "");
							if(PlayerInfo[playerid][pLeader] >= 1) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/fvig - Give player faction warn, /funvig - delete faction warn from player", "Close", "");
							if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 19) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/givebil - Issue a ticket", "Close", "");
						}
					case 5:
						{
/*							SendClientMessage(playerid,COLOR_YELLOW,"/hmenu - ������� ����(��������� ����)");
							SendClientMessage(playerid,COLOR_YELLOW,"/home - ��������� ����� � ���� (GPS)");
							SendClientMessage(playerid,COLOR_YELLOW,"/healhouse - ������������ �������� �������");
							SendClientMessage(playerid,COLOR_YELLOW,"/exit - Go out �� ����");*/
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands","/hmenu\n/home\n/healhouse\n/exit","Close","");
						}
					case 6:
						{
//							if(GetPlayerBizz(playerid) > 0) SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/business {FEFEFE}- ���� ���������� ��������");
							if(GetPlayerBizz(playerid) > 0) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/business - {FFFF00}Money Management Menu", "Close", "");
							else return SendClientMessage(playerid, COLOR_GREY, "There is no money for you!");
						}
					case 7:
						{
/*							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/carpass {FEFEFE}- ����������, /carpass [id] - �������� ��������� �� ������");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/sellcar {FEFEFE}- ������� ������");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/fixcar {FEFEFE}- ������ � ����");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/fill {FEFEFE}- ��������� ������");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/sellcar id ����� {FEFEFE}- ������� ������ ������");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/fillcar {FEFEFE}- ��������� ������ � ��������");
							SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/get 'fuel' {FEFEFE}- ������ ��������");*/
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Server Commands","/carpass\n/sellcar\n/fixcar\n/fill\n/sellcar [id] [amount]\n/fillcar\n/get 'fuel'","Close","");
						}
					case 8:
					    {
/*					    	SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/divorce{FEFEFE} - ����������, {009BFF}/propose{FEFEFE} - ���������� ���� � ������.");
				        	SendClientMessage(playerid,COLOR_YELLOW,"{009BFF}/witness{FEFEFE} - ��������� ���������.");*/
				        	if(PlayerInfo[playerid][pFamily])
							{
/*								SendClientMessage(playerid,COLOR_YELLOW,"[�����]: {009BFF}/fmenu{FEFEFE} - ���� �����, {009BFF}/k{FEFEFE} - ��� �����.");
								SendClientMessage(playerid,COLOR_YELLOW,"[����� �����]: {009BFF}/kickfamily{FEFEFE} - ������� �� �����.");*/
//								ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Family Commands", "{009BFF}/divorce{FEFEFE} - develop\n{009BFF}/propose{FEFEFE} - Give a Hand and a Series\n{009BFF}/witness{FEFEFE} - assign a witness\n", "Close", "");
								ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Commands", "/fmenu\n/kickfamily\n/k", "Close", "");
		    				}
						}
					}
				}
				else return MainMenuPl(playerid);
			}
			//
		case 8402: {
			if(!response) return true;
			for(new i = 0; i < sizeof(FindCommand); i++)
			{
				if(!strcmp(inputtext, FindCommand[i][0], false))
				{
					new string[144];
					format(string, sizeof(string), "Description: %s", FindCommand[i][1]);
					return SendClientMessage(playerid, -1, string);
				}
			}
			SendClientMessage(playerid, -1, "The command entered does not exist!");
			return true;
		}
		case 5346:
			{
				if(response)
				{
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 5346, DIALOG_STYLE_INPUT,"Event Weapons", "Enter the weapon id in the text below\nExample: {FFFFFF}24,500", "Issue", "Close");
					new razdel[2];
					if(sscanf(inputtext,"p<,>ii",razdel[0],razdel[1])) return ShowPlayerDialog(playerid, 5346, DIALOG_STYLE_INPUT,"Event Weapons", "Enter the weapon id in the text below\nExample: {FFFFFF}24,500", "Issue", "Close");
					if(razdel[0] > 46 || razdel[0] < 0 || razdel[0] >= 19 && razdel[0] <= 21) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: ID weapon must be from 0 to 46!");
					if(razdel[1] > 500 || razdel[1] < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cartridges cannot be lower than 0, and higher than 500!");
					switch(razdel[0])
					{
						case 35..40,4,9,16,18,26,45,44,22,32,28,27: return SendClientMessage(playerid, COLOR_GRAD1, "Prohibited weapon!");
					}
					GiveWeapon(playerid, razdel[0], razdel[1]);
					foreach(Player, i)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							GiveWeapon(i, razdel[0], razdel[1]);
							SendClientMessage(i, COLOR_YELLOW, "Adminstrator gave you a weapon");
						}
					}
					format(stringer1, sizeof(stringer1), "Adminstrator %s gave weapons to everyone, within a radius of 50 materials. (Weapon: %s, �artridges: %d)", PlayerInfo[playerid][pNames], WeaponNames[razdel[0]], razdel[1]);
					SendAdminMessage(COLOR_GREY,stringer1);
				}
			}
		case 5343:
			{
				if(response)
				{
					if(listitem == 0) {
						if(Teleport == 0)
						{
							GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]); // ���������� ����������
							TeleportInfo[0] = GetPlayerInterior(playerid); // ���������� ��������
							TeleportInfo[1] = GetPlayerVirtualWorld(playerid); // ���������� Money������� ���
							Teleport = 1;
							format(stringer, sizeof(stringer), "%s %s[%d]: opened teleport on event, use (/gomp)", (FD(playerid)) ? "Adminstrator" : "Adminstrator", PlayerInfo[playerid][pNames],playerid);
							SendClientMessageToAll(0xFFCD00ff,stringer);
						}
						else
						{
							format(stringer, sizeof(stringer), "%s %s[%d]: closed the teleport for the event.", (FD(playerid)) ? "Adminstrator" : "Adminstrator", PlayerInfo[playerid][pNames],playerid);
							SendClientMessageToAll(0xFFCD00ff,stringer);
							Teleport = 0;
							return 1;
						}
					}
					if(listitem == 1)
					{
						ShowPlayerDialog(playerid, 5346, DIALOG_STYLE_INPUT,"Event Weapon", "{FFFFFF}Enter weapon id and ammo\n{FFFFFF}Example: {FF0000}24,500", "Issue", "Close");
					}
					if(listitem == 2)
					{
						foreach(Player, i)
						{
							if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i) { SetPlayerHealthAC(i, 100); SetPlayerArmour(i, 0); SendClientMessage(i, COLOR_YELLOW, "The administrator gave you heal");}
						}
					}
					if(listitem == 3)
					{
						foreach(Player, i)
						{
							if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
							{
								ResetWeapons(i);
								SendClientMessage(i, COLOR_YELLOW, "Administrator cleared the all weapons");
							}
						}
					}
					if(listitem == 4) {
						if(IsPlayerInRangeOfPoint(playerid, 60.0, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]) && Teleport == 1) {
							ShowPlayerDialog(playerid, 5355, DIALOG_STYLE_INPUT, "Event Skins", "Enter in the text below, the ID of the skin", "Next", "Cancle");
						} else return SendClientMessage(playerid, COLOR_WHITE, "You are not in the event area or the event is not active!");
					}
				}
			}
		case 5355: {
			if(!response) return true;
			new idskn;
			if(sscanf(inputtext, "d", idskn)) return ShowPlayerDialog(playerid, 5355, DIALOG_STYLE_INPUT, "Event Skins", "Enter the skin id in the text below", "Next", "Cancle");
			if(idskn < 1 || idskn == 74 || idskn > 311) return SendClientMessage(playerid, COLOR_GREY, "Invailed skin id!");
			new string[144];
			foreach(Player, i) {
				if(GetDistanceBetweenPlayers(playerid,i) < 15.0 && playerid != i) {
					SetPlayerSkin(i, idskn);
					SendClientMessage(i, COLOR_WHITE, "The administrator has set a new event skin!");
				}
			}
			format(string, sizeof(string), "Adminstrator %s gave everyone a skin at the event [skinid: %d]", PlayerInfo[playerid][pNames], idskn);
			SendAdminMessage(COLOR_GREY, string);
			return true;
		}
		case 9653:
			{
				if(!response || PlayerInfo[playerid][pMember] != 19 && proverkaforma[playerid] != 1) return true;
				new tmpcar = GetPlayerVehicleID(playerid);
				if(!IsAMatsCar(tmpcar)) return SendClientMessage(playerid, COLOR_GRAD1, "You must be in matovoz.");
				switch(listitem)
				{
				case 0:
					{
						SendClientMessage(playerid,COLOR_GREEN, "Stand on the red marker to fill the truck with materials!");
						SetPlayerCheckpoint(playerid,335.9255,1994.7932,17.6406,8.0);
						MatsArmyCar[playerid] = 20;
					}
				case 1:
					{
						if(!IsPlayerInRangeOfPoint(playerid, 10.0,334.9307,1962.9658,17.6406)) return SendClientMessage(playerid,COLOR_GREY, "You are not at the unloading area!");
						if(MatHaul[tmpcar-matscar[0]][mLoad] <= 0) return SendClientMessage(playerid, COLOR_GREY, "There are no weapons in the matovoz!");
						armmatbi += MatHaul[tmpcar-matscar[0]][mLoad];
						MatHaul[tmpcar-matscar[0]][mLoad] = 0;
						format(stringer, sizeof(stringer), "The materials have been unloaded! In the truck: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, stringer);
						SetOtherInt("FracBank[0][fGrove]", FracBank[0][fGrove]);
					}
				case 2:
					{
						SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
						SendClientMessage(playerid, COLOR_WHITE, "The mark on the map is indicated as a red marker");
						MatsArmyCar[playerid] = 21;
					}
				case 3:
					{
						SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
						MatsArmyCar[playerid] = 31;
					}
				case 4:
					{
						SetPlayerCheckpoint(playerid,-2497.7634,-679.8572,139.3203,6.0);
						MatsArmyCar[playerid] = 24;
					}
				case 5:
					{
						SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
						MatsArmyCar[playerid] = 35;
					}
				case 6: return ShowPlayerDialog(playerid, 3232, DIALOG_STYLE_LIST, "Delivery of materials to gangs", "- Unloading Ballas Gang\n- Unloading Los Santos Vagos\n- Unloading The Grove\n- Unloading The Aztec\n- Unloading Rifa Gang", "Select", "Cancle");
				case 7:
					{
						SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
						MatsArmyCar[playerid] = 150;//lvpd
					}
				}
				return true;
			}
			//------------------------------[ ���� ������ ] -------------------------
		case 3232:
			{
				if(response)
				{
					if (PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY,"You are not in a dull truck!");
						switch(listitem)
						{
						case 0:
							{
								SetPlayerCheckpoint(playerid,2645.9717,-2005.8618,13.3828,6.0);
								MatsArmyCar[playerid]= 100;
								return true;
							}
						case 1:
							{
								SetPlayerCheckpoint(playerid,2795.7639,-1619.4196,10.9219,6.0);
								MatsArmyCar[playerid]= 101;
								return true;
							}
						case 2:
							{
								SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
								MatsArmyCar[playerid]= 102;
								return true;
							}
						case 3:
							{
								SetPlayerCheckpoint(playerid,1715.4744,-2112.1699,13.3828,6.0);
								MatsArmyCar[playerid]= 103;
								return true;
							}
						case 4:
							{
								SetPlayerCheckpoint(playerid,2176.5503,-1803.5483,13.3692,6.0);
								MatsArmyCar[playerid]= 104;
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		case 4819:
			{
				if(!response || listitem == 7 || listitem == 8 || listitem == 19 || listitem == 21) return true;
				stringer[0] = 0;
				for(new i; i < 12; i++)
				{
			    	if(!gFractionSkin[listitem][i]) continue;
			    	format(stringer, sizeof(stringer), "%sSkin [%i]\n",stringer,gFractionSkin[listitem][i]);
				}
				ShowPlayerDialog(playerid, 4820, DIALOG_STYLE_LIST, "Select skin", stringer, "Select", "Close");
				return SetPVarInt(playerid, "spy_member", listitem);
			}
	   case dColorGun:
			{
				if(!response)return 1;
				SendClientMessage(playerid,-1,"Select color:");
				stringer[0]=EOS;
				for(new i=0;i<6;i++) format(stringer,1000,"%s{%06x}%s\n",stringer,_weapon_colors[i]>>>8,_weapon_color_name[i]);
				ShowPlayerDialog(playerid,dColorGun2,DIALOG_STYLE_LIST,"   ", stringer,"Choice","Cancle");
				SetPVarInt(playerid,"_select_color_gun",listitem);
				return 1;
			}
			case dColorGun2:
			{
			    if(!response)return 1;
			    new _sprite_slotid=GetWeaponSpriteSlotID(allow_guns_print[GetPVarInt(playerid,"_select_color_gun")]);
			    weapon_sprit_select[playerid][_sprite_slotid]=listitem;
			    format(stringer,144,"Successful, you have chosen a weapon color '%s' - %s", WeaponNames[allow_guns_print[GetPVarInt(playerid,"_select_color_gun")]],_weapon_color_name[listitem]);
				SendClientMessage(playerid,_weapon_colors[listitem],stringer);
				return 1;
			}
		case 667:
			{
				if(response)
				{
					if(!IsACop(playerid))
					{
						SetPPos(playerid,2147.862,1601.332,1006.168);
						SetPlayerInteriorEx(playerid,1);
						SetPlayerVirtualWorldEx(playerid,3);
						SetPlayerFacingAngle(playerid, 180.0);
						SetPlayerExtra(playerid, INVALID_PLAYER_ID, 2, "crash into bank vault");
						SetCameraBehindPlayer(playerid);
					}
				}
			}
		case 668:
			{
				if(response)
				{
					if(!IsACop(playerid))
					{
						SetPPos(playerid,2147.862,1601.332,1006.168);
						SetPlayerInteriorEx(playerid,1);
						SetPlayerVirtualWorldEx(playerid,3);
						SetPlayerFacingAngle(playerid, 180.0);
						SetPlayerExtra(playerid, INVALID_PLAYER_ID, 2, "crash into jewel vault");
						SetCameraBehindPlayer(playerid);
					}
				}
			}
		case 4820:
			{
				if(!response) return DeletePVar(playerid,"spy_member");
				new fraction = GetPVarInt(playerid,"spy_member")+1;
				SetPlayerSkinEx(playerid, gFractionSkin[fraction-1][listitem]);
				SetPVarInt(playerid,"mask", fraction);
				SetPlayerColor(playerid, fraction);
				colorchat(playerid, 2);
				SendMes(playerid, COLOR_ISPOLZUY, "You hide in faction clothing {FFFFFF}'%s'", GetPlayerFracName[fraction]);
				SendClientMessage(playerid,COLOR_ISPOLZUY,"Use /spy again to remove the disguise.");
				DeletePVar(playerid,"spy_member");
				return 1;
			}
		case 10054:
		{
			if(!response) return callcmd::mainmenu(playerid);
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 10057, DIALOG_STYLE_LIST, "{CCFF00}Exchange the donation for the game value", "1) 500.000$ for 500 donate;\n2) 1.000.000$ for 1000 donate;\n3) 3.500.000$ for 3000 donate;\n4) 6.500.000$ for 6000 donate;\n5) 8.000.000$ for 10000 donate.", "Exchange", "Back");
//				case 0: ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Funcition Deleted", "{a8c4e4}This function has been delted from this server!!", "Close", "");
				case 1: ShowPlayerDialog(playerid, 10058, DIALOG_STYLE_LIST, "{CCFF00}Basic rules", "[1] +1000 drug dependence (1000)\n[2] -1000 drug dependence (1000)\n[3] +10 Service law (100)", "Select", "Back");
				case 2:
				{
					if(PlayerInfo[playerid][pDonatemoney2] < 1450) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough donate money!");
					PlayerInfo[playerid][pDonatemoney2] -= 1450;
					if(GetPlayerBizz(playerid) > 0) BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bLic] = 1;
					PlayerInfo[playerid][pGunLic] = 1;
					PlayerInfo[playerid][pBoatLic] = 1;
					PlayerInfo[playerid][pFishLic] = 1;
					PlayerInfo[playerid][pFlyLic] = 1;
					format(stringer, sizeof(stringer), "~r~-1450 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
				}
/*				{
					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Funcition Deleted", "{a8c4e4}This function has been deleted from this server, you can get car license from\n{ff0000}/gps > The main > Driving School", "Close", "");
				}*/
				case 3:
				{
					if(PlayerInfo[playerid][pDonatemoney2] < 500) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough donate money!");
					GameTextForPlayer(playerid, "~r~-500 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDonatemoney2] -= 500;
					PlayerInfo[playerid][pSDPistol] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
					PlayerInfo[playerid][pDesertEagle] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
					PlayerInfo[playerid][pShotGun] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
					PlayerInfo[playerid][pMP5] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
					PlayerInfo[playerid][pAK47] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
					PlayerInfo[playerid][pM4] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
				}
				case 4:
				{
					if(PlayerInfo[playerid][pDonatemoney2] < 500) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough donate money!");
					PlayerInfo[playerid][pMedCard] = 1;
					SendClientMessage(playerid, -1, "{FFFFFF}Med-card purchased successfully!");
					PlayerInfo[playerid][pDonatemoney2] -= 500;
//					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Funcition Deleted", "{a8c4e4}This function has been delted from this server!!", "Close", "");
				}
				case 5:
				{
					if(PlayerInfo[playerid][pDonatemoney2] < 500) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough donate money!");
					PlayerInfo[playerid][pVoenBill] = 1;
					SendClientMessage(playerid, -1, "{FFFFFF}Military Card purchased successfully!");
					PlayerInfo[playerid][pDonatemoney2] -= 500;
//					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Funcition Deleted", "{a8c4e4}This function has been delted from this server!!", "Close", "");
				}
				case 6: ShowPlayerDialog(playerid, 26366, DIALOG_STYLE_LIST, "{CCFF00}Terms of account", "1) Bronze VIP for 3000 donate;\n2) Silver VIP for 8000 donate;\n3) Gold VIP for 13000 donate.", "Exchange", "Back");
//				case 6: ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Funcition Deleted", "{a8c4e4}This function has been delted from this server!!", "Close", "");
			}
			return true;
		}
		case 26364:
			{
				if(!response) return callcmd::donate(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
						PlayerInfo[playerid][pSDPistol] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
						PlayerInfo[playerid][pDesertEagle] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
						PlayerInfo[playerid][pShotGun] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
					    PlayerInfo[playerid][pMP5] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
					}
					case 4:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
						PlayerInfo[playerid][pAK47] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
					}
					case 5:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 30;
						PlayerInfo[playerid][pM4] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
					}
					case 6:
					{
						if(PlayerInfo[playerid][pDonatemoney2] < 100) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
						GameTextForPlayer(playerid, "~r~-100 Donate ~g~Thanks!", 5000, 1);
						PlayerInfo[playerid][pDonatemoney2] -= 100;
						PlayerInfo[playerid][pSDPistol] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
						PlayerInfo[playerid][pDesertEagle] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
						PlayerInfo[playerid][pShotGun] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
						PlayerInfo[playerid][pMP5] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
						PlayerInfo[playerid][pAK47] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
						PlayerInfo[playerid][pM4] = 100; SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
					}
				}
			}
		case 10057:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 500) return SendClientMessage(playerid, COLOR_GREY, "At least 500 points.");
							GiveMoney(playerid, 500000);
							GameTextForPlayer(playerid, "~g~+500.000 IN BANK~n~~r~-500 donate", 5000, 1);
							PlayerInfo[playerid][pDonatemoney2] -= 500;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 1000) return SendClientMessage(playerid, COLOR_GREY, "At least 1000 points.");
							GiveMoney(playerid, 1000000);
							GameTextForPlayer(playerid, "~g~+1.000.000 IN BANK~n~~r~-1000 donate", 5000, 1);
							PlayerInfo[playerid][pDonatemoney2] -= 1000;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 3000) return SendClientMessage(playerid, COLOR_GREY, "At least 3000 points.");
							GiveMoney(playerid, 3500000);
							GameTextForPlayer(playerid, "~g~+3.500.000 IN BANK~n~~r~-3000 donate", 5000, 1);
							PlayerInfo[playerid][pDonatemoney2] -= 3000;
						}
					case 3:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 6000) return SendClientMessage(playerid, COLOR_GREY, "At least 6000 points.");
							GiveMoney(playerid, 6500000);
							GameTextForPlayer(playerid, "~g~+6.500.000 IN BANK~n~~r~-6000 donate", 5000, 1);
							PlayerInfo[playerid][pDonatemoney2] -= 6000;
						}
					case 4:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 10000) return SendClientMessage(playerid, COLOR_GREY, "At least 10000 points.");
							GiveMoney(playerid, 8000000);
							GameTextForPlayer(playerid, "~g~+8.000.000 IN BANK~n~~r~-10000 donate", 5000, 1);
							PlayerInfo[playerid][pDonatemoney2] -= 10000;
						}
					}
				}
				else return callcmd::donate(playerid);
			}
		case 10058:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 1000) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 1000;
							GameTextForPlayer(playerid, "~r~-1000 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][pNarcoLomka] += 1000;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 1000) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 1000;
							GameTextForPlayer(playerid, "~r~-1000 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][pNarcoLomka] -= 1000;
							if(PlayerInfo[playerid][pNarcoLomka] < 0) PlayerInfo[playerid][pNarcoLomka] = 0;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 100) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 100;
							PlayerInfo[playerid][pZakonp] += 10;
							GameTextForPlayer(playerid, "~r~-100 Donate ~g~Thanks!", 5000, 1);
						}
/*					case 3:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							if(PlayerInfo[playerid][pOffBH] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You have successfully purchased this feature!");
							PlayerInfo[playerid][pDonatemoney2] -= 0;
							PlayerInfo[playerid][pOffBH] = 1;
							GameTextForPlayer(playerid, "~r~-Free Donate ~g~Thanks!", 5000, 1);
							format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `pOffBH` = '1' WHERE `pID` = '%d'", PlayerInfo[playerid][pID]);
							mysql_function_query(connects, stringer1, false, "", "");
						}*/
					}
				}
				else return callcmd::donate(playerid);
			}
		case 10059:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pCash] < 2000000) return SendClientMessage(playerid, COLOR_GREY, "At least 2M Cash To Exchange");
							PlayerInfo[playerid][pGold] += 1;
							GameTextForPlayer(playerid, "~g~+1 Gold Bar~n~~r~-2.000.000 Cash", 5000, 1);
							PlayerInfo[playerid][pCash] -= 2000000;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pCash] < 20000000) return SendClientMessage(playerid, COLOR_GREY, "At least 20M Cash To Exchange.");
							PlayerInfo[playerid][pGold] += 10;
							GameTextForPlayer(playerid, "~g~+4 Gold Bar~n~~r~-20.000.000 Cash", 5000, 1);
							PlayerInfo[playerid][pCash] -= 20000000;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pCash] < 40000000) return SendClientMessage(playerid, COLOR_GREY, "At least 40M Cash To Exchange.");
							PlayerInfo[playerid][pGold] += 20;
							GameTextForPlayer(playerid, "~g~+13 Gold Bar~n~~r~-40.000.000 Cash", 5000, 1);
							PlayerInfo[playerid][pCash] -= 40000000;
						}
					case 3:
						{
							if(PlayerInfo[playerid][pCash] < 60000000) return SendClientMessage(playerid, COLOR_GREY, "At least 60M Cash To Exchange.");
							PlayerInfo[playerid][pGold] += 30;
							GameTextForPlayer(playerid, "~g~+40 Gold Bar~n~~r~-60.000.000 Cash", 5000, 1);
							PlayerInfo[playerid][pCash] -= 60000000;
						}
					case 4:
						{
							if(PlayerInfo[playerid][pCash] < 100000000) return SendClientMessage(playerid, COLOR_GREY, "At least 100M Cash To Exchange.");
							PlayerInfo[playerid][pGold] += 50;
							GameTextForPlayer(playerid, "~g~+121 Gold Bar~n~~r~-100.000.000 Cash", 5000, 1);
							PlayerInfo[playerid][pCash] -= 100000000;
						}
					}
				}
			}
		case 10060:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
							PlayerInfo[playerid][pCash] += 1500000;
							GameTextForPlayer(playerid, "~g~1.500.000 Cash~n~~r~-1 Gold Bar", 5000, 1);
							PlayerInfo[playerid][pGold] -= 1;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pGold] < 10) return SendClientMessage(playerid, COLOR_GREY, "At least 10GB Cash To Exchange.");
							PlayerInfo[playerid][pCash] += 15000000;
							GameTextForPlayer(playerid, "~g~15.000.000 Cash~n~~r~-10 Gold Bar", 5000, 1);
							PlayerInfo[playerid][pGold] -= 10;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pGold] < 20) return SendClientMessage(playerid, COLOR_GREY, "At least 20GB Cash To Exchange.");
							PlayerInfo[playerid][pCash] += 30000000;
							GameTextForPlayer(playerid, "~g~30.000.000 Cash~n~~r~-20 Gold Bar", 5000, 1);
							PlayerInfo[playerid][pGold] -= 20;
						}
					case 3:
						{
							if(PlayerInfo[playerid][pGold] < 30) return SendClientMessage(playerid, COLOR_GREY, "At least 30GB Cash To Exchange.");
							PlayerInfo[playerid][pCash] += 45000000;
							GameTextForPlayer(playerid, "~g~45.000.000 Cash~n~~r~-30 Gold Bar", 5000, 1);
							PlayerInfo[playerid][pGold] -= 30;
						}
					case 4:
						{
							if(PlayerInfo[playerid][pGold] < 50) return SendClientMessage(playerid, COLOR_GREY, "At least 50GB Cash To Exchange.");
							PlayerInfo[playerid][pCash] += 75000000;
							GameTextForPlayer(playerid, "~g~75.000.000 Cash~n~~r~-50 Gold Bar", 5000, 1);
							PlayerInfo[playerid][pGold] -= 50;
						}
					}
				}
			}
		case 10061:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							if(PlayerInfo[playerid][pOffBH] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB} You have successfully Claimed this feature!");
							PlayerInfo[playerid][pDonatemoney2] -= 0;
							PlayerInfo[playerid][pOffBH] = 1;
							format(stringer, sizeof(stringer), "~r~Claimed Anti Bunny Hop Free ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
							format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `pOffBH` = '1' WHERE `pID` = '%d'", PlayerInfo[playerid][pID]);
							mysql_function_query(connects, stringer1, false, "", "");
						}
						case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough donate money!");
							PlayerInfo[playerid][pDonatemoney2] -= 0;
							PlayerInfo[playerid][pVodPrava] = 1;
							format(stringer, sizeof(stringer), "~r~Claimed Car Licenses Free ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					}
				}
				else return callcmd::menu(playerid);
			}
		case 10062:
		    {
		        // Check if the player is a member of a faction
		        if(!PlayerInfo[playerid][pMember])
		        {
		            SendClientMessage(playerid, COLOR_RED, "You are not a member of any faction.");
		            return true;
		        }

		        // Check if the player has enough faction points to rank up
		        if(PlayerInfo[playerid][pFacPoint] < 650)
		        {
		            SendClientMessage(playerid, COLOR_RED, "You don't have enough Faction Points to rank up.");
		            return true;
		        }

		        // Increment the player's rank by 1
		        PlayerInfo[playerid][pRank]++;

		        // Check if rank exceeds the maximum allowed rank for the player's organization
		        switch(PlayerInfo[playerid][pMember])
		        {
		            case 1:
		                if(PlayerInfo[playerid][pRank] > 13)
		                {
		                    PlayerInfo[playerid][pRank] = 13; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 10:
		                if(PlayerInfo[playerid][pRank] > 13)
		                {
		                    PlayerInfo[playerid][pRank] = 13; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 3:
		                if(PlayerInfo[playerid][pRank] > 13)
		                {
		                    PlayerInfo[playerid][pRank] = 13; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 19:
		                if(PlayerInfo[playerid][pRank] > 13)
		                {
		                    PlayerInfo[playerid][pRank] = 13; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 21:
		                if(PlayerInfo[playerid][pRank] > 13)
		                {
		                    PlayerInfo[playerid][pRank] = 13; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 2:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 26:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 4:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 5:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 6:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 11:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 12:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 13:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 14:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 15:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 17:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 18:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 22:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 24:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 25:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 7:
		                if(PlayerInfo[playerid][pRank] > 8)
		                {
		                    PlayerInfo[playerid][pRank] = 8; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 27:
		                if(PlayerInfo[playerid][pRank] > 3)
		                {
		                    PlayerInfo[playerid][pRank] = 3; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            case 28:
		                if(PlayerInfo[playerid][pRank] > 3)
		                {
		                    PlayerInfo[playerid][pRank] = 3; // Set to maximum rank
		                    SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
		                    return true;
		                }
		            // other cases...
		        }

		        // Deduct 650 faction points
		        PlayerInfo[playerid][pFacPoint] -= 650;

		        // Update rank in the SQL database
			    format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pRank` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pRank], PlayerInfo[playerid][pID]);
			    mysql_function_query(connects, mysql_query_, false, "", "");

		        // Inform the player about the rank change
		        format(stringer, sizeof(stringer), "You have been promoted to rank %d with 650 Faction Points!", PlayerInfo[playerid][pRank]);
		        SendClientMessage(playerid, COLOR_ORANGE, stringer);

		        return true;
		    }
/*		case 10061:
			{
				if(response)
				{
	            	switch(listitem)
				 	{
				    case 0:
	       				{
                			if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 1500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 1:
	       				{
                			if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 2500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 2:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 3500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 3:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 4500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 4:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 5500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 5:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 6500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 6:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 7500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 7:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 8500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 8:
	       				{
	       				    if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 9500000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }
				    case 9:
				        {
				            if(PlayerInfo[playerid][pGold] < 1) return SendClientMessage(playerid, COLOR_GREY, "At least 1GB To Exchange");
				            PlayerInfo[playerid][pCash] += 15000000;
				            SendClientMessage(playerid, COLOR_GREY, "Congratulations! You've reached level ");
				            SendClientMessage(playerid, COLOR_GREY, plevel);
				            SendClientMessage(playerid, COLOR_GREY, " and received 50000 pcash as a reward.");
				        }

			}*/
		case 26366:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 4000) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							if(PlayerInfo[playerid][pPayDayHad] < 1) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] To get vip lvl 1, you need to play 1 hour in the server (/mm - Statistics)!");
							PlayerInfo[playerid][pDonateRank] = 1;
							PlayerInfo[playerid][pDonatemoney2] -= 4000;
							GameTextForPlayer(playerid, "~r~-4000 Donate ~g~Thanks!", 5000, 1);
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 9000) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] To get vip lvl 2, you need to play 2 hours in the server (/mm - Statistics)!");
							PlayerInfo[playerid][pDonateRank] = 2;
							PlayerInfo[playerid][pDonatemoney2] -= 9000;
							format(stringer, sizeof(stringer), "~r~-9000 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 14000) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You don't have enough DonateMoney!");
							if(PlayerInfo[playerid][pPayDayHad] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] To get vip lvl 3, you need to play 3 hours in the server (/mm - Statistics)!");
							PlayerInfo[playerid][pDonateRank] = 3;
							PlayerInfo[playerid][pDonatemoney2] -= 14000;
							format(stringer, sizeof(stringer), "~r~-14000 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);

						}
					}
				}
				else callcmd::donate(playerid);
			}
		case 26367:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pWarns] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] You have no warnings!");
							if(PlayerInfo[playerid][pDonatemoney2] < 200) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							if(PlayerInfo[playerid][pWarns] == 1) PlayerInfo[playerid][punWarnstime] = 0, PlayerInfo[playerid][punWarns] = 0, PlayerInfo[playerid][pWarns] -= 1;
			                else if(PlayerInfo[playerid][pWarns] > 1) PlayerInfo[playerid][punWarnstime] = 0, PlayerInfo[playerid][punWarns] = 1, PlayerInfo[playerid][pWarns] -= 1;
							PlayerInfo[playerid][pDonatemoney2] -= 200;
							GameTextForPlayer(playerid, "~r~-200 Donate ~g~Thanks!", 5000, 1);
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							Fuell[GetPlayerVehicleID(playerid)] = 100;
							PlayerInfo[playerid][pFuelcar] = 100;
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 100) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pBoxSkill] = 999999;
							PlayerInfo[playerid][pKongfuSkill] = 999999;
							PlayerInfo[playerid][pKickboxSkill] = 9999999;
							PlayerInfo[playerid][pDonatemoney2] -= 100;
							GameTextForPlayer(playerid, "~r~-100 Donate ~g~Thanks!", 5000, 1);
						}
					case 3:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 50) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 50;
							PlayerInfo[playerid][pZakonp] = 100;
							GameTextForPlayer(playerid, "~r~-50 Donate ~g~Thanks!", 5000, 1);
						}
					case 4:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 70) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							ShowPlayerDialog(playerid,3421,1,"change SIM card number","{ffffff}enter a new six-digit phone number","drink","Cancle");
						}
					case 5:
						{
							format(stringer, 256, "{ffffff}[1] %s\n[2] %s",VehicleNameS[PlayerInfo[playerid][pCar]-400],VehicleNameS[PlayerInfo[playerid][pCar2]-400]);
							ShowPlayerDialog(playerid, 354, DIALOG_STYLE_LIST,"{FFD300}Which car should I remove tuning from?",stringer,"Next","Exit");
						}
					case 6:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 100) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pHeal] +=50;
							PlayerInfo[playerid][pDonatemoney2] -= 100;
							GameTextForPlayer(playerid, "~r~-100 Donate ~g~Thanks!", 5000, 1);
						}
					case 7:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 500) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 500;
							GameTextForPlayer(playerid, "~r~-500 Donate ~g~Thanks!", 5000, 1);
							switch(random(4))
  		        			{
  		            			case 0:
  		            			{
  		                			switch(random(2))
									{
						    			case 0:
										{
                                			GiveItem(playerid,19487);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][0]=19487;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique cap. (If you want to get the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19352);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][0]=19352;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique cap. (If you want to get the whole assembly, try again!)");
										}
									}
  		            			}
  		            			case 1:
  		            			{
  		                			switch(random(2))
									{
						    			case 0:
										{
                                			GiveItem(playerid,19351);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][3]=19351;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique mustache. (If you want to get the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19350);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][3]=19350;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique mustache. (If you want to get the whole assembly, try again!)");
										}
									}
  		            			}
  		            			case 2:
  		            			{
									switch(random(3))
									{
						   			 case 0:
										{
                                			GiveItem(playerid,19319);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19319;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19318);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19318;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want to get the whole assembly, try again!)");
										}
										case 2:
										{
                                			GiveItem(playerid,19317);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19317;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want to get the whole assembly, try again!)");
										}
									}
  		            			}
  		            			case 3:
  		            			{
  		                			switch(random(2))
									{
						    			case 0:
										{
                                			GiveItem(playerid,19487);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][0]=19487;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique cap. (If you want to get the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19352);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][0]=19352;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique cap. (If you want to get the whole assembly, try again!)");
										}
									}
									switch(random(2))
									{
						   			 case 0:
										{
                                			GiveItem(playerid,19351);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][3]=19351;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique mustache. (If you want to get the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19350);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][3]=19350;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique mustache. (If you want to get the whole assembly, try again!)");
										}
									}
									switch(random(3))
									{
						    			case 0:
										{
                                			GiveItem(playerid,19319);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19319;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want to get the whole assembly, try again!)");
										}
										case 1:
										{
                                			GiveItem(playerid,19318);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19318;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want to get the whole assembly, try again!)");
										}
										case 2:
										{
                                			GiveItem(playerid,19317);
						        			FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
											PlayerInfo[playerid][pSlotItem][5]=19317;
											SendClientMessage(playerid,COLOR_YELLOW,"Congratulations! This time you managed to buy a unique guitar. (If you want to get the whole assembly, try again!)");
										}
									}
									SendClientMessage(playerid,COLOR_BLUE,"Luck! Purchased all unique style items!");
  		            			}
							}
							format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
							format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
                            mysql_tquery(connects, mysql_query_, "", "");
		        			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
							Buyitem[playerid] = -1;
							PlayerInfo[playerid][pType]=-1;
							SetPVarInt(playerid,"timetobuy2",0);
						}
					}
				}
				else callcmd::donate(playerid);
			}
		case 26368:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid,COLOR_GREY,"You don't own a business.");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bLic] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							PlayerInfo[playerid][pGunLic] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							PlayerInfo[playerid][pBoatLic] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 3:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							PlayerInfo[playerid][pFishLic] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 4:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							PlayerInfo[playerid][pFlyLic] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 5:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							PlayerInfo[playerid][pVodPrava] = 1;
							format(stringer, sizeof(stringer), "~r~-30 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					case 6:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 100) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] DonateMoney is not enough!");
							PlayerInfo[playerid][pDonatemoney2] -= 100;
							if(GetPlayerBizz(playerid) > 0) BizzInfo[GetPVarInt(playerid,"PlayerBizz")][bLic] = 1;
							PlayerInfo[playerid][pGunLic] = 1;
							PlayerInfo[playerid][pBoatLic] = 1;
							PlayerInfo[playerid][pFishLic] = 1;
							PlayerInfo[playerid][pFlyLic] = 1;
							PlayerInfo[playerid][pVodPrava] = 1;
							format(stringer, sizeof(stringer), "~r~-100 Donate ~g~Thanks!"); GameTextForPlayer(playerid, stringer, 5000, 1);
						}
					}
				}
				else callcmd::donate(playerid);
			}
		case 26370:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 50) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 50;
							GameTextForPlayer(playerid, "~r~-50 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][p_drugs][random(7)] += 500;
						}
					case 1:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 50) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 50;
							GameTextForPlayer(playerid, "~r~-50 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][pNarcoLomka] = 0;
						}
					case 2:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 30;
							GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][pNarcoLomka] = 3000;
						}
					case 3:
						{
							if(PlayerInfo[playerid][pDonatemoney2] < 50) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
							PlayerInfo[playerid][pDonatemoney2] -= 50;
							GameTextForPlayer(playerid, "~r~-50 Donate ~g~Thanks!", 5000, 1);
							PlayerInfo[playerid][pNarcoLomka] = 5000;
						}
					}
				}
				else callcmd::donate(playerid);
			}
		case 3421:
			{
				if(!response) return 1;
				if(!IsNumericc(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0')
				{
					SendClientMessage(playerid,COLOR_GREY,"The number must consist of {FFFFFF}6 {BBBBBB}numbers The first digit should not be {FFFFFF}\"zero\"");
					ShowPlayerDialog(playerid,3421,1,"change SIM card number","{ffffff}�enter a new six-digit phone number","drink","Cancle");
					return 1;
				}
				format(mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_ACCOUNT"` WHERE `pPnumber` = '%d'", strval(inputtext)), mysql_function_query(connects, mysql_query_, true, "OnPlayerCheckPhone", "id", playerid, strval(inputtext));
			}
		case 2526:
			{
				if(response)
				{
					if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return ShowPlayerDialog(playerid,2526,DIALOG_STYLE_INPUT,"Car number","  Enter car numbers ","Ok","Cancle");
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2526,DIALOG_STYLE_INPUT,"Car number","  Enter car numbers  ","Ok","Cancle");
					if (ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])){} else { SendClientMessage(playerid, COLOR_GREY, "The person is far from you!"); return true; }
					if(PlayerInfo[ChosenPlayer[playerid]][pCash] < 16765) return SendClientMessage(playerid, COLOR_GREY, "The person doesn't have 16765 Money");
					if(caridhouse[ChosenPlayer[playerid]] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GRAD1, "The man doesn't have a car!");
					if(PlayerInfo[ChosenPlayer[playerid]][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_GRAD1, "A man has no home!");
					strmid(PlayerInfo[ChosenPlayer[playerid]][pNumbercar], inputtext, 0, strlen(inputtext), 255);
					SetVehicleNumberPlate(caridhouse[ChosenPlayer[playerid]], inputtext);
					SendMes(ChosenPlayer[playerid],0x6ab1ffaa,"Instructor %s assigned you a new license plate: %s", PlayerInfo[playerid][pNames],(inputtext));
					SendMes(playerid,0x6ab1ffaa,"You have set %s new license plate number: %s", PlayerInfo[ChosenPlayer[playerid]][pNames],(inputtext));
 					if(PlayerInfo[playerid][pQuest4] == 0)
             		{
             			PlayerInfo[playerid][pQuest4] = 1;
	             		UpdatePlayerData(playerid, "pQuest4", PlayerInfo[playerid][pQuest4]);
             		}
					soglasen[ChosenPlayer[playerid]] = 0;
					PlayerInfo[ChosenPlayer[playerid]][pCash] -= 16765;
					GiveMoney(playerid, 1000);
					mysql_format(connects,mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pNumbercar` = '%e' WHERE `pID` = '%d'",PlayerInfo[ChosenPlayer[playerid]][pNumbercar],PlayerInfo[ChosenPlayer[playerid]][pID]);
					mysql_function_query(connects, mysql_query_, false, "", "");
				}
				else return soglasen[ChosenPlayer[playerid]] = 0;
			}
		case 2527:
			{
				if(response)
				{
					soglasen[playerid] = 1;
					SendClientMessage(playerid, 0x6ab1ffaa, "You agreed to install a new number");
					if(PlayerInfo[playerid][pSex] == 1) SetPlayerChatBubble(playerid,"Agree",COLOR_PURPLE,30.0,10000);
					if(PlayerInfo[playerid][pSex] == 2) SetPlayerChatBubble(playerid,"Agree",COLOR_PURPLE,30.0,10000);
				}
				else
				{
					soglasen[playerid] = 0;
					return true;
				}
			}
		case 26471:
			{
				if(!response) return 1;
				if(PlayerInfo[playerid][pRub] < 400) return SendClientMessage(playerid, -1, "To create your own family, you need at least 400 rubles.");
				if(PlayerInfo[playerid][pFamily]) return SendClientMessage(playerid, -1,"You are already in one of the families. Please leave it before creating a new one.");
				//if(PlayerInfo[playerid][pAlcoInvenxua]) return true;
				return ShowPlayerDialog(playerid,26371,DIALOG_STYLE_INPUT,"{FFD700}Starting a family","{FFFFFF}Enter your family name!","Create","Cancle");
			}
        case 26371:
        	{
        	    if(!response) return 1;
        	    if ( strlen ( inputtext ) < 2 || strlen ( inputtext ) > 28 )
            	{
                	SendClientMessage(playerid,-1,"The family name cannot be more than 28 or less than 2 characters!");
                	return ShowPlayerDialog(playerid,26371,DIALOG_STYLE_INPUT,"{FFD700}Starting a family","{FFFFFF}}Enter the name of your family!","Create","Cancle");
            	}
				new familyname[64];
        	    if(sscanf(inputtext, "s[32]", familyname)) return ShowPlayerDialog(playerid,26371,DIALOG_STYLE_INPUT,"{FFD700}Starting a family","{FFFFFF}Enter the name of your family!","Create","Cancle");
            	else
            	{
            	    family_count ++;
                	new temp [ 32 ];
                	mysql_real_escape_string ( familyname, temp ) ;
                	format ( mysql_query_, sizeof mysql_query_, "INSERT INTO `family_system` ( `fam_name`, `fam_creator`, `fam_members_amount`, `fam_data` ) VALUES ( '%s', '%s', '1', NOW( ))", temp, PlayerInfo[playerid][pNames] ) ;
                	mysql_function_query ( connects, mysql_query_, false, "", "" ) ;

                	PlayerInfo[playerid][pFamily] = family_count;

                	format(family_info [ family_count ] [ f_name ], 32 , temp);
                	format(family_info [ family_count ] [ f_creator ], MAX_PLAYER_NAME, PlayerInfo[playerid][pNames]);
                	family_info [ family_count ] [ f_chat_color ] = 0;
                	family_info [ family_count ] [ f_members_amount ] = 1;
                	family_info [ family_count ] [ f_online ] = 1;
                	new year, month,day;
                	getdate(year, month, day);
                	format(family_info [ family_count ] [ f_creating_data ], 32,"%02d/%02d/%d",year, month, day);

                	format ( stringer1, 92 + 32, "Congratulations! You started a family {0f0f0f}%s{FFFFFF}. To open the family menu, enter /fmenu.", family_info [ family_count ] [ f_name ] ) ;
                	SendClientMessage(playerid, -1,stringer1);
                    PlayerInfo[playerid][pRub] -= 400;
                    OnPlayerUpdateRL(playerid);
            	}
				return true;
        	}
        case 26372:
        	{
            	if( !response ) return 1;
            	switch(listitem)
            	{
                	case 0:
                	{
                    	new dialog_string [ 302 ], nationality_string [ 28 ];
                    	new fam_id = PlayerInfo[playerid][pFamily];
                    	switch( family_info [ fam_id ] [ f_nationality ])
                    	{
                        	case 1:nationality_string = "the americans";
                        	case 2:nationality_string = "Japanese";
                        	case 3:nationality_string = "Italians";
                        	case 4:nationality_string = "Mexicans";
                        	case 5:nationality_string = "Americans";
                        	case 6:nationality_string = "Spaniards";
                        	case 7:nationality_string = "Russians";
                        	case 8:nationality_string = "Portuguese";
                        	case 9:nationality_string = "French people";
                       	 	default:nationality_string = "unknown";
                    	}
                    	format(dialog_string,sizeof(dialog_string),"Family: %s\nNationality: %s\nOnline: %d\nFamily composition: %d\ndate of creation: %s\n\nFamily creator: %s",
                    	family_info [ fam_id ] [ f_name ],nationality_string,family_info [ fam_id ] [ f_online ],family_info [ fam_id ] [ f_members_amount ],family_info [ fam_id ] [ f_creating_data ],family_info [ fam_id ] [ f_creator ]);
                    	ShowPlayerDialog(playerid,26375,DIALOG_STYLE_MSGBOX,"Information about family",dialog_string,"Back","");
                	}
                	case 1:
                	{
                    	format ( mysql_query_, sizeof mysql_query_, "SELECT * FROM `"TABLE_ACCOUNT"` WHERE `family` = '%d'", PlayerInfo[playerid][pFamily]);
                    	mysql_function_query ( connects, mysql_query_, true, "off_family_members_callback", "i", playerid ) ;
                	}
                	case 2:
                	{
                    	new ofm_string[ 256 ];
                    	foreach(Player,i)
                    	{
                    	    if(!PlayerInfo[i][pFamily]) continue;
                        	if(PlayerInfo[i][pFamily] == PlayerInfo[playerid][pFamily])
                        	{
                            	strcat(ofm_string,PlayerInfo[i][pNames]);
                            	strcat(ofm_string,"\n");
                        	}
                        	ShowPlayerDialog(playerid, 26375 , DIALOG_STYLE_LIST, "{FFEFD5}Family members online", ofm_string, "Back","" ) ;
                    	}
                	}
                	case 3:
                	{
                    	new fm_string [ 128 ];
                    	format(fm_string,sizeof(fm_string),"{%s}[F] [%s] %s[%i] left the family!",family_chat_color [ family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ] ],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ], PlayerInfo[playerid][pNames], playerid);
                    	family_message (PlayerInfo[playerid][pFamily], -1, fm_string);
                    	family_info [ PlayerInfo[playerid][pFamily] ] [ f_online ] -= 1;
                    	family_info [ PlayerInfo[playerid][pFamily] ] [ f_members_amount ] -= 1;
                    	PlayerInfo[playerid][pFamily] = 0;
                	}
                	case 4:
                	{
                    	format(stringer1,sizeof(stringer1),"{%s}Colour 1\n{%s}Colour 2\n{%s}Colour 3\n{%s}Colour 4\n{%s}Colour 5",family_chat_color [ 0 ],family_chat_color [ 1 ],family_chat_color [ 2 ],family_chat_color [ 3 ],family_chat_color [ 4 ]);
                    	ShowPlayerDialog(playerid,26373,DIALOG_STYLE_LIST,"{FFEFD5}Chat color",stringer1,"Select","Cancle");
                	}
                	case 5:
                	{
                    	ShowPlayerDialog(playerid,26376,DIALOG_STYLE_LIST,"{FFEFD5}Family nationality","{FFFFFF}Americans\nJapanese\nItalians\nMexicans\nLatin Americans\nSpaniards\nRussians\nPortuguese\nFrench","Select","Cancle");
                	}
            	}
            	return true;
         	}
        case 26375:
        	{
            	return ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family menu","{FFFFFF}Family information\nFamily members\nFamily members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave the family{FFFFFF}\nChange the color of the family's walkie-talkie\nChange the nationality of the family","Select","Cancle");
        	}
        case 26373:
        	{
            	if( !response )return ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family Menu","{FFFFFF}Family Information\nFamily Members\nFamily Members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave Family{FFFFFF}\nChange family radio color\nChange family nationality","Select","Cancle");
            	family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ] = listitem;
            	ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family Menu","{FFFFFF}Family Information\nFamily Members\nFamily Members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave Family{FFFFFF}\nChange family radio color\nChange family nationality","Select","Cancle");
            	SendClientMessage(playerid, -1,"Family chat color changed!");
            	new query_string [ 128 ];
            	format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_chat_color` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ], PlayerInfo[playerid][pFamily]);
            	mysql_function_query ( connects, query_string, false, "", "" ) ;
        	}
        case 26376:
        	{
            	if( !response )return ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family Menu","{FFFFFF}Family Information\nFamily Members\nFamily Members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave Family{FFFFFF}\nChange family radio color\nChange family nationality","Select","Cancle");
            	family_info [ PlayerInfo[playerid][pFamily] ] [ f_nationality ] = listitem + 1;
            	ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family Menu","{FFFFFF}Family Information\nFamily Members\nFamily Members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave Family{FFFFFF}\nChange family radio color\nChange family nationality","Select","Cancle");
            	SendClientMessage(playerid, -1,"Family nationality changed!");
            	new query_string [ 128 ];
            	format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_nationality` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ PlayerInfo[playerid][pFamily] ] [ f_nationality ], PlayerInfo[playerid][pFamily]);
            	mysql_function_query ( connects, query_string, false, "", "" ) ;
        	}
        case 26377:
        	{
            	if( !response )return 1;
            	PlayerInfo[playerid][pFamily] = GetPVarInt(playerid,"family_id");
            	DeletePVar(playerid,"family_id");
            	format(stringer1,sizeof(stringer1),"{%s}[F] [%s] %s[%d] joined the family!",family_chat_color [ family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ] ],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ],PlayerInfo[playerid][pNames],playerid);
            	family_message(PlayerInfo[playerid][pFamily],-1, stringer1);
            	family_info [ PlayerInfo[playerid][pFamily] ] [ f_online ] += 1;
            	family_info [ PlayerInfo[playerid][pFamily] ] [ f_members_amount ] += 1;
            	format ( mysql_query_, sizeof mysql_query_, "UPDATE `family_system` SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ PlayerInfo[playerid][pFamily] ] [ f_members_amount ], PlayerInfo[playerid][pFamily]);
            	mysql_function_query ( connects, mysql_query_, false, "", "" ) ;
        	}
		case 8291: {
			if(!response) return true;
			switch(listitem) {
				case 0: sscanf("American accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 1: sscanf("Russian accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 2: sscanf("Malaysian accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 3: sscanf("Indonesian accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 4: sscanf("Bangladesh accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 5: sscanf("Europian accent", "s[32]", PlayerInfo[playerid][pAccent]);
				case 6: sscanf("-", "s[32]", PlayerInfo[playerid][pAccent]);
			}
			new string[144];
			format(string, sizeof(string), "UPDATE `accounts` SET `pAccent` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pAccent], PlayerInfo[playerid][pID]);
			mysql_function_query(connects, string, false, "", "");
			if(listitem != 6) format(string, sizeof(string), "You have successfully chosen %s", PlayerInfo[playerid][pAccent]), SendClientMessage(playerid, -1, string);
			else SendClientMessage(playerid, -1, "You have successfully lost your accent!");
			return true;
		}
        case 8237:
	    	{
				if(!response) return true;
				new house = PlayerInfo[playerid][pPhousekey];
				if(caridhouse[playerid] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerid]);
				switch(listitem)
				{
			    	case 0: caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][1], 7200, 0), SetPVarInt(playerid, "CarNomer", 0), AddTune(playerid, 0);
			    	case 1: caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar2], 2531.6418,-1546.1769,2023.1758,90.0000, cColor[playerid][1][0], cColor[playerid][1][1], 7200, 0), SetPVarInt(playerid, "CarNomer", 1), AddTune(playerid, 1);
		        }
		        VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
				VEHICLE[caridhouse[playerid]][vLock] = 1;
				LinkVehicleToInterior(caridhouse[playerid], 1);
				SetVehicleVirtualWorld(caridhouse[playerid], house + 50);
				Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
				GameTextForPlayer(playerid, "~r~$-10000", 5000, 1);
				PlayerInfo[playerid][pCash] -= 10000;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				return true;
			}
        case 354:
	    	{
				if(!response) return true;
				if(PlayerInfo[playerid][pDonatemoney2] < 30) return SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}[ERROR] Not enough DonateMoney!");
				PlayerInfo[playerid][pDonatemoney2] -= 30;
				GameTextForPlayer(playerid, "~r~-30 Donate ~g~Thanks!", 5000, 1);
				if(GetPVarInt(playerid, "CarNomer") == listitem)
				{
		        	if(cTune[playerid][listitem][0] != -1) ChangeVehiclePaintjob(caridhouse[playerid], 3);
                	for(new i = 1; i <= 14; i++) if(cTune[playerid][listitem][i] != 0) RemoveVehicleComponent(caridhouse[playerid], cTune[playerid][listitem][i]);
                }
				return DeleteVehicleTune(playerid, listitem);
			}
	   	case 89:
     		{
                if(response)
                {
                    if(listitem == 0) return ShowPlayerDialog(playerid, 90, DIALOG_STYLE_INPUT,"creating an object","�enter the object ID","Create","Cancle");
                    if(listitem == 1) return SelectObject(playerid);
                }
            }
        case 90:
	        {
	            if(response)
	            {
	                if(!response) return true;
	                if(!strval(inputtext)) return ShowPlayerDialog(playerid, 90, DIALOG_STYLE_INPUT,"�creating an object","�enter the object ID","Create","Cancle");
	                new Float:X, Float:Y, Float:Z;
	                GetPlayerPos(playerid, X, Y, Z);
	                new object = CreateObject(strval(inputtext), X+1, Y+1, Z+2, 0.0,0.0,0.0);
	                SetPVarInt(playerid, "SelectedObject", object);
	                EditObject(playerid, object);
	                return true;
	            }
	        }
        case 91:
	        {
	            if(response) return EditObject(playerid, GetPVarInt(playerid, "SelectedObject"));
	            else
	            {
	           		DestroyObject(GetPVarInt(playerid, "SelectedObject"));
	           		CancelEdit(playerid);
	            }
	            DeletePVar(playerid, "SelectedObject");
	        }
		case 385:
			{
				if(!response) return true;
				if(BaseStarting[1] != 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}Registration for BASE jumping is closed.");
	            if(PlayersInBase{0} >= 30) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}Unfortunately all places are taken.");
				if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, -1, "You don't have enough money ;(");
				SetPVarInt(playerid, "PlayerInBase", 1);
				PlayersInBase{0}++;
				Iter_Add(BaseList, playerid);
				SendClientMessage(playerid, -1, "You have successfully signed up for BASE jumping.");
				PlayerInfo[playerid][pCash] -= 15000;
    			if(PlayerInfo[playerid][pQuest8] == 0)
		       	{
       				PlayerInfo[playerid][pQuest8] = 1;
		       		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
		       	}
				return 1;
			}
		case 4312:
			{
		    	if(!response) return DeletePVar(playerid,#DialogShow);
		    	if(RaceStarting[2] != 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}You have successfully signed up for BASE jumping."), DeletePVar(playerid,#DialogShow);
    			if (PlayersInRace{0} >= 40) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}No places."), DeletePVar(playerid,#DialogShow);
				if (GetPVarInt(playerid, #PlayerInRace)) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}You are already registered for the race."), DeletePVar(playerid,#DialogShow);
		    	switch(listitem)
		    	{
		        	case 0:SetPVarInt(playerid,"rVehicle",503);
		        	case 1:SetPVarInt(playerid,"rVehicle",506);
		        	case 2:SetPVarInt(playerid,"rVehicle",541);
		        	case 3:SetPVarInt(playerid,"rVehicle",603);
		        	case 4:SetPVarInt(playerid,"rVehicle",411);
		        	case 5:SetPVarInt(playerid,"rVehicle",451);
		    	}
				ShowPlayerDialog(playerid,4313,DIALOG_STYLE_LIST,"{FF6F00}Registration for Race #2 {FFFFFF}(Select Color)","{2D26FF}Blue\n{FF0000}Red\n{F7FF03}Yellow\n{26FF05}Green\n{FFBA19}Orange\n{FFFFFF}White\n{CF29BE}Purple","Select","Cancle");
				return 1;
			}
		case 4313:
			{
		    	if(!response) return ShowPlayerDialog(playerid,4313,DIALOG_STYLE_LIST,"{FF6F00}Registration for Race #2{FFFFFF}(Select Color)","{2D26FF}Blue\n{FF0000}Red\n{F7FF03}Yellow\n{26FF05}Green\n{FFBA19}Orange\n{FFFFFF}White\n{CF29BE}Purple","Select","Cancle");
		    	if(RaceStarting[2] != 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}Registration for racing events is closed."), DeletePVar(playerid,#DialogShow);
		    	if (PlayersInRace{0} >= 40) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}No places."), DeletePVar(playerid,#DialogShow);
		    	if (GetPVarInt(playerid, #PlayerInRace)) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}You are already registered for the race."), DeletePVar(playerid,#DialogShow);
				switch(listitem)
		    	{
		        	case 0:SetPVarInt(playerid,"rColor",198);
		        	case 1:SetPVarInt(playerid,"rColor",181);
		        	case 2:SetPVarInt(playerid,"rColor",194);
		        	case 3:SetPVarInt(playerid,"rColor",154);
		        	case 4:SetPVarInt(playerid,"rColor",183);
		        	case 5:SetPVarInt(playerid,"rColor",1);
		        	case 6:SetPVarInt(playerid,"rColor",171);
  	        	}
		    	SetPVarInt(playerid, #PlayerInRace, 1);
		    	PlayersInRace{0}++;
		    	Iter_Add(RacersList, playerid);
				PlayerPosition{playerid} = PlayersInRace{0} - 1;
				format(stringer1,sizeof(stringer1),"A new participant has been registered under number: %d | %s(%d)", PlayersInRace{0}, PlayerInfo[playerid][pNames], playerid);
				RaceChat(COLOR_LIGHTBLUE, stringer1);
   				SendClientMessage(playerid, COLOR_GREY, "You have registered for the race, wait for the race to start.");
            	SendClientMessage(playerid, COLOR_GREY, "Rules/Help:");
            	SendClientMessage(playerid, COLOR_GREY, "- It is prohibited to leave the vehicle during the race. (You will be ejected from racing events).");
            	SendClientMessage(playerid, COLOR_GREY, "- If you die, the race is instantly over for you.");
            	SendClientMessage(playerid, COLOR_GREY, "- It is forbidden to drive off the track, otherwise you will not receive points..");
				DeletePVar(playerid,"DialogShow");
		    	return 1;
			}

			//------------------------------------------ [ mainmenu ] ---------------------------------------------
        	case 9624:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: ShowPlayerDialog(playerid, 9625, DIALOG_STYLE_LIST, "{FFCC00}The main", "[1] {FFFFFF}City hall\n[2] {FFFFFF}Bus station\n[3] {FFFFFF}Church\n[4] {FFFFFF}Driving school\n[5] {FFFFFF}Loading alcoholic beverages\n[6] {FFFFFF}Military enlistment office\n[7] {FFFFFF}Bank\n[8] {FFFFFF}Real estate agency\n[9] {FFFFFF}Casino\n[10] {ffffff}RC toy rental", "Select", "Back");
					case 1: ShowPlayerDialog(playerid, 9626, DIALOG_STYLE_LIST, "{FFCC00}Car dealerships", "[1] {FFFFFF}Car dealership (Nope class)\n[2] {FFFFFF}car showroom (A&B class)\n[3] {FFFFFF}car showroom (C&D class)\n[4] {FFFFFF}car showroom (A&B class)", "Select", "Back");
					case 2: ShowPlayerDialog(playerid, 9636, DIALOG_STYLE_LIST, "{FFCC00}Entertainment", "[1] {FFFFFF}Paintball\n[2] {FFFFFF}Race\n[3] {FFFFFF}Base jumping", "Select", "Back");
					case 3: ShowPlayerDialog(playerid, 9627, DIALOG_STYLE_LIST, "{FFCC00}Businesses", "[1] {FFFFFF}The shops 24/7\n[2] {FFFFFF}Gas stations (ACN)\n[3] {FFFFFF}Eateries\n[4] {FFFFFF}Clubs\n[5] {FFFFFF}Bars\n[6] {FFFFFF}Clothing stores\n[7] {FFFFFF}Weapon shops\n[8] {FFFFFF}Auto repair shops\n[9] {FFFFFF}Accessories stores", "Select", "Back");
					case 4: ShowPlayerDialog(playerid, 9628, DIALOG_STYLE_LIST, "{FFCC00}Work", "[1] {FFFFFF}Car thief job\n[2] {FFFFFF}The work of a thief\n[3] {FFFFFF}Carrier of products\n[4] {FFFFFF}Fuel carrier\n[5] {FFFFFF}Other", "Select", "Back");
					case 5: ShowPlayerDialog(playerid, 9635, DIALOG_STYLE_LIST, "{FFCC00}Transport rental", "[1] {FFFFFF}Los Santos Aviation Park\n[2] {FFFFFF}Rent of boats and yachts\n[3] {FFFFFF}Los Santos Car Park\n[4] {FFFFFF}Bike Park San Fierro\n[5] {FFFFFF}Fleet Las Venturas", "Select", "Back");
					case 6: ShowPlayerDialog(playerid, 9629, DIALOG_STYLE_LIST, "{FFCC00}Bases of organizations", "[1] {FFFFFF}State organizations\n[2] {FFFFFF}Gangs - Mafias\n[3] {FFFFFF}Added organizations", "Select", "Back");
					case 7: {
						new Float:distance = 1000000.0, biz = -1, Float:pX, Float:pY, Float:pZ;
						GetPlayerPos(playerid, pX, pY, pZ);
						for(new i = 0; i < sizeof BizzInfo; i++)
						{
							if(strcmp(BizzInfo[i][bOwner],"None",true) && BizzInfo[i][bType] == 2 && !BizzInfo[i][bLock])
							{
								if(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) < distance)
								{
									distance = GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]);
									biz = i;
								}
							}
						}
						if(biz != -1) SetPlayerCheckpoint(playerid, BizzInfo[biz][bEntrx], BizzInfo[biz][bEntry], BizzInfo[biz][bEntrz], 4.0);
						else return SendClientMessage(playerid, -1, "ERROR when looking for a gas station");
						}
					case 8: {
						new Float:distance = 1000000.0, biz = -1, Float:pX, Float:pY, Float:pZ;
						GetPlayerPos(playerid, pX, pY, pZ);
						for(new i = 0; i < sizeof BizzInfo; i++)
						{
							if(strcmp(BizzInfo[i][bOwner],"None",true) && BizzInfo[i][bType] == 1 && !BizzInfo[i][bLock])
							{
								if(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) < distance)
								{
									distance = GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]);
									biz = i;
								}
							}
						}
						if(biz != -1)  SetPVarInt(playerid, "Gps24", biz), SetPlayerCheckpoint(playerid, BizzInfo[biz][bEntrx], BizzInfo[biz][bEntry], BizzInfo[biz][bEntrz], 4.0);
						else return SendClientMessage(playerid, -1, "ERROR when searching 24/7");
						SendClientMessage(playerid, -1, "Label set");
						}
					case 9: {
						new Float:distance = 1500.0, idtm = -1;
						for(new i = 0; i < sizeof Atms; i++)
						{
							if(GetPlayerDistanceFromPoint(playerid, Atms[i][0],  Atms[i][1],  Atms[i][2]) < distance)
							{
								distance = GetPlayerDistanceFromPoint(playerid,  Atms[i][0],  Atms[i][1],  Atms[i][2]);
								idtm = i;
							}
						}
						if(idtm == -1) return SendClientMessage(playerid, -1, "ERROR when looking for an ATM");
						SetPlayerCheckpoint(playerid,  Atms[idtm][0],  Atms[idtm][1],  Atms[idtm][2], 4.0);
						}
					case 10:
						{
							if(PlayerInfo[playerid][pPhousekey] == 255) return true;
							SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
							SendClientMessage(playerid, COLOR_WHITE, "Your house is marked on the map with a red mark");
							gPlayerCheckpointStatus[playerid] = 12;
							PicCP[playerid] = 0;
							return true;
						}
					}
				}
			}
		case 9636:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 1553.5955,-1790.3815,13.5469, 3.0);
					case 1: SetPlayerCheckpoint(playerid, 1762.1906,-1671.9886,13.5605, 3.0);
					case 2: SetPlayerCheckpoint(playerid, 2177.1746,1117.2573,12.6484, 3.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9644:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 1413.2463,-1700.8992,13.5395, 6.0);
					case 1: SetPlayerCheckpoint(playerid, -1411.0795,505.6333,11.1953, 6.0);
					case 2: SetPlayerCheckpoint(playerid, 187.5796,1931.5989,17.6974, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
			}
		case 2453:
			{
		    	if(!response) return true;
		    	if(PlayerInfo[playerid][pCash] < 1200) return SendClientMessage(playerid, COLOR_WHITE, "The cost of this service is 1.200 $.");
		    	PlayerInfo[playerid][pCash] -= 1200;
			    SendClientMessage(playerid,COLOR_GREEN,"All free vehicles have been delivered to the organization's base");
        		GameTextForPlayer(playerid, "~r~-1200$", 2000, 1);
			    switch(PlayerInfo[playerid][pLeader])
				{
				    case 5: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= lcncar[0] && x <= lcncar[1])) SetVehicleToRespawn(x);
					case 6: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= yakcar[0] && x <= yakcar[1])) SetVehicleToRespawn(x);
					case 12: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= ballascar[0] && x <= ballascar[1] || x == matsfuraballas)) SetVehicleToRespawn(x);
					case 13: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= vagoscar[0] && x <= vagoscar[1] || x == matsfuravagos)) SetVehicleToRespawn(x);
					case 14: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= ruscar[0] && x <= ruscar[1])) SetVehicleToRespawn(x);
					case 15: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= grovecar[0] && x <= grovecar[1] || x == matsfuragrove)) SetVehicleToRespawn(x);
					case 17: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= coronoscar[0] && x <= coronoscar[1] || x == matsfuraactek)) SetVehicleToRespawn(x);
					case 18: foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x) && (x >= rifacar[0] && x <= rifacar[1] || x == matsfurarifa)) SetVehicleToRespawn(x);
				}
				return true;
			}
		case 9625:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 1481.6715,-1743.1469,13.5469, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 1171.9008,-1741.6208,13.3984, 6.0);
					case 2: SetPlayerCheckpoint(playerid, -1981.0891,1118.3234,53.1266, 6.0);
					case 3: SetPlayerCheckpoint(playerid, -2046.6613,-83.4982,34.8436, 6.0);
					case 4: SetPlayerCheckpoint(playerid, 2845.4294,948.4973,10.7500, 6.0);
                    case 5: return ShowPlayerDialog(playerid, 603, DIALOG_STYLE_LIST, "{FFCC00}Military enlistment offices", "[1] {FFFFFF}Military enlistment office LS\n[2] {FFFFFF}Military enlistment office LV", "Select", "Back");
					case 6: SetPlayerCheckpoint(playerid, 1422.0873,-1700.6329,13.5469, 6.0);
					case 7: SetPlayerCheckpoint(playerid, 814.4180,-1058.2401,24.9898, 6.0);
					case 8: SetPlayerCheckpoint(playerid, 1022.3540,-1124.2939,23.8700, 6.0);
					case 9: SetPlayerCheckpoint(playerid, 1382.6715,-1753.0410,13.5469, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 603:
			{
				if(!response) return callcmd::gps(playerid);
				switch(listitem) {
					case 0: SetPlayerCheckpoint(playerid, 1219.0984,-1415.1229,13.3540, 3.0);
					case 1: SetPlayerCheckpoint(playerid, 1168.8788,1366.4899,10.8125, 3.0);
				}
				CP[playerid] = 0;
				PicCP[playerid] = 5;
				return SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
			}
		case 9626:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 562.3050,-1289.6100,17.2482, 6.0);
					case 1: SetPlayerCheckpoint(playerid, -1638.5052,1202.0320,7.2189, 6.0);
					case 2: SetPlayerCheckpoint(playerid, -1972.5674,293.5472,35.1719, 6.0);
					case 3: SetPlayerCheckpoint(playerid, 2200.1370,1391.9717,10.8203, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9627:
			{
				if(!response) return callcmd::gps(playerid);
				SetPVarInt(playerid, "GPSbizz", listitem+1);
				new Float:coords[3], check_cunt = 1;
				GetPlayerPos(playerid, coords[0], coords[1], coords[2]);
				stringer[0] = 0;
				format(stringer, sizeof(stringer),"{FFFFFF}#\t{FFFFFF}Name\t{FFFFFF}Status\t{FFFFFF}Distance\n");
				for(new idx = 1; idx <= TOTALBIZZ; idx++)
				{
					if(BizzInfo[idx][bType] != listitem+1) continue;
					format(stringer,sizeof(stringer), "%s%d.\t%s\t%s{FFFFFF}\t%.1f meters\n",stringer,check_cunt,BizzInfo[idx][bName], (!BizzInfo[idx][bLock]) ? ("{00CC00}Open") : ("{FF0000}Closed"), GetDistanceBetweenPoints(coords[0], coords[1], coords[2], BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]));
					check_cunt++;
				}
    	        return ShowPlayerDialog(playerid, 604, DIALOG_STYLE_TABLIST_HEADERS, "{FFCC00}Businesses", stringer, "Accept", "Back");
			}
		case 604:
			{
				if(!response)
				{
					DeletePVar(playerid,"GPSbizz");
			    	return callcmd::gps(playerid);
				}
				new bizz = GetPVarInt(playerid,"GPSbizz"), check_cunt;
				for(new idx = 1; idx <= TOTALBIZZ; idx++)
				{
					if(BizzInfo[idx][bType] != bizz) continue;
					if(check_cunt == listitem)
					{
						SendMes(playerid, COLOR_WHITE, "{FFCC00}[ GPS: Businesses ] {FFFFFF}%s marked on the map with a red mark", BizzInfo[idx][bName]);
						SetPlayerCheckpoint(playerid, BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz], 6.0);
						CP[playerid] = 0;
						PicCP[playerid] = 5;
						break;
					}
					check_cunt ++;
				}
				DeletePVar(playerid,"GPSbizz");
				return true;
			}
		case 9628:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 2439.8884,-1472.4984,24.0000, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 2448.0530,-1964.6006,13.5469, 6.0);
					case 2: SetPlayerCheckpoint(playerid, -15.1091,-372.3407,5.4297, 6.0);
					case 3: SetPlayerCheckpoint(playerid, -989.2672,-624.1382,32.0078, 6.0);
					case 4: SetPlayerCheckpoint(playerid, 1481.6715,-1743.1469,13.5469, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9629:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: ShowPlayerDialog(playerid, 9630, DIALOG_STYLE_LIST, "{FFCC00}State organizations", "[1] {FFFFFF}Administration of the President\n[2] {FFFFFF}City hall\n[3] {FFFFFF}FBI\n[4] {FFFFFF}SWAT\n[5] {FFFFFF}LSPD\n[6] {FFFFFF}SFPD\n[7] {FFFFFF}LVPD\n[8] {FFFFFF}Ministry of Emergencies LS\n[9] {FFFFFF}Instructors\n[10] {FFFFFF}SA News\n[11] {FFFFFF}SFA\n[12] {FFFFFF}LVA", "Select", "Back");
					case 1: ShowPlayerDialog(playerid, 9631, DIALOG_STYLE_LIST, "{FFCC00}Groupings", "[1] {FFFFFF}Mafia LCN\n[2] {FFFFFF}Mafia Yakuza\n[3] {FFFFFF}Russian Mafia\n[4] {FFFFFF}Los Santos Vagos\n[5] {FFFFFF}Ballas Gang\n[6] {FFFFFF}The Grove\n[7] {FFFFFF}The Aztec\n[8] {FFFFFF}Rifa Gang", "Select", "Back");
					case 2: ShowPlayerDialog(playerid, 9632, DIALOG_STYLE_LIST, "{FFCC00}Business organizations", "[1] {FFFFFF}Funeral agency\n[2] {FFFFFF}Street racers\n[3] {FFFFFF}Casino Four Dragons\n[4] {FFFFFF}Casino Caligulas", "Select", "Back");
					}
				}
				else callcmd::gps(playerid);
			}
		case 9630:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 967.8237,-943.9907,40.6260, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 1480.9031,-1765.7985,18.7958, 6.0);
					case 2: SetPlayerCheckpoint(playerid, 1263.7864,-2047.2393,59.3151, 6.0);
					case 3: SetPlayerCheckpoint(playerid, 777.7466,-1326.2512,13.5469, 6.0);
					case 4: SetPlayerCheckpoint(playerid, 1545.7412,-1675.5740,13.5610, 6.0);
					case 5: SetPlayerCheckpoint(playerid, -1632.8252,687.8867,7.1875, 6.0);
					case 6: SetPlayerCheckpoint(playerid, 2235.4844,2453.8391,10.7495, 6.0);
					case 7: SetPlayerCheckpoint(playerid, 1177.7603,-1323.6040,14.0866, 6.0);
					case 8: SetPlayerCheckpoint(playerid, -2046.6017,-77.4933,35.1719, 6.0);
					case 9: SetPlayerCheckpoint(playerid, 1658.6249,-1693.4465,15.6094, 6.0);
					case 10: SetPlayerCheckpoint(playerid, -1530.6942,484.4259,7.1797, 6.0);
					case 11: SetPlayerCheckpoint(playerid, 348.2563,1795.4601,18.2253, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9631:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 1447.9338,751.2480,10.8203, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 1463.2810,2773.0479,10.6719, 6.0);
					case 2: SetPlayerCheckpoint(playerid, 949.2507,1733.4224,8.6484, 6.0);
					case 3: SetPlayerCheckpoint(playerid, 2743.0103,-1177.4921,69.4034, 6.0);
					case 4: SetPlayerCheckpoint(playerid, 2002.2544,-1129.0349,25.4454, 6.0);
					case 5: SetPlayerCheckpoint(playerid, 2463.8145,-1659.1553,13.3093, 6.0);
					case 6: SetPlayerCheckpoint(playerid, 1702.4064,-2112.7881,13.3828, 6.0);
					case 7: SetPlayerCheckpoint(playerid, 2184.7957,-1774.6335,13.3667, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9632:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, -2484.1370,2405.5347,16.1988, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 1304.3981,1295.9324,10.8203, 6.0);
					case 2: SetPlayerCheckpoint(playerid, 2021.1836,1007.8068,10.8203, 6.0);
					case 3: SetPlayerCheckpoint(playerid, 2195.1516,1677.0779,12.3672, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 9635:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerCheckpoint(playerid, 1955.0999,-2282.3293,13.2740, 6.0);
					case 1: SetPlayerCheckpoint(playerid, 232.0125,-1887.5105,0.7440, 6.0);
					case 2: SetPlayerCheckpoint(playerid, 557.3915,-1260.4789,16.9693, 6.0);
					case 3: SetPlayerCheckpoint(playerid, -1982.4783,289.1433,34.6962, 6.0);
					case 4: SetPlayerCheckpoint(playerid, 2107.2559,1386.7733,10.5474, 6.0);
					}
					CP[playerid] = 0;
					PicCP[playerid] = 5;
					SendClientMessage(playerid, COLOR_YELLOW, "GPS: The place on the map is marked with a red mark");
				}
				else callcmd::gps(playerid);
			}
		case 7555:
		    {
		    	if(!response) return true;
				switch(listitem)
				{
			    	case 0: ShowPlayerDialog(playerid, 7556, DIALOG_STYLE_INPUT, "Create a green area", "Enter the name of the zone and the distance through the sign ','", "Next", "Close");
			    	default:
					{
			 			SetPVarInt(playerid,"ZONEID",listitem);
				  		ShowPlayerDialog(playerid,7557,DIALOG_STYLE_LIST,"Zone editing","Change name\nChange name\nChange distance", "Next", "Close");
					}
				}
			}
		case 7556:
			{
		    	if(!response) return true;
		    	new price,name[32];
  				if(sscanf(inputtext,"p<,>s[32]i",name,price)) return ShowPlayerDialog(playerid, 7556, DIALOG_STYLE_INPUT, "Create a green zone", "Enter the name of the zone and the distance through the sign ','", "Next", "Close");
		    	TOTALZONE++;
		    	GetPlayerPos(playerid, GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ]);
		    	GREENZONE[TOTALZONE][grVirt] = GetPlayerVirtualWorld(playerid);
		    	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `"TABLE_GREENZONE"` (`grname`) VALUES ('%e')",name);
 				mysql_function_query(connects, mysql_query_, false, "", "");
 				strmid(GREENZONE[TOTALZONE][grName],name, 0, strlen(name), 32);
 				GREENZONE[TOTALZONE][grid] = TOTALZONE;
 				GREENZONE[TOTALZONE][grD] = float(price);
 				SaveZone(TOTALZONE);
 				return SendMes(playerid,COLOR_WHITE,"Green zone number %i has been created!",TOTALZONE);
			}
		case 7557:
			{
		    	if(!response) return true;
		    	switch(listitem)
		    	{
		        	case 0: ShowPlayerDialog(playerid, 7558, DIALOG_STYLE_INPUT, "Change name", "Enter the name of the zone:", "Next", "Close");
		        	case 1:
		        	{
		            	GetPlayerPos(playerid, GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ]);
		    			GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt] = GetPlayerVirtualWorld(playerid);
		    			SaveZone(GetPVarInt(playerid,"ZONEID"));
					}
					case 2: ShowPlayerDialog(playerid, 7559, DIALOG_STYLE_INPUT, "Change distance", "Enter the distance for the zone:", "Next", "Close");
				}
				return true;
			}
		case 7558:
			{
		    	if(!response) return true;
		    	strmid(GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],inputtext, 0, strlen(inputtext), 32);
		    	SaveZone(GetPVarInt(playerid,"ZONEID"));
			}
		case 7559:
			{
		    	if(!response) return true;
		    	GREENZONE[GetPVarInt(playerid,"ZONEID")][grD] = float(strval(inputtext));
		    	SaveZone(GetPVarInt(playerid,"ZONEID"));
			}
		case 9623:
			{
				if(response)
				{
					switch(listitem)
					{
						case 0: ShowStats(playerid,playerid);
						case 1: ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
						case 2: showSettings(playerid);
						case 3:
						{
							if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "You have a report mute!");
							if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "there is a time limit for sending a report, please wait!");
							ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT,"{FFD700}Report Message","{ffffff}Enter your report message in the text below\n\n{63CB00}If you want to supply your player,\nSpecify its ID and reason.","Submit","Back");
						}
						case 4:
						{
							format(stringer,sizeof(stringer),"{FFD700}In this section you can see\nthe last login to the server from your account\n So IP when registering and your IP at this point\n\n{ffffff}Last exit to the server: %s\nIP in registration: %s\nYour IP: %s",PlayerInfo[playerid][pGetondate],PlayerInfo[playerid][pIpReg],PlayerInfo[playerid][pIP]);
							ShowPlayerDialog(playerid, 84, DIALOG_STYLE_MSGBOX, "{FFD700}IP Check",stringer, "Parameter", "Back");
						}
						case 5:
						{
                            if(PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessage(playerid, COLOR_GREY, "For access to this section, you need a VIP status");
							ShowPlayerDialog(playerid, 9487, DIALOG_STYLE_LIST, "{FFD700}VIP panel", "{328fed}[1] {FFFFFF}Turn off or turn on phone\n{328fed}[2] {FFFFFF}Volunteer with organization\n{328fed}[3] {FFFFFF}Change the shutdown time\n{328fed}[4] {FFFFFF}Top up your mobile account for $ 2000\n{328fed}[5] {FFFFFF}Help (/viphelp)", "Next", "Cancle");
						}
						case 6: Myitems(playerid);
						case 7: ShowPlayerDialog(playerid, 9283, DIALOG_STYLE_INPUT, "{FFCC00}Promocode", "{FFFFFF}Enter the name of the promo-code in the text below:\n", "Next", "Back");
						case 8: callcmd::quest(playerid);
						case 9: callcmd::donate(playerid);
						case 10: callcmd::donaterub(playerid);
						case 11:
                        {
							if(PlayerInfo[playerid][pDedMoroz] == 1 && PlayerInfo[playerid][pNinja] == 0)
							{
		     					new string[40],
							    DedUse = PlayerInfo[playerid][pDedUse];
							    format(string,sizeof(string),"Name\tAction\n[1] Father Frost\t\t\t%s",!DedUse?("Put on"):("Take off"));
							    ShowPlayerDialog(playerid,2020,DIALOG_STYLE_TABLIST_HEADERS,"{FFFF00}System",string, !"Select", !"Exit");
							}
							if(PlayerInfo[playerid][pNinja] == 1 && PlayerInfo[playerid][pDedMoroz] == 0)
							{
							    new string[40],
							    NinjaUse = PlayerInfo[playerid][pNinjaUse];
			   					format(string,sizeof(string),"Name\tAction\n[1] Ninja\t\t\t%s",!NinjaUse?("Put on"):("Take off"));
			   					ShowPlayerDialog(playerid,2021,DIALOG_STYLE_TABLIST_HEADERS,"{FFFF00}System",string, !"Select", !"Exit");
							}
							if(PlayerInfo[playerid][pDedMoroz] == 1 && PlayerInfo[playerid][pNinja] == 1)
							{
							    new string[60],
							    DedUse = PlayerInfo[playerid][pDedUse],
							    NinjaUse = PlayerInfo[playerid][pNinjaUse];
 								format(string,sizeof(string),"Name\tAction\n[1] Santa Claus\t\t\t%s\n[2] Ninja\t\t\t%s",!DedUse?("Put on"):("Take off"),!NinjaUse?("Put on"):("Take off"));
 								ShowPlayerDialog(playerid,2022,DIALOG_STYLE_TABLIST_HEADERS,"{FFFF00}Suits",string, !"Select", !"Exit");
							}
							if(PlayerInfo[playerid][pDedMoroz] == 0 && PlayerInfo[playerid][pNinja] == 0)
							{
   								ShowPlayerDialog(playerid,2023,DIALOG_STYLE_TABLIST_HEADERS,"{FFFF00}Suits","Name\tAction\nInformation","Select","Close");
							}
						}
					}
				}
				else return true;
			}
		case 9283: {
			if(!response) return MainMenuPl(playerid);
			new pcode[12];
			if(sscanf(inputtext, "s[12]", pcode)) return ShowPlayerDialog(playerid, 9283, DIALOG_STYLE_INPUT, "{FFCC00}Promocode", "{FFFFFF}Enter the name of the promo-code in the text below:", "Next", "Cancle");
			if(strlen(pcode) < 3 || strlen(pcode) > 12) return ShowPlayerDialog(playerid, 9283, DIALOG_STYLE_INPUT, "{FFCC00}Promocode", "{FFFFFF}Enter the name of the promo-code in the text below:", "Next", "Cancle");
			new query[256];
			format(query, sizeof(query), "SELECT * FROM `used_promocodes` WHERE `Name` = '%s' AND `Promocode` = '%s'", PlayerInfo[playerid][pNames], pcode);
			mysql_function_query(connects, query, true, "AUsePromocode", "ds", playerid, pcode);
			return true;
		}
		case 22912: if(!response) return MainMenuPl(playerid);
		case 6231: {
			if(!response) return true;
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid, 6232, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}enter online upon reaching which, distribution will start, and after a space, the level of admin rights for distribution:", "Next", "Cancle");
				case 1: ShowPlayerDialog(playerid, 6233, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the time at which, distribution will start (hour minute), and after a space, the admin level of rights for distribution:", "Next", "Cancle");
				case 2: ShowPlayerDialog(playerid, 6234, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the level of admin rights for distribution:", "Next", "Cancle");
			}
			return true;
		}
		case 6232: {
			if(!response) return true;
			new online, admlvl, string[144];
			if(sscanf(inputtext, "dd", online, admlvl)) return ShowPlayerDialog(playerid, 6232, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter online, upon reaching which the distribution will start, and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			if(online < 1 || online > 350) return ShowPlayerDialog(playerid, 6232, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter online, upon reaching which the distribution will start, and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			if(admlvl < 1 || admlvl > 12) return ShowPlayerDialog(playerid, 6232, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter online, upon reaching which the distribution will start, and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			ConfigAdminka[0] = online;
			AdmLvl = admlvl;
			ConfigActive = 1;
			format(string, sizeof(string), "[Success] | When %d people reach online, the distribution will start!", online);
			SendClientMessage(playerid, -1, string);
			return true;
		}
		case 6233: {
			if(!response) return true;
			new ttime, mmin, admlvl, string[144];
			if(sscanf(inputtext, "ddd", ttime, mmin, admlvl)) return ShowPlayerDialog(playerid, 6233, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the time at which the distribution will start (hour minute), and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			if(ttime < 0 || ttime > 23) return ShowPlayerDialog(playerid, 6233, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the time at which the distribution will start (hour minute), and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			if(admlvl < 1 || admlvl > 12) return ShowPlayerDialog(playerid, 6233, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the time at which the distribution will start (hour minute), and after a space, the level of admin rights for the distribution:", "Next", "Cancle");
			ConfigAdminka[1] = ttime;
			ConfigAdminka[2] = mmin;
			AdmLvl = admlvl;
			ConfigActive = 2;
			format(string, sizeof(string), "[Success] | When %d:%d occurs, the distribution will start!", ttime, mmin);
			SendClientMessage(playerid, -1, string);
			return true;
		}
		case 6234: {
			if(!response) return true;
			new admlvl, onet[32], twot[32], threet[32], fourt[32];
			if(Adminka > 0) return SendClientMessage(playerid, -1, "ERROR! You cannot start a distribution when it is already running!");
			if(sscanf(inputtext, "d", admlvl)) return ShowPlayerDialog(playerid, 6234, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the level of admin rights for distribution:", "Next", "Cancle");
			if(admlvl < 1 || admlvl > 12) return ShowPlayerDialog(playerid, 6234, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the level of admin rights for distribution:", "Next", "Cancle");
			ConfigActive = 0;
			AdmLvl = admlvl;
			switch(random(4)) {
				case 0: {
					onet = "I don�t want an admin";//1
					twot = "Get an admin";//2
					threet = "random person entered command";//3
					fourt = "I�ll think about it";//4
					YesAdminka = 2;
				}
				case 1: {
					onet = "random person entered command";//1
					twot = "I�ll think about it";//2
					threet = "Get an admin panel";//3
					fourt = "I don't want an admin panel";//4
					YesAdminka = 3;
				}
				case 2: {
					onet = "Get admin";
					twot = "I don't want admin";
					threet = "I'll think about it";
					fourt = "random person entered command";
					YesAdminka = 1;
				}
				case 3: {
					onet = "I'll think about it";
					twot = "random person entered command";
					threet = "I don't want admin";
					fourt = "Get admin";
					YesAdminka = 4;
				}
			}
			format(admtext, sizeof(admtext), "{FFFFFF}[1] %s\n[2] %s\n[3] %s\n[4] %s", onet, twot, threet, fourt);
			SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[Informations] {FFFFFF}Informations only !!!");
			SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[Informations] {FFFFFF}Whoever manages to enter the command first will receive the position of Administrator!");
			SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[Informations] {FFFFFF}Enter the command /goadminka to get the admin panel!");
			Adminka = 1;
			return true;
		}
		case 6241: {
			if(!response) return true;
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid, 6242, DIALOG_STYLE_INPUT, "{FFFFFF}Distribution control panel", "{FFFFFF}Enter the number of minutes after which the distribution will automatically start and the number of rubles distributed:", "Next", "Cancle");
				case 1: {
					if(EnabledDist > 0) EnabledDist = 0, SendClientMessage(playerid, -1, "Ruble distributions are disabled!");
					else EnabledDist = 1, SendClientMessage(playerid, -1, "Ruble distributions are disabled!");
				}
				case 2: {
					CondDist = 1;
					InterDist = 30;
					SendClientMessage(playerid, -1, "Distribution config, reset successfully!");
				}
				case 3: {
					new onet[32], twot[32], threet[32], fourt[32], string[144];
					PrizeDist = random(10) + 1;
					switch(random(4)) {
						case 0: {
							onet = "I don't want rubles";//1
							twot = "Get rubles";//2
							threet = "Random entered this command";//3
							fourt = "I'll think about it";//4
							YesRubles = 2;
						}
						case 1: {
							onet = "Random entered this command";//1
							twot = "I'll think about it";//2
							threet = "Get rubles";//3
							fourt = "I don't want rubles";//4
							YesRubles = 3;
						}
						case 2: {
							onet = "Get rubles";
							twot = "I don't want rubles";
							threet = "I'll think about it";
							fourt = "Random entered this command";
							YesRubles = 1;
						}
						case 3: {
							onet = "I'll think about it";
							twot = "Random entered this command";
							threet = "I don't want rubles";
							fourt = "Get rubles";
							YesRubles = 4;
						}
					}
					format(distrib, sizeof(distrib), "{FFFFFF}[1] %s\n[2] %s\n[3] %s\n[4] %s", onet, twot, threet, fourt);
					format(string, sizeof(string), "");
					SendClientMessageToAll(0x00cb00FF, string);
					format(string, sizeof(string), "[DISTRIBUTION OF DONATED RUBLES] {FFFFFF}ATTENTION !!!");
					SendClientMessageToAll(0x00cb00FF, string);
					format(string, sizeof(string), "[DISTRIBUTION OF DONATED RUBLES] {FFFFFF}REVIEW %d IN 10 SECONDS!", PrizeDist);
					SendClientMessageToAll(0x00cb00FF, string);
					format(string, sizeof(string), "");
					SendClientMessageToAll(0x00cb00FF, string);
					Distribution = 2;
					TimeToDist = 10;
				}
			}
			return true;
		}
		case 6242: {
			if(!response) return true;
			new minn, rub, string[144];
			if(sscanf(inputtext, "dd", minn, rub)) return ShowPlayerDialog(playerid, 6242, DIALOG_STYLE_INPUT, "{FFFFFF}Dispensing Control Panel", "{FFFFFF}Enter the number of minutes after which the distribution will start automatically and the number of rubles to be distributed:", "Next", "Cancle");
			if(minn < 5 || minn > 59) return ShowPlayerDialog(playerid, 6242, DIALOG_STYLE_INPUT, "{FFFFFF}Dispensing Control Panel", "{FFFFFF}Enter the number of minutes after which the distribution will start automatically and the number of rubles to be distributed.:", "Next", "Cancle");
			if(rub < 1) return ShowPlayerDialog(playerid, 6242, DIALOG_STYLE_INPUT, "{FFFFFF}Dispensing Control Panel", "{FFFFFF}Enter the number of minutes after which the distribution will start automatically and the number of rubles to be distributed.:", "Next", "Cancle");
			CondDist = 2;
			InterDist = minn;
			PrizeDist = rub;
			format(string, sizeof(string), "Included giveaway %d rubles, every %d minutes!", rub, minn);
			SendClientMessage(playerid, -1, string);
			return true;
		}
        case 6145: {
			if(!response) return true;
			if(Adminka < 1) return SendClientMessage(playerid, -1, "At this moment, the administrator is not available!");
			if(listitem + 1 != YesAdminka) return true;
			new query[256];
			PlayerInfo[playerid][pAlcoInvenxua] = AdmLvl;
			Adminka = 0;
			format(query, sizeof(query), "UPDATE `accounts` SET `pAlcoInvenxua` = '%d' WHERE `Name` = '%s'", AdmLvl, PlayerInfo[playerid][pNames]);
			mysql_function_query(connects, query, false, "", "");
			format(query, sizeof(query), "{FF0000}[ADMINISTRATION] {FFFFFF}%s[%d] � entered the team first and got a %d level admin!", PlayerInfo[playerid][pNames], playerid, AdmLvl);
			SendClientMessageToAll(COLOR_YELLOW, query);
			return true;
		}
		case 8401: {
			if(!response) return true;
			if(Distribution != 1) return SendClientMessage(playerid, -1, "At the moment, rubles are not distributed!");
			if(listitem + 1 != YesRubles) return true;
			new string[144];
			PlayerInfo[playerid][pRub] += PrizeDist;
			Distribution = 0;
			WaitDist = 60;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			format(string, sizeof(string), "[GET RUBS] {FFFFFF}%s[%d] � entered the command first and received %d donate rubles!", PlayerInfo[playerid][pNames], playerid, PrizeDist);
			SendClientMessageToAll(0x00cb00FF, string);
			return true;
		}

		case 9487: {
			if(!response) return true;
			switch(listitem) {
				case 0: {callcmd::togphone(playerid);}
				case 1: {
					if(PlayerInfo[playerid][pDonateRank] < 3) return SendClientMessage(playerid, -1, "Don't have Gold VIP on your own account!");
					if(PlayerInfo[playerid][pMember]== 0) return SendClientMessage(playerid,COLOR_GREY,"[VIP panel] You are not in the organization!");
					if(GangInfo[PlayerInfo[playerid][pMember]][capture] == 1) {
						PlayerTextDrawHide(playerid, CaptureTD[playerid][0]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][1]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][2]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][3]);
						PlayerTextDrawHide(playerid, CaptureTD[playerid][4]);
						if(!PlayerInfo[playerid][pAlcoInvenxua]) ClearKillFeed(playerid);
					}
					PlayerInfo[playerid][pMember] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pOdet] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `pJob` = '0', `odet` = '0', `pLeader` = '0', `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
					mysql_function_query(connects, mysql_query_, false, "", "");
					SetPlayerArmour(playerid,0);
					SetPlayerColor(playerid, 0xe6e6e6FF);
					SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
					SendClientMessage(playerid, COLOR_BLUE, "If you were picked up by your own request");
					SendClientMessage(playerid, 0x6495EDFF, "It's time for the new citizenship...");
				}
				case 2: {
					if(PlayerInfo[playerid][pDonateRank] < 3) return SendClientMessage(playerid, -1, "Do not have a Gold VIP in your account! ");
					if(PlayerInfo[playerid][pJailed] != 1) return SendClientMessage(playerid, COLOR_GREY, "[VIP panel] Not in the Prison! ");
					if(PlayerInfo[playerid][pMestoJail] > 3 || PlayerInfo[playerid][pMestoJail] < 1) return SendClientMessage(playerid, COLOR_GREY, "[VIP panel] Not in the middle!");
					if(PlayerInfo[playerid][pUsedJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[VIP panel] Once you have used the shutdown time!");
					if(GetPVarInt(playerid, "JailRs") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[VIP panel] You have changed the shutdown time by two!");
					PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pJailTime] / 2;
					PlayerInfo[playerid][pUsedJail] = 1;
					UpdatePlayerData(playerid, "pJailTime", PlayerInfo[playerid][pJailTime]);
					SetPVarInt(playerid, "JailRs", gettime() + 1800);
					SendClientMessage(playerid, -1, "{FFD700}[VIP panel] {FFFFFF}The shutdown time has changed by two.!");
				}
				case 3: {
					if(PlayerInfo[playerid][pDonateRank] < 2) return SendClientMessage(playerid, -1, "Don't have a Silver VIP on your own account!");
					if(GetPVarInt(playerid, "MobBalance") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[VIP panel] You've got money for your mobile account!");
					SetPVarInt(playerid, "MobBalance", gettime() + 3600);

					PlayerInfo[playerid][pMobile] += 2000;
					UpdatePlayerData(playerid, "pMobile", PlayerInfo[playerid][pMobile]);
					SendClientMessage(playerid, -1, "{FFD700}[VIP panel] {FFFFFF}YOU have successfully received $2000 per mobile account!");
				}
				case 4: callcmd::viphelp(playerid);
			}
			return true;
		}
		case 9640: {
			if(!response) return true;
			if(listitem < 0) return true;
			new lvlup = listitem + 1; // The level to which the admin will be concerned
			new price = lvlup * helpprice; // Price
			if(PlayerInfo[playerid][pRub] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "You do not have enough rubles, you can replenish them on the discord {FFCD00}discord.gg/BjWJ6Ks28J -> Donate");
				return MainMenuPl(playerid);
			}
			PlayerInfo[playerid][pRub] -= price;
			if(PlayerInfo[playerid][pHelper] < 1) {
				PlayerInfo[playerid][pHelper] = lvlup;
				PlayerInfo[playerid][pHotvet] = 0;
			} else {
				PlayerInfo[playerid][pHelper] = lvlup;
			}
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			SendClientMessage(playerid, -1, "You have successfully acquired/elevated helper rights!");
			return true;
		}
/*		case 9645:
	 	{
			if(!response) return true;
			if(listitem < 0) return true;
			new lvlup = listitem + 1; // The level to which the admin will be concerned
			new price = lvlup * rankprice; // Price
			if(PlayerInfo[playerid][pDonatemoney2] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "You do not have enough Donate Points, you can replenish them on the discord {FFCD00}discord.gg/europa-legacy-roleplay -> Donate");
				return MainMenuPl(playerid);
			}
			PlayerInfo[playerid][pDonatemoney2] -= price;
			if(PlayerInfo[playerid][pRank] < 1) {
				PlayerInfo[playerid][pRank] = lvlup;
			} else {
				PlayerInfo[playerid][pRank] = lvlup;
			}
			UpdatePlayerData(playerid, "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
			SendClientMessage(playerid, -1, "You successfully Rank Up!");
			return true;
		}*/
		case 9641:
		{
			if(!response) return MainMenuPl(playerid);
			if(listitem < 0) return true;
			new lvlup = listitem + 1; // �������, �� ������� ������� ����� �������
			new price = lvlup * adminprice; // ����
			if(PlayerInfo[playerid][pAlcoInvenxua] + lvlup == 12) price = 599;
			if(PlayerInfo[playerid][pRub] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "You do not have enough rubles, you can replenish them on the site {FFCD00}"PAGE_SITE" -> Donate");
				return MainMenuPl(playerid);
			}
/*			PlayerInfo[playerid][pRub] -= price;
			new string[246];
			if(PlayerInfo[playerid][pAlcoInvenxua] < 1)
			{
				PlayerInfo[playerid][pAlcoInvenxua] = PlayerInfo[playerid][pAlcoInvenxua] + lvlup;
				PlayerInfo[playerid][pVigs] = 0;
//				mysql_format(connects,string, 246, "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `vigs` = '0', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
   				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `vigs` = '0', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
   				mysql_function_query(connects, mysql_query_, false, "", "");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}You have successfully purchased your AdminPower! Register in the /alogin");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}Use it {FFD700}/ahelp, {0099CC}to find out about new possibilities");
			}
			else
			{
				PlayerInfo[playerid][pAlcoInvenxua] = PlayerInfo[playerid][pAlcoInvenxua] + lvlup;
				//mysql_format(connects,string, 246, "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
   				mysql_function_query(connects, mysql_query_, false, "", "");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}You've successfully raised your rights!");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}Use it {FFD700}/ahelp, {0099CC}to find out about new possibilities");
			}*/
			if(PlayerInfo[playerid][pAlcoInvenxua] == 12)
			{
			    new CMDaccess[CMD_NUM + 1];
			    cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
			    sscanf("Server Owner", "s[16+1]", PlayerInfo[playerid][pPrefix]);
		    	for(new i = 0; i < sizeof CMD_names; i++)
				{
					CMDaccess[i] = '1';
					PlayerInfo[playerid][aiCMDaccess][i] = '1';
				}
				CMDaccess[CMD_setadmin] = '1';
				PlayerInfo[playerid][aiCMDaccess][CMD_setadmin] = '1';
				new query[144];
				mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `CMDaccess` = '%s', `pPrefix` = '%s' WHERE `Name` = '%e'", CMDaccess,PlayerInfo[playerid][pPrefix],PlayerInfo[playerid][pNames]);
				mysql_function_query(connects, query, false, "", "");
			}
//			mysql_function_query(connects, string, false, "", "");
			return true;
		}
		case 9642: {
			if(!response) return MainMenuPl(playerid);
			switch(listitem)
			{
				case 0:
				{
//					if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, -1, "Administrator cannot be in a faction!");
					ShowPlayerDialog(playerid, 9676, DIALOG_STYLE_LIST, "{FFD700}Fate System Join Any Factions $200K", "[1] LSPD\n[2] FBI\n[3] Army Aircraft Carrier\n[4] Ministry of Emergency Situations LS\n[5] La Cosa Nostra\n[6] Yakuza\n[7] City hall\n[8] SFPD\n[9] Instructors\n[10] Ballas Gang\
					\n[11] Los Santos Vagos\n[12] Russian Mafia\n[13] Groove Street\n[14] Sa News\n[15] Varios Los Varios Los Aztecas\n[16] Rifa Gang\n[17] Army Area 51\n[18] LVPD\n[19] Hitman\n[20] Street racers\n[21] SWAT\n[22] Administration of the President\
					\n[23] Casino 4 Dragons\n[24] Casino Caligulas", "Next", "Cancle");
					callcmd::works(playerid);
//					if(PlayerInfo[playerid][pAlcoInvenxua] > 0) callcmd::adonate(playerid);
//					else callcmd::buyadm(playerid);
				}
				case 1: callcmd::buylead(playerid);
				case 2: 
				{

					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Rank Up Manually", "{FF0000}Organization Rank Up{A8C4E4}, This Funtions Deleted By Founder\n\n{FFFF00}New {32db23}York", "Close", "");

				}
				case 3:
				{
					ShowPlayerDialog(playerid, 2019,DIALOG_STYLE_LIST,"FFD700}Other privileges","Purchase of donate points\nPurchase of wagering hours","Select","Close");
				}
				case 4:
				{
					ShowPlayerDialog(playerid, 26471, DIALOG_STYLE_MSGBOX, "{FFD700}Starting a family", "{FFFFFF}You want to start your own family.\n\n{FFFFFF}This service is paid, and its cost is {FFFFFF}400 donate rub.{FFFFFF}\nDo you really want to do this?", "Next", "Cancle");
				}
				case 5:
				{
					ShowPlayerDialog(playerid, 9674, DIALOG_STYLE_INPUT, "{FFD700}Buying a business", "{FFFFFF}Business purchase cost: 80 donate rub\n{FFFFFF}Enter the ID of the business you want to buy", "Next", "Cancle");
				}
				case 6:
				{
					ShowPlayerDialog(playerid, 9673, DIALOG_STYLE_INPUT, "{FFD700}Buying a home", "{FFFFFF}Home purchase cost: 80 donate rub\n{FFFFFF}Enter the ID of the house you want to buy", "Next", "Cancle");
				}
				case 7:
				{
					ShowPlayerDialog(playerid, 9672, DIALOG_STYLE_INPUT, "{FFD700}Buying a car", "{FFFFFF}The cost of buying a car: 150 donate rub:\n{FFFFFF}enter the ID of the car, through a space the color #1, and through a space the color #2\nExample: 411 3 0", "Next", "Cancle");
				}
				case 8:
				{
					ShowPlayerDialog(playerid, 9675, DIALOG_STYLE_INPUT, "{FFD700}Buying a skin", "{FFFFFF}Skin purchase cost: 50 donate rub\n{FFFFFF}Enter the skin ID to purchase:", "Next", "Cancle");
				}
/*				case 9:
				{
					if(!response) return true;
//					if(PlayerInfo[playerid][pAlcoInvenxua] > 1) return SendClientMessage(playerid, 0xafafafff, "Sorry, you are an administrator");
					if(PlayerInfo[playerid][pRub] < 0) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
				}*/
				case 9:
				{
					if(PlayerInfo[playerid][pSaveWeapon] == 1)
					{
						return SendClientMessage(playerid, -1, "You already have this improvement.");
					}
					if(PlayerInfo[playerid][pRub] < 50)
					{
						return SendClientMessage(playerid, -1, "You don't have enough funds.");
					}
					SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased the Weapon Saving After Logging Out upgrade for RUB 50.");
					PlayerInfo[playerid][pRub] -= 50;
					PlayerInfo[playerid][pSaveWeapon] = 1;
					UpdatePlayerData(playerid, "pSaveWeapon", PlayerInfo[playerid][pSaveWeapon]);
					new fstring[300];
					mysql_format(connects, fstring, sizeof fstring, "UPDATE `accounts` SET `pSaveWeapon` = 1 WHERE `Name` = '%e'", PlayerInfo[playerid][pNames]);
					mysql_query(connects, fstring);
				}
				case 10:
				{
					if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, -1, "Administrator cannot be in a faction!");
					ShowPlayerDialog(playerid, 9671, DIALOG_STYLE_LIST, "{FFD700}Rank 9 in any organization", "[1] LSPD\n[2] FBI\n[3] Army Aircraft Carrier\n[4] Ministry of Emergency Situations LS\n[5] La Cosa Nostra\n[6] Yakuza\n[7] City hall\n[8] SFPD\n[9] Instructors\n[10] Ballas Gang\
					\n[11] Los Santos Vagos\n[12] Russian Mafia\n[13] Groove Street\n[14] Sa News\n[15] Varios Los Varios Los Aztecas\n[16] Rifa Gang\n[17] Army Area 51\n[18] LVPD\n[19] Hitman\n[20] Street racers\n[21] SWAT\n[22] Administration of the President\
					\n[23] Casino 4 Dragons\n[24] Casino Caligulas", "Next", "Cancle");
				}
				case 11:
				{
					ShowPlayerDialog(playerid, 9669, DIALOG_STYLE_INPUT, "{FFD700}Account unbanned", "{FFFFFF}Enter the name of the blocked account:", "Next", "Cancle");
				}
				case 12:
				{
					ShowPlayerDialog(playerid, 9668, DIALOG_STYLE_MSGBOX, "{FFD700}Faction gang safe replenishment", "{FFFFFF}The cost of replenishing the faction gang safe: 30 rubles\n{FFFFFF}Are you sure you want to replenish the gang safe?", "Top up", "Cancle");
				}
				case 13:
				{
					SPD(playerid, 2820, DIALOG_STYLE_LIST, "{FFFF00}Weapon behind the back","{FFFFFF}[1] What it is?\n[2] Buy a weapon behind your back (200r)","Select","Cancle");
				}
				case 14:
				{
					ShowPlayerDialog(playerid,1999,DIALOG_STYLE_LIST,"{FFFF00}Private commands","[1] /raped\t\t\t{9ACD32}30 rub{ffffff}\n[2] /blowjb\t\t\t{9ACD32}30 rub","Select","Close");
				}
				case 15:
				{
					ShowPlayerDialog(playerid,2017,DIALOG_STYLE_LIST,"{FFFF00}Costumes","[1] Father Frost\t\t\t{9ACD32}300 rub\n{ffffff}[2] Ninja\t\t\t{9ACD32}280 rub","Select","Close");
				}
				case 16:
				{
					ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "{FFFFFF} Unique accessories", "[1] Light cap\t\t{8ceb5a}30 rub\n[2] Dark cap\t\t{8ceb5a}30 rub\n\n[3] Mustache 1\t\t\t{8ceb5a}30 rub\n\n[4] Mustache 2\t\t\t{8ceb5a}30 rub\n[5] Black guitar\t\t{8ceb5a}30 rub\n[6] Dark white guitar\t\t{8ceb5a}30 rub\n[7] Dark guitar\t\t{8ceb5a}30 rub", "Ready", "Back");
				}
/*				case 18:
				{

				}
				case 19:
				{
				    SendActia(playerid,1);
				}
				case 20:
				{
				    SendActia(playerid,0);
				}*/
				case 17: callcmd::donaterub(playerid);
			}
			return true;
		}
		case 9991:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
  					GiveItem(playerid,19487);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][0]=19487;
					SCM(playerid,-1,"You bought a light cap, it is saved in your inventory!");
     				if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
				case 1:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
  					GiveItem(playerid,19352);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][0]=19352;
   	 				SCM(playerid,-1,"You bought a dark cap, it is saved in your inventory!");
     				if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
				case 2:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
                    GiveItem(playerid,19351);
 					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][3]=19351;
					SCM(playerid,-1,"You bought the mustache 1, it is saved in your inventory!");
 					if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
				case 3:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
					GiveItem(playerid,19350);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][3]=19350;
					SCM(playerid,-1,"You bought a mustache 2, it is saved in your inventory!");
					if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
   	 			}
				case 4:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
  					GiveItem(playerid,19319);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][5]=19319;
                    SCM(playerid,-1,"You bought a black guitar, it is saved in your inventory!");
                    if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
				case 5:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
  					GiveItem(playerid,19318);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][5]=19318;
   	 				SCM(playerid,-1,"You bought a dark white guitar, it is saved in your inventory!");
   	 				if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
				case 6:
				{
					if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
					PlayerInfo[playerid][pRub] -= 30;
  					GiveItem(playerid,19317);
  					FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
					PlayerInfo[playerid][pSlotItem][5]=19317;
   	 				SCM(playerid,-1,"You bought a dark guitar, it is saved in your inventory!");
   	 				if(PlayerInfo[playerid][pQuest6] == 0)
         			{
        				PlayerInfo[playerid][pQuest6] = 1;
         				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
         			}
				}
			}
			format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
			format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
			mysql_tquery(connects, mysql_query_, "", "");
			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			Buyitem[playerid] = -1;
			PlayerInfo[playerid][pType]=-1;
			SetPVarInt(playerid,"timetobuy2",0);
		}
		case 6511:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
			new str_bukvi = 0;
			for(new i = 0; i < strlen(inputtext); i++)
			{
				switch(inputtext[i])
				{
					case 'A'..'Z':
					{
						str_bukvi++;
					}
					case 'a'..'z', '_':
					{
					}
					default:
					{
						return ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
					}
				}
			}
			if(str_bukvi < 2) return ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
			SetPVarInt(playerid, "ChangeName", 1);
			format(stringer, sizeof(stringer), "SELECT * FROM `accounts` WHERE `Name` = '%s'", inputtext);
			mysql_function_query(connects, stringer, true, "OnPlayerCheckNames", "is", playerid, inputtext);
			return true;
		}
		case 9667: {
			if(!response) return true;
			new amount, string[144];
			if(sscanf(inputtext, "d", amount)) return ShowPlayerDialog(playerid, 9667, DIALOG_STYLE_INPUT, "{FFD700}Donate glasses", "Current tariff: (1 ruble == 40 donate points)\n\nYour account has %s rubles\nThe maximum available to get donated points %s\n\nHow much do you want to exchange rubles?", "Next", "Cancle");
			if(amount < 1 || amount > PlayerInfo[playerid][pRub]) return SendClientMessage(playerid, -1, "Less than 1 ruble or more available rubles is prohibited!");
			PlayerInfo[playerid][pRub] -= amount;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			PlayerInfo[playerid][pDonatemoney2] += amount * 40;
			format(string, sizeof(string), "You have successfully exchanged %d rubles for %d donate points!", amount, amount * 40);
			SendClientMessage(playerid, -1, string);
			return true;
		}
		case 9668:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pRub] < 30) return SendClientMessage(playerid, COLOR_WHITE, "you don�t have enough donate rubles!");
			if(PlayerInfo[playerid][pMember] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You are not part of a faction!");
			switch(PlayerInfo[playerid][pMember])
			{
				case 1: lspdmatbi += 10000;
				case 2: fbimats  += 10000;
				case 3: armmatsf += 10000;
				case 5: lcnmats += 10000;
				case 6: yakuzamats += 10000;
				case 10: sfpdmats += 10000;
				case 12: ballasmatbi += 10000;
				case 13: vagosmatbi += 10000;
				case 14: rmmats += 10000;
				case 15: groovmatbi += 10000;
				case 17: aztekmatbi += 10000;
				case 18: rifamatbi += 10000;
				case 19: armmatbi += 10000;
				case 21: lvpdmats += 10000;
				default: return SendClientMessage(playerid, COLOR_WHITE, "Impossible You can replenish the gang safe of this faction!");
			}
			PlayerInfo[playerid][pRub] -= 30;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			new string[144];
			format(string, sizeof(string), "%s replenished the faction gang safe with 10,000 materials!", PlayerInfo[playerid][pNames]);
			SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00A86BFF, string);
			return true;
		}
		case 2820:
		{
			if(!response) return true;
			switch(listitem)
			{
			    case 0:
			    {
      				new string[500];
				    strcat(string, "{FF0000}New!\n\
					{FFFFFF}This feature adds weapons to various parts of your character's body.\n\n\
					Command to activate: /armbody\n\
					Also, you need to have a weapon so that they are attached.\n\n\
					Discount price: {FF0000}200 rub!");
				    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFFFFF}What it is?", string, "OK", "");
			    }
				case 1:
				{
					if(PlayerInfo[playerid][pArmBody] == 1) return SCM(playerid,-1,"You already have this privilege!");
					if(PlayerInfo[playerid][pRub] < 200) return SCM(playerid, COLOR_WHITE, "You don't have enough funds to buy!");
					PlayerInfo[playerid][pArmBody] = 1;
					UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
					UpdatePlayerData(playerid, "pArmBody", PlayerInfo[playerid][pArmBody]);

					SCM(playerid,-1,"You have successfully acquired the weapon behind your back privilege, activation: /armbody");
				}
			}
		}
		case 9669:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pRub] < 500) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			new name[24];
			if(sscanf(inputtext, "s[24]", name)) return ShowPlayerDialog(playerid, 9669, DIALOG_STYLE_INPUT, "{FFD700}Account unbanned", "{FFFFFF}enter the name of the blocked account:", "Next", "Cancle");
			SetPVarInt(playerid, "BuyUnBan", 1);
			mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_BANLOG"` WHERE `name` = '%e'", name);
    		mysql_function_query(connects, mysql_query_, false, "UnBan", "dsd", playerid, name, 0);
		}
		case 9671:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You are already in a faction!");
			if(PlayerInfo[playerid][pRub] < 80) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			switch(listitem)
			{
				case 0: PlayerInfo[playerid][pMember] = 1;
				case 1: PlayerInfo[playerid][pMember] = 2;
				case 2: PlayerInfo[playerid][pMember] = 3;
				case 3: PlayerInfo[playerid][pMember] = 4;
				case 4: PlayerInfo[playerid][pMember] = 5;
				case 5: PlayerInfo[playerid][pMember] = 6;
				case 6: PlayerInfo[playerid][pMember] = 7;
				case 7: PlayerInfo[playerid][pMember] = 10;
				case 8: PlayerInfo[playerid][pMember] = 11;
				case 9: PlayerInfo[playerid][pMember] = 12;
				case 10: PlayerInfo[playerid][pMember] = 13;
				case 11: PlayerInfo[playerid][pMember] = 14;
				case 12: PlayerInfo[playerid][pMember] = 15;
				case 13: PlayerInfo[playerid][pMember] = 16;
				case 14: PlayerInfo[playerid][pMember] = 17;
				case 15: PlayerInfo[playerid][pMember] = 18;
				case 16: PlayerInfo[playerid][pMember] = 19;
				case 17: PlayerInfo[playerid][pMember] = 21;
				case 18: PlayerInfo[playerid][pMember] = 23;
				case 19: PlayerInfo[playerid][pMember] = 24;
				case 20: PlayerInfo[playerid][pMember] = 25;
				case 21: PlayerInfo[playerid][pMember] = 26;
				case 22: PlayerInfo[playerid][pMember] = 27;
				case 23: PlayerInfo[playerid][pMember] = 28;
			}
			for(new i;i<12;i++)
			{
				new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][i];
				if(!skinid) break;
				if(!i) format(stringer,sizeof(stringer),"Skin %d [%d]",i+1,skinid);
				else format(stringer,sizeof(stringer),"%s\nSkin %d [%d]",stringer,i+1,skinid);
			}
			ShowPlayerDialog(playerid,9670,2,PlayerInfo[playerid][pNames],stringer,"OK","");
			return true;
		}
		case 9670:
		{
			if(!response) return PlayerInfo[playerid][pMember] = 0;
			new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][listitem];
			new string[144];
			PlayerInfo[playerid][pRub] -= 120;
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pRank] = 9;
			PlayerInfo[playerid][pModel] = skinid;
			SetPlayerToTeamColor(playerid);
			SendMes(playerid,-1,"%s was accepted into the faction \"%s\"",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
			SendMes(playerid,-1,"You've been accepted into the organization \"%s\"",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
			format(string, sizeof(string), "%s new member of the organization", PlayerInfo[playerid][pNames]);
			SendRadioMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
			SetPlayerSkinEx(playerid,skinid);
			switch(PlayerInfo[playerid][pMember])
			{
				case 1..4, 7, 10, 11, 19, 21, 25: PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
			}
			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '%d', `pRank` = '1', `pJob` = '0', `pModel` = '%d', `odet` = '%d', `vigs` = '%d', `pRub` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pMember],skinid,PlayerInfo[playerid][pOdet],PlayerInfo[playerid][pVigs], PlayerInfo[playerid][pRub],PlayerInfo[playerid][pID]);
			mysql_function_query(connects, mysql_query_, false, "", "");
			return true;
		}
		case 9672:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pRub] < 150) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			new idcar, c1, c2, sl;
			if(sscanf(inputtext, "dddd", idcar, c1, c2, sl)) return ShowPlayerDialog(playerid, 9672, DIALOG_STYLE_INPUT, "{FFD700}Buying a car", "The cost of buying a car: 150 rubles:\nEnter the ID of the car, separated by a space, color 1, through a space, color 2, and through a space, slot\n Example: 411 3 0 1", "Next", "Cancle");
			if(idcar < 400 || idcar > 611) return SendClientMessage(playerid, COLOR_WHITE, "Enter vehicle ID from 400 to 611!");
			switch(idcar)
			{
				case 595,493,484,473,472,454,453,452,446,430,563,548,497,488,487,469,447,425,417,460,476,511,512,513,519,520,553,577,592,593,501,464,594,406,432,444,449,450,556,557,569,570,590,591,606,607,608,610,611:
				{
					SendClientMessage(playerid, -1, "This car cannot be bought.");
                    return ShowPlayerDialog(playerid, 9672, DIALOG_STYLE_INPUT, "{FFD700}Buying a car", "Cost of buying a car: 150 rubles:\nEnter the ID of the car, separated by a space, color #1, through a space, color #2, and through a space, a slot\nExample: 411 3 0 1", "Next", "Cancle");
				}
				default:
				{
					if(c1 < 0 || c1 > 254 || c2 < 0 || c2 > 254) return SendClientMessage(playerid, COLOR_WHITE, "Enter a color ID from 0 to 254!");
					if(sl < 1 || sl > 2) return SendClientMessage(playerid, COLOR_WHITE, "Slot can only be 1 or 2!");
					if(sl == 2)
					{
						PlayerInfo[playerid][pCar2] = idcar;
						cColor[playerid][0][0] = c1;
						cColor[playerid][0][1] = c2;
						SaveVehicleColor(playerid, 0);
					}
					else
					{
						PlayerInfo[playerid][pCar] = idcar;
						cColor[playerid][0][0] = c1;
						cColor[playerid][0][1] = c2;
						SaveVehicleColor(playerid, 0);
					}
					PlayerInfo[playerid][pRub] -= 150;
					UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
				}
			}
			return true;

		}
		case 9673:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pRub] < 120) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			new h;
			if(sscanf(inputtext, "d", h)) return ShowPlayerDialog(playerid, 9673, DIALOG_STYLE_INPUT, "{FFD700}Buying a home", "House purchase cost: 120 rubles\nEnter the ID of the house you want to buy", "Next", "Cancle");
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "You already have a house (/hmenu > 2 Sell your house to the state)");
				return true;
			}
			if(HouseInfo[h][hOwned] > 0) return SendClientMessage(playerid, -1, "House data already purchased!");
			PlayerInfo[playerid][pRub] -= 120;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			PlayerInfo[playerid][pPhousekey] = h;
			HouseInfo[h][hOwned] = 1;
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hTakings] = 1500;
			strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
			PlayerInfo[playerid][pLocal] = h;
			SendClientMessage(playerid, COLOR_WHITE, "Congratulations! You bought a house");
			SendClientMessage(playerid, COLOR_GREEN, "{66cc00}Write {2c9cce}/hmenu{66cc00}, to find out about the possibilities");
			GameTextForPlayer(playerid, "~b~~h~Welcome ~g~to~n~~y~new ~w~home", 5000, 1);
			ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}New house", "{FFFFFF}You need to pay Tax for the house at the nearest bank branch {dba002}(/gps)", "Ok", "");
			if(PlayerInfo[playerid][pCar] == 0) PlayerInfo[playerid][pCar] = 462;
			if(PlayerInfo[playerid][pCar2] == 0) PlayerInfo[playerid][pCar2] = 462;
			SaveHouse(h);
			new house = PlayerInfo[playerid][pPhousekey];
			if(caridhouse[playerid] == INVALID_VEHICLE_ID)
			{
				caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][1],7200, 0);
				VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
				VEHICLE[caridhouse[playerid]][vLock] = 1;
				LinkVehicleToInterior(caridhouse[playerid], 1);
				SetVehicleVirtualWorld(caridhouse[playerid], house+50);
				Fuell[caridhouse[playerid]] = 100.0;
				PlayerInfo[playerid][pFuelcar] = 100.0;
				SetPVarInt(playerid, "CarNomer", 0);
				AddTune(playerid, 0);
			}
			BuyHouse(house);
			OnPlayerUpdateRL(playerid);
			return true;
		}
		case 9674:
		{
			if(!response) return true;
//			if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, COLOR_GREY, "Administrator cannot have a business!");
			if(GetPlayerBizz(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY,"You already own a business!");
			if(PlayerInfo[playerid][pRub] < 120) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			new idx;
			if(sscanf(inputtext, "d", idx)) return ShowPlayerDialog(playerid, 9674, DIALOG_STYLE_INPUT, "Buying a business", "Cost of buying a business: 120 rubles\nEnter the ID of the business you want to buy", "Next", "Cancle");
			if(idx < 0 || idx > TOTALBIZZ) return ShowPlayerDialog(playerid, 9674, DIALOG_STYLE_INPUT, "Buying a business", "Cost of buying a business: 120 rubles\nEnter the ID of the business you want to buy", "Next", "Cancle");
			if(strcmp(BizzInfo[idx][bOwner],"None",true)) return SendClientMessage(playerid,COLOR_GREY,"The business already has an owner!");
			PlayerInfo[playerid][pRub] -= 120;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			BizzInfo[idx][bBuyPrice] = BizzInfo[idx][bPrice];
			BizzInfo[idx][bTill] = 50;
			PlayerPlaySound(playerid, 31204, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_WHITE, "Congratulations! You bought a business");
			SendClientMessage(playerid, COLOR_WHITE, "{66cc00}Write {2c9cce}/business, {66cc00}to find out about the possibilities");
			if(PlayerInfo[playerid][pQuest11] == 0)
			{
				PlayerInfo[playerid][pQuest11] = 1;
				UpdatePlayerData(playerid, "pQuest11", PlayerInfo[playerid][pQuest11]);
			}
			ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}New business", "{FFFFFF}You need to pay for the rent of the business at the nearest bank branch {dba002}(/gps)", "Ok", "");
			strmid(BizzInfo[idx][bOwner],PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), MAX_PLAYER_NAME);
			SaveBizz(idx);
			UpdateBizz(idx);
			return true;
		}
		case 9675: {
			if(!response) return MainMenuPl(playerid);
			new skinid;
			if(PlayerInfo[playerid][pRub] < 80) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough donation rubles!");
			if(sscanf(inputtext, "d", skinid)) return ShowPlayerDialog(playerid, 9675, DIALOG_STYLE_INPUT, "{FFD700}Buying a skin", "Enter the skin ID to purchase:", "Next", "Cancle");
			if(skinid < 1 || skinid == 74 || skinid > 299) return ShowPlayerDialog(playerid, 9675, DIALOG_STYLE_INPUT, "{FFD700}Buying a skin", "Enter the skin ID to purchase:", "Next", "Cancle");
			new query[144];
			PlayerInfo[playerid][pRub] -= 80;
			PlayerInfo[playerid][pChar] = skinid;
			format(query, sizeof(query), "UPDATE `accounts` SET `pRub` = '%d', `pChar` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pRub], PlayerInfo[playerid][pChar], PlayerInfo[playerid][pID]);
			mysql_function_query(connects, query, false, "", "");
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			SendClientMessage(playerid, -1, "You have successfully purchased a skin!");
			return true;
		}
		case 9676:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You are already in a faction!");
			if(PlayerInfo[playerid][pCash] < 200000) return SendClientMessage(playerid, COLOR_WHITE, "You don�t have enough Cash to join any faction!");
			switch(listitem)
			{
				case 0: PlayerInfo[playerid][pMember] = 1;
				case 1: PlayerInfo[playerid][pMember] = 2;
				case 2: PlayerInfo[playerid][pMember] = 3;
				case 3: PlayerInfo[playerid][pMember] = 4;
				case 4: PlayerInfo[playerid][pMember] = 5;
				case 5: PlayerInfo[playerid][pMember] = 6;
				case 6: PlayerInfo[playerid][pMember] = 7;
				case 7: PlayerInfo[playerid][pMember] = 10;
				case 8: PlayerInfo[playerid][pMember] = 11;
				case 9: PlayerInfo[playerid][pMember] = 12;
				case 10: PlayerInfo[playerid][pMember] = 13;
				case 11: PlayerInfo[playerid][pMember] = 14;
				case 12: PlayerInfo[playerid][pMember] = 15;
				case 13: PlayerInfo[playerid][pMember] = 16;
				case 14: PlayerInfo[playerid][pMember] = 17;
				case 15: PlayerInfo[playerid][pMember] = 18;
				case 16: PlayerInfo[playerid][pMember] = 19;
				case 17: PlayerInfo[playerid][pMember] = 21;
				case 18: PlayerInfo[playerid][pMember] = 23;
				case 19: PlayerInfo[playerid][pMember] = 24;
				case 20: PlayerInfo[playerid][pMember] = 25;
				case 21: PlayerInfo[playerid][pMember] = 26;
				case 22: PlayerInfo[playerid][pMember] = 27;
				case 23: PlayerInfo[playerid][pMember] = 28;
			}
			for(new i;i<12;i++)
			{
				new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][i];
				if(!skinid) break;
				if(!i) format(stringer,sizeof(stringer),"Skin %d [%d]",i+1,skinid);
				else format(stringer,sizeof(stringer),"%s\nSkin %d [%d]",stringer,i+1,skinid);
			}
			ShowPlayerDialog(playerid,9677,2,PlayerInfo[playerid][pNames],stringer,"OK","");
			return true;
		}
		case 9677:
		{
			if(!response) return PlayerInfo[playerid][pMember] = 0;
			new skinid = gFractionSkin[PlayerInfo[playerid][pMember]-1][listitem];
			new string[144];
			PlayerInfo[playerid][pCash] -= 200000;
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pRank] = 1;
			PlayerInfo[playerid][pModel] = skinid;
			SetPlayerToTeamColor(playerid);
			SpawnPlayerEx(playerid);
			SendMes(playerid,-1,"%s was accepted into the faction \"%s\"",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
			SendMes(playerid,-1,"You've been accepted into the organization \"%s\"",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
			format(string, sizeof(string), "%s new member of the organization", PlayerInfo[playerid][pNames]);
			SendRadioMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
			SetPlayerSkinEx(playerid,skinid);
			switch(PlayerInfo[playerid][pMember])
			{
				case 1..4, 7, 10, 11, 19, 21, 25: PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
			}
			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '%d', `pRank` = '1', `pJob` = '0', `pModel` = '%d', `odet` = '%d', `vigs` = '%d', `pCash` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pMember],skinid,PlayerInfo[playerid][pOdet],PlayerInfo[playerid][pVigs], PlayerInfo[playerid][pRub],PlayerInfo[playerid][pID]);
			mysql_function_query(connects, mysql_query_, false, "", "");
			return true;
		}
		case 9685: {
			if(!response) return true;
			new excol;
			if(sscanf(inputtext, "d", excol)) return true;
			new expcol = (PlayerInfo[playerid][pLevel] + 1) * levelexp;
			new ost = expcol - PlayerInfo[playerid][pExp];
			if(excol < 1 || excol > ost) return SendClientMessage(playerid, COLOR_WHITE, "Never less than 1 or more than the number of Exp available for your level!");
			if(excol * 5 > PlayerInfo[playerid][pRub]) return SendClientMessage(playerid, COLOR_WHITE, "Insufficient funds!");
			new string[144];
			PlayerInfo[playerid][pExp] += excol;
			PlayerInfo[playerid][pRub] -= excol * 5;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			format(string, sizeof(string), "You have successfully purchased %d EXP for %d rubles", excol, excol * 5);
			SendClientMessage(playerid, COLOR_WHITE, string);
			if(PlayerInfo[playerid][pExp] >= expcol)
			{
				PlayerInfo[playerid][pLevel] += 1;
				PlayerInfo[playerid][pExp] = 0;
				SendClientMessage(playerid,COLOR_WHITE,"Your game lvl has increased.");
			}
			return true;
		}
		case 9973: {
			if(!response) return MainMenuPl(playerid);
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][Settings][1] == 0) PlayerInfo[playerid][Settings][1] = 1;
					else PlayerInfo[playerid][Settings][1] = 0;
				}
				case 1: {
					if(PlayerInfo[playerid][Settings][5] == 1) {
						PlayerInfo[playerid][Settings][5] = 0;
					}
					else {
						PlayerInfo[playerid][Settings][5] = 1;
					}
				}
				case 2: {
					if(PlayerInfo[playerid][Settings][0] == 0) {
						PlayerInfo[playerid][Settings][0] = 1;
						foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid,i,false);
					}
					else {
						PlayerInfo[playerid][Settings][0] = 0;
						foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid,i,true);
					}
				}
				case 3: return ShowPlayerDialog(playerid, 9974, 2, "{FFD700}Charchter setting", "{ffffff}[1] {AFAFAF}Standard spawn\n{ffffff}[2] {AFAFAF}Faction", "Further", "Close");
				case 4: return ShowPlayerDialog(playerid, 9975, 2, "{FFD700}Walk adjustment", "{ffffff}[1] {AFAFAF}Standard\n{ffffff}[2] {AFAFAF}Walk 1\n{ffffff}[2] {AFAFAF}Walk 2\n{ffffff}[3] {AFAFAF}Walk 3\n{ffffff}[4] {AFAFAF}Walk 4\n{ffffff}[5] {AFAFAF}Walk 5\n{ffffff}[6] {AFAFAF}Walk 6\n{ffffff}[7] {AFAFAF}Walk 7\n{ffffff}[8] {AFAFAF}Walk 8\n{ffffff}[9] {AFAFAF}Walk 9\n{ffffff}[10] {AFAFAF}Walk 10\n{ffffff}[11] {AFAFAF}Walk 11", "Further", "Close");
				case 5: return ShowPlayerDialog(playerid, 9976, 2, "{FFD700}Style settings", "{ffffff}[1] {AFAFAF}Standard\n{ffffff}[2] {AFAFAF}Style 1\n{ffffff}[3] {AFAFAF}Style 2\n{ffffff}[4] {AFAFAF}Style 3\n{ffffff}[5] {AFAFAF}Style 4\n{ffffff}[6] {AFAFAF}Style 5\n{ffffff}[7] {AFAFAF}Style 6", "Further", "Close");
				case 6: return ShowPlayerDialog(playerid, 9981, 2, "{FFD700}Changing the time", "0:00\n1:00\n2:00\n3:00\n4:00\n5:00\n6:00\n7:00\n8:00\n9:00\n10:00\n11:00\n12:00\n13:00\n14:00\n15:00\n16:00\n17:00\n18:00\n19:00\n20:00\n21:00\n22:00\n23:00", "Install", "Cancle");
				case 7:
				{
					for(new i=0;i<25;i++) SendClientMessage(playerid, COLOR_GREY, " ");
					return SendClientMessage(playerid, COLOR_LIGHTRED, "You have cleared your chat.");
				}
			}
			format(stringer1,sizeof(stringer1),"%d, %d, %d, %d, %d, %d, %d",PlayerInfo[playerid][Settings][0],PlayerInfo[playerid][Settings][1],PlayerInfo[playerid][Settings][2],
			PlayerInfo[playerid][Settings][3],PlayerInfo[playerid][Settings][4], PlayerInfo[playerid][Settings][5], PlayerInfo[playerid][Settings][6]);
			mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT" SET settings = '%s' WHERE `pID` = '%d'",stringer1,PlayerInfo[playerid][pID]);
			mysql_function_query(connects, mysql_query_, false, "", "");
			showSettings(playerid);
		}
		case 9977: {
			if(!response) return true;
			SetPlayerWeather(playerid, listitem);
			return true;
		}
		case 9981: {
			if(!response) return true;
			switch(listitem) {
				case 0: SetPlayerTime(playerid, 0, 0);
				case 1: SetPlayerTime(playerid, 1, 0);
				case 2: SetPlayerTime(playerid, 2, 0);
				case 3: SetPlayerTime(playerid, 3, 0);
				case 4: SetPlayerTime(playerid, 4, 0);
				case 5: SetPlayerTime(playerid, 5, 0);
				case 6: SetPlayerTime(playerid, 6, 0);
				case 7: SetPlayerTime(playerid, 7, 0);
				case 8: SetPlayerTime(playerid, 8, 0);
				case 9: SetPlayerTime(playerid, 9, 0);
				case 10: SetPlayerTime(playerid, 10, 0);
				case 11: SetPlayerTime(playerid, 11, 0);
				case 12: SetPlayerTime(playerid, 12, 0);
				case 13: SetPlayerTime(playerid, 13, 0);
				case 14: SetPlayerTime(playerid, 14, 0);
				case 15: SetPlayerTime(playerid, 15, 0);
				case 16: SetPlayerTime(playerid, 16, 0);
				case 17: SetPlayerTime(playerid, 17, 0);
				case 18: SetPlayerTime(playerid, 18, 0);
				case 19: SetPlayerTime(playerid, 19, 0);
				case 20: SetPlayerTime(playerid, 20, 0);
				case 21: SetPlayerTime(playerid, 21, 0);
				case 22: SetPlayerTime(playerid, 22, 0);
				case 23: SetPlayerTime(playerid, 23, 0);
			}
			return true;
		}
		case 9974: {
		    	if(!response) return 1;
      			switch(listitem) {
		        	case 0,1: {
		            	if(listitem == 1 && PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid,-1,"You must be in an organization!");
				    	PlayerInfo[playerid][Settings][2] = listitem;
				    	SendClientMessage(playerid,-1,"You have chosen a new spawn location for your character!");
				    	format(stringer1,sizeof(stringer1),"%d, %d, %d, %d, %d, %d, %d",PlayerInfo[playerid][Settings][0],PlayerInfo[playerid][Settings][1],PlayerInfo[playerid][Settings][2],
		    	    	PlayerInfo[playerid][Settings][3],PlayerInfo[playerid][Settings][4], PlayerInfo[playerid][Settings][5], PlayerInfo[playerid][Settings][6]);
				    	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT" SET settings = '%s' WHERE `pID` = '%d'",stringer1,PlayerInfo[playerid][pID]);
				    	mysql_function_query(connects, mysql_query_, false, "", "");
						showSettings(playerid);
		        	}
		    	}
			}
		case 9975: {
		    	if(!response) return 1;
		    	PlayerInfo[playerid][Settings][3] = listitem;
		    	SendClientMessage(playerid,-1,"You have changed your walking style!");
		    	format(stringer1,sizeof(stringer1),"%d, %d, %d, %d, %d, %d, %d",PlayerInfo[playerid][Settings][0],PlayerInfo[playerid][Settings][1],PlayerInfo[playerid][Settings][2],
 	    	    PlayerInfo[playerid][Settings][3],PlayerInfo[playerid][Settings][4], PlayerInfo[playerid][Settings][5], PlayerInfo[playerid][Settings][6]);
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT" SET settings = '%s' WHERE `pID` = '%d'",stringer1,PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				showSettings(playerid);
			}
		case 9976: {
		    	if(!response) return 1;
		    	PlayerInfo[playerid][Settings][4] = listitem;
		    	SendClientMessage(playerid,-1,"You have changed your speaking style!");
		    	format(stringer1,sizeof(stringer1),"%d, %d, %d, %d, %d, %d, %d",PlayerInfo[playerid][Settings][0],PlayerInfo[playerid][Settings][1],PlayerInfo[playerid][Settings][2],
 	    	    PlayerInfo[playerid][Settings][3],PlayerInfo[playerid][Settings][4], PlayerInfo[playerid][Settings][5], PlayerInfo[playerid][Settings][6]);
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT" SET settings = '%s' WHERE `pID` = '%d'",stringer1,PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				showSettings(playerid);
			}
		case 84:
			{
		    	if(!response) return MainMenuPl(playerid);
		    	format(stringer1, sizeof(stringer1), "{328fed}[1] {FFFFFF}Information about taking an account\n{328fed}[2] {FFFFFF}Safety | %s\n{328fed}[3] {FFFFFF}Change the game password", (PlayerInfo[playerid][pCheckIp]) ? ("{00D900}Activated") : ("{FF0000}Active"));
				return ShowPlayerDialog(playerid, 85, DIALOG_STYLE_LIST, "{FFD700}Actions with account", stringer1, "Select", "Cancle");
			}
		case 85:
			{
		    	if(!response) return true;
		    	switch(listitem)
		    	{
		    		case 0:
					{
						if(!PlayerInfo[playerid][pCheckIp]) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}[ERROR] {ffffff}You have not activated the safety switch!");
						format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_CAPTCHALOG"` WHERE `account` = '%d' ORDER BY `"TABLE_CAPTCHALOG"`.`id` DESC LIMIT 10", PlayerInfo[playerid][pID]);
                        mysql_tquery(connects, mysql_query_, "Logs", "iii", playerid, 2, 0);
		    			return true;
					}
		        	case 1:
		        	{
		        		if(PlayerInfo[playerid][pCheckIp])
						{
					    	SendClientMessage(playerid, COLOR_WHITE, "The safety switch has been successfully deactivated");
					    	strmid(PlayerInfo[playerid][pKeyIp],"", 0, strlen(""), 32);
					    	PlayerInfo[playerid][pCheckIp] = 0;
					    	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `checkip` = '%d', `keyip` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pCheckIp], PlayerInfo[playerid][pKeyIp], PlayerInfo[playerid][pID]);
							mysql_function_query(connects, mysql_query_, false, "", "");
					    	return true;
						}
						if(strlen(PlayerInfo[playerid][pKeyIp]) <= 0) ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Safety code", "{FFFFFF}Safety code - This is your personal code that you have to remember.\nThrough the safety code, do not run the auto-change.\n\n{328fed}[1] {FFFFFF}The safe code is based on 5 digits.\n{328fed}[2] {FFFFFF}Do not use in safe source code\n{328fed}[3] {FFFFFF}Use in Safe Code Only Combinations of Digits.", "Accept", "");
                        return Capcha(playerid);
					}
					case 2: ShowPlayerDialog(playerid,156,DIALOG_STYLE_PASSWORD, "{FFD700}Change password", "{CCFF00}Caution!\n{FFFFFF}To change the password, you don�t need to change your password..", "Accept", "Back");
				}
			}
		case 155:
			{
				if(!response) {
                    format(stringer1, sizeof(stringer1), "{328fed}[1] {FFFFFF}Information about taking an account\n{328fed}[2] {FFFFFF}Safety | %s\n{328fed}[3] {FFFFFF}Change the game password", (PlayerInfo[playerid][pCheckIp]) ? ("{00D900}�����������") : ("{FF0000}�������������"));
					return ShowPlayerDialog(playerid, 85, DIALOG_STYLE_LIST, "{FF6F00}Actions with account", stringer1, "Select", "Cancle");
				}
				if(strlen(inputtext) < 6 || strlen(inputtext) > 64) return ShowPlayerDialog(playerid,155,DIALOG_STYLE_INPUT, "{FFCC00}Change password", "{FF6347}The length of the password is as long as 6 to 64 characters.\n{00FF21}Karol will erase any letters, special. Symbols and digits.\n{CCFF00}Try it once!", "Accept", "Back");
				for(new i; i < 10; i++) PlayerInfo[playerid][pSalt][i] = random(79) + 47;
				PlayerInfo[playerid][pSalt][10] = 0;
				SHA256_PassHash(inputtext, PlayerInfo[playerid][pSalt], PlayerInfo[playerid][pPassword], 65);
				mysql_format(connects,mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `password` = '%e', `salt` = '%e' WHERE `pID` = '%d'",PlayerInfo[playerid][pPassword], PlayerInfo[playerid][pSalt], PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				return SendMes(playerid, -1, "When you change your game password to: {FFFFFF}%s", inputtext);
			}
		case 156:
			{
				if(!response) return 1;
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 64) return ShowPlayerDialog(playerid,156,DIALOG_STYLE_PASSWORD, "{FFCC00}Change Password", "{CCFF00}Attention!\n{FFFFFF}In order to change your password, you need to enter your previous password.", "Accept", "Back");
				new hash[65];
        		SHA256_PassHash(inputtext, PlayerInfo[playerid][pSalt], hash, 65);
				if(!strcmp(hash, PlayerInfo[playerid][pPassword])) {
					return ShowPlayerDialog(playerid,155,DIALOG_STYLE_INPUT, "{FFCC00}Change password", "{FFFFFF}Enter your new password from your account.\n{CCFF00}Write it on the dotted line!\n{CCFF00}Please, make a scan before pressing 'Accept'.", "Accept", "Back");
  				}
				else return ShowPlayerDialog(playerid,156,DIALOG_STYLE_PASSWORD, "{FFCC00}Change Password", "{CCFF00}Attention!\n{FFFFFF}In order to change your password, you need to enter your previous password.", "Accept", "Back");
			}
		case 2991:
		{
			if(!response) return KickEx(playerid);
			if(strval(inputtext) < 1000 || strval(inputtext) > 9999) return ShowPlayerDialog(playerid, 2991, DIALOG_STYLE_INPUT, "{FF0000}Admin registration", "{FFFFFF}Come up with a 4-digit password for Login in the admin panel\n{FFFFFF}Enter it in the box below:\n", "Next", "Exit");
			PlayerInfo[playerid][pDostup] = strval(inputtext);
			new query[256];
			format(query, sizeof(query), "UPDATE `accounts` SET `pDostup` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pDostup], PlayerInfo[playerid][pID]);
			mysql_function_query(connects, query, false, "", "");
			SendClientMessage(playerid, COLOR_WHITE, "{0099CC}Password has been successfully set! Please type {FFFF00}/alogin{0099CC} to log in with it!");
			return callcmd::alogin(playerid);
		}
		case 10002:
			{
		    	if(response)
		    	{
          			switch(listitem)
		        	{
		            	case 0: GivePlayerWeapon(playerid, 24, 75);
		            	case 1: GivePlayerWeapon(playerid, 31, 100);
		            	case 2: GivePlayerWeapon(playerid, 25, 50);
		            	case 3: GivePlayerWeapon(playerid, 29, 100);
		           	    case 4: SetPlayerHealth(playerid, 100);
	                    case 5: SetPlayerArmour(playerid, 100);
		        	}
		    	}
			}
           	case 10007:
			{
		    	if(response)
		    	{
          			switch(listitem)
		        	{
                    	case 0: callcmd::lsp12918(playerid, "");
                    	case 1: callcmd::ls12918(playerid, "");
                    	case 2: callcmd::lv12918(playerid, "");
                    	case 3: callcmd::lspd12918(playerid, "");
                    	case 4: callcmd::lvpd12918(playerid, "");
                    	case 5: callcmd::sfpd12918(playerid, "");
                    	case 6: callcmd::cameraoff(playerid, "");
		        	}
		    	}
			}
			case 5655:
			{
		    	if(response)
		    	{
          			switch(listitem)
		        	{
                    	case 0: SetPlayerCheckpoint(playerid,504.9208,-1816.0354,5.7904,0.6);
                    	case 1: SetPlayerCheckpoint(playerid,-91.1709,-1576.5309,2.6172,0.6);
                    	case 2: SetPlayerCheckpoint(playerid,1416.1952,-1703.4639,13.5395,0.6);
                    	case 3: SendClientMessage(playerid, -1, "This Job Will Be In The Server {FFFF00}Soon!!");
		        	}
		    	}
			}
		case 2934:
			{
				if(!PlayerInfo[playerid][pAlcoInvenxua] || dostup[playerid]) return true;
				if(!response || !strlen(inputtext) || strval(inputtext) != PlayerInfo[playerid][pDostup])
				{
					SetPVarInt(playerid, "AdminPass", GetPVarInt(playerid, "AdminPass") + 1);
					if(GetPVarInt(playerid, "AdminPass") >= 3)
					{
						format(stringer, sizeof(stringer), "{CCFF00}|A| %s level %d was kicked for incorrect admin password",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pAlcoInvenxua]);
						SendAdminMessage(COLOR_WHITE,stringer);
						KickEx(playerid);
						return true;
					}
					new string[300];
					format(string, sizeof(string), "{FFFFFF}You are as server adminstrator\n{f43713}The faithful password! Steel run: %d\n\n{f43713}If you have forgotten the password, restore him\n\n{FFFFFF}enter your password from the administrator in the field", 3 - GetPVarInt(playerid, "AdminPass"));
					return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_PASSWORD,"{0099CC}ADMIN Login",string,"Enter","Exit");
				}
				dostup[playerid] = 1;
				PlayerBigEarsConnect{playerid} = 1;
				Iter_Add(Admin, playerid);
				if(GetPVarInt(playerid, "AdminPass")) DeletePVar(playerid, "AdminPass");
				SendMes(playerid,0xF4B800AA, "You autorized as Adminstrator level %d", PlayerInfo[playerid][pAlcoInvenxua]);
				if(!strcmp(PlayerInfo[playerid][pNames], ""AntiBan1""))
				{
					format(stringer, sizeof(stringer), "{FFFF00}%s[%d] {4d86e8}has logged in as administrator level: {FF0000}%d",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pAlcoInvenxua]);
				}
				else if(!strcmp(PlayerInfo[playerid][pNames], ""AntiBan2""))
				{
					format(stringer, sizeof(stringer), "{FFFF00}%s[%d] {4d86e8}has logged in as administrator level: {FF0000}%d",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pAlcoInvenxua]);
				}
				else
				{
					format(stringer, sizeof(stringer), "{FFFF00}%s[%d] {4d86e8}has logged in as administrator level: {FF0000}%d",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pAlcoInvenxua],GetPlayerIpCountry(playerid),GetPlayerIpCity(playerid));
				}
				SendAdminMessage(0xCCFF00ff,stringer);
//				SetPlayerPos(playerid, -1645.4001,1624.5240,146.0187);
//				SetPlayerFacingAngle(playerid, 311.5686);
				SetPlayerSkin(playerid, 217);
				PlayerInfo[playerid][pGM] = 0;
				ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Adminstrator Login Menu","{A8C4E4}Welcome To The {FFFF00}New {2cdb0d}York {FF0000}RolePlay{A8C4E4}\n\n{A8C4E4}You are logged in as  adminstrator\n{A8C4E4}hope you don't break the adminstrator rules and help the player to get Promotion! \n{A8C4E4}To see your adminstrator commands please use {FF0000}/ahelp\n{A8C4E4}Special Thanks To Script Developer We Wish Pleasant Working On Our Server: {FFFF00}Blackrose_Rog","Close","");
				if(PlayerInfo[playerid][pVigs] > 0)	SendMes(playerid, 0xff0000ff, "{FF6600}You have %i trader(s), Some commands were locked. Take your tongue � {FFFFFF}/adonate",PlayerInfo[playerid][pVigs]); //{FF6600}�� ����� �������� �������, ��������� ������� ���� �������������.
				return true;
			}
		case D_ATUNE:
			{
				if(response)
		    	{
		        	switch(listitem)
		        	{
		            	case 0:
		            	{
							if(PlayerInfo[playerid][pProz] >= 100) return SendClientMessage(playerid, COLOR_SILVER, "Your car's engine is in good order."), ShowTuneDialog(playerid);
							new till = BizzInfo[TuneShop[playerid]][bTill] * 20;
		                	format(stringer1, sizeof(stringer1), "%d$", till*(100-PlayerInfo[playerid][pProz]));
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Engine");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], "Engine");
		                	PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                	GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
	  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, true, boot, objective);
		                	ShowTuneMenu(playerid);
		            	}
		            	case 1:
						{
					    	if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] != -1)
					    	{
								ShowPlayerDialog(playerid, D_ATUNE+1, DIALOG_STYLE_MSGBOX, "Warning", "You have a license plate on your car.\nWhen painting, it will be covered with paint.\nDo you really want to continue?", "Yes", "No");
					    	}
					    	else
					    	{
								ShowPlayerDialog(playerid, D_ATUNE+2, DIALOG_STYLE_INPUT, "Painting", "Enter the primary and secondary colors 1 and 255 through the space bar..\nExample: 14 28", "Select", "Back");
							}
						}
						case 2:
						{
					    	switch(GetVehicleModel(caridhouse[playerid]))
					    	{
					        	case 560,562,575,565,561,559,558,534,567,536,535,576:
					        	{
					            	ShowPlayerDialog(playerid, D_ATUNE+3, DIALOG_STYLE_MSGBOX, "Warning", "When you add vinyl, your color will be colorized.\nDo you really want to continue?", "Yes", "No");
					        	}
					        	default:
					        	{
					            	SendClientMessage(playerid, COLOR_SILVER, "The paint job is not available for your car");
									ShowTuneDialog(playerid);
					        	}
					    	}
						}
		            	case 3:
		            	{
		                	AddVehicleComponent(caridhouse[playerid], Nitro[0][0]);
							PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Nitro");
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Nitro[0][2]);
							format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Nitro[0][1]);
							PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
							TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
      						InterpolateCameraPos(playerid, 608.148681,1.742553, 1001.968444,618.342895,-3.137414,1003.073059, 1500);
		                	InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.096435,-0.434012,1000.407531, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
	                    	ShowTuneMenu(playerid);
						}
		            	case 4:
		            	{
		                	AddVehicleComponent(caridhouse[playerid], 1087);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Hydraulics");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], "Hydraulics");
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 500);
		                	PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 5:
		            	{
		                	AddVehicleComponent(caridhouse[playerid], 1086);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Stereo");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], "Stereo");
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 450);
		                	PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
							GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
	  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, true, objective);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
		                	ShowTuneMenu(playerid);
		            	}
		            	case 6:
		            	{
		                	new start = GetStartTypeTune(playerid, 6);
		                	ChangeTuneDetail[playerid] = start;
		                	AddVehicleComponent(caridhouse[playerid], Wheels[start][0]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Wheels");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Wheels[start][2]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Wheels[start][1]);
		                	PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                	TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,616.744934,-4.117499,1000.569702, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,616.920288,0.855340,1000.079711, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 7:
		            	{
							switch(GetVehicleModel(caridhouse[playerid]))
		                	{
								case 439,420,426,492: return SendClientMessage(playerid, COLOR_SILVER, "Unfortunately, the exhaust pipes are not available for your vehicle."), ShowTuneDialog(playerid);
		                	}
		                	new start = GetStartTypeTune(playerid, 7);
		                	ChangeTuneDetail[playerid] = start;
		                	AddVehicleComponent(caridhouse[playerid], Exhaust[start][0]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Exhaust");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Exhaust[start][2]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Exhaust[start][1]);
		                	PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                	TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,620.498657, -1.073193, 1000.572021, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.501037, -1.088341, 1000.418518, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 8:
		            	{
		            	    new start = GetStartTypeTune(playerid, 8);
		                	ChangeTuneDetail[playerid] = start;
							new model = GetVehicleModel(caridhouse[playerid]);
		                	switch(model)
		                	{
								case 560, 562, 565, 561, 559, 558, 534, 535:
								{
							    	TextDrawShowForPlayer(playerid, TuneArrow[0]);
									TextDrawShowForPlayer(playerid, TuneArrow[1]);
								}
								case 439,491,517,518,540,546,549,550,585,603,401,496,547,542:
								{
		                			AddVehicleComponent(caridhouse[playerid], Vents[start][0]);
		                			AddVehicleComponent(caridhouse[playerid], Vents[start][1]);
		                			PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Vent");
		                			PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Vents[start][2]);
		                			format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 850);
		                	        PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                			if(model != 401 && model != 496 && model != 547 && model != 542)
		                			{
		                				TextDrawShowForPlayer(playerid, TuneArrow[0]);
										TextDrawShowForPlayer(playerid, TuneArrow[1]);
									}
									InterpolateCameraPos(playerid, 608.148681,1.742553, 1001.968444,610.482177, -1.161545, 1001.931335, 1500);
		                	        InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,614.982360, -1.216045, 999.752990, 1500);
		 							if(PlayerInfo[playerid][pQuest5] == 0)
		             				{
		             					PlayerInfo[playerid][pQuest5] = 1;
			             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
		             				}
									ShowTuneMenu(playerid);
									TuneID[playerid] = listitem;
									return true;
								}
								case 400,410,478,489,500,589,404,422,436,600,420,426,492,516,551,529: return SendClientMessage(playerid, COLOR_SILVER, "Unfortunately, ventilation is not available for your vehicle.."), ShowTuneDialog(playerid);
		                	}
		                	AddVehicleComponent(caridhouse[playerid], Sideskirt[start][0]);
		                	AddVehicleComponent(caridhouse[playerid], Sideskirt[start][1]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Side Skirts");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Sideskirt[start][2]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 650);
          	                PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
 							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,615.281188,-5.337747,1001.366333, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.096435,-0.434012,1000.407531, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 9:
		            	{
		                	new start = GetStartTypeTune(playerid, 9);
		                	ChangeTuneDetail[playerid] = start;
		                	new model = GetVehicleModel(caridhouse[playerid]);
		                	switch(model)
		                	{
								case 560, 562, 575, 565, 561, 559, 558, 426, 567, 536, 576:
								{
							    	TextDrawShowForPlayer(playerid, TuneArrow[0]);
									TextDrawShowForPlayer(playerid, TuneArrow[1]);
								}
								case 400,410,478,489,500,589,404,422,436,600,401,439,518,585,540,546,603:
								{
									AddVehicleComponent(caridhouse[playerid], Lamps[start][0]);
		                			PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Lamps");
		                			PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Lamps[start][2]);
		                			format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Lamps[start][1]);
          	                        PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                			switch(model)
									{
										case 400,410,478,489,500,589:
										{
		                					TextDrawShowForPlayer(playerid, TuneArrow[0]);
											TextDrawShowForPlayer(playerid, TuneArrow[1]);
										}
									}
		 							if(PlayerInfo[playerid][pQuest5] == 0)
		             				{
		             					PlayerInfo[playerid][pQuest5] = 1;
			             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
		             				}
									ShowTuneMenu(playerid);
									TuneID[playerid] = listitem;
									return true;
								}
								case 491,517,549,550,496,547,542,420,492,516,551,529: return SendClientMessage(playerid, COLOR_SILVER, "Unfortunately, optional headlights are not available for your vehicle.."), ShowTuneDialog(playerid);
		                	}
		                	AddVehicleComponent(caridhouse[playerid], FrontBumper[start][0]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Front Bumper");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], FrontBumper[start][1]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 400);
          	                PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
 							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,609.310607,-1.098132,1001.088989, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,614.270080,-1.076863,1000.454101, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 10:
		            	{
						    new start = GetStartTypeTune(playerid, 10);
						    ChangeTuneDetail[playerid] = start;
						    new model = GetVehicleModel(caridhouse[playerid]);
		                	switch(model)
		                	{
								case 401,420,426,492,550,589,600,478,516,540,546,489,518,551,496,529,549:
								{
		                			AddVehicleComponent(caridhouse[playerid], Hood[start][0]);
		                			PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Hood");
		                			PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Hood[start][1]);
		                			format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 990);
          	                        PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                			if(model != 516 && model != 540 && model != 546 && model != 489 && model != 518 && model != 551 && model != 496)
		                			{
		                				TextDrawShowForPlayer(playerid, TuneArrow[0]);
										TextDrawShowForPlayer(playerid, TuneArrow[1]);
									}
									InterpolateCameraPos(playerid, 608.148681,1.742553, 1001.968444,610.482177, -1.161545, 1001.931335, 1500);
		                	        InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,614.982360, -1.216045, 999.752990, 1500);
		 							if(PlayerInfo[playerid][pQuest5] == 0)
		             				{
		             					PlayerInfo[playerid][pQuest5] = 1;
			             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
		             				}
									ShowTuneMenu(playerid);
									TuneID[playerid] = listitem;
									return true;
								}
								case 535,439,491,517,585,603,547,542,400,410,500,404,422,436: return SendClientMessage(playerid, COLOR_SILVER, "Sorry, the hood is not available for your vehicle.."), ShowTuneDialog(playerid);
		                	}
			                AddVehicleComponent(caridhouse[playerid], RearBumper[start][0]);
			                PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Rear Bumper");
			                PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], RearBumper[start][1]);
			                format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 690);
                            PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
			                TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,620.983703, -1.042761, 1000.860351, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.987792, -1.221915, 1000.767822, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 11:
		            	{
		                	new start = GetStartTypeTune(playerid, 11);
		                	ChangeTuneDetail[playerid] = start;
		                	AddVehicleComponent(caridhouse[playerid], Roof[start][0]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Roof");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Roof[start][1]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 790);
                            PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                	TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,611.069030,-1.105961,1002.401916, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.851745,-1.128729,1000.944213, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
		            	case 12:
		            	{
		                	new start = GetStartTypeTune(playerid, 12);
		                	ChangeTuneDetail[playerid] = start;
		                	AddVehicleComponent(caridhouse[playerid], Spoiler[start][0]);
		                	PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Spoiler");
		                	PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Spoiler[start][1]);
		                	format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 1000);
                            PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
		                	TextDrawShowForPlayer(playerid, TuneArrow[0]);
							TextDrawShowForPlayer(playerid, TuneArrow[1]);
							InterpolateCameraPos(playerid, 608.148681,1.742553,1001.968444,620.206481,-1.130074,1001.853393, 1500);
							InterpolateCameraLookAt(playerid, 612.557067,-0.474712,1001.162170,615.385192,-1.050681,1000.530883, 1500);
 							if(PlayerInfo[playerid][pQuest5] == 0)
             				{
             					PlayerInfo[playerid][pQuest5] = 1;
	             				UpdatePlayerData(playerid, "pQuest5", PlayerInfo[playerid][pQuest5]);
             				}
							ShowTuneMenu(playerid);
		            	}
					}
					TuneID[playerid] = listitem;
				}
				else
				{
					if(caridhouse[playerid] == INVALID_VEHICLE_ID) return TuneID[playerid] = -1, SpawnPlayerEx(playerid);
			    	switch(TuneShop[playerid])
			    	{
			        	case 84:
			        	{
			            	SetVehicleEE(caridhouse[playerid], 944.4412,-1738.9734,13.1795);
			            	SetVehicleZAngleEx(caridhouse[playerid], 92.7119);
			        	}
			        	case 85:
			        	{
			            	SetVehicleEE(caridhouse[playerid], -1786.8325,1206.1458,24.8889);
			            	SetVehicleZAngleEx(caridhouse[playerid], 180.0444);
			        	}
			        	case 86:
			        	{
			            	SetVehicleEE(caridhouse[playerid], 1649.3677,2197.4707,10.5478);
			            	SetVehicleZAngleEx(caridhouse[playerid], 180.0778);
			        	}
			    	}
			    	SetCameraBehindPlayer(playerid);
			    	LinkVehicleToInterior(caridhouse[playerid], 0);
			    	SetVehicleVirtualWorld(caridhouse[playerid], 0);
					SetPlayerInteriorEx(playerid, 0);
					SetPlayerVirtualWorldEx(playerid, 0);
					TuneID[playerid] = -1;
					SaveBizz(TuneShop[playerid]);
	   				TuneShop[playerid] = 0;
					UpdateSpeedometr(playerid, 0);
					for(new i; i < 18; i++) PlayerTextDrawShow(playerid, td_speed[playerid][i]);
					SaveVehicleTuning(playerid, GetPVarInt(playerid,"CarNomer"));
				}
			}
		case D_ATUNE+1:
			{
		    	if(response)
		    	{
		        	ShowPlayerDialog(playerid, D_ATUNE+2, DIALOG_STYLE_INPUT, "Painting", "Enter the primary and secondary colors 1 and 255 through the space bar.\nExample: 14 28", "Select", "Back");
		    	}
		    	else
		    	{
		        	ShowTuneDialog(playerid);
		    	}
			}
		case D_ATUNE+2:
			{
		    	if(!response) return ShowTuneDialog(playerid);
		        new color[2];
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_ATUNE+2, DIALOG_STYLE_INPUT, "Painting", "Enter the primary and secondary ID color 1 and 255 through the space bar\nExample: 14 28", "Select", "Back");
		        if(sscanf(inputtext, "dd", color[0], color[1])) return ShowPlayerDialog(playerid, D_ATUNE+2, DIALOG_STYLE_INPUT, "Painting", "Enter the primary and secondary colors 1 and 255 through the space bar.\nExample: 14 28", "Select", "Back");
				if(color[0] < 0 || color[1] > 255) return ShowPlayerDialog(playerid, D_ATUNE+2, DIALOG_STYLE_INPUT, "Painting", "Enter the primary and secondary colors 1 and 255 through the space bar\nExample: 14 28", "Select", "Back");
				{
				    TuneColor[playerid][0] = color[0];
				    TuneColor[playerid][1] = color[1];
				    ChangeVehiclePaintjob(caridhouse[playerid], 3);
				    format(stringer1, sizeof(stringer1), "Colors(%d,%d)", color[0], color[1]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], stringer1);
	                PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Painting");
	                format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 100);
	                PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
	                ChangeVehicleColor(caridhouse[playerid], color[0], color[1]);
	                ShowTuneMenu(playerid);
				}
			}
			case D_ATUNE+3:
			{
		    	if(!response) return ShowTuneDialog(playerid);
		        ChangeVehiclePaintjob(caridhouse[playerid], 0);
			    PlayerTextDrawSetString(playerid, TuneTypeShow[playerid], "Vinyl Stickers");
				PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], "Sticker 1");
				format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * 300);
				PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				TextDrawShowForPlayer(playerid, TuneArrow[0]);
				TextDrawShowForPlayer(playerid, TuneArrow[1]);
				ShowTuneMenu(playerid);
			}
		case 9000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
//								SetVehicleEE(tmpcar, -729.276000,503.086944,1371.971801);
								SetVehicleEE(tmpcar, 1538.3015,-1361.0278,170.7159);
								return true;
							}
//							else SetPPos(playerid, -729.276000,503.086944,1371.971801);
							SetPlayerPos(playerid, 1538.3015,-1361.0278,170.7159);
							SetPlayerFacingAngle(playerid, 311.5686);
							SetPlayerVirtualWorld(playerid, 0);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							return true;
						}
					case 1: ShowPlayerDialog(playerid, 5000, 2, "{FFCC00}Events", "[1] Derby\n[2] RC Battlefield\n[3] Bridge\n[4] Skyscraper\n[5] Jefferson Motel\n[6] SF Gym\n[7] Meat factory\n[8] Under the bridge\n[9] 8-Track\n[10] Ship\n[11] Jizzy Club\n[12] Alhamra Club\n[13] LS Beach\n[14] Cell", "Select", "Back");
					case 2: ShowPlayerDialog(playerid, 4000, 2, "{FFCC00}Organizations bases", "[1] Government\n[2] City hall\n[3] FBI\n[4] SWAT\n[5] LSPD\n[6] SFPD\n[7] LVPD\n[8] Ministry of Emergency Situations LS\n[9] Instructors\n[10] SA News\n[11] SFA\n[12] LVA\n[13] Mafia LCN\n[14] Mafia Yakuza\n[15] Russian Mafia\n[16] Los Santos Vagos\n[17] Ballas Gang\n[18] The Grove\n[19] The Aztec\n[20] Rifa Gang\n[21] Funeral agency\n[22] Street racers\n[23] Casino Four Dragons\n[24] Casino Caligulas", "Select", "Back");
					case 3:
						{
							if (GetPlayerState(playerid) == 2)//VineWood
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1510.1595,-848.2604,65.5188);
								return true;
							}
							else SetPPos(playerid, 1510.1595,-848.2604,65.5188);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 4:
						{
							if (GetPlayerState(playerid) == 2)//����� ��
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2026.0707,179.2475,28.8359);
								return true;
							}
							else SetPPos(playerid, -2026.0707,179.2475,28.8359);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 5:
						{
							if (GetPlayerState(playerid) == 2)//����� ��
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2016.5942,1545.1952,10.8308);
								return true;
							}
							else SetPPos(playerid, 2016.5942,1545.1952,10.8308);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 6:
						{
							if (GetPlayerState(playerid) == 2)//(������ ���������)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2182.6470,-2276.5984,13.5337);
								return true;
							}
							else SetPPos(playerid, 2182.6470,-2276.5984,13.5337);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
						}
					case 7:
						{
							if (GetPlayerState(playerid) == 2)//(�����)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2201.7083,-1697.3547,13.6818);
								return true;
							}
							else SetPPos(playerid, 2201.7083,-1697.3547,13.6818);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 8:
						{
							if (GetPlayerState(playerid) == 2)//(���������)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -2042.7015,-92.3698,35.1718);
								return true;
							}
							else SetPPos(playerid, -2042.7015,-92.3698,35.1718);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 9:
						{
							if (GetPlayerState(playerid) == 2)//(���)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1077.7568,-2305.7173,52.3192);
								return true;
							}
							else SetPPos(playerid, -1077.7568,-2305.7173,52.3192);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 10:
						{
							if (GetPlayerState(playerid) == 2)//(����������-2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1249.2120,-1819.5248,13.4101);
								return true;
							}
							else SetPPos(playerid, 1249.2120,-1819.5248,13.4101);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 11:
						{
							if (GetPlayerState(playerid) == 2)//(�����)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1483.4178,-1743.8053,13.5469);
								return true;
							}
							else SetPPos(playerid, 1483.4178,-1743.8053,13.5469);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 12:
						{
							if (GetPlayerState(playerid) == 2)//���� ����� �����)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1420.9441,-1724.0057,30.7422);
								return true;
							}
							else SetPPos(playerid, 1420.9441,-1724.0057,30.7422);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 13:
						{
							if (GetPlayerState(playerid) == 2)//(���� 51 ���)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 82.1025,1920.3364,17.6807);
								return true;
							}
							else SetPPos(playerid, 82.1025,1920.3364,17.6807);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 14:
						{
							if (GetPlayerState(playerid) == 2)//(Casino FD)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2025.9528,1014.7761,10.8203);
								return true;
							}
							else SetPPos(playerid, 2025.9528,1014.7761,10.8203);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 15:
						{
							if (GetPlayerState(playerid) == 2)//(Casino Caligulas)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 2183.5784,1689.8947,11.0793);
								return true;
							}
							else SetPPos(playerid, 2183.5784,1689.8947,11.0793);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 16:
						{
							if (GetPlayerState(playerid) == 2)// (Ammo LS)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1359.0708,-1278.9153,13.3582);
								return true;
							}
							else SetPPos(playerid, 1359.0708,-1278.9153,13.3582);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 17:
						{
							if (GetPlayerState(playerid) == 2)//(���������)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, -1336.3948,466.9529,7.1875);
								return true;
							}
							else SetPPos(playerid, -1336.3948,466.9529,7.1875);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 18:
						{
							if (GetPlayerState(playerid) == 2)//(����� ����� 51)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 320.1389,1952.5820,17.6406);
								return true;
							}
							else SetPPos(playerid, 320.1389,1952.5820,17.6406);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					case 19:
						{
							if (GetPlayerState(playerid) == 2)//(��������)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehicleEE(tmpcar, 1630.3284,-1150.3087,24.0703);
								return true;
							}
							else SetPPos(playerid, 1630.3284,-1150.3087,24.0703);
							SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
							SetPlayerInteriorEx(playerid,0);
							SetPlayerVirtualWorldEx(playerid,0);
							return true;
						}
					}
				}
                else return true;
			}
		}
	}
	return true;
}
//-------------------------------- ����� ������� -------------------------------
public OnPlayerDisconnect(playerid, reason) {

 	KillTimer(HJLimitTimer);
	HackerJob[playerid] = 0;
	musor[playerid] = 0;
	total[playerid] = 0;

    if(PlayerInfo[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicleEx(PlayerInfo[playerid][SalonCar]), CancelSelectTextDraw(playerid);
	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);
	DestroyPlayerTD(playerid, AimNameDraw[playerid]);
	server_online--;
	if(TeamPain[playerid])
	{
		EndPaint(playerid);
		for (new i = 0; i < 13; i++) PlayerInfo[playerid][Weapon][i] = 0, PlayerInfo[playerid][Ammo][i] = 0;
	}
	foreach(Player, i)
	{
		if(PlayerInfo[i][pAlcoInvenxua] < 1) continue;
		if(gSpecID[i] == playerid) {
    	    GameTextForPlayer(i,"~w~RECON ~r~OFF~n~~r~PLAYER DISCONNECT",3000,4);
    	    TogglePlayerSpectatingEx(i,0);
		}
	}
    race_disconnect(playerid);
    if(GetPVarInt(playerid, "PlayerOnDrugs")) ClearPlayerDrugEffects(playerid);
	if(GetPVarInt(playerid, "AdminPass")) DeletePVar(playerid, "AdminPass");
    if(BaseStarting[1] == 3 && GetPVarInt(playerid, "PlayerInBase"))
    {
        Iter_Remove(BaseList, playerid);
  		PlayersInBase{0} --;
	    DeletePVar(playerid, "PlayerInBase");
    }
    if(BaseStarting[1] == 1 && GetPVarInt(playerid, "PlayerInBase"))
    {
        Iter_Remove(BaseList, playerid);
        PlayersInBase{0} -- ;
    	DeletePVar(playerid, "BasePopitka");
	    DeletePVar(playerid, "PlayerInBase");
		if (PlayersInBase{0} == 0)
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3,"BASE jumping is over.");
        	foreach(new s: BaseList) Iter_Remove(BaseList, s);
		    BaseStarting[1] = 0;
		}
    }
    if(GetPVarInt(playerid, "rentrc") == 1)
    {
        DestroyVehicleEx(vehiclerc[playerid]);
        DeletePVar(playerid, "rentrc");
    }
    if(spike_objects[playerid] != 0)
    {
        DestroyDynamicObject(spike_objects[playerid]);
        DestroyDynamicArea(spike_areas[playerid]);
        spike_objects[playerid] = 0;
        spike_areas[playerid] = 0;
    }
    if(RaceStarting[2] == 3 && GetPVarInt(playerid, "PlayerInRace"))
    {
        DeletePVar(playerid, "PlayerInRace");
        Iter_Remove(RacersList, playerid);
        PlayerScore{playerid} = 0;
        PlayersInRace{0} --;
        PlayerPosition{playerid} = 0;
    }
    new GotPVar = GetPVarInt(playerid, "TempFollowBy");
    if(FollowBy[playerid] != INVALID_PLAYER_ID)
    {
        KillTimer(TimerForPlayer[playerid]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        SendClientMessage(FollowBy[playerid], COLOR_LIGHTBLUE, "Arrested man down on the server!");
        TimerForPlayer[playerid] = INVALID_PLAYER_ID;
        FollowBy[playerid] = INVALID_PLAYER_ID;
    }
    else if(GotPVar != -1)
    {
        KillTimer(TimerForPlayer[GotPVar]);
        SendClientMessage(GotPVar, COLOR_LIGHTBLUE, "You're free to go, Mr. Killer's gone off the server!");
        TimerForPlayer[GotPVar] = INVALID_PLAYER_ID;
        FollowBy[GotPVar] = INVALID_PLAYER_ID;
        TogglePlayerControllable(GotPVar, 1);
		ClearAnimations(GotPVar);
		SetPVarInt(playerid, "TempFollowBy", -1);
    }
    if(GetPVarType(playerid, "PlacedBB"))
    {
        DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
        DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
        if(GetPVarType(playerid, "BBArea"))
        {
            foreach(new i: Player)
            {
                if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
                {
                    StopAudioStreamForPlayer(i);
                    SendClientMessage(i, COLOR_LIGHTBLUE, "The player has left the game, the magnet is turned off.");
                }
            }
        }
    }
	if(robbankstime[playerid] > 0) robbanks = 0;
	if(robjewelstime[playerid] > 0) robjewels = 0;
	if(IsACop(playerid)) zakonn --;
	if(ContractInfo[playerid][cHitman] != INVALID_PLAYER_ID)
	{
		if(IsPlayerConnected(ContractInfo[playerid][cHitman]))
		{
			SendMes(ContractInfo[playerid][cHitman],COLOR_YELLOW,"~~~ Victim %s[%d] out of the game ~~~", PlayerInfo[playerid][pNames],playerid);
			ContractInfo[ContractInfo[playerid][cHitman]][cZakaz] = INVALID_PLAYER_ID;
		}
	}
	if(PlayerInfo[playerid][pAlcoInvenxua] > 0)
	{
		format(stringer1, sizeof(stringer1), "{CCFF00}Adminstrator %s out of the game (%d LEVEL) | Played: %d hour and %d min",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pAlcoInvenxua],PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60);
		SendAdminMessage(COLOR_WHITE,stringer1);
		Iter_Remove(Admin, playerid);
	}
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
		DeletePVar(playerid, "ProductID");
	}
	new strstre[50];
	new year, month,day,hour,minuite,second;
	getdate(year, month, day);
	gettime(hour,minuite,second);
	format(strstre,sizeof(strstre),"%d/%d/%d %d:%d",day,month,year,hour,minuite);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pOnline` = '1001', `pGetonDate` = '%s' WHERE `pID` = '%d'",strstre,PlayerInfo[playerid][pID]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	if(PlayerCuffed[playerid] > 0 && PlayerInfo[playerid][pWanted] > 0 || Tazer[playerid] > 0 && PlayerInfo[playerid][pWanted] > 0)
	{
		PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted]*600;
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pCash] -= 1000000;
		PlayerInfo[playerid][pMestoJail] = 2;
	}
	if(GetPVarInt(playerid,"GzOn") == 1)
	{
		SetPVarInt(playerid,"GzOn",0);
		for(new x; x < 5; x++) PlayerTextDrawDestroy(playerid, CaptureTD[playerid][x]);
		ClearKillFeed(playerid);
	}
	if(GetPVarInt(playerid,"rbinfo"))
 	{
  		DestroyDynamicObject(GetPVarInt(playerid, "rb_obkect"));
  		DeletePVar(playerid, "rbinfo");
  		DeletePVar(playerid, "rb_obkect");
  		rbtime[playerid] = 0;
        DestroyDynamic3DTextLabel(Text3D:blocktext[playerid]);
	}
	if(PlayerTied[playerid] > 0)
	{
		PlayerInfo[playerid][pJailTime] = 1800;
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pMestoJail] = 2;
	}
	if(AlhambraDJ == true && AlhambraDJID == playerid) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
	if(JizzyDJ == true && JizzyDJID == playerid) JizzyDJ = false, JizzyDJID = INVALID_PLAYER_ID;
	if(boy[playerid] == 1)
	{
	    ring = 0;
	    boy[playerid] = 0;
	    boy[fightid[playerid]] = 0;
		TimeBox[playerid] = 0;
		TimeBoxAll[playerid] = 0;
		TimeBox[fightid[playerid]] = 0;
		TimeBoxAll[fightid[playerid]] = 0;
		SetPPos(fightid[playerid],770.7488,6.9432,1000.7118);
		SetPlayerFacingAngle(fightid[playerid], 90.0);
		switch(PlayerInfo[fightid[playerid]][pFightSkil])
		{
		    case 0..49: PlayerInfo[fightid[playerid]][pFightSkil]++, PlayerInfo[fightid[playerid]][pFightTime]= 600;
		    case 50: PlayerInfo[fightid[playerid]][pFightSkill]++, PlayerInfo[fightid[playerid]][pFightTime]= 600;
		    case 51..99: PlayerInfo[fightid[playerid]][pFightSkil]++, PlayerInfo[fightid[playerid]][pFightTime]= 540;
		    case 100: PlayerInfo[fightid[playerid]][pFightSkill]++, PlayerInfo[fightid[playerid]][pFightTime]= 540;
		    case 101..149: PlayerInfo[fightid[playerid]][pFightSkil]++, PlayerInfo[fightid[playerid]][pFightTime]= 480;
		    case 150: PlayerInfo[fightid[playerid]][pFightSkill]++, PlayerInfo[fightid[playerid]][pFightTime]= 480;
		    case 151..199: PlayerInfo[fightid[playerid]][pFightSkil]++, PlayerInfo[fightid[playerid]][pFightTime]= 420;
		    case 200: PlayerInfo[fightid[playerid]][pFightSkill]++, PlayerInfo[fightid[playerid]][pFightTime]= 420;
		}
		SendMes(fightid[playerid],COLOR_LIGHTRED," Your opponent is out of the ring. Time to follow. fight: %d seconds", PlayerInfo[fightid[playerid]][pFightTime]);
		PlayerInfo[playerid][pFightTime] = 600;
		TogglePlayerControllable(fightid[playerid], 0);
		fightid[fightid[playerid]] = INVALID_PLAYER_ID;
		fightid[playerid] = INVALID_PLAYER_ID;
	}
	AntiFakeKill[playerid] = false;
	new slot;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!gReconnectTime[i]) {slot = i; break;}
	}
	format(gReconnectIP[slot],16,"%s",PlayerInfo[playerid][pIP]);
	gReconnectTime[slot] = 5;
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	if(caridhouse[playerid] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(caridhouse[playerid]);
		caridhouse[playerid] = INVALID_VEHICLE_ID;
	}
	if(GetPVarInt(playerid, "ArendKey") != -1)
	{
		if(ArendInfo[GetPVarInt(playerid, "ArendKey")][aPlayerID] == playerid)
		{
			ArendInfo[GetPVarInt(playerid, "ArendKey")][aPlayerID] = INVALID_PLAYER_ID;
            SetVehicleToRespawn(ArendInfo[GetPVarInt(playerid, "ArendKey")][aID]);
		}
    }
	for(new i=0;i<3;i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	if(PlayerInfo[playerid][pJob] == 7) PlayerInfo[playerid][pJob] = 0;
	if(SelectChar[playerid] == INVALID_PLAYER_ID)
	{
		SetPlayerSkinEx(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	ExitCasino(playerid);
	if(ChangeAll[playerid][cBuyer] != INVALID_PLAYER_ID)
	{
		ChangeAll[ChangeAll[playerid][cBuyer]][cSeller] = INVALID_PLAYER_ID;
		ChangeAll[ChangeAll[playerid][cBuyer]][cPrice] = 0;
		ChangeAll[ChangeAll[playerid][cBuyer]][cType] = 0;
		ChangeAll[playerid][cBuyer] = INVALID_PLAYER_ID;
	}
	if(GetPVarInt(playerid, "CarPrice")) SELL[0][GetPVarInt(playerid, "CarPlayer")] = INVALID_PLAYER_ID;
	if(GetPVarInt(playerid, "HHouseMoney")) SELL[1][GetPVarInt(playerid, "HHouse")] = INVALID_PLAYER_ID;
	if(GetPVarInt(playerid, "PBizzMoney")) SELL[2][GetPVarInt(playerid, "PBizz")] = INVALID_PLAYER_ID;
	if(SELL[0][playerid] != INVALID_PLAYER_ID)
	{
//		ShowPlayerDialog(SELL[0][playerid],65535,DIALOG_STYLE_MSGBOX,"1","1","","");
		SetPVarInt(SELL[0][playerid], "USEDIALOGID", 0);
		DeletePVar(SELL[0][playerid], "CarPrice");
		DeletePVar(SELL[0][playerid], "CarPlayer");
		SELL[0][playerid] = INVALID_PLAYER_ID;
	}
	if(SELL[1][playerid] != INVALID_PLAYER_ID)
	{
//		ShowPlayerDialog(SELL[1][playerid],65535,DIALOG_STYLE_MSGBOX,"1","1","","");
		SetPVarInt(SELL[1][playerid], "USEDIALOGID", 0);
		DeletePVar(SELL[1][playerid], "HHouse");
		DeletePVar(SELL[1][playerid], "HHouseMoney");
		SELL[1][playerid] = INVALID_PLAYER_ID;
	}
	if(SELL[2][playerid] != INVALID_PLAYER_ID)
	{
//		ShowPlayerDialog(SELL[2][playerid],65535,DIALOG_STYLE_MSGBOX,"1","1","","");
		SetPVarInt(SELL[2][playerid], "USEDIALOGID", 0);
		DeletePVar(SELL[2][playerid], "PBizz");
		DeletePVar(SELL[2][playerid], "PBizzMoney");
		SELL[2][playerid] = INVALID_PLAYER_ID;
	}
	if(PlayerInfo[playerid][pFamily])family_info [ PlayerInfo[playerid][pFamily] ] [ f_online ]--;
	soglasen[playerid] = 0;
	PlayerInfo[playerid][pMask] = 0;
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	PicCP[playerid] = 0;
	takephone[playerid] = 0;
	gag[playerid] = 0;
	dostup[playerid] = 0;
	PlayerInfo[playerid][pDrugtime] = 0;
	PlayerInfo[playerid][pGunfbiTime] = 0;
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	keys[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	if(GetPVarInt(playerid,"playerWalkTimer")) KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
	ResetPlayerWeapons(playerid);
	if(TransportDuty[playerid] == 1) TaxiDrivers -= 1;
	if(PlayerInfo[playerid][pMember] == 4) Medics -= 1;
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 ) Police +=1;
	else if(PlayerInfo[playerid][pJob] == 2) Mechanics -= 1;
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] != INVALID_PLAYER_ID)
	{
		if(IsPlayerConnected(TransportDriver[playerid]))
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			format(stringer1, sizeof(stringer1), "~g~+%d",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], stringer1, 5000, 1);
		}
	}
	if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
	{
	    PlayerTextDrawDestroy(playerid, gSkinShopPriceDraw[playerid]);
	    gSkinShopPriceDraw[playerid] = PlayerText:-1;
	}
	if (FIXES_gsPlayerAnimTimer[playerid]) {
        KillTimer(FIXES_gsPlayerAnimTimer[playerid]),
		FIXES_gsPlayerAnimTimer[playerid] = 0;
	}
	if(GetPVarInt(playerid, "TempLeader")) {
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pJob] = 0;
	}
	OnPlayerUpdateRL(playerid);
	return true;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	new nsa[50];
	format(nsa, sizeof(nsa),"ID Object: %d",objectid);
	SendClientMessage(playerid,-1,nsa);
	SetPVarInt(playerid, "SelectedObject", objectid);
	ShowPlayerDialog(playerid, 91, DIALOG_STYLE_MSGBOX, "Object selected","Choose action!","Change","Delete"
);
	return true;
}
public AdminFly(playerid)
{
	if(!IsPlayerConnected(playerid))
		return flying[playerid] = false;

	if(flying[playerid])
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
			new
   				keysik,
   				lr,
				ud,
				Float:x[2],
				Float:y[2],
				Float:z;


			GetPlayerKeys(playerid, keysik, ud, lr);
			GetPlayerVelocity(playerid, x[0], y[0], z);
			if(ud == KEY_UP)
			{
				GetPlayerCameraPos(playerid, x[0], y[0], z);
				GetPlayerCameraFrontVector(playerid, x[1], y[1], z);
    			ApplyAnimation(playerid, "SWIM", "SWIM_crawl", 4.1, 0, 1, 1, 0, 0);
				SetPlayerToFacePos(playerid, x[0] + x[1], y[0] + y[1]);
				SetPlayerVelocity(playerid, x[1], y[1], z);
			}
			else
			SetPlayerVelocity(playerid, 0.0, 0.0, 0.01);
		}
		SetTimerEx("AdminFly", 100, 0, "d", playerid);
	}
	return 0;
}
public Float:SetPlayerToFacePos(playerid, Float:X, Float:Y)
{
	new
		Float:pX1,
		Float:pY1,
		Float:pZ1,
		Float:ang;

	if(!IsPlayerConnected(playerid)) return 0.0;

	GetPlayerPos(playerid, pX1, pY1, pZ1);

	if( Y > pY1 ) ang = (-acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 90.0);
	else if( Y < pY1 && X < pX1 ) ang = (acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 450.0);
	else if( Y < pY1 ) ang = (acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 90.0);

	if(X > pX1) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);

	ang += 180.0;

	SetPlayerFacingAngle(playerid, ang);

 	return ang;
}
//public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ) return true;
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(!IsValidObject(objectid)) return 0;
    MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
    new Float:oldX, Float:oldY, Float:oldZ,
    Float:oldRotX, Float:oldRotY, Float:oldRotZ;
    GetObjectPos(objectid, oldX, oldY, oldZ);
    GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
    if(!playerobject)
    {
        if(!IsValidObject(objectid)) return 0;
        MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
    }
    if(response == EDIT_RESPONSE_FINAL)
    {
        SetObjectPos(objectid, fX, fY, fZ);
        SetObjectRot(objectid, fRotX, fRotY, fRotZ);
    }
    if(response == EDIT_RESPONSE_CANCEL)
    {
	    if(!playerobject)
	    {
	    	SetObjectPos(objectid, oldX, oldY, oldZ);
	    	SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	    }
	    else
	    {
	    	SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
	     	SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
	    }
    }
    return true;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ) return true;
stock SetPlayerWeapons(playerid)
{
	if(!IsPlayerConnected(playerid) || PlayerInfo[playerid][pJailed] != 0) return true;
	if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) GiveWeapon(playerid, 2, 1);
	else if(PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24) GiveWeapon(playerid, 5, 1);
	else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) GiveWeapon(playerid, 8, 1);
	else if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pOdet] == 1) GiveWeapon(playerid, 24, 50),SetPlayerArmour(playerid, 100);
	else if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 4 && PlayerInfo[playerid][pOdet] == 1) GiveWeapon(playerid, 24, 50),SetPlayerArmour(playerid, 100);
	else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) GiveWeapon(playerid, 5, 1);
	else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) GiveWeapon(playerid, 5, 1);
	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) GiveWeapon(playerid, 1, 1);
	else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) GiveWeapon(playerid, 5, 1);
	else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) GiveWeapon(playerid, 43, 30);
	else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) GiveWeapon(playerid, 5, 1);
	else if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) GiveWeapon(playerid, 5, 1);
	return true;
}
stock SetPlayerSpawn(playerid)
{
	if(gSpecID[playerid] != INVALID_PLAYER_ID)
	{
		gSpecID[playerid] = INVALID_PLAYER_ID;
		CancelSelectTextDraw(playerid);
		for(new x=0; x <= 1; x++) PlayerTextDrawHide(playerid, PlayerText:ReconPlayerText[playerid][x]);
		HideMenuForPlayer(ReconPanel, playerid);
		new Float:z_coord = gPlayerPosition[playerid][2] - 1.0;
		SetSpawnInfoEx(playerid, gPlayerPosition[playerid][0], gPlayerPosition[playerid][1], z_coord, 0.0);
		SetPlayerInteriorEx(playerid, gPlayerInformation[playerid][0]);
		SetPlayerVirtualWorldEx(playerid, gPlayerInformation[playerid][1]);
		gSpecState[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
	if(StartPaintBall == 0 && TeamPain[playerid] != 0)
	{
		for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, PaintText[i]);
		EndPaint(playerid);
	}
	else if(TeamPain[playerid] != 0 && StartPaintBall == 2)
	{
		new spawn = random(10),
		    Float:z_coord = TeamPain[playerid] == 1 ? (SpawnBlueTeam[typePB][spawn][2]-1.0) : (SpawnRedTeam[typePB][spawn][2]-1.0)
		;
		if(TeamPain[playerid] == 1)
		{
			if(PlayerInfo[playerid][pSex] == 1) SetSpawnInfo(playerid, 0xFE, 21, SpawnBlueTeam[typePB][spawn][0],SpawnBlueTeam[typePB][spawn][1],z_coord, SpawnBlueTeam[typePB][spawn][3], 0, 0, 0, 0, 0, 0);
			else if(PlayerInfo[playerid][pSex] == 2) SetSpawnInfo(playerid, 0xFE, 41, SpawnBlueTeam[typePB][spawn][0],SpawnBlueTeam[typePB][spawn][1],z_coord, SpawnBlueTeam[typePB][spawn][3], 0, 0, 0, 0, 0, 0);
		}
		if(TeamPain[playerid] == 2)
		{
			if(PlayerInfo[playerid][pSex] == 1) SetSpawnInfo(playerid, 0xFE, 19, SpawnRedTeam[typePB][spawn][0],SpawnRedTeam[typePB][spawn][1],z_coord, SpawnRedTeam[typePB][spawn][3], 0, 0, 0, 0, 0, 0);
			else if(PlayerInfo[playerid][pSex] == 2) SetSpawnInfo(playerid, 0xFE, 40, SpawnRedTeam[typePB][spawn][0],SpawnRedTeam[typePB][spawn][1],z_coord, SpawnRedTeam[typePB][spawn][3], 0, 0, 0, 0, 0, 0);
		}
		SetPlayerInteriorEx(playerid, 10);
		SetPlayerVirtualWorldEx(playerid, 1);
		return true;
	}
	if(GetPVarInt(playerid, "AntiDeathRace"))
	{
		SetSpawnInfoEx(playerid, -2169.1880, 643.9022, 1051.3750, 180.8674);
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 43);
		DeletePVar(playerid, "AntiDeathRace");
		race_death(playerid);
		return 1;
	}
	if(GetPVarInt(playerid, "BasePopitka") > 0)
	{
		SetSpawnInfoEx(playerid, 377.6851, -161.1450, 3365.3403, 179.1788);
		SetPlayerInteriorEx(playerid, 0);
		return 1;
	}
	if(GetPVarInt(playerid, "baseBB"))
	{
		SetSpawnInfoEx(playerid, 2177.4709, 1118.3693, 11.6484, 62.3957);
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		DeletePVar(playerid, "baseBB");
		return 1;
	}
	if(PlayerInfo[playerid][pJailed])
	{
    	if(PlayerInfo[playerid][pJailed] == 4)
		{
			switch(random(3)) {
				case 0: SetSpawnInfoEx(playerid, 5512.0732, 1249.1172, 23.1886, 120.3213);
				case 1: SetSpawnInfoEx(playerid, 5524.6377,1241.7778,23.1886,102.7743);
				case 2: SetSpawnInfoEx(playerid, 5517.6646,1255.9296,23.1886,99.9542);
			}
			SetPlayerInteriorEx(playerid, 0);
		}
		else if(PlayerInfo[playerid][pMestoJail] == 1)
		{
            SetSpawnInfoEx(playerid, 264.1425, 77.4712, 1000.0391, 263.0160);
			SetPlayerInteriorEx(playerid, 6);
		}
		else if(PlayerInfo[playerid][pMestoJail] == 2)
		{
            SetSpawnInfoEx(playerid, 219.5400, 109.9767, 998.0156, 1.0000);
			SetPlayerInteriorEx(playerid, 10);
		}
		else if(PlayerInfo[playerid][pMestoJail] == 3)
		{
            SetSpawnInfoEx(playerid, 198.3642, 161.8103, 1002.0300, 1.0000);
			SetPlayerInteriorEx(playerid, 3);
		}
		else if(PlayerInfo[playerid][pMestoJail] == 4)
		{
            SetSpawnInfoEx(playerid, 713.8348, 1340.0420, 59.6741, 1.0000);
			SetPlayerInteriorEx(playerid, 15);
		}
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	if(PlayerInfo[playerid][pHospital] == 1)
	{
//		SetSpawnInfoEx(playerid, 348.0901,418.0223,1022.8019,179.2272);
        SetSpawnInfoEx(playerid, -629.2919,-918.0795,1436.1736,90.2943);
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid,1);
		return true;
	}
	if(PlayerInfo[playerid][Settings][2] == 0)
	{
		if(PlayerInfo[playerid][pPhousekey] != 255 || PlayerInfo[playerid][pHomez] != 255)
		{
	        new house = PlayerInfo[playerid][pPhousekey] != 255 ? (PlayerInfo[playerid][pPhousekey]) : (PlayerInfo[playerid][pHomez]),
				Float:z_coord = HouseInfo[house][hExitz] - 1.0
			;
	        SetSpawnInfoEx(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity], z_coord, 0.0);
			SetPlayerInteriorEx(playerid, HouseInfo[house][hInt]);
			PlayerInfo[playerid][pLocal] = house;
			SetPlayerVirtualWorldEx(playerid, house+50);
			return true;
		}
	}
	switch(PlayerInfo[playerid][pMember])
	{
	case 2:
		{
            SetSpawnInfoEx(playerid, 607.0414,1294.3031,1079.3459, 89.1600);
			SetPlayerInteriorEx(playerid, 3);
			SetPlayerVirtualWorldEx(playerid, 5);
			zakonn++;
		}
	case 3:
		{
            SetSpawnInfoEx(playerid, 725.9099,-1299.9343,1101.0000, 85.4922);
			SetPlayerInteriorEx(playerid, 15);
			SetPlayerVirtualWorldEx(playerid, 3);
		}
	case 7: {
		SetSpawnInfoEx(playerid, 1459.1729,-1803.6135,2995.6550,310.3075);
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 1);
	}
	case 10:
		{
            SetSpawnInfoEx(playerid, 225.1647,121.0442,998.0786, 89.0733);
			SetPlayerInteriorEx(playerid, 10);
			SetPlayerVirtualWorldEx(playerid, 0);
			zakonn++;
		}
	case 19:
		{
            SetSpawnInfoEx(playerid, 725.9099,-1299.9343,1101.0000, 85.4922);
			SetPlayerInteriorEx(playerid, 15);
			SetPlayerVirtualWorldEx(playerid, 2);
		}
	case 21:
		{
            SetSpawnInfoEx(playerid, 211.3636,184.3113,1002.0313, 174.3579);
			SetPlayerInteriorEx(playerid, 3);
			SetPlayerVirtualWorldEx(playerid, 122);
		}
	case 27:
		{
            SetSpawnInfoEx(playerid, 1950.7924,1059.6261,993.4688, 167.3940);
			SetPlayerInteriorEx(playerid, 10);
			SetPlayerVirtualWorldEx(playerid, VW_DRAGONS);
		}
	case 28:
		{
            SetSpawnInfoEx(playerid, 2151.9692,1597.3483,1005.1761, 359.8317);
			SetPlayerInteriorEx(playerid, 1);
			SetPlayerVirtualWorldEx(playerid, VW_CALIGULAS);
		}
	case 26:
		{
            SetSpawnInfoEx(playerid, -806.0136,-672.3167,4004.5850,357.5782);
			SetPlayerInteriorEx(playerid, 1);
		}
	case 16:
		{
            SetSpawnInfoEx(playerid, 1748.6075,-1908.2804,1960.1769, 237.1709);
			SetPlayerInteriorEx(playerid, 15);
			SetPlayerVirtualWorldEx(playerid, 1);
		}
	case 6:
		{
            SetSpawnInfoEx(playerid, 1265.9167,-793.5771,1083.0078, 1.8900);
			SetPlayerInteriorEx(playerid, 5);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
	case 14:
		{
            SetSpawnInfoEx(playerid, 1265.9167,-793.5771,1083.0078, 1.8900);
			SetPlayerInteriorEx(playerid, 5);
			SetPlayerVirtualWorldEx(playerid, 1);
		}
	case 11:
		{
            SetSpawnInfoEx(playerid, -790.5412,1555.0991,1138.2369, 270.5359);
			SetPlayerInteriorEx(playerid, 1);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
	case 5:
		{
            SetSpawnInfoEx(playerid, 1265.9167,-793.5771, 1083.01, 1.8900);
			SetPlayerInteriorEx(playerid, 5);
			SetPlayerVirtualWorldEx(playerid, 2);
		}
	case 23:
		{
            SetSpawnInfoEx(playerid, 1862.9944,-880.1429,1080.4220, 89.6664);
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
	case 24:
		{
            SetSpawnInfoEx(playerid, 1280.3894,1271.6595,9.8281, 316.8163);
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
	case 25:
		{
            SetSpawnInfoEx(playerid, 707.8051, -1354.3311, -59.7361, 1);
	    	SetPlayerInteriorEx(playerid, 0);
	    	SetPlayerVirtualWorldEx(playerid, 0);
			zakonn++;
		}
	case 4:
		{
//            SetSpawnInfoEx(playerid, 339.8329,412.9771,1022.8019,336.5881);
            SetSpawnInfoEx(playerid, -662.1044,-907.3363,1436.2230,226.4457);
			SetPlayerInteriorEx(playerid, 1);
			SetPlayerVirtualWorldEx(playerid, 1);
			Medics ++;
		}
	case 12:
		{
            SetSpawnInfoEx(playerid, -61.2984,1364.5847,1079.2109, 100);
			SetPlayerInteriorEx(playerid,6);
			SetPlayerVirtualWorldEx(playerid, 34);
			SetPlayerCheckpoint(playerid,-58.0202,1366.2246,1080.2109,1.0);
			PicCP[playerid] = 12;
		}
	case 18:
		{
            SetSpawnInfoEx(playerid, -224.0989,1410.4458,26.7734,89.2874);
			SetPlayerInteriorEx(playerid, 18);
			SetPlayerVirtualWorldEx(playerid, 63);
			SetPlayerCheckpoint(playerid,-219.9122,1407.0699,27.7656,1.0);
			PicCP[playerid] = 18;
		}
	case 17:
		{
            SetSpawnInfoEx(playerid, -49.7558,1400.3553,1083.4297,90.4248);
			SetPlayerInteriorEx(playerid,8);
			SetPlayerVirtualWorldEx(playerid, 36);
			SetPlayerCheckpoint(playerid,-46.0471,1398.3119,1084.4297,1.0);
			PicCP[playerid] = 17;
		}
	case 13:
		{
            SetSpawnInfoEx(playerid, 303.63,309.25,998.15,263.0497);
			SetPlayerInteriorEx(playerid, 4);
			SetPlayerVirtualWorldEx(playerid, 75);
			SetPlayerCheckpoint(playerid,300.5920,307.3983,1003.5391,1.0);
			PicCP[playerid] = 13;
		}
	case 15:
		{
            SetSpawnInfoEx(playerid, 2496.012939,-1708.923217,1013.742187, 0.191693);
			SetPlayerInteriorEx(playerid, 3);
			SetPlayerVirtualWorldEx(playerid, 1);
			SetPlayerCheckpoint(playerid,2492.4380,-1708.5669,1018.3368,1.0);
			PicCP[playerid] = 15;
		}
	case 8:
		{
            SetSpawnInfoEx(playerid, 1658.60,2253.22,10.06, 0);
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
	case 1:
		{
            SetSpawnInfoEx(playerid, 235.8750, 73.5106, 1004.0391, 269.1425);
			SetPlayerInteriorEx(playerid, 6);
			SetPlayerVirtualWorldEx(playerid, 0);
			zakonn++;
		}
	default:
		{
			SetSpawnInfoEx(playerid, 2224.1375,-1150.4180,1025.7969,90.9542);
/*			SetPlayerFacingAngle(playerid, 180.8134);
			SetPlayerInteriorEx(playerid,0);
			SetPlayerVirtualWorldEx(playerid, 0);
			SetSpawnInfoEx(playerid, -3931.2026,-870.0693,5.2819,359.0);
			SetPlayerFacingAngle(playerid, 180.8134);
			SetPlayerInteriorEx(playerid,0);
			SetPlayerVirtualWorldEx(playerid, 0);*/
			SetPlayerInteriorEx(playerid,15);
			SetPlayerVirtualWorldEx(playerid,0);
		}
	}
    return true;
}
public OnPlayerDeathFinished(playerid, bool:cancelable) {
    SetPlayerSpawn(playerid);
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    KillTimer(HJLimitTimer);
	HackerJob[playerid] = 0;
	musor[playerid] = 0;
	total[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	
	//________________________[]_________________________________
	DestroyPlayerObject(playerid, object1[playerid]);
	DestroyPlayerObject(playerid, object2[playerid]);
	DestroyPlayerObject(playerid, object3[playerid]);
	DestroyPlayerObject(playerid, object4[playerid]);
	DestroyPlayerObject(playerid, object5[playerid]);
	DestroyPlayerObject(playerid, object6[playerid]);
	//________________________[]_________________________________
	TextDrawHideForPlayer(playerid, work0);
	TextDrawHideForPlayer(playerid, work1);
	TextDrawHideForPlayer(playerid, work2);
	TextDrawHideForPlayer(playerid, work3);
	TextDrawHideForPlayer(playerid, work4);
	TextDrawHideForPlayer(playerid, work5);
	TextDrawHideForPlayer(playerid, work6);
	
	if(gettime() - GetPVarInt(playerid,"PlayerLastDeath") < 1) return Kick(playerid);
	SetPVarInt(playerid,"PlayerLastDeath",gettime());
    SetPVarInt(playerid, "GunCheck", 10);
	if(reason == 49) {
		new string[144];
		format(string, sizeof(string), "%s[%d] killed the player %s [%d] with a vehicle!", PlayerInfo[killerid][pNames], killerid, PlayerInfo[playerid][pNames], playerid);
		SendAdminMessage(COLOR_GREY, string);
	}
    if(!AntiFakeKill[playerid]) return Kick(playerid);
	if(GetPVarInt(playerid, "Registration")) DeletePVar(playerid, "Registration");
	AntiFakeKill[playerid] = false;
	ResetPlayerWeapons(playerid);
	for (new i = 0; i < 13; i++) PlayerInfo[playerid][Weapon][i] = 0,PlayerInfo[playerid][Ammo][i] = 0;
	//SetPVarInt(playerid,"HealthSetTime",3);
//    SPD(playerid,65535,DIALOG_STYLE_MSGBOX,"1","1","","");
    SetPVarInt(playerid, "USEDIALOGID", 0);
    foreach(new i : Admin) SendDeathMessageToPlayer(i,killerid, playerid, reason);
    if(GetPVarInt(playerid, "BasePopitka") > 0 && GetPVarInt(playerid, "PlayerInBase")) SetPVarInt(playerid, "BasePopitka", GetPVarInt(playerid, "BasePopitka") - 1);
	if(GetPVarInt(killerid, "on_dmarena"))
	{
		SetPlayerHealthAC(killerid, 100.0);
		SetPlayerArmour(killerid, 60.0);
		PlayerInfo[killerid][pKillsOnDM]++;
		new fstring[32];
		format(fstring, sizeof fstring, "KILLS: %d", PlayerInfo[killerid][pKillsOnDM]);
		GameTextForPlayer(killerid, fstring, 2000, 4);
	}
	if(!GetPVarInt(playerid, "BasePopitka") && GetPVarInt(playerid, "PlayerInBase"))
	{
	    Iter_Remove(BaseList, playerid);
	    PlayersInBase{0} --;
	    SetPVarInt(playerid, "baseBB", 1);
	    DeletePVar(playerid, "BasePopitka");
	    DeletePVar(playerid, "PlayerInBase");
		if (!PlayersInBase{0})
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3,"Base jumping is over.");
        	foreach(new s: BaseList) Iter_Remove(BaseList, s);
		    BaseStarting[1] = 0;
		}
	}
	if(GetPVarInt(playerid, "rentrc") == 1) DestroyVehicleEx(vehiclerc[playerid]);
	if(IsAGang(killerid) && IsAGang(playerid))
	{
	    if(killerid != INVALID_PLAYER_ID)
		{
			for(new i= 0; i < sizeof(GZInfo); i++)
			{
				if((PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0) || GZSafeTime[IDzone] < 300)
				{
					new bandkiller = PlayerInfo[killerid][pMember],bandkill = PlayerInfo[playerid][pMember];
					if(bandkiller != bandkill)
					{
						if(GangInfo[bandkiller][capture] && GangInfo[bandkill][capture] == 1)
						{
							if(GangInfo[bandkiller][captureid] == GangInfo[bandkill][captureid])
							{
								GangInfo[bandkiller][score] = GangInfo[bandkiller][score]+1;
								CaptureKills[killerid]++;
								PlayerInfo[killerid][pKInCapt]++;
								CaptureUpd(bandkiller);
								SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
								break;
							}
						}
					}
				}
			}
		}
	}
	if(ISAMAFIA(killerid) && ISAMAFIA(playerid) && killerid != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
		{
			if(GangInfo[PlayerInfo[killerid][pMember]][capture] && GangInfo[PlayerInfo[playerid][pMember]][capture] == 1)
			{
				if(GangInfo[PlayerInfo[killerid][pMember]][captureid] == GangInfo[PlayerInfo[playerid][pMember]][captureid])
				{
					if(PlayerToKvadrat(killerid,gBizzWarZone[BizzWarsNumberZone][0],gBizzWarZone[BizzWarsNumberZone][1],gBizzWarZone[BizzWarsNumberZone][2],gBizzWarZone[BizzWarsNumberZone][3]))
					{
						GangInfo[PlayerInfo[killerid][pMember]][score] = GangInfo[PlayerInfo[killerid][pMember]][score]+1;
						SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
					}
				}
			}
		}
	}
	if(GetPVarInt(playerid, "Selfie"))
	{
		RemovePlayerAttachedObject(playerid, 0);
		DeletePVar(playerid,"Selfie");
		DeletePVar(playerid,"selfie_knopka");
	}
	if(GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1) SetPVarInt(playerid, "AntiDeathRace", 1);
	if(RaceStarting[2] == 3 && GetPVarInt(playerid, "PlayerInRace"))
    {
		DeletePVar(playerid, "PlayerInRace");
		Iter_Remove(RacersList, playerid);
  		PlayerScore{playerid} = 0;
        PlayersInRace{0} --;
        PlayerPosition{playerid} = 0;
    }
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	if(AlhambraDJ == true && AlhambraDJID == playerid) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
	if(JizzyDJ == true && JizzyDJID == playerid) JizzyDJ = false, JizzyDJID = INVALID_PLAYER_ID;
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
		DeletePVar(playerid, "ProductID");
	}
	if(fightid[playerid] == killerid && killerid != INVALID_PLAYER_ID)
	{
		ring = 0;
		format(stringer1, sizeof(stringer1), " ~g~%s Win!", PlayerInfo[killerid][pNames]);
		GameTextForPlayer(killerid, stringer1, 3000, 6);
		format(stringer1, sizeof(stringer1), " ~g~%s Win!", PlayerInfo[killerid][pNames]);
		GameTextForPlayer(playerid, stringer1, 3000, 6);
		switch(PlayerInfo[killerid][pFightSkil])
		{
		    case 0..49: PlayerInfo[killerid][pFightSkil]++, PlayerInfo[killerid][pFightTime]= 600;
		    case 50: PlayerInfo[killerid][pFightSkill]++, PlayerInfo[killerid][pFightTime]= 600;
		    case 51..99: PlayerInfo[killerid][pFightSkil]++, PlayerInfo[killerid][pFightTime]= 540;
		    case 100: PlayerInfo[killerid][pFightSkill]++, PlayerInfo[killerid][pFightTime]= 540;
		    case 101..149: PlayerInfo[killerid][pFightSkil]++, PlayerInfo[killerid][pFightTime]= 480;
		    case 150: PlayerInfo[killerid][pFightSkill]++, PlayerInfo[killerid][pFightTime]= 480;
		    case 151..199: PlayerInfo[killerid][pFightSkil]++, PlayerInfo[killerid][pFightTime]= 420;
		    case 200: PlayerInfo[killerid][pFightSkill]++, PlayerInfo[killerid][pFightTime]= 420;
		}
		PlayerInfo[killerid][pFightSkil]++;
		PlayerInfo[playerid][pFightTime]= 600;
		PlayerInfo[killerid][pFightTime]= 600;
		SetPPos(playerid,770.7656,3.9569,1000.7176);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPPos(killerid,770.7488,6.9432,1000.7118);
		SetPlayerFacingAngle(killerid, 90.0);
		SetPlayerHealthAC(playerid, 50);
		SetPlayerHealthAC(killerid, 75);
		fightid[playerid] = INVALID_PLAYER_ID;
        fightid[killerid] = INVALID_PLAYER_ID;
		TimeBox[playerid] = 0;
		TimeBoxAll[playerid] = 0;
		TimeBox[killerid] = 0;
		TimeBoxAll[killerid] = 0;
		boy[playerid] = 0;
		boy[killerid] = 0;
	}
	PlayerHealth[playerid] = 100;
	SetPlayerHealthAC(playerid, PlayerHealth[playerid]);
	PlayerInfo[playerid][pMask] = 0;
	udar[playerid] = 0;
	for(new i=0;i<4;i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	takephone[playerid] = 0;
	gag[playerid] = 0;
	usemats[playerid] = 0;
	if(SelectChar[playerid] == 255)
	{
		SetPlayerSkinEx(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	if(GetPVarInt(playerid,"playerWalkTimer")) {
        KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
        DeletePVar(playerid,"playerWalkTimer");
    }
    if(GetPVarInt(playerid, "PlayerOnDrugs")) ClearPlayerDrugEffects(playerid);
	if(PlayerInfo[playerid][pJob] == 7) PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pDrugtime] = 0;
	PlayerInfo[playerid][pGunfbiTime] = 0;
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	DisablePlayerCheckpoint(playerid);
	keys[playerid] = 0;
	LiveOffer[playerid] = INVALID_PLAYER_ID;
	TalkingLive[playerid] = INVALID_PLAYER_ID;
	LiveOfferls[playerid] = INVALID_PLAYER_ID;
	TalkingLivels[playerid] = INVALID_PLAYER_ID;
	if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0 && TeamPain[playerid] == 0 && !GetPVarInt(playerid, "AntiDeathRace") && !GetPVarInt(playerid, "BasePopitka") && !GetPVarInt(playerid, "baseBB") && !GetPVarInt(playerid, "on_dmarena")) PlayerInfo[playerid][pHospital] = 1;
	if(!IsACop(killerid) && killerid != INVALID_PLAYER_ID) PlayerInfo[killerid][pKills]+=1;
	if(killerid != INVALID_PLAYER_ID) PlayerInfo[killerid][pZakonp] -= 0;
	if(PlayerInfo[playerid][pMember] == 4) Medics -= 1;
	if(PlayerInfo[playerid][pWanted] > 0 && killerid != INVALID_PLAYER_ID && IsACop(killerid) && TeamPain[playerid] == 0)
	{
    	if(PlayerInfo[killerid][pMember] == 1) PlayerInfo[playerid][pMestoJail] = 1;
	    else if(PlayerInfo[killerid][pMember] == 10) PlayerInfo[playerid][pMestoJail] = 2;
	    else if(PlayerInfo[killerid][pMember] == 21)PlayerInfo[playerid][pMestoJail] = 3;
	    else if(PlayerInfo[killerid][pMember] == 25)PlayerInfo[playerid][pMestoJail] = 4;
	    PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWanted]*600);
	    SendMes(playerid,COLOR_LIGHTRED, "You are imprisoned for %i seconds!",(PlayerInfo[playerid][pWanted]*600));
	    SendMes(killerid,COLOR_BLUE, "You imprisoned a criminal for %i seconds!",(PlayerInfo[playerid][pWanted]*600));
	    GiveMoney(killerid, 90000);
	    PlayerInfo[playerid][pCash]-=PlayerInfo[playerid][pWanted];
	    format(stringer1, sizeof(stringer1), "~r~-$%i", PlayerInfo[playerid][pWanted]);
	    GameTextForPlayer(playerid, stringer1, 5000, 1);
	    PlayerInfo[playerid][pWanted] = 0;
	    PlayerInfo[playerid][pJailed] = 1;
	    SetPlayerWantedLevel(playerid,0);
	    ResetWeapons(playerid);
	}
	if(TheifRobID[playerid] == killerid && killerid != INVALID_PLAYER_ID)
	{
 		new money = TheifMoney[playerid];
   		GiveMoney(killerid, money);
   		PlayerInfo[playerid][pCash]-=money;
		TheifRobID[playerid] = INVALID_PLAYER_ID;
		format(stringer1, sizeof(stringer1), "You got your $%d back by killing the thief", money);
		SendClientMessage(killerid, COLOR_WHITE, stringer1);
		format(stringer1, sizeof(stringer1), "You lost the stolen $%d", money);
		SendClientMessage(playerid, COLOR_GREY, stringer1);
	}
	if(StartPaintBall == 1 && TeamPain[playerid] != 0)
    {
        if(TeamPain[playerid]) PlayerPB[TeamPain[playerid]-1] --;
        TeamPain[playerid] = 0;
        KillPain[playerid] = 0;
        DeathPain[playerid] = 0;
        SendClientMessage(playerid, COLOR_WHITE,"You have been disqualified!");
    }
    if(killerid != INVALID_PLAYER_ID)
	{
        if(TeamPain[playerid] != 0 && TeamPain[killerid] != 0 && TeamPain[killerid] != TeamPain[playerid] && StartPaintBall == 2)
        {
            DeathPain[playerid] ++;
            KillPain[killerid] ++;
            SetPlayerHealthAC(killerid, 100.0);
            format(stringer1, sizeof(stringer1), "~r~Kill: %d Death: %d", KillPain[killerid], DeathPain[killerid]);
            GameTextForPlayer(killerid,stringer1, 2000, 4);
            format(stringer1, sizeof(stringer1), "~r~Kill: %d Death: %d", KillPain[playerid], DeathPain[playerid]);
            GameTextForPlayer(playerid,stringer1, 2000, 4);
            ScorePB[TeamPain[killerid]-1] ++;
            format(stringer1,sizeof(stringer1),"~r~TEAM RED: ~w~%d",ScorePB[1]);
            TextDrawSetString(PaintText[1], stringer1);
            format(stringer1,sizeof(stringer1),"~b~TEAM BLUE: ~w~%d",ScorePB[0]);
            TextDrawSetString(PaintText[0], stringer1);
            foreach (new m : Player)
	        {
	            if(TeamPain[m] == 0 || PlayerInfo[m][pAlcoInvenxua]) continue;
    		    SendDeathMessageToPlayer(m, killerid, playerid, reason);
            }
        }
        if(GetPlayerState(killerid) == 2)
		{
			SendClientMessage(killerid, COLOR_LIGHTRED, "DB is prohibited, in case of repeated violation you will be banned!");
			SetPlayerExtra(killerid, INVALID_PLAYER_ID, 3, "Killing a man");
		}
		if(IsAGang(killerid) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 3)
			{
				for(new i = 1;i<=TOTALGZ;i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						forma[killerid] = 1;
						PlayerInfo[playerid][pModel] = 252;
						SendClientMessage(playerid,  COLOR_YELLOW, "You've lost your army uniform");
						SendClientMessage(killerid,  COLOR_YELLOW2, "You have taken off your army uniform, enter /switchskin to change clothes");
						format(stringer1, sizeof(stringer1), "%s lost my army uniform", PlayerInfo[playerid][pNames]);
						SendFamilyMessage(19,COLOR_YELLOW2, stringer1);
						SendFamilyMessage(3,COLOR_YELLOW2, stringer1);
						break;
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21)
		    {
				for(new i = 1;i<=TOTALGZ;i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						keys[killerid] += 1;
						SendClientMessage(playerid,  COLOR_YELLOW, "You lost your camera keys!");
						SendClientMessage(killerid,  COLOR_YELLOW, "You took the keys to the camera from the policeman!");
						format(stringer1, sizeof(stringer1), "Policeman %s lost his camera keys", PlayerInfo[playerid][pNames]);
						foreach (new k : Player)
						{
							if(!IsPlayerConnected(k) || gPlayerLogged[k] == 0) continue;
							if(PlayerInfo[k][pMember] == 1 || PlayerInfo[k][pMember] == 2 || PlayerInfo[k][pMember] == 10 || PlayerInfo[k][pMember] == 21 || PlayerInfo[k][pMember] == 25)
							{
								SendClientMessage(k, COLOR_YELLOW2, stringer1);
							}
						}
						break;
					}
				}
			}
		}
		if(PlayerInfo[playerid][pHeadValue] > 0)
		{
			if(ProxDetectorS(300, playerid, killerid) && PlayerInfo[killerid][pMember] == 23)
			{
				if(ContractInfo[killerid][cZakaz] == playerid && ContractInfo[playerid][cHitman] == killerid)
				{
					GiveMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(stringer1, sizeof(stringer1), " << Hitman %s[%d] completed the contract for %s[%d] and received $%d >>",PlayerInfo[killerid][pNames],killerid,PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(23, COLOR_GREEN, stringer1);
					SendClientMessage(playerid, 0x0000FFFF,"Hitman completed an order for you, nothing personal.. it�s his job.");
					PlayerInfo[playerid][pHeadValue] = 0;
					ContractInfo[playerid][cHitman] = INVALID_PLAYER_ID;
					ContractInfo[killerid][cZakaz] = INVALID_PLAYER_ID;
				}
			}
	    }
	    if(PlayerInfo[killerid][pMember] == 0 && PlayerInfo[killerid][pJailed] == 0 && TeamPain[killerid] == 0 && killerid != playerid) {
		 	SetPlayerExtra(killerid, INVALID_PLAYER_ID, 1, "Killing a man");
		}
    }
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = 0;
	}
	new caller = Mobile[playerid];
	if(caller != -1)
	{
		SendClientMessage(caller,  COLOR_GRAD2, "The connection was lost...");
		Mobile[caller] = -1;
		Mobile[playerid] = -1;
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11) DisablePlayerCheckpoint(playerid),gPlayerCheckpointStatus[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	return true;
}
/*public OnPlayerSpawn(playerid)
{

    if(!gPlayerLogged[playerid] && !GetPVarInt(playerid, "Registration") && !IsPlayerFake(playerid)) {
	    SendClientMessage(playerid, COLOR_WHITE, "Login required!");
		return KickEx(playerid);
	}
    SetPVarInt(playerid, "AntiBreik", 2);
    SetPVarInt(playerid,"Animation",0);
    SetPVarInt(playerid, "GunCheck", 5);
    AntiFakeKill[playerid] = true;
	SPD(playerid,65535,DIALOG_STYLE_MSGBOX,"1","1","","");
	SetPVarInt(playerid, "USEDIALOGID", 0);
	if(PlayerInfo[playerid][pAlcoInvenxua] > 0 && dostup[playerid] == 0) callcmd::alogin(playerid);
	if(GetPVarInt(playerid, "on_dmarena")) // ��� ������ �� �� �����
	{
		switch(random(5))
		{
			case 0: SetPPos(playerid, -384.4847,2238.7910,42.0938);
			case 1: SetPPos(playerid, -413.7166,2271.1560,42.1350);
			case 2: SetPPos(playerid, -413.7879,2270.6309,42.1530);
			case 3: SetPPos(playerid, -445.7326,2221.9536,42.4297);
			case 4: SetPPos(playerid, -389.9460,2194.2104,42.4159);
		}
		switch(GetPVarInt(playerid, "arena_weapon_set"))
		{
			case 0:
			{
                GiveWeapon(playerid, 24, 1000);
//                GiveWeapon(playerid, 25, 1000);
			}
			case 1:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 25, 999);
			}
			case 2:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 31, 1000);
			}
			case 3:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 33, 999);
            }
		}
		if(!PlayerInfo[playerid][pMember]) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		SetPlayerVirtualWorldEx(playerid, GetPVarInt(playerid, "arena_id_player") + 1337);
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerHealthAC(playerid, 100.0);
		SetPlayerArmour(playerid, 60.0);
		//SCM(playerid, -1, "123");
		return true;
	}
	if(PlayerInfo[playerid][Settings][2] == 0)
	{
		if(PlayerInfo[playerid][pPhousekey] != 255 || PlayerInfo[playerid][pHomez] != 255)
		{
	        TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		}
	}
	if(PlayerInfo[playerid][pMember] == 26)
	{
		if(PlayerInfo[playerid][pHospital] != 1)
		{
	        TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		}
	}
	if(TempBGObject[playerid] != -1)
	{
	    DestroyPlayerObject(playerid, TempBGObject[playerid]);
	    TempBGObject[playerid] = -1;
	}
	if(ISAMAFIA(playerid) && BizzWars == true && (BizzWar[BizzWarsNumber][bwNapad] == PlayerInfo[playerid][pMember] || BizzWar[BizzWarsNumber][bwGuard] == PlayerInfo[playerid][pMember]))
	{
		TextDrawShowForPlayer(playerid, TextBizzWar);
	}
    CheckRobPlayer(playerid);
    CheckTheftCar(playerid);
    if(PlayerInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
    if(PlayerInfo[playerid][pDonateRank] == 3) PlayerInfo[playerid][pSatiety] = 100;
    ExitCasino(playerid);
    new GotPVar = GetPVarInt(playerid, "TempFollowBy");
    if(FollowBy[playerid] != INVALID_PLAYER_ID)
    {
        KillTimer(TimerForPlayer[playerid]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        SendClientMessage(FollowBy[playerid], COLOR_LIGHTBLUE, "Your closed mortar.");
        TimerForPlayer[playerid] = INVALID_PLAYER_ID;
        FollowBy[playerid] = INVALID_PLAYER_ID;
    }
    else if(GotPVar != -1)
    {
        KillTimer(TimerForPlayer[GotPVar]);
        SendClientMessage(GotPVar, COLOR_LIGHTBLUE, "Your convoy is dead.");
        TimerForPlayer[GotPVar] = INVALID_PLAYER_ID;
        FollowBy[GotPVar] = INVALID_PLAYER_ID;
        TogglePlayerControllable(GotPVar, 1);
		ClearAnimations(GotPVar);
        SetPVarInt(playerid, "TempFollowBy", -1);
    }
    if(PlayerInfo[playerid][pVirt] != GetPlayerVirtualWorld(playerid)) SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVirt]);
    if(PlayerInfo[playerid][pInt] != GetPlayerInterior(playerid)) SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
    if(gSpecState[playerid] == INVALID_PLAYER_ID) SetPlayerWeaponss(playerid), gSpecState[playerid] = 0;
	if(PlayerInfo[playerid][pHospital] == 1) {
		if(GetPlayerInterior(playerid) != 1) SetPlayerInteriorEx(playerid, 1);
		if(GetPlayerVirtualWorld(playerid) != 1) SetPlayerVirtualWorldEx(playerid,1);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 500, 0, "d", playerid);
	}
    if(TeamPain[playerid] == 1) {
	    SetPlayerHealthAC(playerid, 100.0);
		Weaponpb(playerid);
		SetPlayerColor(playerid, COLOR_BLUE);
	}
	else if(TeamPain[playerid] == 2) {
	    SetPlayerHealthAC(playerid, 100.0);
		Weaponpb(playerid);
		SetPlayerColor(playerid, COLOR_RED);
	}
	else {
    	if(PlayerInfo[playerid][pHospital] == 1) SetPlayerHealthAC(playerid, 50);
		else SetPlayerHealthAC(playerid, 95);
		SetPlayerToTeamColor(playerid);
		if(GetPVarInt(playerid, "BasePopitka") > 0) GiveWeapon(playerid, 46, 1);
		else SetPlayerWeapons(playerid);
		CheckItem(playerid);
		for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
	}
	if(PlayerInfo[playerid][pDedUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
 		SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
 		SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
 		SetPlayerSkin(playerid,189);
	}
	if(PlayerInfo[playerid][pNinjaUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 8, 339, 1, 0.3649, -0.1169, 0.0919, 0.0000, -123.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerAttachedObject(playerid, 9, 339, 1, 0.3029, -0.1289, -0.1920, 0.6999, -69.7000, 0.2000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerSkin(playerid,203);
	}
	return true;
}*/
public OnPlayerSpawn(playerid)
{
    if(!gPlayerLogged[playerid] && !GetPVarInt(playerid, "Registration") && !IsPlayerFake(playerid)) {
	    SendClientMessage(playerid, COLOR_WHITE, "Login required!");
		return KickEx(playerid);
	}
	StopAudioStreamForPlayer(playerid);
    SetPVarInt(playerid, "AntiBreik", 2);
    SetPVarInt(playerid,"Animation",0);
    SetPVarInt(playerid, "GunCheck", 5);
    AntiFakeKill[playerid] = true;
//	SPD(playerid,65535,DIALOG_STYLE_MSGBOX,"1","1","","");
	SetPVarInt(playerid, "USEDIALOGID", 0);
//	if(PlayerInfo[playerid][pAlcoInvenxua] > 0 && dostup[playerid] == 0) callcmd::alogin(playerid);
	if(GetPVarInt(playerid, "on_dmarena")) // 
	{
		switch(random(5))
		{
			case 0: SetPPos(playerid, -384.4847,2238.7910,42.0938);
			case 1: SetPPos(playerid, -413.7166,2271.1560,42.1350);
			case 2: SetPPos(playerid, -413.7879,2270.6309,42.1530);
			case 3: SetPPos(playerid, -445.7326,2221.9536,42.4297);
			case 4: SetPPos(playerid, -389.9460,2194.2104,42.4159);
		}
		switch(GetPVarInt(playerid, "arena_weapon_set"))
		{
			case 0:
			{
                GiveWeapon(playerid, 24, 1000);
//                GiveWeapon(playerid, 25, 1000);
			}
			case 1:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 25, 999);
			}
			case 2:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 31, 1000);
			}
			case 3:
			{
                GiveWeapon(playerid, 24, 1000);
                GiveWeapon(playerid, 33, 999);
            }
		}
		if(!PlayerInfo[playerid][pMember]) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		SetPlayerVirtualWorldEx(playerid, GetPVarInt(playerid, "arena_id_player") + 1337);
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerHealthAC(playerid, 100.0);
		SetPlayerArmour(playerid, 60.0);
		//SCM(playerid, -1, "123");
		return true;
	}
	if(PlayerInfo[playerid][Settings][2] == 0)
	{
		if(PlayerInfo[playerid][pPhousekey] != 255 || PlayerInfo[playerid][pHomez] != 255)
		{
	        TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		}
	}
	if(PlayerInfo[playerid][pMember] == 26)
	{
		if(PlayerInfo[playerid][pHospital] != 1)
		{
	        TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		}
	}
	if(TempBGObject[playerid] != -1)
	{
	    DestroyPlayerObject(playerid, TempBGObject[playerid]);
	    TempBGObject[playerid] = -1;
	}
	if(ISAMAFIA(playerid) && BizzWars == true && (BizzWar[BizzWarsNumber][bwNapad] == PlayerInfo[playerid][pMember] || BizzWar[BizzWarsNumber][bwGuard] == PlayerInfo[playerid][pMember]))
	{
		TextDrawShowForPlayer(playerid, TextBizzWar);
	}
    CheckRobPlayer(playerid);
    CheckTheftCar(playerid);
    if(PlayerInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
    if(PlayerInfo[playerid][pDonateRank] == 3) PlayerInfo[playerid][pSatiety] = 100;
    ExitCasino(playerid);
    new GotPVar = GetPVarInt(playerid, "TempFollowBy");
    if(FollowBy[playerid] != INVALID_PLAYER_ID)
    {
        KillTimer(TimerForPlayer[playerid]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        SendClientMessage(FollowBy[playerid], COLOR_LIGHTBLUE, "Your closed mortar.");
        TimerForPlayer[playerid] = INVALID_PLAYER_ID;
        FollowBy[playerid] = INVALID_PLAYER_ID;
    }
    else if(GotPVar != -1)
    {
        KillTimer(TimerForPlayer[GotPVar]);
        SendClientMessage(GotPVar, COLOR_LIGHTBLUE, "Your convoy is dead.");
        TimerForPlayer[GotPVar] = INVALID_PLAYER_ID;
        FollowBy[GotPVar] = INVALID_PLAYER_ID;
        TogglePlayerControllable(GotPVar, 1);
		ClearAnimations(GotPVar);
        SetPVarInt(playerid, "TempFollowBy", -1);
    }
    if(PlayerInfo[playerid][pVirt] != GetPlayerVirtualWorld(playerid)) SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVirt]);
    if(PlayerInfo[playerid][pInt] != GetPlayerInterior(playerid)) SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
    if(gSpecState[playerid] == INVALID_PLAYER_ID) SetPlayerWeaponss(playerid), gSpecState[playerid] = 0;
	if(PlayerInfo[playerid][pHospital] == 1) {
		if(GetPlayerInterior(playerid) != 1) SetPlayerInteriorEx(playerid, 1);
		if(GetPlayerVirtualWorld(playerid) != 1) SetPlayerVirtualWorldEx(playerid,1);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 500, 0, "d", playerid);
	}
    if(TeamPain[playerid] == 1) {
	    SetPlayerHealthAC(playerid, 100.0);
		Weaponpb(playerid);
		SetPlayerColor(playerid, COLOR_BLUE);
	}
	else if(TeamPain[playerid] == 2) {
	    SetPlayerHealthAC(playerid, 100.0);
		Weaponpb(playerid);
		SetPlayerColor(playerid, COLOR_RED);
	}
	else {
    	if(PlayerInfo[playerid][pHospital] == 1) SetPlayerHealthAC(playerid, 50);
		else SetPlayerHealthAC(playerid, 95);
		SetPlayerToTeamColor(playerid);
		if(GetPVarInt(playerid, "BasePopitka") > 0) GiveWeapon(playerid, 46, 1);
		else SetPlayerWeapons(playerid);
		CheckItem(playerid);
		for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
	}
	if(PlayerInfo[playerid][pDedUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
 		SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
 		SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
 		SetPlayerSkin(playerid,189);
	}
	if(PlayerInfo[playerid][pNinjaUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 8, 339, 1, 0.3649, -0.1169, 0.0919, 0.0000, -123.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerAttachedObject(playerid, 9, 339, 1, 0.3029, -0.1289, -0.1920, 0.6999, -69.7000, 0.2000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerSkin(playerid,203);
	}
	return true;
}
stock ShowCMDBuyDialog(playerid)
{
	new kostyl[1500] = "{ffffff}Team\t{ffffff}Price\t{ffffff}Status\n";
	new temp[32];
	for(new i = 0; i < sizeof CMD_names; i++)
	{
		if(CMD_price[i] > 0) {
			if(PlayerInfo[playerid][aiCMDaccess][i] != '0') temp = "{23dc1b}Purchased";
			else temp = "{dd2e13}Not purchased";
			format(kostyl, sizeof kostyl, "%s%s\t{8BD032}%i rubles\t%s\n", kostyl, CMD_names[i], CMD_price[i], temp);
		}
	}
    ShowPlayerDialog(playerid, 1338, DIALOG_STYLE_TABLIST_HEADERS, "{F2A738}Additional commands", kostyl, "Buy", "Back");
	return true;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(musor[playerid] == 1)
	{
	    total[playerid] += 1;
	    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	    //________________________[]_____________________________
	    DestroyPlayerObject(playerid, object1[playerid]);
	    DestroyPlayerObject(playerid, object2[playerid]);
	    DestroyPlayerObject(playerid, object3[playerid]);
	    DestroyPlayerObject(playerid, object4[playerid]);
	    DestroyPlayerObject(playerid, object5[playerid]);
	    DestroyPlayerObject(playerid, object6[playerid]);
	    //________________________[]_____________________
	    new rand666=random(6);
		switch (rand666)
		{
			case 0:SetPlayerCheckpoint(playerid,508.5461,-1823.4453,5.5823,0.6), object1[playerid] = CreatePlayerObject(playerid, 1264, 508.5461,-1823.4453,5.5823-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
			case 1:SetPlayerCheckpoint(playerid,559.0388,-1871.4319,4.1248,0.6), object2[playerid] = CreatePlayerObject(playerid, 917, 559.0388,-1871.4319,4.1248-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
			case 2:SetPlayerCheckpoint(playerid,513.3473,-1897.3883,1.5154,0.6), object3[playerid] = CreatePlayerObject(playerid, 2672, 513.3473,-1897.3883,1.5154-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
			case 3:SetPlayerCheckpoint(playerid,494.5392,-1873.6088,3.2831,0.6), object4[playerid] = CreatePlayerObject(playerid, 1264, 494.5392,-1873.6088,3.2831-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
			case 4:SetPlayerCheckpoint(playerid,463.7719,-1853.4425,3.6171,0.6), object5[playerid] = CreatePlayerObject(playerid, 1264, 463.7719,-1853.4425,3.6171-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
			case 5:SetPlayerCheckpoint(playerid,462.6543,-1822.2416,5.4836,0.6), object6[playerid] = CreatePlayerObject(playerid, 1264, 462.6543,-1822.2416,5.4836-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
		}
	}
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "FindAuto")) DisablePlayerCheckpoint(playerid);
	else if(VertMats[playerid] == 1)
	{
		if(vertmatbi >= 10000)//���� �� ������ 100� ��
		{
			SendClientMessage(playerid,COLOR_GREY, "The helicopter is loaded");
			SendClientMessage(playerid, COLOR_WHITE,"Take materials to area 51");
			VertMats[playerid]=2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10); // ������ ��������
			return true;
		}
		vertmatbi += 10000;
		SendMes(playerid,TEAM_GROVE_COLOR, "The mats have been successfully loaded! Material components in a helicopter: %d/10000", vertmatbi);
		SendClientMessage(playerid, COLOR_WHITE,"Take materials to area 51");
		VertMats[playerid]=2;
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10); // ������ ��������
		return true;
	}
	else if(VertMats[playerid] == 2)
	{
		if(armmatbi == 100000)
		{
			SendClientMessage(playerid, COLOR_GREY, "The warehouse is full!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		vertmatbi = 0;
		armmatbi += 10000;
		SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Components of materials in the helicopter: %d/10000", vertmatbi);
		SendMes(playerid,COLOR_WHITE,"In the warehouse of Zone 51 %d/100000 mats", armmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		VertMats[playerid]=0;
		if(armmatbi >= 100000) { armmatbi = 100000; }
		SetOtherInt("armmatbi", armmatbi);
		return true;
	}
	else if(PicCP[playerid] == 12)
	{
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_WHITE,"{808080}You cannot use this cabinet");
		if(FracBank[0][fLock][1] == 1) return SendClientMessage(playerid, COLOR_WHITE,"The gang safe is closed!");
		ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");
		return true;
	}
	else if(PicCP[playerid] == 18)
	{
		if(PlayerInfo[playerid][pMember] != 18) return SendClientMessage(playerid, COLOR_WHITE,"{808080}You cannot use this cabinet");
		if(FracBank[0][fLock][4] == 1) return SendClientMessage(playerid, COLOR_WHITE,"The gang safe is closed!");
		ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");
		return true;
	}
	else if(PicCP[playerid] == 17)
	{
		if(PlayerInfo[playerid][pMember] != 17) return SendClientMessage(playerid, COLOR_WHITE,"{808080}You cannot use this cabinet");
		if(FracBank[0][fLock][3] == 1) return SendClientMessage(playerid, COLOR_WHITE,"The gang safe is closed!");
		ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");
		return true;
	}
	else if(PicCP[playerid] == 13)
	{
		if(PlayerInfo[playerid][pMember] != 13) return SendClientMessage(playerid, COLOR_WHITE,"{808080}You cannot use this cabinet");
		if(FracBank[0][fLock][2] == 1) return SendClientMessage(playerid, COLOR_WHITE,"The gang safe is closed!");
		ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");
		return true;
	}
	else if(PicCP[playerid] == 15)
	{
		if(PlayerInfo[playerid][pMember] != 15) return SendClientMessage(playerid, COLOR_WHITE,"{808080}You cannot use this cabinet");
		if(FracBank[0][fLock][0] == 1) return SendClientMessage(playerid, COLOR_WHITE,"The gang safe is closed!");
		ShowPlayerDialog(playerid,9195,2,"Gang safe","{ffffff}[1]> Put the first aid kits\n{ffffff}[2]> Put Money\n{ffffff}[3]> Put materials\n{99ff99}[4]> Get first aid kits\n{99ff99}[5]> Take money\n{99ff99}[6]> Take materials", "Select","Close");
		return true;
	}
	else if(CP[playerid] == 0 && PicCP[playerid] == 5) return DisablePlayerCheckpoint(playerid), SendClientMessage(playerid, COLOR_WHITE, "You have arrived at your destination."), PicCP[playerid] = 0;
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1549.0081,122.8916,3.1145)) // /dropcar
	{
		new randommoney;
		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		switch(PlayerInfo[playerid][pAutoSkill])
		{
		case 0..59: { PlayerInfo[playerid][pAutoTime] = 1200; randommoney = 40000+ random(50000);  }
		case 60: { PlayerInfo[playerid][pAutoTime] = 1140; randommoney = 40000+ random(60000); SendClientMessage(playerid,COLOR_YELLOW,"Congratulations, you have improved your car thief skill."); }
		case 61..119: { PlayerInfo[playerid][pAutoTime] = 1140; randommoney = 40000+ random(60000); }
		case 120: { PlayerInfo[playerid][pAutoTime] = 1080; randommoney = 40000+ random(70000); SendClientMessage(playerid,COLOR_YELLOW,"Congratulations, you have improved your car thief skill."); }
		case 121..179: { PlayerInfo[playerid][pAutoTime] = 1080; randommoney = 40000+ random(70000); }
		case 180: { PlayerInfo[playerid][pAutoTime] = 1020; randommoney = 40000+ random(80000); SendClientMessage(playerid,COLOR_YELLOW,"Congratulations, you have improved your car thief skill."); }
		case 181..239: { PlayerInfo[playerid][pAutoTime] = 1020; randommoney = 40000+ random(80000); }
		case 240: { PlayerInfo[playerid][pAutoTime] = 960; randommoney = 40000+ random(90000); SendClientMessage(playerid,COLOR_YELLOW,"Congratulations, you have improved your car thief skill."); }
		case 241..1000: { PlayerInfo[playerid][pAutoTime] = 960; randommoney = 40000+ random(90000); }
		}
		PlayerInfo[playerid][pAutoSkill]++;
		GiveMoney(playerid, randommoney);
		SendMes(playerid,COLOR_GREEN,"You returned the vehicle and received %d Money.", randommoney);
		return true;
	}
	else if(CP[playerid]==500)
	{
		SendClientMessage(playerid, COLOR_GREEN, "You received a bonus in the amount: 600 Money");
		GiveMoney(playerid, 600);
		DisablePlayerCheckpoint(playerid);
		CP[playerid]= 0;
		return true;
	}
	else if(IsAMatsCar(tmpcar) && MatsArmyCar[playerid] > 0)
	{
		if(MatsArmyCar[playerid] == 20)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] >= 5000 || armmatbi <= 1000)
			{
				SendClientMessage(playerid, COLOR_GREY, "The warehouse is empty or the truck is full!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] += 5000;
			SendMes(playerid,TEAM_GROVE_COLOR,"Submissions uploaded successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			armmatbi -= 5000;
			SendMes(playerid,COLOR_WHITE,"In the warehouse of Zone 51: %d/100000", armmatbi);
			SendClientMessage(playerid,COLOR_WHITE,"Usage: /carm, to start delivering materials ");
			SetOtherInt("armmatbi", armmatbi);
		}
		else if(MatsArmyCar[playerid] == 35)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || sfpdmats >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The SFPD warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			sfpdmats += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"SFPD warehouse: %d/50000", sfpdmats);
			CP[playerid] = 0;
			SetOtherInt("sfpdmats", sfpdmats);
		}
		else if(MatsArmyCar[playerid] == 150)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || lvpdmats >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The LVPD warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			lvpdmats += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"Warehouse LVPD: %d/50000", lvpdmats);
			SetOtherInt("lvpdmats", lvpdmats);
		}
		else if(MatsArmyCar[playerid] == 100)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || ballasmatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The Ballas Gang warehouse is full or the truck is empty! ");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			ballasmatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats have been delivered successfully! Material components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"Ballas Gang Warehouse: %d/50000", ballasmatbi);
			SetOtherInt("ballasmatbi", ballasmatbi);
		}
		else if(MatsArmyCar[playerid] == 101)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || vagosmatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Los Santos Vagos warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			vagosmatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"Los Santos Vagos Warehouse: %d/50000", vagosmatbi);
			SetOtherInt("vagosmatbi", vagosmatbi);
		}
		else if(MatsArmyCar[playerid] == 102)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || groovmatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The Grove warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			groovmatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"The Grove warehouse: %d/50000", groovmatbi);
			SetOtherInt("groovmatbi", groovmatbi);
		}
		else if(MatsArmyCar[playerid] == 103)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || aztekmatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The Aztec warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			aztekmatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"The Aztec warehouse: %d/50000", aztekmatbi);
			SetOtherInt("aztekmatbi", aztekmatbi);
		}
		else if(MatsArmyCar[playerid] == 104)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || rifamatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The Rifa Gang warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			rifamatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"Rifa Gang Warehouse: %d/50000", rifamatbi);
			SetOtherInt("rifamatbi", rifamatbi);
		}
		else if(MatsArmyCar[playerid] == 31)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || lspdmatbi >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The LSPD warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			lspdmatbi += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"LSPD warehouse: %d/50000", lspdmatbi);
			SetOtherInt("lspdmatbi", lspdmatbi);
		}
		else if(MatsArmyCar[playerid] == 24)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || fbimats >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The FBI warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			fbimats += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"FBI warehouse: %d/50000", fbimats);
			SetOtherInt("fbimats", fbimats);
		}
		else if(MatsArmyCar[playerid] == 21)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || armmatsf >= 49999)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "The SF Army warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
			armmatsf += 5000;
			SendMes(playerid,TEAM_GROVE_COLOR,"Weapon delivered successfully! Weapon:%d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"SF Army Warehouse: %d/50000", armmatsf);
			SetOtherInt("armmatsf", armmatsf);
		}
		else if(MatsArmyCar[playerid] == 35)
		{
			if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || sfpdmats >= 49999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "The SFPD warehouse is full or the truck is empty!");
				MatsArmyCar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;//������������
			sfpdmats += 5000;// ���������� �� ����� ���� 5� �����
			SendMes(playerid,TEAM_GROVE_COLOR,"The mats were delivered successfully! Material Components: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
			SendMes(playerid,COLOR_WHITE,"SFPD warehouse: %d/50000", sfpdmats);
			CP[playerid] = 0;
			SetOtherInt("sfpdmats", sfpdmats);
		}
		MatsArmyCar[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		return true;
	}
	else if(CP[playerid] == 123)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "{BBBBBB}Enter / sloading to load");
		CP[playerid] = 0;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.5,1473.7715,-1805.7227,2995.6296))
	{
		if(useguns[playerid] == 0 && PicCP[playerid] == 2) return ShowPlayerDialog(playerid, 10092, DIALOG_STYLE_MSGBOX, "Apparatus employed","See a list of available jobs?", "Yes", "No");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,1425.6633,-1709.4857,13.5085))
	{
		SendClientMessage(playerid,COLOR_GREEN, "Take the money to the ATM (the ATM is marked with a red dot on the map)");
		DisablePlayerCheckpoint(playerid);
		keis[playerid] = 1;
		new rand = random(sizeof(RandomSpawn));
		SetPlayerCheckpoint(playerid,RandomSpawn[rand][0],RandomSpawn[rand][1],RandomSpawn[rand][2],RandomSpawn[rand][3]);
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,1919.7749,-1760.5482,13.5469))
	{
		SendClientMessage(playerid,COLOR_GREEN, "Get out of the car and take the money to the ATM (/bankup)");
		DisablePlayerCheckpoint(playerid);
		SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		keis[playerid] = 1;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,1361.9775,-1290.5338,13.3604))
	{
		SendClientMessage(playerid,COLOR_GREEN, "Get out of the car and take the money to the ATM (/bankup)");
		DisablePlayerCheckpoint(playerid);
		SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		keis[playerid] = 1;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,1137.8004,-1755.2164,13.5811))
	{
		SendClientMessage(playerid,COLOR_GREEN, "Get out of the car and take the money to the ATM (/bankup)");
		DisablePlayerCheckpoint(playerid);
		SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		keis[playerid] = 1;
		return true;
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case 12:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "You made it home!");
				return true;
			}
		case 13:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = 0;
				SendClientMessage(playerid, -1, "You have reached your goal!");
				return true;
			}
		}
	}
	for(new idx = 1; idx <= TOTALBIZZ;idx++)
	{
		if(IsPlayerInDynamicCP(playerid, BizzInfo[idx][bMenu]) && IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz]))
		{
		    if(BizzInfo[idx][bLock] > 0) return SendClientMessage(playerid,COLOR_GREY,"Business closed!");
	    	else if(BizzInfo[idx][bType] == 3) return EatList(playerid, idx);
			else if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5) return ClubList(playerid, idx);
			else if(BizzInfo[idx][bType] == 6) return BuySkin(playerid, idx);
			else if(BizzInfo[idx][bType] == 7) return MagazineAmmoList(playerid, idx);
			else if(BizzInfo[idx][bType] == 9) return ActsMagazine(playerid, idx);
		}
	}
	return true;
}

public OnPlayerLeaveCheckpoint(playerid) return true;
public OnPlayerEnterRaceCheckpoint(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		if(GetPVarInt(playerid,"LoadProd") == 0) return SendClientMessage(playerid,COLOR_GREY,"Load groceries into the car!");
	    new i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid], playerd;
		BizzInfo[i][bProduct] += ProductInfo[GetPVarInt(playerid, "ProductID")][pTill];
		GiveBank(playerid, ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice]);
		SendMes(playerid,COLOR_BLUE, "You have delivered %i products for %s (%s)", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill], BizzInfo[i][bName], ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
		sscanf(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], "u", playerd);
		SendClientMessage(playerid, COLOR_WHITE, "Money has been transferred to your account.");
		DeletePVar(playerid,"LoadProd");
		if(IsPlayerConnected(playerd))
		{
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ]");
		    SendMes(playerd, 0xC5EEFEAA, "Grocery delivery man %s has fulfilled your order",PlayerInfo[playerid][pNames]);
		    SendMes(playerd, 0xC5EEFEAA, "Qty: %i", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
		    SendMes(playerd, 0xC5EEFEAA, "Payment: %s Money", formatInt(ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice]));
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ]");
		}
		BizzInfo[i][bProdStat] = false;
		foreach (new p : Player)
		{
		    if(!IsPlayerConnected(p) || gPlayerLogged[p] == 0 || GetPVarInt(p, "ProductID") == 0) continue;
		    if(GetPVarInt(p, "ProductID") > GetPVarInt(playerid, "ProductID")) SetPVarInt(p, "ProductID", GetPVarInt(p, "ProductID") - 1);
		}
		for(new p = GetPVarInt(playerid, "ProductID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(ProductInfo[p][pName],ProductInfo[p+1][pName],0,strlen(ProductInfo[p+1][pName]),MAX_PLAYER_NAME);
			ProductInfo[p][pBizzid] = ProductInfo[p+1][pBizzid];
			ProductInfo[p][pPrice] = ProductInfo[p+1][pPrice];
			ProductInfo[p][pTill] = ProductInfo[p+1][pTill];
			ProductInfo[p][pStatus] = ProductInfo[p+1][pStatus];
			ProductInfo[p][pType] = ProductInfo[p+1][pType];
	 	}
		TOTALPRODUCT--;
	    DeletePVar(playerid, "ProductID");
    	DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
        if(GetPVarInt(playerid,"race_check")==GetPlayerVehicleID(playerid))
	    {
	        if (GetPVarInt(playerid, "PlayerInRace"))
			{
				if (++PlayerScore{playerid} == 52)
				{
				    switch (++PlayerWinners{0})
				    {
				        case 1:
				        {
			            	format(stringer1,sizeof(stringer1),"[RACE]: %s(%d) took 1st place in the race! He gets: 30 Rubbles.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,stringer1);
			            	PlayerInfo[playerid][pRub] += 30;
							if(PlayerInfo[playerid][pQuest8] == 0)
					       	{
			       				PlayerInfo[playerid][pQuest8] = 1;
					       		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
					       	}
				        }
				        case 2:
				        {
			            	format(stringer1,sizeof(stringer1),"[RACE]: %s(%d) took 2nd place in the race! He gets: 20 Rubbles.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,stringer1);
			            	PlayerInfo[playerid][pRub] += 20;
							if(PlayerInfo[playerid][pQuest8] == 0)
					       	{
			       				PlayerInfo[playerid][pQuest8] = 1;
					       		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
					       	}
				        }
				        case 3:
				        {
			            	format(stringer1,sizeof(stringer1),"[RACE]: %s(%d) took 3rd place in the race! He gets: 10 Rubbles.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,stringer1);
			            	PlayerInfo[playerid][pRub] += 10;
							if(PlayerInfo[playerid][pQuest8] == 0)
					       	{
			       				PlayerInfo[playerid][pQuest8] = 1;
					       		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
					       	}
				        }
						default:
						{
     						format(stringer1,sizeof(stringer1),"[RACE]: %s(%d) took %d place in the race! He gets: 300 donate money.",PlayerInfo[playerid][pNames],playerid, PlayerWinners{0});
			            	RaceChat(COLOR_LIGHTBLUE,stringer1);
			            	PlayerInfo[playerid][pDonatemoney2] += 300;
							if(PlayerInfo[playerid][pQuest8] == 0)
					       	{
			       				PlayerInfo[playerid][pQuest8] = 1;
					       		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
					       	}
						}
				    }
				    Iter_Remove(RacersList, playerid);
				    PlayersInRace{0} --;
				    PlayerScore{playerid} = 0;
     				for(new s = 0;s!= 10; s++) PlayerTextDrawHide(playerid, Race[s][playerid]);
				    DestroyVehicleEx(GetPVarInt(playerid, "race_check"));
				    DeletePVar(playerid, "race_check");
				    SetPPos(playerid, -2169.1880,643.9022,1052.3750);
				    SetPlayerFacingAngle(playerid, 180.8674);
				    SetPlayerInteriorEx(playerid, 1);
				    SetPlayerVirtualWorldEx(playerid, 43);
					format(race_str,sizeof(race_str), "%s{FFFFFF}%i place: %s.\n ",race_str,PlayerWinners{0},PlayerInfo[playerid][pNames]);
					DeletePVar(playerid, "PlayerInRace");
					if (PlayersInRace{0} == 0)
					{
					    raceTime = 1;
					    PlayerWinners{0} = 0;
					    PlayersInRace{0} = 0;
					    foreach(new i: RacersList)
					    {
             				PlayerScore{i} = 0;
					        PlayerPosition{i} = 0;
					        Iter_Remove(RacersList, i);
					    }
					    SendClientMessageToAll(COLOR_YELLOW3,"The racing events have been successfully completed. '/racelist' - list of winners.");
					    RaceStarting[2] = 0;
					    typeRace = 3;
					    //state RaceStarted:No;
					}
				}
				else
				{
					foreach(new i: RacersList)
					{
					    if (i != -1 && PlayerScore {playerid} > PlayerScore {i} && i != playerid)
					    {
					        PlayerPosition{playerid}++;
					        PlayerPosition{i}--;
					    }
					    break;
					}
					if(PlayerScore{playerid} < 51) SetPlayerRaceCheckpoint(playerid, 0, los_santos_race[typeRace][PlayerScore{playerid}][0], los_santos_race[typeRace][PlayerScore{playerid}][1], los_santos_race[typeRace][PlayerScore{playerid}][2], los_santos_race[typeRace][PlayerScore{playerid}+1][0], los_santos_race[typeRace][PlayerScore{playerid}+1][1], los_santos_race[typeRace][PlayerScore{playerid}+1][2], 10.0);
					else SetPlayerRaceCheckpoint(playerid, 1, los_santos_race[typeRace][PlayerScore{playerid}][0], los_santos_race[typeRace][PlayerScore{playerid}][1], los_santos_race[typeRace][PlayerScore{playerid}][2], 0.0, 0.0, 0.0, 10.0);
					format(stringer1, sizeof(stringer1), "~y~%i/52", PlayerScore{playerid});
				    GameTextForPlayer(playerid, stringer1, 3000, 4);
			    	format(stringer1, sizeof(stringer1), "Point: ~w~%d/52", PlayerScore{playerid});
					PlayerTextDrawSetString(playerid,Race[6][playerid], stringer1);
				}
			}
		}
		if(LessonCar[playerid] == 1)
		{
			switch(pLessonCar[playerid])
			{
			case CHECKPOINT_1:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,-2047.1299,-82.7046,34.9072,-2021.2046,-72.2330,34.9150, 5.0);
				}
			case CHECKPOINT_2:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,-2021.2046,-72.2330,34.9150,-2004.2841,-56.4547,34.9083, 5.0);
				}
			case CHECKPOINT_3:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.2841,-56.4547,34.9083,-2004.3656,63.5635,29.0903, 5.0);
				}
			case CHECKPOINT_4:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.3656,63.5635,29.0903,-2003.5389,169.0928,27.2806, 5.0);
				}
			case CHECKPOINT_5:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,-2003.5389,169.0928,27.2806,-1999.3879,309.9337,34.7228, 5.0);
				}
			case CHECKPOINT_6:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,-1999.3879,309.9337,34.7228,-1999.1091,488.9284,34.7584, 5.0);
				}
			case CHECKPOINT_7:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,-1999.1091,488.9284,34.7584,-2020.0480,506.7851,34.7583, 5.0);
				}
			case CHECKPOINT_8:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.0480,506.7851,34.7583,-2123.5198,506.4044,34.7593, 5.0);
				}
			case CHECKPOINT_9:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,-2123.5198,506.4044,34.7593,-2147.1807,490.5033,34.7583, 5.0);
				}
			case CHECKPOINT_10:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,-2147.1807,490.5033,34.7583,-2149.1292,407.9551,34.8205, 5.0);
				}
			case CHECKPOINT_11:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,-2149.1292,407.9551,34.8205,-2148.8479,229.6411,34.9152, 5.0);
				}
			case CHECKPOINT_13:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,-2148.8479,229.6411,34.9152,-2165.5833,210.6641,34.9144, 5.0);
				}
			case CHECKPOINT_14:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,-2165.5833,210.6641,34.9144,-2233.7517,210.4253,34.9137, 5.0);
				}
			case CHECKPOINT_15:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,-2233.7517,210.4253,34.9137,-2249.0859,233.7054,34.9071, 5.0);
				}
			case CHECKPOINT_16:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 0,-2249.0859,233.7054,34.9071,-2261.7542,372.9274,33.2418, 5.0);
				}
			case CHECKPOINT_17:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,-2261.7542,372.9274,33.2418,-2359.8423,484.6871,30.3849, 5.0);
				}
			case CHECKPOINT_18:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,-2359.8423,484.6871,30.3849,-2383.4255,790.3303,34.7652, 5.0);
				}
			case CHECKPOINT_19:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,-2383.4255,790.3303,34.7652,-2364.3657,805.9047,36.6098, 5.0);
				}
			case CHECKPOINT_20:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,-2364.3657,805.9047,36.6098,-2217.7344,806.2595,49.0387, 5.0);
				}
			case CHECKPOINT_21:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 0,-2217.7344,806.2595,49.0387,-2095.3938,806.2051,69.1558, 5.0);
				}
			case CHECKPOINT_22:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;
					SetPlayerRaceCheckpoint(playerid, 0,-2095.3938,806.2051,69.1558,-2023.7908,806.1768,47.0934, 5.0);
				}
			case CHECKPOINT_23:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,-2023.7908,806.1768,47.0934,-2000.5417,825.1227,45.0399, 5.0);
				}
			case CHECKPOINT_24:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,-2000.5417,825.1227,45.0399,-2000.4559,901.5263,45.0433, 5.0);
				}
			case CHECKPOINT_25:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,-2000.4559,901.5263,45.0433,-1983.4757,917.6733,45.0391, 5.0);
				}
			case CHECKPOINT_26:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,-1983.4757,917.6733,45.0391,-1859.3486,917.3110,34.7522, 5.0);
				}
			case CHECKPOINT_27:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 0,-1859.3486,917.3110,34.7522,-1738.9817,917.5093,24.4839, 5.0);
				}
			case CHECKPOINT_28:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_29;
					SetPlayerRaceCheckpoint(playerid, 0,-1738.9817,917.5093,24.4839,-1584.8662,917.9406,7.2808, 5.0);
				}
			case CHECKPOINT_29:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 0,-1584.8662,917.9406,7.2808,-1541.6730,928.6280,6.7821, 5.0);
				}
			case CHECKPOINT_30:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_31;
					SetPlayerRaceCheckpoint(playerid, 0,-1541.6730,928.6280,6.7821,-1540.8986,962.7398,6.7813, 5.0);
				}
			case CHECKPOINT_31:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_32;
					SetPlayerRaceCheckpoint(playerid, 0,-1540.8986,962.7398,6.7813,-1586.9012,1029.1655,6.7806, 5.0);
				}
			case CHECKPOINT_32:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_33;
					SetPlayerRaceCheckpoint(playerid, 0,-1586.9012,1029.1655,6.7806,-1634.6927,1240.9236,6.7836, 5.0);
				}
			case CHECKPOINT_33:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_34;
					SetPlayerRaceCheckpoint(playerid, 0,-1634.6927,1240.9236,6.7836,-1733.3973,1340.2684,6.7808, 5.0);
				}
			case CHECKPOINT_34:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_35;
					SetPlayerRaceCheckpoint(playerid, 0,-1733.3973,1340.2684,6.7808,-1822.0417,1375.2615,6.7819, 5.0);
				}
			case CHECKPOINT_35:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_36;
					SetPlayerRaceCheckpoint(playerid, 0,-1822.0417,1375.2615,6.7819,-1930.4690,1306.2540,6.7826, 5.0);
				}
			case CHECKPOINT_36:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_37;
					SetPlayerRaceCheckpoint(playerid, 0,-1930.4690,1306.2540,6.7826,-2025.0059,1304.6970,6.8203, 5.0);
				}
			case CHECKPOINT_37:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_38;
					SetPlayerRaceCheckpoint(playerid, 0,-2025.0059,1304.6970,6.8203,-2062.1274,1281.8025,7.5473, 5.0);
				}
			case CHECKPOINT_38:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_40;
					SetPlayerRaceCheckpoint(playerid, 0,-2062.1274,1281.8025,7.5473,-2270.4485,1204.1831,53.2871, 5.0);
				}
			case CHECKPOINT_40:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_41;
					SetPlayerRaceCheckpoint(playerid, 0,-2270.4485,1204.1831,53.2871,-2267.0386,1095.9159,79.6025, 5.0);
				}
			case CHECKPOINT_41:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_42;
					SetPlayerRaceCheckpoint(playerid, 0,-2267.0386,1095.9159,79.6025,-2266.0283,990.1443,75.1669, 5.0);
				}
			case CHECKPOINT_42:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_43;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.0283,990.1443,75.16690,-2266.5266,807.7878,49.0438, 5.0);
				}
			case CHECKPOINT_43:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_44;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.5266,807.7878,49.0438,-2266.6682,585.7730,36.3168, 5.0);
				}
			case CHECKPOINT_44:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_45;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.6682,585.7730,36.3168,-2242.5308,562.4396,34.75896, 5.0);
				}
			case CHECKPOINT_45:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_46;
					SetPlayerRaceCheckpoint(playerid, 0,-2242.5308,562.4396,34.7589,-2229.0964,540.6600,34.7586, 5.0);
				}
			case CHECKPOINT_46:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_47;
					SetPlayerRaceCheckpoint(playerid, 0,-2229.0964,540.6600,34.7586,-2209.9031,506.0080,34.7579, 5.0);
				}
			case CHECKPOINT_47:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_48;
					SetPlayerRaceCheckpoint(playerid, 0,-2209.9031,506.0080,34.7579,-2102.6755,501.8567,34.7602, 5.0);
				}
			case CHECKPOINT_48:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_49;
					SetPlayerRaceCheckpoint(playerid, 0,-2102.6755,501.8567,34.7602,-2020.8113,501.6382,34.7586, 5.0);
				}
			case CHECKPOINT_49:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_50;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.8113,501.6382,34.7586,-2007.8937,491.4999,34.7592, 5.0);
				}
			case CHECKPOINT_50:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_51;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.8937,491.4999,34.7592,-2009.4333,253.1356,30.0010, 5.0);
				}
			case CHECKPOINT_51:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_52;
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4333,253.1356,30.0010,-2008.9186,60.0073,29.5201, 5.0);
				}
			case CHECKPOINT_52:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_53;
					SetPlayerRaceCheckpoint(playerid, 0,-2008.9186,60.0073,29.5201,-2008.8951,-83.7164,35.0135, 5.0);
				}
			case CHECKPOINT_53:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_54;
					SetPlayerRaceCheckpoint(playerid, 0,-2008.8951,-83.7164,35.0135,-2007.6554,-162.2175,35.4526, 5.0);
				}
			case CHECKPOINT_54:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_55;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.6554,-162.2175,35.4526,-2007.6746,-276.8484,35.0604, 5.0);
				}
			case CHECKPOINT_55:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_56;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.6746,-276.8484,35.0604,-2038.9626,-289.8528,35.1186, 5.0);
				}
			case CHECKPOINT_56:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_57;
					SetPlayerRaceCheckpoint(playerid, 0,-2038.9626,-289.8528,35.1186,-2195.3115,-290.1100,35.0690, 5.0);
				}
			case CHECKPOINT_57:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_58;
					SetPlayerRaceCheckpoint(playerid, 0,-2195.3115,-290.1100,35.0690,-2205.7070,-272.5776,35.0689, 5.0);
				}
			case CHECKPOINT_58:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_59;
					SetPlayerRaceCheckpoint(playerid, 0,-2205.7070,-272.5776,35.0689,-2205.3076,-204.0107,35.0867, 5.0);
				}
			case CHECKPOINT_59:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_60;
					SetPlayerRaceCheckpoint(playerid, 0,-2205.3076,-204.0107,35.0867,-2236.1755,-187.5369,34.9148, 5.0);
				}
			case CHECKPOINT_60:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_61;
					SetPlayerRaceCheckpoint(playerid, 0,-2236.1755,-187.5369,34.9148,-2251.8374,-86.5177,34.9136, 5.0);
				}
			case CHECKPOINT_61:
				{

					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_62;
					SetPlayerRaceCheckpoint(playerid, 0,-2251.8374,-86.5177,34.9136,-2234.4314,-72.5208,34.9151, 5.0);
				}
			case CHECKPOINT_62:
				{

					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_63;
					SetPlayerRaceCheckpoint(playerid, 0,-2234.4314,-72.5208,34.9151,-2083.7751,-72.7984,34.9150, 5.0);
				}
			case CHECKPOINT_63:
				{

					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 0,-2083.7751,-72.7984,34.9150,-2046.7074,-84.9175,34.9071, 5.0);
				}
			case CHECKPOINT_64:
				{

					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_65;
					SetPlayerRaceCheckpoint(playerid, 0,-2046.7074,-84.9175,34.9071,-2079.5813,-95.3732,34.9071, 5.0);
				}
			case CHECKPOINT_65:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_66;
					SetPlayerRaceCheckpoint(playerid, 1,-2079.5813,-95.3732,32.9071,0.0,0.0,0.0, 5.0);
				}
			case CHECKPOINT_66:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if (health >= 850)
					{
						JobCarTime[playerid] = 0;
						LessonCar[playerid] = 0;
						LessonStat[playerid] = 0;
						TakingLesson[playerid] = 0;
						PlayerInfo[playerid][pVodPrava] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GREEN, "You have successfully passed your license! Please park the car!");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "You don't drive well enough to get your license.");
						JobCarTime[playerid] = 0;
						LessonCar[playerid] = 0;
						LessonStat[playerid] = 0;
						TakingLesson[playerid] = 0;
					}
				}
			}
		}
	}
	return true;
}
forward UnFreez(playerid);
public UnFreez(playerid) return TogglePlayerControllable(playerid, true);

public OnPlayerLeaveRaceCheckpoint(playerid) return true;
public OnRconCommand(cmd[]) return true;
public OnObjectMoved(objectid) {
	for(new ids = 0; ids < MAX_OBJECT_MOVED; ids++)
	{
		if(objectid == moved_info[ids][moved_id] && moved_info[ids][status_moved])
		{
		    moved_info[ids][status_moved] = false;
		    SetTimerEx("CheckObjectBarrier", 6000, 0, "i", ids);
		    return 1;
		}
	}
	return true;
}
public OnPlayerObjectMoved(playerid, objectid) return true;
public OnPlayerExitedMenu(playerid) return true;
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == ChoseSkin)
	{
		switch(row)
		{
		case 0:
			{
				switch (SelectCharID[playerid])
				{
				case 1: //LSPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[0][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[1][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[2][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[3][0]; }
                        else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[145][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[145][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[146][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[146][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[144][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[144][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[4][0]; }
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkinEx(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[6][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkinEx(playerid, 310); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = 310; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkinEx(playerid, 311); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = 311; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkinEx(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[7][0]; }
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkinEx(playerid, 306); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = 306; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkinEx(playerid, 307); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 307; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 2: //FBI
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[8][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[9][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[10][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[11][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[12][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[13][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[107][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 3: //Army SF
					{
                        if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[142][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[142][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[150][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[150][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 4: //Mediki
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[20][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 308); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = 308; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, 309); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 309; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 5: //La Cosa Nostra
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[21][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[22][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[23][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[24][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 6: //Yakuza
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[25][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[26][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[27][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[28][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[108][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 7: //����������
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[29][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[30][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[31][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[32][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[33][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 10: //����
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[34][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[35][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[36][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[37][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[38][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[145][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[145][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[146][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[146][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, JoinPed[144][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[144][0]; }
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkinEx(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[40][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkinEx(playerid, 310); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = 310; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkinEx(playerid, 311); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = 311; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkinEx(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[41][0]; }
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkinEx(playerid, 306); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = 306; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkinEx(playerid, 307); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 307; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 11: //Instructors
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[48][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[49][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[50][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[50][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[51][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 12://������
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[74][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[75][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[76][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[119][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[119][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 13://Vagos
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[80][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[81][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[82][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[121][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[121][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 14://�������
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[60][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[61][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[62][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[63][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[64][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 15://����
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[65][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[66][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[67][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[68][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[69][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[70][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[122][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[122][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 16://�� NEWS
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[88][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[147][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[147][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[148][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[148][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[149][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[149][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 17://�����
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[71][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[72][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[73][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[123][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[123][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 18://����
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[77][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[78][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[79][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[120][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[120][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 19://Army LV
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[143][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[143][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[150][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[150][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 21://LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[52][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[53][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[54][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[55][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[56][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[145][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[145][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[146][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[146][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, JoinPed[144][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[144][0]; }
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkinEx(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[58][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkinEx(playerid, 310); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = 310; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkinEx(playerid, 311); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = 311; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkinEx(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[59][0]; }
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkinEx(playerid, 306); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = 306; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkinEx(playerid, 307); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 307; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 23: //Mediki
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[109][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[135][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[135][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[136][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[136][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 24: //Street racers
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[113][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[116][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, JoinPed[117][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[117][0]; }
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkinEx(playerid, JoinPed[126][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[126][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkinEx(playerid, JoinPed[127][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[127][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkinEx(playerid, JoinPed[128][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[128][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkinEx(playerid, JoinPed[129][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[129][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 25: //SWAT
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[5][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[7][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 26: //����� Administration of the President
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 17); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 17; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 216); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 216; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 227); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 227; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 287); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 287; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 265); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = 265; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 70); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = 70; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, 12); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = 12; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, 208); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = 208; }
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkinEx(playerid, 295); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 295; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				case 27,28: //������
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 98); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 98; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 171); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 171; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 172); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 172; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 189); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 189; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
				}
			}
		case 1:
			{
				PlayerInfo[playerid][pModel] = InviteSkin[playerid];
				forma[playerid] = 0;
				SelectCharPlace[playerid] = 0;
				CharPrice[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
				PicCP[playerid] = 0;
				gSpecState[playerid] = INVALID_PLAYER_ID;
				SpawnPlayerEx(playerid);
			}
		}
	}
	else if(Current == HouseShaw)
	{
	    switch(row)
		{
			case 0://������� ������
			{
			    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][1]); SelectCharPlace[playerid] = 2; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][2]); SelectCharPlace[playerid] = 3; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][0]); SelectCharPlace[playerid] = 1; }
				ShowMenuForPlayer(HouseShaw,playerid);
			}
			case 1://������� �����
			{
			    if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][1]); SelectCharPlace[playerid] = 2; }
			    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][0]); SelectCharPlace[playerid] = 1; }
                else if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkinhome][2]); SelectCharPlace[playerid] = 3; }
                ShowMenuForPlayer(HouseShaw,playerid);
			}
			case 2://������� � �������� ������  PlayerInfo[playerid][pSkinhome][3]
			{
			    if(GetPlayerSkin(playerid) != 0) PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
				SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
    			TogglePlayerControllable(playerid, 1);
                SetCameraBehindPlayer(playerid);
                SelectCharPlace[playerid] = 0;
                SpawnPlayerEx(playerid);
			}
   		}
	}
	if(Current == ReconPanel)
	{
		switch(row)
		{
			case 0: UpdateRecon(playerid, gSpecID[playerid]), ShowMenuForPlayer(ReconPanel, playerid);
			case 1:
			{
				if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
				if(GetPVarInt(gSpecID[playerid], "AFK_Time") > 2) return SendClientMessage(playerid, COLOR_GREY, "The player is in AFK");
				GetPlayerHealth(gSpecID[playerid],GMHP[gSpecID[playerid]][0]);
				GetVehicleHealth(GetPlayerVehicleID(gSpecID[playerid]),VEHHP[gSpecID[playerid]][0]);
				GetPlayerArmour(gSpecID[playerid], GMARMOUR[gSpecID[playerid]][0]);
				SetPlayerHealthAC(gSpecID[playerid], 100.0);
				SetPlayerArmour(gSpecID[playerid], 0);
				setVehicleHealth(GetPlayerVehicleID(gSpecID[playerid]),10000.0);
				SetTimerEx("GETHP", 1000, false, "i", gSpecID[playerid]);
				new Float:boomx, Float:boomy, Float:boomz;
				GetPlayerPos(gSpecID[playerid],boomx, boomy, boomz);
				CreateExplosion(boomx, boomy , boomz+7, 5, 0.5);
				format(stringer1, sizeof(stringer1), "Adminstrator %s performed check Players %s.",PlayerInfo[playerid][pNames],PlayerInfo[gSpecID[playerid]][pNames]);
				SendAdminMessage(COLOR_GREY,stringer1);
				ShowMenuForPlayer(ReconPanel, playerid);
			}
			case 2: {
				if(PlayerInfo[playerid][pAlcoInvenxua] < 3) return SendClientMessage(playerid, -1, "Not available for your lvl admin rights!");
				new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
				GetPlayerHealth(gSpecID[playerid], shealth);
				SetPlayerHealthAC(gSpecID[playerid], shealth-5);
				GetPlayerPos(gSpecID[playerid], slx, sly, slz);
				SetPPos(gSpecID[playerid], slx, sly, slz+5);
				PlayerPlaySound(gSpecID[playerid], 1130, slx, sly, slz+5);
				format(stringer1, sizeof(stringer1), "Adminstrator %s gave a kick %s",PlayerInfo[playerid][pNames], PlayerInfo[gSpecID[playerid]][pNames]);
				SendAdminMessage(COLOR_GREY,stringer1);
				ShowMenuForPlayer(ReconPanel, playerid);
			}
			case 3: ShowPlayerDialog(playerid, 2913, DIALOG_STYLE_INPUT, "Recon Mute", "Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 20 Mat)", "Next", "Cancle"), ShowMenuForPlayer(ReconPanel, playerid);
			case 4: ShowPlayerDialog(playerid, 2917, DIALOG_STYLE_INPUT, "Recon Jail", "Enter the number of minutes and the reason\nIn the format: Minutes Reason (Example: 30 Cheat)", "Next", "Cancle"), ShowMenuForPlayer(ReconPanel, playerid);
			case 5: TogglePlayerSpectatingEx(playerid,0), GameTextForPlayer(playerid,"~w~RECON ~r~OFF",3000,4);
		}
	}
	return true;
}

stock IsRotators(carid) {
	switch(carid) {
		case 406,417,425,430,432,441,446,447,448,449,452,453,454,457,460,461,462,464,465,469,471,472,473,476,481,484,485,486,487,488,493,497,509,510,511,512,513,519,520,538,537,539,548,553,563,564,571,577,592,593,594,595: {
			return false;
		}
	}
	return true;
}

stock JailCheat(playerid, code)
{
	if(code == 59) return false;
	ResetWeapons(playerid);
	SetPlayerInteriorEx(playerid, 6);
	switch(random(3))
	{
		case 0: SetPPos(playerid,346.7122,306.7019,999.4639), SetPlayerFacingAngle(playerid, 120.3213);
		case 1: SetPPos(playerid,344.0128, 304.9643, 999.4639), SetPlayerFacingAngle(playerid, 102.7743);
		case 2: SetPPos(playerid,347.7505,302.1187,999.4639), SetPlayerFacingAngle(playerid, 99.9542);
	}
	TogglePlayerControllable(playerid, false);
	SetTimerEx("UnFreez", 2900, 0, "d", playerid);
	PlayerInfo[playerid][pJailed] = 4;
	PlayerInfo[playerid][pMestoJail] = 0;
	PlayerInfo[playerid][pJailTime] = 360;
	SendMes(playerid,-1,"{FF6600}Anticheat put you in jail for 6 minutes (Code: #%d)", code);
	SendMes(playerid,-1,"Time until the end of the sentence: {CCCC00}/time");
	SendMes(playerid,-1,"{FF6600}If ERROR occurs, write to the free server group {FFFF00}("PAGE_VK_FREE")");
	return true;
}

forward BuyLead(playerid);
public BuyLead(playerid)
{
	new fields, rows;
	cache_get_data(rows, fields);
	if (rows>FRACTIONS_NUM) rows=FRACTIONS_NUM;


	for(new i; i < FRACTIONS_NUM; i++)
	{
		FractionVxod[i] = "";
		FractionNamess[i] = "";
		FractionHasLeader[i]=false;
	}
	for(new i=0; i < rows; i++)
	{
		new FrID = cache_get_field_content_int(i, "pLeader", connects);
		if (FrID<0 || FrID>=FRACTIONS_NUM) continue;
		cache_get_field_content(i, "pGetonDate", FractionVxod[FrID], connects, 60);
		cache_get_field_content(i, "Name", FractionNamess[FrID], connects, 24);
		FractionHasLeader[FrID]=true;
	}
	return LoadBuyLeadDialog(playerid);
}

forward LoadBuyLeadDialog(playerid);
public LoadBuyLeadDialog(playerid)
{
	new fstring[1200] = "{ffffff}Faction\t{ffffff}Price\n{ffffff}", pvarString[32], itters;
	for(new i = 0; i < FRACTIONS_NUM; i++)
	{
		if(!strlen(FractionNamess[i]) && GetMemberPrice[i] != 0)
		{
			format(pvarString, sizeof pvarString, "buylead_%i", itters);
			SetPVarInt(playerid, pvarString, i);
			itters++;
			format(fstring, sizeof(fstring), "%s%s\t{8BD032}%d money\n", fstring, GetPlayerFracName[i], GetMemberPrice[i]);
		}
	}
	if(itters == 0) return SendClientMessage(playerid, -1, "There are no leaders available at the moment.");
	return ShowPlayerDialog(playerid, 24127, DIALOG_STYLE_TABLIST_HEADERS, "{FFD700}List of available leadership positions", fstring, "Buy", "Back");
}
//--------------------------------------------------------[ ��� �����������  ��������] ----------------------------------------------------------
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if (!gIsRequestClassCalled{playerid}
        && newstate == PLAYER_STATE_ONFOOT
        && oldstate == PLAYER_STATE_NONE) {
        return CheatKick(playerid, 6);
    }
	SetPVarInt(playerid, "GunCheck", 5);
	new newcar = GetPlayerVehicleID(playerid);
	if(oldstate == PLAYER_STATE_DRIVER) checkveh[GetPVarInt(playerid,"CheckCar")] = gettime()+5, minigun[playerid]+=2;
	if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)) return CheatKick(playerid, 16);
    if(newstate == oldstate) return CheatKick(playerid, 17);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(!IsAPlane(newcar) && !IsABoat(newcar) && !IsANoSpeed(newcar))
		{
			for(new i = 0; i < 18; i++) PlayerTextDrawHide(playerid, td_speed[playerid][i]);
		}
		if(TransportDuty[playerid] > 0) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		if(PlayerInfo[playerid][pJob] == 2)
		{
			if(gcontract[playerid] == 1) Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]),gcontract[playerid] = 0;
		}
		if(TalkingLive[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6ab1ffaa, "Live broadcast has ended");
			SendClientMessage(TalkingLive[playerid], 0x6ab1ffaa, "Live broadcast has ended");
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[playerid] = INVALID_PLAYER_ID;
		}
		else if(TalkingLivels[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6ab1ffaa, "Live broadcast has ended");
			SendClientMessage(TalkingLivels[playerid], 0x6ab1ffaa, "Live broadcast has ended");
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(TalkingLivels[playerid], 1);
			TalkingLivels[TalkingLivels[playerid]] = INVALID_PLAYER_ID;
			TalkingLivels[playerid] = INVALID_PLAYER_ID;
		}
		if(TakingLesson[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, "Car delivery has been stopped, you have left the car");
			DisablePlayerRaceCheckpoint(playerid); CP[playerid] = 0;
			TakingLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		if(GetPVarInt(playerid, "ProductID") > 0)
		{
 			SendClientMessage(playerid, COLOR_LIGHTRED, "You have 15 seconds to return");
		    DisablePlayerRaceCheckpoint(playerid);
		    SetPVarInt(playerid,"ProductTime",15);
		}
		if(TransportDuty[playerid] > 0)
		{
			if(TransportDuty[playerid] == 1) TaxiDrivers -= 1;
			Delete3DTextLabel(taxi3d[newcar]);
			DisablePlayerRaceCheckpoint(playerid);
			GiveMoney(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			//	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] != INVALID_PLAYER_ID)
		{
			if(IsPlayerConnected(TransportDriver[playerid]))
			{
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				if(PlayerInfo[playerid][pCash] < TransportCost[playerid])
				{
					GameTextForPlayer(TransportDriver[playerid], "~r~ Fail", 5000, 1);
					GameTextForPlayer(playerid, "~r~ Fail", 5000, 1);
					SendClientMessage(TransportDriver[playerid], COLOR_GRAD1, "The passenger does not have enough money to pay!");
					SendClientMessage(playerid, COLOR_GRAD1, "You don't have enough money to pay!");
					TransportCost[playerid] = 0;
					TransportTime[playerid] = 0;
					TransportDriver[playerid] = INVALID_PLAYER_ID;
					return true;
				}
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				PlayerInfo[playerid][pCash] -=TransportCost[playerid];
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = INVALID_PLAYER_ID;
				format(stringer1, sizeof(stringer1), "~r~-%d",TransportCost[playerid]);
				GameTextForPlayer(playerid, stringer1, 5000, 1);
				format(stringer1, sizeof(stringer1), "~g~+%d",TransportCost[playerid]);
				GameTextForPlayer(TransportDriver[playerid], stringer1, 5000, 1);
			}
		}
	}
	else if(newstate == PLAYER_STATE_DRIVER)
	{
	    SetPVarInt(playerid, "CheckCar", newcar);
	    new arend_id = INVALID_PLAYER_ID;
		if(!IsAPlane(newcar) && !IsABoat(newcar) && !IsANoSpeed(newcar) && !GetPVarInt(playerid,"AutoShop"))
		{
			UpdateSpeedometr(playerid,0);
			for(new i = 0; i < 18; i++) PlayerTextDrawShow(playerid, td_speed[playerid][i]);
		}
		if(Fuell[newcar] <= 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Gasoline has run out in TS.");
			PlayerInfo[playerid][pFuelcar] = 0;
		}
		if(IsABike(newcar) && zavodis[playerid] == 0) callcmd::engggg(playerid, "");
		else if(zavodis[playerid] == 0)
		{
			SendClientMessage(playerid,-1,"{99FF00}Press {ff0000}'2' {99FF00}or type {ff0000}/en{99FF00} to unlock your car engine.");
//			SendClientMessage(playerid,-1,"{99FF00}���������: {ff0000}/en{99FF00} - ������ ���������� �����������.");
		}
		if(IsABoat(newcar))
		{
			if(PlayerInfo[playerid][pBoatLic] < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}x {FFFFFF}(( You do not have a license for water transport! (/gps - The Main - Driving school Or Buy In /donate ))"), RemoveFromVehicle(playerid);
		}
		if(IsAPlane(newcar))
		{
			if(PlayerInfo[playerid][pFlyLic] < 1)
			{
				if(TakingLesson[playerid] == 1) { }
				else return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}x {FFFFFF}(( You do not have a license for air transport! (/gps - The Main - Driving school Or Buy In /donate ))"), RemoveFromVehicle(playerid);
			}
		}
		if(VodPrava(newcar))
		{
			if(PlayerInfo[playerid][pVodPrava] == 0)
			{
				if(TakingLesson[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}x {FFFFFF}::: You do not have a driver's license! (/gps - The Main - Driving school Or Buy In /donate )"), RemoveFromVehicle(playerid);
			}
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 520) // �����
		{
			if (PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pOdet] == 1) { }
			else {
				RemoveFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Military equipment is not available to you!");
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)//����
		{
			if (PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pOdet] == 1) { }
			else {
				RemoveFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Military equipment is not available to you!"); }
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 432)//����
		{
			if ((PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 3) && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pOdet] == 1) { }
			else {
				RemoveFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Military equipment is not available to you!"); }
		}
		else if(GetArendCarID(newcar, arend_id) != (-1))
		{
			if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id))
			{
			    new rc = GetArendCarID(newcar);
			    format(stringer,sizeof(stringer),"{FFFFFF}Transport for rent!\n\n- Model: {9ACD32}%s{FFFFFF}\n- Price: {9ACD32}$%i{FFFFFF}\n\nTo rent click {9ACD32}'Rent'{FFFFFF}", VehicleNameS[GetVehicleModel(newcar)-400], ArendInfo[rc][aCost]);
				ShowPlayerDialog(playerid, 9643, 0, "Rent", stringer, "Rent", "Cancle");
			}
			else if(arend_id != playerid)
			{
			    SendClientMessage(playerid,-1,"This transport is already rented");
			    RemoveFromVehicle(playerid);
			}
		}
		else if(newcar >= medicsls[0] && newcar <= medicsls[1])
		{
			if(PlayerInfo[playerid][pLeader] == 4 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs Medics Los Santos!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= carcaligula[0] && newcar <= carcaligula[1])
		{
			if(PlayerInfo[playerid][pLeader] == 28 || PlayerInfo[playerid][pMember] == 28) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs Casino Caligulas!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= cardrakon[0] && newcar <= cardrakon[1])
		{
			if(PlayerInfo[playerid][pLeader] == 27 || PlayerInfo[playerid][pMember] == 27) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs Casino Four Dragons!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= sfpdcar[0] && newcar <= sfpdcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 10 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs SFPD!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= ruscar[0] && newcar <= ruscar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Russian mafia!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= lcncar[0] && newcar <= lcncar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs La Cosa Nostra!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= taxicar[0] && newcar <= taxicar[1])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0) {SendClientMessage(playerid, COLOR_WHITE, "Usage: /fare - to set the Prices"); }
			else { SendClientMessage(playerid, COLOR_WHITE, "{FF0000}x {FFFFFF}::: You are not a taxi driver! /gps - City Hall"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= hotdogcar[0] && newcar <= hotdogcar[1])
		{
			if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {FFFFFF}You are not a seller of leather goods"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= hitcar[0] && newcar <= hitcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a member Hitman!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= ministrcar[0] && newcar <= ministrcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 26 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a member of the Ministry!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= streetcar[0] && newcar <= streetcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a member Street Rasers!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= lvpdcar[0] && newcar <= lvpdcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 21 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a member LVPD!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not an employee San News!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= govcar[0] && newcar <= govcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 7 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs To the government!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= mehanik[0] && newcar <= mehanik[1])
		{
			if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}You are not a mechanic! /gps - City Hall"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= liccar[0] && newcar <= liccar[1])
		{
            if((PlayerInfo[playerid][pMember] != 11 || PlayerInfo[playerid][pOdet] != 1) && TakingLesson[playerid] != 1) return SendClientMessage(playerid,COLOR_GREY, "{FF0000}x {AFAFAF}You are not a school instructor!"), RemoveFromVehicle(playerid);
			if(PlayerInfo[playerid][pVodPrava] == 0 && TakingLesson[playerid] == 1 && newcar != liccar[1])
			{
				if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1) JobCarTime[playerid] = 0;
				LessonStat[playerid]++;
				pLessonCar[playerid] = CHECKPOINT_1;
				return SetPlayerRaceCheckpoint(playerid,0,-2056.8748,-97.6126,32.9113,-2047.1299,-82.7046,32.9072,5.0);
			}
		}
		else if(newcar >= yakcar[0] && newcar <= yakcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Yakuza!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= sapdpatrul[0] && newcar <= sapdpatrul[1])
		{
			if(PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs LSPD!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= sapdcar[0] && newcar <= sapdcar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pOdet] == 1){ }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs LSPD!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= fbicar[0] && newcar <= fbicar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs FBI!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= comptruck[0] && newcar <= comptruck[1])
		{
			if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a grocery distributor!"), RemoveFromVehicle(playerid);
			if(GetPVarInt(playerid,"JobVehicle") != GetPlayerVehicleID(playerid))
			{
				return ShowPlayerDialog(playerid,1202,DIALOG_STYLE_MSGBOX,"Rent","Contract:\n\nCar for the position: Deliverer of products and gasoline.\nCar rental cost: 250 Money.\n\nDo you agree?","Yes","No");
			}
			if(GetPVarInt(playerid,"ProductTime") > 0)
			{
				new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
				DeletePVar(playerid,"ProductTime");
	 			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
		 		DisablePlayerRaceCheckpoint(playerid);
		 		SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
		 	}
		}
		else if(newcar >= benzovoz[0] && newcar <= benzovoz[1])
		{
			if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}You are not a petrol delivery man!"), RemoveFromVehicle(playerid);
			if(GetPVarInt(playerid,"JobVehicle") != GetPlayerVehicleID(playerid))
			{
    			return ShowPlayerDialog(playerid,1202,DIALOG_STYLE_MSGBOX,"Rent","Contract:\n\nCar for the position: Deliverer of products and gasoline.\nCar rental cost: 250 Money.\n\nDo you agree?","Yes","No");
			}
			if(GetPVarInt(playerid,"ProductTime") > 0)
			{
				new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
				DeletePVar(playerid,"ProductTime");
	 			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
		 		DisablePlayerRaceCheckpoint(playerid);
		 		SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
		 	}
		}
		else if(newcar >= swatcar[0] && newcar <= swatcar[1])
		{
			if(PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pLeader] == 25 && PlayerInfo[playerid][pOdet] == 1) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}This transport is not available to you!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= armycar[0] && newcar <= armycar[1])
		{
			if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pOdet] == 1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 548) SendClientMessage(playerid, COLOR_WHITE, ":: For loading/unloading materials Usage: /carmat");
			}
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs Army SF!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == alkofuraballas)
		{
			if(PlayerInfo[playerid][pMember] == 12) { SendClientMessage(playerid,COLOR_WHITE,"To load alcoholic beverages, go to the loading place and enter /loadalko"), SendMes(playerid,0x8813E7FF,"In the Ballas Gang Van %d/100 alcohol products",alkogol[newcar]); }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Ballas Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == alkofuragrove)
		{
			if(PlayerInfo[playerid][pMember] == 15) { SendClientMessage(playerid,COLOR_WHITE,"To load alcoholic beverages, go to the loading place and enter /loadalko"), SendMes(playerid,0x24b012AA,"In the Grove Street Van %d/100 alcohol products",alkogol[newcar]); }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Grove Street Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == alkofuraactek)
		{
			if(PlayerInfo[playerid][pMember] == 17) { SendClientMessage(playerid,COLOR_WHITE,"To load alcoholic beverages, go to the loading place and enter /loadalko"), SendMes(playerid,TEAM_AZTECAS_COLOR,"In the Aztec Gang Van %d/100 alcohol products",alkogol[newcar]); }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Varios Los Varios Los Aztecas!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == alkofuravagos)
		{
			if(PlayerInfo[playerid][pMember] == 13) { SendClientMessage(playerid,COLOR_WHITE,"To load alcoholic beverages, go to the loading place and enter /loadalko"), SendMes(playerid,0xDBD604AA,"In the Los Santos Vagos Van %d/100 alcohol products",alkogol[newcar]); }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Los Santos Los Santos Vagos!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == alkofurarifa)
		{
			if(PlayerInfo[playerid][pMember] == 18) { SendClientMessage(playerid,COLOR_WHITE,"To load alcoholic beverages, go to the loading place and enter /loadalko"), SendMes(playerid,0x83BFBFAA,"In the Rifa Gang Van %d/100 alcohol products",alkogol[newcar]); }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Rifa Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == matsfuraactek)
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Varios Los Varios Los Aztecas!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= coronoscar[0] && newcar <= coronoscar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Varios Los Varios Los Aztecas!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == matsfuravagos)
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Los Santos Los Santos Vagos!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= vagoscar[0] && newcar <= vagoscar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Los Santos Los Santos Vagos!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == matsfuragrove)
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Grove Street Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= grovecar[0] && newcar <= grovecar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Grove Street Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == matsfurarifa)
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Rifa Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= rifacar[0] && newcar <= rifacar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Rifa Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar == matsfuraballas)
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Ballas Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= ballascar[0] && newcar <= ballascar[1])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Ballas Gang!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= armcar[0] && newcar <= armcar[1])
		{
			if(PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pOdet] == 1 || keys[playerid] == 1 || proverkaforma[playerid] == 1) { }
			else { SendClientMessage(playerid, COLOR_GRAD1, "{FF0000}x {AFAFAF}Transport belongs Army LV!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= matscar[0] && newcar <= matscar[1])
		{
			if (PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pOdet] == 1 || proverkaforma[playerid] == 1)
			{
				SendMes(playerid,TEAM_GROVE_COLOR,"������: %d/%d", MatHaul[newcar-matscar[0]][mLoad],MatHaul[newcar-matscar[0]][mCapasity]);
				SendClientMessage(playerid, COLOR_WHITE, "(( For loading/unloading Weapons  Usage: /carm ))");
			}
			else { SendClientMessage(playerid, COLOR_GREY, "{FF0000}x {AFAFAF}Transport belongs Army LV!"); RemoveFromVehicle(playerid); }
		}
		else if(newcar >= incos[0] && newcar <= incos[1])
		{
			if(PlayerInfo[playerid][pJob] != 8) {
				SendClientMessage(playerid,COLOR_WHITE, "You are not a collector! /gps - City Hall");
				RemoveFromVehicle(playerid);
			}
			else
			{
				SetPlayerCheckpoint(playerid,1425.6633,-1709.4857,13.5085,5);
				SendClientMessage(playerid,COLOR_RED, "Load up with money at the LS bank");
				PicCP[playerid] = 0;
			}
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    minigun[playerid]+=2;
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(400 <= model <= 611 && model != 483)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15) return Kick(playerid);
				else if(!(0 < seat <= model)) return Kick(playerid);
			}
			else return Kick(playerid);
		}
		foreach(Player,i)
		{
			if(IsPlayerInVehicle(i, newcar) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
			{
				if(PlayerInfo[playerid][pCash] < TransportValue[i])
				{
					SendMes(playerid,0x6ab1ffaa,"You need %d Money to get into the car.", TransportValue[i]);
					RemoveFromVehicle(playerid);
					return true;
				}
				if(TransportDuty[i] == 1)
				{
					if(PlayerInfo[playerid][pLevel] > 1 && PlayerInfo[playerid][pCash] < TransportValue[i])
					{
						SendMes(playerid,COLOR_GREEN,"You need %d Money to get into a taxi.", TransportValue[i]);
						RemoveFromVehicle(playerid);
						return true;
					}
					SendMes(playerid,0x6ab1ffaa,"You paid the taxi driver %d Money.", TransportValue[i]);
					SendMes(i,0x6ab1ffaa,"Passenger %s boarded your taxi.", PlayerInfo[playerid][pNames]);
					PlayerInfo[playerid][pCash] -=  TransportValue[i];
					GiveMoney(i, TransportValue[i]);
					return true;
				}
			}
		}
	}
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    CheckVehicle[playerid] = gettime() + 2;
    VehicleID[playerid] = INVALID_VEHICLE_ID;
    GetVehiclePos(vehicleid, VEHICLE [ vehicleid-1 ][ v_X ], VEHICLE [ vehicleid-1 ][ v_Y ], VEHICLE [ vehicleid-1 ][ v_Z ]);
    GetVehicleZAngle(vehicleid, VEHICLE [ vehicleid-1 ][ v_A ]);
    SetPVarInt(playerid, "GunCheck", 3);
    SetPVarInt(playerid,"AFK_Time",0);
    race_exitvehicle(playerid);
	if(PEfir[playerid] != 255)
	{
		SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
		PEfir[playerid] = 255;
	}
 	if(GetPVarInt(playerid, "rentrc") == 1)
 	{
		SetPlayerInteriorEx(playerid, 0);
		DestroyVehicleEx(vehiclerc[playerid]);
		DeletePVar(playerid, "rentrc");
		SendClientMessage(playerid, COLOR_GREEN, "* {ffffff}The renter car was destroyed because you have varint from it.");
 	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		Pefir[playerid] = 0;
		PEfir[playerid] = 255;
		SendClientMessage(playerid,COLOR_WHITE, "You have left the live broadcast");
	}
	if(TransportDuty[playerid] > 0)
	{
		if(TransportDuty[playerid] == 1) TaxiDrivers -= 1;
		Delete3DTextLabel(taxi3d[vehicleid]);
	}
	if(VertMats[playerid] != 0) VertMats[playerid] = 0, DisablePlayerCheckpoint(playerid);
	if(MatsArmyCar[playerid] != 0) MatsArmyCar[playerid] = 0, DisablePlayerCheckpoint(playerid);
	return true;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(gPlayerLogged[playerid] == 1)
	{
        SpawnPlayerEx(playerid);
		return true;
	}
	gIsRequestClassCalled{playerid} = true;
	return true;
}
publics: OnPlayerBanipCheck(playerid)
{
    SetPPos(playerid, 232.0699,-29.4357,1208.8389);
    InterpolateCameraPos(playerid, 1788.1433, -1919.6238, 34.4672, 1510.2437, -1677.2019, 38.9200, 90000);
    InterpolateCameraLookAt(playerid, 1787.3738, -1918.9869, 33.5572, 1511.2410, -1677.1578, 38.1950, 90000);
	new rows, fields;
	cache_get_data(rows,fields);
	if(rows)
	{
    	new unbandate_IP = cache_get_field_content_int(0, "unbandate", connects), // ���� �������������
			bandate_IP = cache_get_field_content_int(0, "date", connects),
			reason_IP[50], admin[24];
		cache_get_field_content(0, "reason", reason_IP, connects, 50);
		cache_get_field_content(0, "admin", admin, connects, 24);
		if(unbandate_IP > gettime())
		{
			new ban_date[6], unban_date[6];
			gmtime(bandate_IP, ban_date[0], ban_date[1], ban_date[2], ban_date[3], ban_date[4], ban_date[5]);
			gmtime(unbandate_IP, unban_date[0], unban_date[1], unban_date[2], unban_date[3], unban_date[4], unban_date[5]);

			format(stringer,sizeof(stringer),"{FF6347}Your IP address is blocked\n\nAdminstrator: %s\nDate blocked: %02d.%02d.%04d in %02d:%02d:%02d\nDate blocked: %02d.%02d.%04d in %02d:% 02d:%02d\n\
			Reason: %s\n\nAfter the blocking is lifted, please do not violate the server rules\n\
			You can appeal the removal of the block in a special section on the forum",
			admin, ban_date[2], ban_date[1], ban_date[0], ban_date[3]+3, ban_date[4], ban_date[5],
			unban_date[2], unban_date[1], unban_date[0], unban_date[3]+3, unban_date[4], unban_date[5], reason_IP);

			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{FF6347}IP address blocked", stringer, "Cancle", "");
			return KickEx(playerid);
		}
		else
		{
 			format(mysql_query_, sizeof(mysql_query_),"DELETE FROM `baniplog` WHERE `ip` = '%s' LIMIT 1", PlayerInfo[playerid][pIP]);
			mysql_tquery(connects, mysql_query_, "", "");
		}
	}
	mysql_format(connects, mysql_query_, sizeof(mysql_query_),"SELECT `password`, `salt` FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e' LIMIT 1", PlayerInfo[playerid][pNames]);
    mysql_tquery(connects, mysql_query_, "OnPlayerRegCheck", "i", playerid);
	return 1;
}
stock rentrc(targetid, arenda, idavto)
{
    if(PlayerInfo[targetid][pCash] < arenda) return SendMes(targetid, 0xFF0000AA, "[ERROR] {ffffff}You don't have enough %d$",arenda);
    SendClientMessage(targetid, COLOR_GREEN, "* {ffffff}You have rented bike, {00ad20}/en {ffffff}or press {00ad20}2 {ffffff}to turn on the engine");
    SetPlayerVirtualWorld(targetid, 0);
    SetPlayerInterior(targetid, 0);
    Hook_GivePlayerMoney(targetid, -arenda);
    vehiclerc[targetid] = CreateVehicleEx(idavto, 1677.8667, -2251.3210, 13.2861,32.2470, 77, 77,7200, 0);
    zavodis[targetid] = 1;
    Fuell[vehiclerc[targetid]] = 100;
    VEHICLE[vehiclerc[targetid]][ vHealth ] = 1000.0;
    VEHICLE[vehiclerc[targetid]][ vLock ] = 0;
    VEHICLE[vehiclerc[targetid]-1][v_X] = 1677.8667;
    VEHICLE[vehiclerc[targetid]-1][v_X] = -2251.3210;
    VEHICLE[vehiclerc[targetid]-1][v_Z] = 13.2861;
    LinkVehicleToInterior(vehiclerc[targetid], 0);
    PutPlayerInVeh(targetid, vehiclerc[targetid], 0);
    UpdatePlayerData(targetid, "pCash", PlayerInfo[targetid][pCash]);
    SetPVarInt(targetid, "rentrc", 1);
    return true;
}
stock SetPlayerExtra(playerid, declare, level, reason[])
{
    if(!GetPVarInt(playerid, "on_dmarena"))
    {
        if(declare != INVALID_PLAYER_ID) SendMes(playerid,COLOR_LIGHTRED,"You have committed a crime: [%s]. Reported: %s.",reason,PlayerInfo[declare][pNames]);
        else SendMes(playerid,COLOR_LIGHTRED,"You have committed a crime: [%s]. Reported by: [System Alarm].",reason);
        if((PlayerInfo[playerid][pWanted] + level) < 6) PlayerInfo[playerid][pWanted] += level;
        else PlayerInfo[playerid][pWanted] = 6;
        SendMes(playerid,COLOR_YELLOW,"Current wanted level: %d", PlayerInfo[playerid][pWanted]);
        SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
        if(declare != INVALID_PLAYER_ID) format(stringer1, sizeof(stringer1),"Walkie-talkie: Inform: %s. Crime: %s. Suspect: %s",PlayerInfo[declare][pNames],reason,PlayerInfo[playerid][pNames]);
        else format(stringer1, sizeof(stringer1),"[D]: Informs: Unknown. The crime: %s. Suspect: %s",reason, PlayerInfo[playerid][pNames]);
        foreach (new i : Player)
        {
            if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
            if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pMember] == 25)
            {
                SendClientMessage(i, COLOR_ALLDEPT, stringer1);
            }
        }
    }
    return true;
}
stock ShowDialogGhetto(playerid)
{
	//new GangName[5] = {15, 17, 12, 18, 13};
	new string[350];
	format(string, 350, "{FFFFFF}Grove:\t%s\nAztec:\t%s\nBallas:\t%s\nRifa:\t%s\nVagos:\t%s", (b_Ghetto{0} ? ("{FF0000}Prohibition is on{FFFFFF}") : ("{38c00b}Prohibition is off{FFFFFF}")),(b_Ghetto{1} ? ("{FF0000}Prohibition is on{FFFFFF}") : ("{38c00b}Prohibition is off{FFFFFF}")),
	(b_Ghetto{2} ? ("{FF0000}Prohibition is on{FFFFFF}") : ("{38c00b}Prohibition is off{FFFFFF}")),(b_Ghetto{3} ? ("{FF0000}Prohibition is on{FFFFFF}") : ("{38c00b}Prohibition is off{FFFFFF}")),(b_Ghetto{4} ? ("{FF0000}Prohibition is on{FFFFFF}") : ("{38c00b}Prohibition is off{FFFFFF}")));
	ShowPlayerDialog(playerid, 969, DIALOG_STYLE_LIST, "{FFCC00}Ghetto Menu", string, "Change", "Cancle");
	return true;
}

Maintenance()
{
	SendRconCommand("hostname [AP-RP] | Server overload");
	SetGameModeText("Reloading....");
	SendClientMessageToAll(0xAA3333AA, "{AA3333}Overloading{FFFF00}: Storing accounts...");
	foreach(new i: Player) KickEx(i);
	SendClientMessageToAll(0xAA3333AA, "{AA3333}Overloading{FFFF00}: Storing Accounts Completed!");
	SaveHousee();
	SendClientMessageToAll(0xAA3333AA, "{AA3333}Overloading{FFFF00}: Saving money...");
	SaveAll(), SaveOther();
	SendClientMessageToAll(0xAA3333AA, "{AA3333}Overloading{FFFF00}: Storing All Settings ...");
	ServerRestart[2] = 10;
	return true;
}
FinishMaintenance()
{
	DestroyAllDynamicObjects();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicAreas();
	SendRconCommand("gmx");
	return true;
}



stock Fresh()
{
	switch(random(3))
	{
		case 0: if(NameEnabled[0] > 0) SendRconCommand(ServerName[0]);
		case 1: if(NameEnabled[1] > 0) SendRconCommand(ServerName[1]);
		case 2: if(NameEnabled[2] > 0) SendRconCommand(ServerName[2]);
	}
	new serv[228];
	format(serv,sizeof(serv),"hostname %s",NameServer);
	if(!strcmp(NameServer, "None", true)) SendRconCommand(ServerName[0]); else SendRconCommand(serv);
	if(ServerRestart[1] > 0)
	{
		ServerRestart[1]--;
		if(ServerRestart[1] & 1) Maintenance(), ServerRestart[1] = 0;
	}
	if(ServerRestart[2] > 0)
	{
		ServerRestart[2]--;
		if(ServerRestart[2] & 1) FinishMaintenance(), ServerRestart[2] = 0;
	}
	if(WaitDist > 1) WaitDist--;
	if(TimeToDist > 0 && Distribution == 2) {
		TimeToDist--;
		if(TimeToDist < 1) {
//			new string[144];
			Distribution = 1;
//			format(string, sizeof(string), "[������� �����-������] {FFFFFF}��� ������ ������ ������ �������, ������� %d �����-������!", PrizeDist);
//			SendClientMessageToAll(0x00cb00FF, "[������� �����-������] {FFFFFF}������� �����-������ �������� !!!");
//			SendClientMessageToAll(0x00cb00FF, string);
//			SendClientMessageToAll(0x00cb00FF, "[������� �����-������] {FFFFFF}Enter ������� /gorub, ����� �������� �����!");
		}
	}
	//
	new newhour,newminute,newsecond;
	gettime(newhour, newminute, newsecond);
	if ((newhour > ghour) || (newhour == 0 && ghour == 23))
	{
	    new time[64];
		format(time,sizeof(time), "{FFFFFF}Current time: {3399FF}%d:00",newhour);
		SendAdminMessage(COLOR_LIGHTRED,time);
		ghour = newhour;
		PayDay();
		SetWorldTime(newhour);
	}
	if(newhour == 05 && newminute == 00 && newsecond == 00)
    {
        SendClientMessageToAll(-1, "[RESTART] The server is restarted. Restart time: 05:00 (Server-Time)");
        mysql_function_query(connects,"UPDATE `accounts` SET `pOnline` = '1001'", false, "", "");
		ServerRestart[1] = 10;
		SendClientMessageToAll(COLOR_REDD, "[AP-RP] - Reboot game mode after 10 seconds!");
	}
	if((EnabledDist > 0 && newminute % InterDist == 0) && (Distribution < 1 && WaitDist < 1)) {
		if(CondDist < 2) PrizeDist = random(10) + 1;
		new onet[32], twot[32], threet[32], fourt[32];
		switch(random(4)) {
			case 0: {
				onet = "I don't want rubles";//1
				twot = "Get rubles";//2
				threet = "Randomly entered this command";//3
				fourt = "I think";//4
				YesRubles = 2;
			}
			case 1: {
				onet = "Randomly entered this command";//1
				twot = "I think";//2
				threet = "Get rubles";//3
				fourt = "I don't want rubles";//4
				YesRubles = 3;
			}
			case 2: {
				onet = "Get rubles";
				twot = "I don't want rubles";
				threet = "I think";
				fourt = "Randomly entered this command";
				YesRubles = 1;
			}
			case 3: {
				onet = "I think";
				twot = "Randomly entered this command";
				threet = "I don't want rubles";
				fourt = "Get rubles";
				YesRubles = 4;
			}
		}
		format(distrib, sizeof(distrib), "{FFFFFF}[1] %s\n[2] %s\n[3] %s\n[4] %s", onet, twot, threet, fourt);
//		format(string, sizeof(string), "{FF0000}[DISTRIBUTION OF RUBLES] {FFFFFF}��� ������ ������ ������ �������, ������� %d �����-������!", PrizeDist);
//		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[DISTRIBUTION OF RUBLES] {FFFFFF}������� �����-������ �������� !!!");
//		SendClientMessageToAll(COLOR_YELLOW, string);
//		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[GET OF RUBS] {FFFFFF}Enter the command {FFFF00}/gorub {FFFFFF}to get rubles!");
		Distribution = 1;
	}
	if(ConfigActive == 2 && newhour == ConfigAdminka[1] && newminute == ConfigAdminka[2]) {
		new onet[32], twot[32], threet[32], fourt[32];
		switch(random(4)) {
			case 0: {
				onet = "I don't want an admin";//1
				twot = "Get admin panel";//2
				threet = "Random entered this command";//3
				fourt = "I'll think about it";//4
				YesAdminka = 2;
			}
			case 1: {
				onet = "Random entered this command";//1
				twot = "I'll think about it";//2
				threet = "Get admin panel";//3
				fourt = "I don't want an admin";//4
				YesAdminka = 3;
			}
			case 2: {
				onet = "Get admin panel";
				twot = "I don't want an admin";
				threet = "I'll think about it";
				fourt = "Random entered this command";
				YesAdminka = 1;
			}
			case 3: {
				onet = "I'll think about it";
				twot = "Random entered this command";
				threet = "I don't want an admin";
				fourt = "Get admin panel";
				YesAdminka = 4;
			}
		}
		format(admtext, sizeof(admtext), "{FFFFFF}[1] %s\n[2] %s\n[3] %s\n[4] %s", onet, twot, threet, fourt);
		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}������� ������� �������� !!!");
		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}Whoever manages to enter the command first will receive the position of Administrator!");
		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}Enter the command /goadminka to get the admin panel!");
		ConfigActive = 0;
		Adminka = 1;
	}
/*	if(ConfigActive > 0 && newminute % 2 == 0 && !newsecond) {
		new string[144];
		if(ConfigActive > 1) {
	     	format(string, sizeof(string), "");
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "{FF0000}[������� �������] > {FFFFFF}������� ������� %d ������ ����� � %d:%d �� ���!", AdmLvl, ConfigAdminka[1], ConfigAdminka[2]);
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "{FF0000}[������� �������] > {FFFFFF}������ ���� ����� ������ � ��������� ������� :)");
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "");
			SendClientMessageToAll(COLOR_ORANGE, string);
		} else {
		    format(string, sizeof(string), "");
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "{FF0000}[������� �������] > {FFFFFF}������� ������� %d ������ ����� ��� ������� %d+ �������!", AdmLvl, ConfigAdminka[0]);
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "{FF0000}[������� �������] > {FFFFFF}������ ���� ����� ������, ����� ������ ��������� �������� :)");
			SendClientMessageToAll(COLOR_ORANGE, string);
            format(string, sizeof(string), "");
			SendClientMessageToAll(COLOR_ORANGE, string);
		}
	}*/
	switch(newminute)
	{
	    case 01,07,13,19,25,31,37,43,49,55:
		{
			if(!newsecond)
			{
				SendClientMessageToAll(0x3399FFff, "{FFFFFF}<< {E0FFFF}New York say welcome to all players! {FF0000}hope you enjoy{FFFFFF}! >>");
				SendClientMessageToAll(0x3399FFff, "{FFFFFF}<< {E0FFFF}Don't forget to add our server in your favourite list {FFFFFF}�{FFFF00}> {FF0000}103.179.45.98:5265 {FFFFFF}>>");
				SendClientMessageToAll(0x3399FFff, "{FFFFFF}<< {E0FFFF}Don't forget to join our discord server �> {FFFF00} discord.gg/BjWJ6Ks28J");
				SendClientMessageToAll(0xB8FF1AFF, "{FFFFFF}<< {E0FFFF}Do You Want Join State Structure Or Gang Use >{FFFF00}/works /fate /donaterub {FFFFFF}>>");
//				SendClientMessageToAll(0x3399FFff, "");
				SendClientMessageToAll(0xB8FF1AFF, "{FFFFFF}<< {E0FFFF}Want to Buy Leadership Use /buylead /donaterub!{FFFFFF}>>");
//				SendClientMessageToAll(0xB8FF1AFF, "{FFFFFF}<< {E0FFFF}Special thanks to the server scripter [{FFFF00}Blackrose_Rog{E0FFFF}] and the {FF0000}admins team {FFFFFF}>>");
				SendClientMessageToAll(0x3399FFff, "{FF0000}� INFO � {FFFF00}need help, please use �> {FFFFFF}/report - /generalchat - /help - /mm - /gps");
//				SendClientMessageToAll(0x3399FFff, "{FF0000}� INFO � {FFFFFF}Now Availble Licenses And Anti Bunny-Hop Free Use {FFFF00}/donate");
//				SendClientMessageToAll(0x3399FFff, "");
//				SendClientMessageToAll(0xB8FF1AFF, "{FFFFFF}<< {E0FFFF}You can buy family and a lot of things for rub by using the command {FFFF00}/donaterub {FFFFFF}>>");
//				SendClientMessageToAll(0xB8FF1AFF, "{FFFFFF}<< {E0FFFF}Special thanks to the server scripter [{FFFF00}Moon Weaksize{E0FFFF}] and the {FF0000}admins team {FFFFFF}>>");
				SendClientMessageToAll(0x3399FFff, "{FF0000}� INFO � {FFFFFF}Want Buy Family Extra Things And Customs Use �> {FFFF00}/donate - /donaterub - /cases");
//				SendClientMessageToAll(0x3399FFff, "{FF0000}� INFO � {FFFFFF}If you want to upgrade your weapon skill please use {FFFF00}/donate");
			}
		}
	}
	switch(newminute)
	{
	    case 18,30,50:
		{
			if(!newsecond)
			{
//			    SendAdminMessage(0x3399FFff, "{FFFFFF}<< {E0FFFF}To purchase admin features, please write {FF0000}/adonate {FFFFFF}>>");
//			    SendClientMessageToAll(0x3399FFff, "");
			    SendAdminMessage(0x3399FFff, "{FFFFFF}<< {FF0000}Want to join organization for low price 200K use /works or /fate Enjoy!{FFFFFF}>>");
//				SendClientMessageToAll(0x3399FFff, "{0066FF}� ������ ���� � {FFFFFF}������� ����� �� 49 ������! (������� � /buyadm");
//				SendClientMessageToAll(0x3399FFff, "");
//				SendClientMessageToAll(0x3399FFff, "{0066FF}� ������ ���� � {FFFFFF}������� ��������� ������� (���� ������) ����� �� 1299 ������ (������� � /buyowner)");
//				SendClientMessageToAll(0x3399FFff, "{0066FF}� ������ ���� � {FFFFFF}������� ���������� (12 ������� �������) ����� �� 599 ������! (������� � /buyadm)");
			}
		}
	}
	if(ConfigActive == 1 && server_online >= ConfigAdminka[0]) {
		new onet[32], twot[32], threet[32], fourt[32];
		switch(random(4)) {
			case 0: {
				onet = "I don't want an admin";//1
				twot = "Get admin panel";//2
				threet = "Random entered this command";//3
				fourt = "I'll think about it";//4
				YesAdminka = 2;
			}
			case 1: {
				onet = "Random entered this command";//1
				twot = "I'll think about it";//2
				threet = "Get admin panel";//3
				fourt = "I don't want an admin";//4
				YesAdminka = 3;
			}
			case 2: {
				onet = "Get admin";
				twot = "I don't want admin";
				threet = "I'll think about it";
				fourt = "A random entered this command";
				YesAdminka = 1;
			}
			case 3: {
				onet = "I'll think about it";
				twot = "A random entered this command";
				threet = "I don't want admin";
				fourt = "Get admin";
				YesAdminka = 4;
			}
		}
//		format(admtext, sizeof(admtext), "{FFFFFF}[1] %s\n[2] %s\n[3] %s\n[4] %s", onet, twot, threet, fourt);
//		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}������� ������� �������� !!!");
//		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}��� ������ ������ ������ ������� ������� ��������� Adminstrator�!");
//		SendClientMessageToAll(COLOR_YELLOW, "{FF0000}[������� �������] {FFFFFF}Enter ������� /goadminka, ����� �������� �������!");
		ConfigActive = 0;
		Adminka = 1;
	}
	if(adverttime > 0) adverttime--;
	if(gAdvertTime > 0) gAdvertTime--;
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(gAdvert[i][adTime]) gAdvert[i][adTime]--;
		if(gAdvert[i][adCheked] && !gAdvert[i][adTime])
		{
			new adver[144];
			format(adver,sizeof(adver),"%s. | %s (tel. %d)",gAdvert[i][adText],gAdvert[i][adSender],gAdvert[i][adPhone]);
			SendClientMessageToAll(0x00FF00FF,adver);
			format(adver,sizeof(adver)," The ad was checked by an employee SA News: %s", gAdvert[i][adCheker]);
			SendClientMessageToAll(COLOR_GREEN,adver);
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adPhone] = 0;
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
		}
	}
	PlantTimer();
	for(new i =0;i<sizeof(FrakCD);i++)
    {
        if(FrakCD[i] > 0)
        {
            FrakCD[i] --;
            if(FrakCD[i] == 0) SendFamilyMessage(i,COLOR_LIGHTRED,"[F] Your gang can once again participate in zone captures");
        }
    }
    if(RaceStarting[0] > 0) {
		RaceStarting[0]--;
    	if(RaceStarting[0] == 120) {
			switch(typeRace)
			{
  				case 0: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 2 minutes (map: Wolking Street Race). Anyone wishing to come to the registration point");
		    	case 1: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 2 minutes (map: Las-Venturas / San-Fierro Race). Anyone wishing to come to the registration point");
			}
	    }
	    if(RaceStarting[0] == 2 && PlayersInRace{0} > 1 && RaceStarting[2] == 3) {
            SendClientMessageToAll(COLOR_YELLOW3,"The race has begun!");
            SetTimer("SecondStartedRaces", 1100, false);
            RaceStarting[0] = 0; RaceStarting[1] = 11;
		}
		else if(RaceStarting[2] == 3 && PlayersInRace{0} < 2 && RaceStarting[0] == 2) {
		    SendClientMessageToAll(COLOR_YELLOW3,"Race canceled due to insufficient number of participants.");
		    RaceStarting[2] = 0; RaceStarting[0] = 0; raceTime = 1; PlayersInRace{0} = 0; typeRace = 3;
			foreach(new x: Player)
			{
			    if(!GetPVarInt(x, #PlayerInRace)) continue;
			    DeletePVar(x, #PlayerInRace);
			    Iter_Remove(RacersList, x);
			}
		}
	}
	if(BaseStarting[0] > 0) {
		BaseStarting[0]--;
    	if(BaseStarting[0] == 120) {
			SendClientMessageToAll(COLOR_YELLOW3,"BASE jumping starts in 2 minutes. Everyone who wants to come to the place of registration");
	    }
	    if(BaseStarting[0] == 2 && PlayersInBase{0} > 1 && BaseStarting[1] == 3) {
			SendClientMessageToAll(COLOR_YELLOW3,"BASE jumping has begun!");
            StartedBase();
			BaseStarting[0] = 0;
		}
		else if(BaseStarting[1] == 3 && PlayersInBase {0} < 2 && BaseStarting[0] == 2) {
		    SendClientMessageToAll(COLOR_YELLOW3,"{B22222}BASE jumping canceled due to insufficient number of participants.");
		    BaseStarting[1] = 0; BaseStarting[0] = 0; PlayersInBase{0} = 0;
   			foreach(new i: Player)
			{
			    if(!GetPVarInt(i, #PlayerInBase)) continue;
			    DeletePVar(i, #PlayerInBase);
			    Iter_Remove(BaseList, i);
			}
		}
	}
	if(TimerPaintBall && (StartPaintBall == 1 || StartPaintBall == 2))
	{
		TimerPaintBall --;
    	if(TimerPaintBall == 5 && StartPaintBall == 1)
    	{
        	if(PlayerPB[1] == 0 || PlayerPB[0] == 0)
        	{
            	foreach (new i : Player) TeamPain[i] = 0;
            	SendClientMessageToAll(COLOR_YELLOW3, "{B22222}Paintball match canceled due to lack of participants.");
            	PlayerPB[0] = 0, PlayerPB[1] = 0;
            	StartPaintBall = 0;
        	}
        	else
        	{
            	foreach (new i : Player)
            	{
                	if(TeamPain[i] == 0 || !gPlayerLogged[i]) continue;
                	format(stringer1, sizeof(stringer1), "TIME: ~w~%s",Convert(TIME_PAINTBALL));
			        TextDrawSetString(PaintText[2], stringer1);
			        TextDrawShowForPlayer(i, PaintText[2]);
                	format(stringer1,sizeof(stringer1),"~b~TEAM BLUE: ~w~%d", ScorePB[0]);
                	TextDrawSetString(PaintText[0], stringer1);
                	TextDrawShowForPlayer(i, PaintText[0]);
                	format(stringer1,sizeof(stringer1),"~r~TEAM RED: ~w~%d", ScorePB[1]);
                	TextDrawSetString(PaintText[1], stringer1);
                	TextDrawShowForPlayer(i, PaintText[1]);
                	TogglePlayerControllable(i, 0);
                	ResetWeapons(i);
                	SetPlayerInteriorEx(i, 10);
                	SetPlayerArmour(i, 0);
                	SetPlayerHealthAC(i, 100);
                	SetPlayerInteriorEx(i,10);
            	    SetPlayerVirtualWorldEx(i,1);
                	new spawn = random(10);
                	if(TeamPain[i] == 1)
                	{
                    	SetPPos(i, SpawnBlueTeam[typePB][spawn][0],SpawnBlueTeam[typePB][spawn][1],SpawnBlueTeam[typePB][spawn][2]);
                    	SetPlayerFacingAngle(i, SpawnBlueTeam[typePB][spawn][3]);
                    	if(PlayerInfo[i][pSex] == 1) SetPlayerSkin(i, 21);
                    	if(PlayerInfo[i][pSex] == 2) SetPlayerSkin(i, 41);
                    	SetPlayerColor(i, COLOR_BLUE);
                	}
                	if(TeamPain[i] == 2)
                	{
                     	SetPPos(i, SpawnRedTeam[typePB][spawn][0],SpawnRedTeam[typePB][spawn][1],SpawnRedTeam[typePB][spawn][2]);
                     	SetPlayerFacingAngle(i, SpawnRedTeam[typePB][spawn][3]);
                     	if(PlayerInfo[i][pSex] == 1) SetPlayerSkin(i, 19);
                     	if(PlayerInfo[i][pSex] == 2) SetPlayerSkin(i, 40);
                     	SetPlayerColor(i, COLOR_RED);
                 	}
                 	SetCameraBehindPlayer(i);
            	}
        	}
    	}
		else if(!TimerPaintBall && StartPaintBall == 1)
    	{
        	StartPaintBall = 2;
        	TimerPaintBall = TIME_PAINTBALL;
        	SendClientMessageToAll(COLOR_YELLOW3, "Paintball match started, duration 10 minutes.");
        	foreach (new i : Player)
        	{
            	if(TeamPain[i] != 0)
				{
			    	GameTextForPlayer(i,"~y~[START]", 2000, 4), Weaponpb(i);
			    	TogglePlayerControllable(i, true);
			    	SendClientMessage(i, COLOR_GREY, "To leave PaintBall ahead of time, enter the command /exitpb");
			    	SendClientMessage(i, COLOR_GREY, "Attention! If you exit the MP before its end, you will not receive a prize!");
				}
        	}
    	}
    	else if(TimerPaintBall && StartPaintBall == 2)
		{
			new mes[50];
			format(mes, sizeof(mes), "TIME: ~w~%s",Convert(TimerPaintBall));
			TextDrawSetString(PaintText[2], mes);
		}
		else if(!TimerPaintBall && StartPaintBall == 2)
    	{
        	SendClientMessageToAll(COLOR_YELLOW3, "Paintball match completed (( to view Usage results: /get paintball ))");
        	StartPaintBall = 0;
        	PaintList = 0;
        	foreach (new i : Player)
        	{
            	if(TeamPain[i] == 0) continue;
            	SetPPos(i, 1557.7139,-1790.7910,13.5469);
            	SetPlayerFacingAngle(i, 269.1077);
            	SetPlayerInteriorEx(i, 0);
            	SetPlayerVirtualWorldEx(i,0);
            	if(PlayerInfo[i][pMember] != 0) SetPlayerSkinEx(i, PlayerInfo[i][pModel]);
            	else SetPlayerSkinEx(i, PlayerInfo[i][pChar]);
            	ResetWeapons(i);
            	SetPlayerHealthAC(i,100);
            	SetPlayerToTeamColor(i);
            	for(new x; x < 3; x++) TextDrawHideForPlayer(i, PaintText[x]);
            	if(TeamPain[i] == 1)
            	{
                    if(ScorePB[0] == ScorePB[1]) SendMes(i, COLOR_GREEN," even between teams - [%i : %i] (Draw)", ScorePB[0], ScorePB[1]);
                	else if(ScorePB[0] > ScorePB[1])
                	{
                	    SendMes(i, COLOR_GREEN,"even between teams - [%i : %i] (Your team won)", ScorePB[0], ScorePB[1]);
                    	GameTextForPlayer(i,"~g~+$500 DM", 5000, 1);
                    	PlayerInfo[i][pDonatemoney2] += 500;
						if(PlayerInfo[i][pQuest8] == 0)
    					{
 							PlayerInfo[i][pQuest8] = 1;
   							UpdatePlayerData(i, "pQuest8", PlayerInfo[i][pQuest8]);
    					}
                	}
                	else SendMes(i, COLOR_GREEN,"even between teams - [%i : %i] (Your team lost)", ScorePB[0], ScorePB[1]);
            	}
            	else if(TeamPain[i] == 2)
            	{
            	    if(ScorePB[0] == ScorePB[1]) SendMes(i, COLOR_GREEN," even between teams - [%i : %i] (Draw)", ScorePB[0], ScorePB[1]);
                	else if(ScorePB[0] < ScorePB[1])
                	{
                	    SendMes(i, COLOR_GREEN,"even between teams - [%i : %i] (Your team won)", ScorePB[0], ScorePB[1]);
                    	GameTextForPlayer(i,"~g~+$500 DM", 5000, 1);
                    	PlayerInfo[i][pDonatemoney2] += 500;
						if(PlayerInfo[i][pQuest8] == 0)
    					{
 							PlayerInfo[i][pQuest8] = 1;
   							UpdatePlayerData(i, "pQuest8", PlayerInfo[i][pQuest8]);
    					}
                	}
                	else SendMes(i, COLOR_GREEN,"even between teams - [%i : %i] (Your team lost)", ScorePB[0], ScorePB[1]);
            	}
            	PaintInfo[PaintList][Kills] = KillPain[i];
				PaintInfo[PaintList][Deaths] = DeathPain[i];
				strmid(PaintInfo[PaintList][Name],PlayerInfo[i][pNames], 0, strlen(PlayerInfo[i][pNames]), 24);
				PaintInfo[PaintList][Type] = TeamPain[i];
				PaintList++;
				EndPaint(i);
        	}
        	ScorePB[0] = 0;
			ScorePB[1] = 0;
			PlayerPB[0] = 0;
			PlayerPB[1] = 0;
    	}
	}
    if(RaceStarting[2] == 1)
	{
	    raceTime ++;
	    foreach(new i: RacersList)
	    {
	        if(!GetPVarInt(i, #PlayerInRace)) continue;
	        format(stringer, 20, "Time: %02i:%02i",(raceTime/60),raceTime - (60 * (floatround(raceTime)/60)));
	        PlayerTextDrawSetString(i,Race[8][i], stringer);
	        if (GetTopOne() == -1)
	    	{
		 		format(stringer, 13,"[1] ~w~None");
				PlayerTextDrawSetString(i,Race[2][i], stringer);
	   		}
			else format(stringer, 33,"[1] ~w~%s", PlayerInfo[GetTopOne()][pNames]);
			PlayerTextDrawSetString(i,Race[2][i], stringer);
			if (GetTopTwo() == -1)
			{
				format(stringer, 13,"[2] ~w~None");
				PlayerTextDrawSetString(i,Race[3][i], stringer);
			}
			else format(stringer, 33,"[2] ~w~%s", PlayerInfo[GetTopTwo()][pNames]);
			PlayerTextDrawSetString(i,Race[3][i], stringer);
			if (GetTopThree() == -1)
			{
				format(stringer, 13,"[3] ~w~None");
				PlayerTextDrawSetString(i,Race[4][i], stringer);
			}
			else format(stringer, 33,"[3] ~w~%s", PlayerInfo[GetTopThree()][pNames]);
			PlayerTextDrawSetString(i,Race[4][i], stringer);
			format(stringer, 30, "Racers: ~w~%d/40", PlayersInRace{0});
			PlayerTextDrawSetString(i,Race[5][i], stringer);
		}
	}
    new GetTime = gettime();
  	if(Timer[7] <= GetTime && Timer[7] != 0)
	{
		Timer[7] = GetTime+1;
		GzCheck();
	}
    new Float:hp;
    new hour, minute, second;
	gettime(hour, minute, second);
    for(new i;i<MAX_PLAYERS;i++)
    {
        if(gReconnectTime[i]) gReconnectTime[i]--;
        if(!IsPlayerConnected(i) || IsPlayerFake(i)) continue;
        DrugsTimer(i);
        new Float:coord[3];
    	GetPlayerCameraPos(i,coord[0],coord[1],coord[2]);
    	if( coord[0] < -50000.0 || coord[0] > 50000.0 || coord[1] < -50000.0 || coord[1] > 50000.0 || coord[2] < -50000.0 || coord[2] > 50000.0 ) Kick(i);
        if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpecID[i] != INVALID_PLAYER_ID) UpdateRecon(i, gSpecID[i]);
        if(gVipTime > 0) gVipTime--;
        if(gVip[i][vipTime]) gVip[i][vipTime]--;
		if(HealmeObject[i] > 0)
		{
		    HealmeObject[i]--;
		    if(HealmeObject[i] == 0)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
		        if(IsPlayerAttachedObjectSlotUsed(i,8)) RemovePlayerAttachedObject(i,8);
		        HealmeObject[i] = 0;
		    }
		}
		if(gVip[i][vipTime] <= 0 && gVip[i][vipChek] == true)
		{
			format(stringer,sizeof(stringer),"{FFFF00}VIP Advertisement | {FFFFFF}%s. {FFFF00}Contact: %s[%d], tel: %d",gVip[i][vipText],gVip[i][vipSender],gVip[i][vipID],gVip[i][vipNumber]);
	        SendClientMessageToAll(-1,stringer);
			gVip[i][vipTime] = 0;
			gVip[i][vipID] = 0;
			gVip[i][vipNumber] = 0;
			strdel(gVip[i][vipText],0,100);
			strdel(gVip[i][vipSender],0,24);
			gVip[i][vipChek] = false;
		}
		if(GetPVarInt(i, "Registration")) {
			if(!IsPlayerInRangeOfPoint(i, 2.0, -1486.7684,-382.0869,1153.1899)) SetPPos(i, -1486.7684,-382.0869,1153.1899);
		}
		if(GetPVarInt(i, "FindBizz")) {
			if(IsPlayerInRangeOfPoint(i, 5.0, GetPVarFloat(i, "CoordX"),GetPVarFloat(i, "CoordY"),GetPVarFloat(i, "CoordZ")))  {
				DeletePVar(i, "FindBizz"), DeletePVar(i, "CoordX"), DeletePVar(i, "CoordY"), DeletePVar(i, "CoordZ");
				DisablePlayerCheckpoint(i);
				SendClientMessage(i, -1, "You have arrived at your destination!");
			}
		}
		if(GetPVarInt(i, "IdVeh") && GetPlayerState(i) != PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPVarInt(i, "IdCar");
			new vehicle = GetPVarInt(i, "IdVeh");
			for(new j = 0; j < 11; j++)
			{
				DestroyDynamicObject(Objects[vehicleid][j]);
			}
			RemoveFromVehicle(i);

			DestroyVehicleEx(vehicle);
			DeletePVar(i, "Acar"), DeletePVar(i, "IdCar"), DeletePVar(i, "IdVeh");
			SendClientMessage(i, -1, "Your transport has been deleted!");
		}
		if(PlayerInfo[i][pBlNick] > 0) {
			if(BlNick[i] < 1) {
				SetPlayerColor(i, 0xe9370dAA);
				BlNick[i] = 1;
			} else {
				BlNick[i] = 0;
				SetPlayerToTeamColor(i);
			}
		}
		if(GetPVarInt(i, "AFK_Time") >= 3 || IsPlayerFake(i))
		{
			new string[144];
			format(string,144,"{FFD700}{FFFF00}AFK {FFFFFF}%s",Convert(GetPVarInt(i,"AFK_Time")-2));
			SetPlayerChatBubble(i,string,-1,10.0,1600);
		}
 		if(PlayerInfo[i][pAlcoInvenxua]>= 1)
		{
			new string[144];
			format(string,144,"{2cdb0d}{FF0000}[NY:RP]{FFFF00}-ADMIN");
			SetPlayerChatBubble(i,string,-1,10.0,1600);
		}
        if(PlayerInfo[i][pMember] == 15)
        {
            new string[144];
            format(string,144,"{8f1317}Ghetto {FFFFFF}Player");
            SetPlayerChatBubble(i,string,-1,10.0,1600);
        }
        if(PlayerInfo[i][pMember] == 12)
        {
            new string[144];
            format(string,144,"{8f1317}Ghetto {FFFFFF}Player");
            SetPlayerChatBubble(i,string,-1,10.0,1600);
        }
        if(PlayerInfo[i][pMember] == 13)
        {
            new string[144];
            format(string,144,"{8f1317}Ghetto {FFFFFF}Player");
            SetPlayerChatBubble(i,string,-1,10.0,1600);
        }
        if(PlayerInfo[i][pMember] == 17)
        {
            new string[144];
            format(string,144,"{8f1317}Ghetto {FFFFFF}Player");
            SetPlayerChatBubble(i,string,-1,10.0,1600);
        }
        if(PlayerInfo[i][pMember] == 18)
        {
            new string[144];
            format(string,144,"{8f1317}Ghetto {FFFFFF}Player");
            SetPlayerChatBubble(i,string,-1,10.0,1600);
        }
		if(GetPVarInt(i, "Gps24")) {
			new bizz = GetPVarInt(i, "Gps24");
			if(IsPlayerInRangeOfPoint(i, 5.0, BizzInfo[bizz][bEntrx], BizzInfo[bizz][bEntry], BizzInfo[bizz][bEntrz])) DisablePlayerCheckpoint(i), DeletePVar(i, "Gps24");
		}
		if(IsPlayerInAnyVehicle(i))
		{
		    GetVehicleHealth(GetPlayerVehicleID(i), hp);
		    if(VEHICLE[GetPlayerVehicleID(i)][vHealth] < hp) {
			    if(GetPVarInt(i,"playerUsePaynSpray") == 0) SetVehicleHealth(GetPlayerVehicleID(i),VEHICLE[GetPlayerVehicleID(i)][vHealth]);
				if(GetPVarInt(i,"playerUsePaynSpray") != 0 && GetPlayerState(i) == PLAYER_STATE_DRIVER) {
				    setVehicleHealth(GetPlayerVehicleID(i),1000.0);
				    SetPVarInt(i,"playerUsePaynSpray",0);
				}
			}
			else VEHICLE[GetPlayerVehicleID(i)][vHealth] = hp;
			if(hp < 100)
			{
				zavodis[i] = 0;
				GetVehicleParamsEx(GetPlayerVehicleID(i),engine,light,alarm,doorss,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(i),0,0,alarm,doorss,bonnet,boot,objective);
			}
		}

		if(!PlayerInfo[i][pAlcoInvenxua])
		{
			SetPVarInt(i, "HealthTime", GetPVarInt(i, "HealthTime") + 1);
			if(GetPVarInt(i, "HealthTime") == 50)
			{
		    	SetPVarInt(i, "HealthTime", 0);
		    	if(PlayerInfo[i][pSatiety] > 0) PlayerInfo[i][pSatiety]--;
		    	if(PlayerInfo[i][pSatiety] == 49 || PlayerInfo[i][pSatiety] == 24) SendMes(i,COLOR_BLUE, "You're hungry! Satiety %i percent!",PlayerInfo[i][pSatiety]);
		    	GetPlayerHealth(i, hp);
	    		if(PlayerInfo[i][pSatiety] < 50) SetPlayerHealthAC(i, hp - 1);
				else if(PlayerInfo[i][pSatiety] < 25) SetPlayerHealthAC(i, hp - 2);
			}
		}
		if(AntiBan[i] > 0) AntiBan[i]--;
		if(noooc[1] > 0) noooc[1]--;
		if(TimeBox[i] > 0)
		{
		    TimeBox[i]--;
			format(stringer1, sizeof(stringer1), "~g~%d",TimeBox[i]);
			GameTextForPlayer(i, stringer1, 3000, 6);
			if(TimeBox[i] == 0)
			{
			    GameTextForPlayer(i, "~r~Fight!", 3000, 6);
			    TogglePlayerControllable(i, 1);
			}
		}
		if(TimeBoxAll[i] > 0)
		{
		    TimeBoxAll[i]--;
			if(TimeBoxAll[i] == 0)
			{
			    ring = 0;
			    boy[i] = 0;
			    boy[fightid[i]] = 0;
				SetPPos(i,770.7656,3.9569,1000.7176);
				SetPlayerFacingAngle(i, 90.0);
				SetPPos(fightid[i],770.7488,6.9432,1000.7118);
				SetPlayerFacingAngle(fightid[i], 90.0);
				PlayerInfo[i][pFightTime]= 600;
				PlayerInfo[fightid[i]][pFightTime]= 600;
				fightid[i] = INVALID_PLAYER_ID;
				fightid[fightid[i]] = INVALID_PLAYER_ID;
				TogglePlayerControllable(fightid[i], 0);
			}
		}
		if(GetPVarInt(i, "ArendKey") != -1)
		{
		    new rc = GetPVarInt(i, "ArendKey");
		    if(ArendInfo[rc][aPlayerID] != i)
		    {
		        SetPVarInt(i, "ArendKey", -1);
		    }
		    else if(!IsPlayerInVehicle(i, ArendInfo[rc][aID]))
		    {
		        new Float:x, Float:y, Float:z;
		        GetVehiclePos(ArendInfo[rc][aID], x, y, z);
			    if(!IsPlayerInRangeOfPoint(i, 2000.0, x, y, z) && GetPlayerVirtualWorld(i) == 0 && GetPlayerInterior(i) == 0)
			    {
			        SendClientMessage(i, 0xFFFFFFFF, "You have moved too far from your rented vehicle.");
			        ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
            	    SetVehicleToRespawn(ArendInfo[rc][aID]);
            	    SetPVarInt(i, "ArendKey", -1);
			    }
		    }
		}
		if(PlayerInfo[i][pCash] < GetPlayerMoney(i)) ResetPlayerMoney(i),GivePlayerMoney(i, PlayerInfo[i][pCash]);
		else if(PlayerInfo[i][pCash] > GetPlayerMoney(i)) ResetPlayerMoney(i),GivePlayerMoney(i, PlayerInfo[i][pCash]);
		if(bankdoortime[i] > 0 && bankdoors == 1)
		{
			bankdoortime[i]--;
			if(bankdoortime[i] == 1) bankdoors = 0,MoveObject (DoorOpen[0], 2146.0,1627.082,994.2620, 0.3);
		}
		if(jeweldoortime[i] > 0 && jeweldoors == 1)
		{
			jeweldoortime[i]--;
			if(jeweldoortime[i] == 1) jeweldoors = 0,MoveObject (DoorOpen[1], 2196.2200,1618.6563,1000.4614, 0.3);
		}
		if(SwatDoor[0][i] > 0)
		{
			SwatDoor[0][i]--;
			if(SwatDoor[0][i] == 1) MoveObject(gatevorota,777.56915283,-1384.85498047,14.39731598, 3.0);
		}
		if(SwatDoor[1][i] > 0)
		{
			SwatDoor[1][i]--;
			if(SwatDoor[1][i] == 1) MoveObject(gatevorota2,781.87298584,-1330.21044922,12.70648003, 3.0);
		}
		if(lighttime[i] > 0)
		{
			lighttime[i]--;
			if(lighttime[i] == 1) lights1 = 0;
		}
		if(minigun[i] > 0)
		{
		    minigun[i]--;
			if(minigun[i] >= 15)
			{
				//SendClientMessage(i,COLOR_LIGHTRED," �� ���� ������� �� ���������� � ���������."); KickEx(i);
			}
		}

		if(Music2 == true)
		{
			if(IsPlayerInRangeOfPoint(i, MusicU[0], MusicU[1], MusicU[2], MusicU[3]))
			{
				if(!GetPVarInt(i,"Music"))
				{
					SetPVarInt(i,"Music",1);
					PlayAudioStreamForPlayer(i, UMusic, MusicU[1], MusicU[2], MusicU[3], MusicU[0], true);
				}
			}
			else
			{
				if(GetPVarInt(i,"Music"))
				{
					DeletePVar(i,"Music");
					StopAudioStreamForPlayer(i);
				}
			}
		}
		if(GetPVarInt(i,"rbinfo"))
		{
			if(rbtime[i] > 0)
			{
		    	rbtime[i] --;
		    	if(rbtime[i] <= 1)
		    	{
					DestroyDynamicObject(GetPVarInt(i, "rb_obkect"));
  					DeletePVar(i, "rbinfo");
  					DeletePVar(i, "rb_obkect");
  					rbtime[i] = 0;
        			DestroyDynamic3DTextLabel(Text3D:blocktext[i]);
		    	}
			}
		}
		if(GetPVarInt(i,"ProductTime") > 0 && GetPVarInt(i, "ProductID") > 0)
		{
		    SetPVarInt(i,"ProductTime",GetPVarInt(i,"ProductTime")-1);
	    	format(stringer1,32,"~r~%d",GetPVarInt(i,"ProductTime"));
	    	GameTextForPlayer(i, stringer1, 2000, 6);
		    if(GetPVarInt(i,"ProductTime") == 0)
		    {
		        SendClientMessage(i, COLOR_LIGHTRED, "Time has expired and the order has been cancelled.");
		        ProductInfo[GetPVarInt(i, "ProductID")][pStatus] = false;
		        DeletePVar(i, "ProductID");
		    }
		}
		GetPosPickup(i);
		onlinecheck[i]++;
		if(onlinecheck[i] >= 60 && GetPVarInt(i, "AFK_Time") < 2)
		{
	        PlayerInfo[i][pDayOnline]++;
			onlinecheck[i] = 0;
		}
		if(PlayerInfo[i][pContract] > 0) PlayerInfo[i][pContract]--;
		if(PlayerInfo[i][pGunfbiTime] > 0) PlayerInfo[i][pGunfbiTime]--;
		if(PlayerInfo[i][pGun51Time] > 0) PlayerInfo[i][pGun51Time]--;
		if(PlayerInfo[i][pGunlspdTime] > 0) PlayerInfo[i][pGunlspdTime]--;
		if(PlayerInfo[i][pGunaviaTime] > 0) PlayerInfo[i][pGunaviaTime]--;
		if(PlayerInfo[i][pFightTime] > 0) PlayerInfo[i][pFightTime]--;
		if(saveplayer[i]) saveplayer[i]--;
		if(PlayerInfo[i][pMask] > 0) PlayerInfo[i][pMask]--;
		else if(PlayerInfo[i][pMask] < 0)
		{
		    PlayerInfo[i][pMask] = 0;
		    SetPlayerToTeamColor(i);
		    SetPlayerChatBubble(i, "{FF9900}Takes off his mask", -1, 20.0, 500);
		    GameTextForPlayer(i, "~y~ INVISABLE OFF", 800, 4);
		    PlayerPlaySound(i, 21001, 0.0, 0.0, 0.0);
			RemovePlayerAttachedObject(i, 0);
		}
		new str[30];
        if(GetPVarInt(i,"AFK_Tick") > 10000) SetPVarInt(i,"AFK_Tick",1),SetPVarInt(i,"AFK_Check",0);
        if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i)) SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick")),SetPVarInt(i,"AFK_Time",0);
        if(GetPVarInt(i,"AFK_Check") == GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
        {
            SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
            if(GetPVarInt(i, "AFK_Time") > 2)
            {
                afkcheck[i]++;
				if(afkcheck[i] >= 60)
				{
					PlayerInfo[i][pDayAfk]++;
					afkcheck[i] = 0;
				}
				format(str,sizeof(str),"{FFFF00}AFK: {FF0000}%s",Convert(GetPVarInt(i,"AFK_Time")-2));
                SetPlayerChatBubble(i,str,-1,30.0,3000);
            }
        }
		if(crashcuff[i] > 0) crashcuff[i]--;
		if(robbankstime[i] > 0 && robbanks == 1)
		{
			robbankstime[i]--;
			if(robbankstime[i] == 1)
			{
				robbankstime[i] = 0;
				new rand = random(12);
				new randmoney = random(60);
				switch(rand)
				{
				case 0..4:
					{
						if(randmoney != 37)
						{
							new kaznarob = kazna/40;
							PlayerInfo[i][pPayCheck] = 1;
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							GiveMoney(i, 2500000);
							kazna -= kaznarob;
							format(stringer1, sizeof(stringer1), "~g~+$2.500.000");
							GameTextForPlayer(i, stringer1, 5000, 1);
							SetPlayerExtra(i, INVALID_PLAYER_ID, 4, "Hacking a bank safe");
							TogglePlayerControllable(i, 1);
							format(stringer1, sizeof(stringer1), "A stranger breaks into a bank vault on $2.500.000 Money.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							ClearAnimations(i, 1);
							robbanks = 0;
							format(stringer1,sizeof(stringer1),"{C2A2DA}State treasury: {FFD700}$2.500.000\n{C2A2DA}State tax: {FFD700}%s\n{C2A2DA}To put money enter '/putkazna'", formatInt(nalog));
							Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
						}
						else
						{
							new kaznarob = kazna/20;
							PlayerInfo[i][pPayCheck] = 1;
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							GiveMoney(i, 3000000);
							kazna -= kaznarob;
							format(stringer1, sizeof(stringer1), "~g~+$3.000.000");
							GameTextForPlayer(i, stringer1, 5000, 1);
							format(stringer1, sizeof(stringer1), "{9ACD32}Urgent news: Stranger pulled out from banking safe $850.000 Money!");
							SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
							SetPlayerExtra(i, INVALID_PLAYER_ID, 4, "Hacking a bank safe");
							format(stringer1, sizeof(stringer1), "A stranger breaks into a bank vault on $3.000.000 Money.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robbanks = 0;
							format(stringer1,sizeof(stringer1),"{C2A2DA}State treasury: {FFD700}$3.000.000\n{C2A2DA}State tax: {FFD700}%s\n{C2A2DA}To put money enter '/putkazna'", formatInt(nalog));
							Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
						}
					}
				default:
					{
						if(lights1 == 1)
						{
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							SendClientMessage(i,COLOR_GREY,"Try again. Bank electricity is off, hurry!");
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robbanks = 0;
							format(stringer1, sizeof(stringer1), "A stranger unsuccessfully breaks into a bank vault.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
						}
						else
						{
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							SendClientMessage(i,COLOR_GREY,"try again.");
							SetPlayerExtra(i, INVALID_PLAYER_ID, 1, "Attempt to break into a bank safe.");
							format(stringer1, sizeof(stringer1), "A stranger unsuccessfully breaks into a bank vault.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robbanks = 0;
						}
					}
				}
			}
		}
		if(crashcuff[i] > 0) crashcuff[i]--;
		if(robjewelstime[i] > 0 && robjewels == 1)
		{
			robjewelstime[i]--;
			if(robjewelstime[i] == 1)
			{
				robjewelstime[i] = 0;
				new rand = random(12);
				new randmoney = random(60);
				switch(rand)
				{
				case 0..4:
					{
						if(randmoney != 37)
						{
							new kaznarob = kazna/40;
							PlayerInfo[i][pPayCheck] = 1;
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							GiveMoney(i, 1500000);
							kazna -= kaznarob;
							format(stringer1, sizeof(stringer1), "~g~+$1.500.000");
							GameTextForPlayer(i, stringer1, 5000, 1);
							SetPlayerExtra(i, INVALID_PLAYER_ID, 4, "Hacking a Jewelery safe");
							TogglePlayerControllable(i, 1);
							format(stringer1, sizeof(stringer1), "A stranger breaks into a Jewelery vault on $1.500.000 Money.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							ClearAnimations(i, 1);
							robjewels = 0;
							format(stringer1,sizeof(stringer1),"{C2A2DA}State treasury: {FFD700}$1.500.000\n{C2A2DA}State tax: {FFD700}%s\n{C2A2DA}To put money enter '/putkazna'", formatInt(nalog));
							Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
						}
						else
						{
							new kaznarob = kazna/20;
							PlayerInfo[i][pPayCheck] = 1;
							FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							GiveMoney(i, 2500000);
							kazna -= kaznarob;
							format(stringer1, sizeof(stringer1), "~g~+$2.500.000");
							GameTextForPlayer(i, stringer1, 5000, 1);
							format(stringer1, sizeof(stringer1), "{9ACD32}Urgent news: Stranger pulled out from Jewelery safe $1.000.000 Money!");
							SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
							SetPlayerExtra(i, INVALID_PLAYER_ID, 4, "Hacking a Jewelery safe");
							format(stringer1, sizeof(stringer1), "A stranger breaks into a Jewelery vault on $2.500.000 Money.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robjewels = 0;
							format(stringer1,sizeof(stringer1),"{C2A2DA}State treasury: {FFD700}$2.500.000\n{C2A2DA}State tax: {FFD700}%s\n{C2A2DA}To put money enter '/putkazna'", formatInt(nalog));
							Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
						}
					}
				default:
					{
						if(lights1 == 1)
						{
							FIXES_ApplyAnimation(i,"ROB_JEWEL","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							SendClientMessage(i,COLOR_GREY,"Try again. Vault electricity is off, hurry!");
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robjewels = 0;
							format(stringer1, sizeof(stringer1), "A stranger unsuccessfully breaks into a Jewelery vault.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
						}
						else
						{
							FIXES_ApplyAnimation(i,"ROB_JEWEL","CAT_Safe_End",4.1,0,1,1,0,0);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							SendClientMessage(i,COLOR_GREY,"try again.");
							SetPlayerExtra(i, INVALID_PLAYER_ID, 1, "Attempt to break into a Jewelery safe.");
							format(stringer1, sizeof(stringer1), "A stranger unsuccessfully breaks into a Jewelery vault.");
							ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
							TogglePlayerControllable(i, 1);
							ClearAnimations(i, 1);
							robjewels = 0;
						}
					}
				}
			}
		}
		if(hour >= 12 && minute == 10 && second == 0 && TeamPain[i] == 0) SideEffects(i);
		if(PlayerInfo[i][pDrugtime] > 0) PlayerInfo[i][pDrugtime]--;
		if(PlayerInfo[i][pRobTime] > 0) PlayerInfo[i][pRobTime]--;
		if(PlayerInfo[i][pReportTime] > 0) PlayerInfo[i][pReportTime]--;
		if(PlayerInfo[i][pAutoTime] > 0) PlayerInfo[i][pAutoTime]--;
		if(clearanim[i] > 0)
		{
		    clearanim[i] --;
		    if(clearanim[i] == 0) FIXES_ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
		}
		if(PlayerInfo[i][pMuteTime] > 0 && PlayerInfo[i][pMuted] == 1)
		{
			PlayerInfo[i][pMuteTime] -=1;
			if(PlayerInfo[i][pMuteTime] == 1)
			{
				PlayerInfo[i][pMuted] = 0;
				PlayerInfo[i][pMuteTime] = 0;
				SendClientMessage(i,COLOR_WHITE,"Chat has been turned on for you. Please don't break the rules anymore");
			}
		}
		if(PlayerInfo[i][pJailed] > 0)
		{
			if(GetPVarInt(i, "AFK_Time") < 2) {
				if(!IsPlayerInRangeOfPoint(i,50.0,5512.0732,1249.1172,23.1886) && PlayerInfo[i][pJailed] == 4 && PlayerInfo[i][pMestoJail] == 0)
				{
					SetPlayerInteriorEx(i, 1);
		    		SetPPos(i,5512.0732,1249.1172,23.1886);
	        		SetPlayerFacingAngle(i, 268.7242);
					TogglePlayerControllable(i, false);
					SetTimerEx("UnFreez", 2900, 0, "d", i);
					PlayerHealth[i] = 0;
	        		SendClientMessage(i,COLOR_GREY,"For a second attempt to escape from demorgan, you can get banned.");
				}
				else if(!IsPlayerInRangeOfPoint(i,40.0,264.1425,77.4712,1001.0391) && PlayerInfo[i][pMestoJail] == 1)
				{
					SetPlayerInteriorEx(i, 6);
		    		SetPPos(i,264.1425,77.4712,1001.0391);
					SetPlayerFacingAngle(i, 263.0160);
					PlayerHealth[i] = 0;
					SendClientMessage(i,COLOR_GREY,"For a second attempt to escape from prison, you can get banned.");
				}
				else if(!IsPlayerInRangeOfPoint(i,40.0,219.5400,109.9767,999.0156) && PlayerInfo[i][pMestoJail] == 2)
				{
					SetPlayerInteriorEx(i, 10);
					SetPPos(i,219.5400,109.9767,999.0156);
					SetPlayerFacingAngle(i, 1.0000);
					PlayerHealth[i] = 0;
					SendClientMessage(i,COLOR_GREY,"For a second attempt to escape from prison, you can get banned.");
				}
				else if(!IsPlayerInRangeOfPoint(i,40.0,198.3642,161.8103,1003.0300) && PlayerInfo[i][pMestoJail] == 3)
				{
					SetPlayerInteriorEx(i, 3);
					SetPPos(i,198.3642,161.8103,1003.0300);
					SetPlayerFacingAngle(i, 1.0000);
					PlayerHealth[i] = 0;
					SendClientMessage(i,COLOR_GREY,"For a second attempt to escape from prison, you can get banned.");
				}
				else if(!IsPlayerInRangeOfPoint(i,40.0,713.8348,-1340.0420,-59.6741) && PlayerInfo[i][pMestoJail] == 4)
				{
					SetPlayerInteriorEx(i, 15);
					SetPPos(i,713.8348,-1340.0420,-59.6741);
					SetPlayerFacingAngle(i, 263.0160);
					PlayerHealth[i] = 0;
					SendClientMessage(i,COLOR_GREY,"For a second attempt to escape from prison, you can get banned.");
				}
			}
			if(PlayerInfo[i][pJailTime] > 0) PlayerInfo[i][pJailTime]--;
			if(PlayerInfo[i][pJailTime] <= 0)
			{
				if(PlayerInfo[i][pJailed] == 1)
				{
					if(PlayerInfo[i][pMestoJail] == 1)
					{
						SetPPos(i,1547.11,-1675.76,13.94);//������
						SetPlayerFacingAngle(i, 95.0636);
					}
					if(PlayerInfo[i][pMestoJail] == 2)
					{
						SetPPos(i,-1607.1873,721.3649,12.2721);//������
						SetPlayerFacingAngle(i, 2.3026);
					}
					if(PlayerInfo[i][pMestoJail] == 3)
					{
						SetPPos(i,2334.8467,2454.9456,14.9688);//������
						SetPlayerFacingAngle(i, 115.7874);
					}
				}
				else if(PlayerInfo[i][pJailed] == 4)
				{
					SetPPos(i,742.6675,-1352.4891,13.5000);//������
					SetPlayerFacingAngle(i, 269.6866);
				}
				if(PlayerInfo[i][pJailed] == 4) {
					PlayerInfo[i][pJailed] = 0;
					PlayerInfo[i][pJailTime] = 0;
					PlayerInfo[i][pMestoJail] = 0;
					SpawnPlayerEx(i);
				} else {
					SetPlayerInteriorEx(i, 0);
					PlayerInfo[i][pJailed] = 0;
					PlayerInfo[i][pJailTime] = 0;
					PlayerInfo[i][pMestoJail] = 0;
					PlayerInfo[i][pWanted] = 0;
					PlayerInfo[i][pUsedJail] = 0;
					SetPlayerWantedLevel(i, 0);
					SetPlayerVirtualWorldEx(i, 0);
					GameTextForPlayer(i, "~g~Freedom", 5000, 1);
					SetPlayerToTeamColor(i);
					SendClientMessage(i, COLOR_ISPOLZUY,"You have served your time and can go free.");
				}
			}
		}
		if(JobCarTime[i] <= 16 && JobCarTime[i] >= 1)
		{
			JobCarTime[i]--;
			format(stringer1,sizeof(stringer1),"~r~%d",JobCarTime[i] - 1);
			GameTextForPlayer(i, stringer1, 2000, 6);
		}
		if(Tazer[i] == 1)
		{
			if(TazerTime[i] <= 0) Tazer[i] = 0;
			else TazerTime[i] -= 1;
		}
		if(TieTime[i] > 0)
		{
			TieTime[i]--;
			if(TieTime[i] == 0) gag[i] = 0,SendClientMessage(i, COLOR_GREY, "The gag became wet and fell out, you can talk again!");
		}
		if(PlayerCuffed[i] == 1)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				TogglePlayerControllable(i, 1);
				PlayerCuffed[i] = 0;
				PlayerCuffedTime[i] = 0;
			}
			else PlayerCuffedTime[i] -= 1;
		}
		if(PlayerCuffed[i] == 2)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				TogglePlayerControllable(i, 1);
				PlayerCuffed[i] = 0;
				PlayerCuffedTime[i] = 0;
			}
			else PlayerCuffedTime[i] -= 1;
		}
	}
	if(hour == 00 || hour == 03 || hour == 06 || hour == 09 || hour == 12 || hour == 15 || hour == 18 || hour == 21)
	{
		if(minute == 32 && second == 00)
	    {
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(HouseInfo[h][hKlass] == 0 && HouseInfo[h][hOwned] == 1)//������ �����
				{
					HouseInfo[h][hTakings] -=300; kazna += 300;
					if(HouseInfo[h][hTakings] > 16800) HouseInfo[h][hTakings] = 16800;
				}
				if(HouseInfo[h][hKlass] == 1 && HouseInfo[h][hOwned] == 1)//������ �����
				{
					HouseInfo[h][hTakings] -=600; kazna += 600;
					if(HouseInfo[h][hTakings] > 33600) HouseInfo[h][hTakings] = 33600;
				}
				if(HouseInfo[h][hKlass] == 2 && HouseInfo[h][hOwned] == 1)//������ �����
				{
					HouseInfo[h][hTakings] -=900; kazna += 900;
					if(HouseInfo[h][hTakings] > 50400) HouseInfo[h][hTakings] = 50400;
				}
				if(HouseInfo[h][hKlass] == 3 && HouseInfo[h][hOwned] == 1)//������ �����
				{
					HouseInfo[h][hTakings] -=1200; kazna += 1200;
					if(HouseInfo[h][hTakings] > 67200) HouseInfo[h][hTakings] = 67200;
				}
				if(HouseInfo[h][hKlass] == 4 && HouseInfo[h][hOwned] == 1)//������ �����
				{
					HouseInfo[h][hTakings] -=1500; kazna += 1500;
					if(HouseInfo[h][hTakings] > 84000) HouseInfo[h][hTakings] = 84000;
				}
				if(HouseInfo[h][hTakings] <= 0 && HouseInfo[h][hOwned] == 1)
				{
					new housecash = HouseInfo[h][hValue];
					new playeridd = GetPlayerID(HouseInfo[h][hOwner]);
					if(IsPlayerConnected(playeridd))
					{
						PlayerInfo[playeridd][pPhousekey] = 255;
						if(caridhouse[playeridd] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(caridhouse[playeridd]);
							caridhouse[playeridd] = INVALID_VEHICLE_ID;
							DeletePVar(playeridd, "CarNomer");
						}
						SendClientMessage(playeridd, COLOR_LIGHTRED, "Your house was sold for non-payment to the government.");
					}
					else if(!IsPlayerConnected(playeridd))
					{
						format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pPhousekey` = '255', `pHousecash` = '%d' WHERE `Name` = '%s'",housecash, HouseInfo[h][hOwner]);
						mysql_function_query(connects, mysql_query_, false, "", "");
					}
					HouseInfo[h][hHel] = 0;
					HouseInfo[h][hLock] = 1;
					HouseInfo[h][hOwned] = 0;
					strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
					SaveHouse(h);
					BuyHouse(h);
				}
				HouseInfo[h][hRobhouse] = false;
			}
	    }
	}
	if(BizzWarTimeAll > 0) BizzWarTimeAll --;
	if(BizzWars == false && BizzWarsNumber == -1) return true;
	if(BizzWarTime > 0)
	{
		BizzWarTime --;
		CheckBizWar();
	}
	else FinishBizWar();
	return true;
}
stock ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Male"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Female"; }
		new drank[20];
		new day, month, year;
		getdate(year, month, day);
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "Bronze VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 2) { drank = "Silver VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 3) { drank = "Gold VIP"; }
		else { drank = "Citizen"; }
		new prank[23];
		switch(PlayerInfo[targetid][pLevel])
		{
		case 1..3: { prank = "Newbie"; }
		case 4..6: { prank = "Beginning"; }
		case 7..9: { prank = "Confident"; }
		case 10..14: { prank = "Constant player"; }
		case 15..19: { prank = "Mastered"; }
		case 20..24: { prank = "Mastered"; }
		case 25..49: { prank = "Grandfather"; }
		}
		new wanted = PlayerInfo[targetid][pWanted];
		new zavisimostitext[20];
		if(PlayerInfo[targetid][pNarcoLomka] == 0) { zavisimostitext = "Stage missing"; }
		else if(PlayerInfo[targetid][pNarcoLomka] >= 1 && PlayerInfo[targetid][pNarcoLomka] < 3000) { zavisimostitext = "1 stage"; }
		else if(PlayerInfo[targetid][pNarcoLomka] >= 3000 && PlayerInfo[targetid][pNarcoLomka] < 5000) { zavisimostitext = "2 stage"; }
		else if(PlayerInfo[targetid][pNarcoLomka] >= 5000) { zavisimostitext = "3 stage"; }
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new tiee = PlayerInfo[targetid][pVerevka];
		new otmi = PlayerInfo[targetid][pOtmbI4ka];
		new expamount = nxtlevel*levelexp;
		new PayDayHad = PlayerInfo[targetid][pPayDayHad];
		new str[166],sctring[1450];
		format(str,sizeof(str),"{ffffff}Nickname: \t\t\t\t{3399FF}%s \n\n",PlayerInfo[targetid][pNames]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Level: \t\t\t{ffffff}%d (%d/%d) \n",PlayerInfo[targetid][pLevel],PlayerInfo[targetid][pExp],expamount);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Character: \t\t\t\t{ffffff}%s \n",atext);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}state status: \t\t{ffffff}%s \n\n",prank);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Status {FFFF00}VIP{ffffff}: \t\t\t%s \n\n",drank);
		strcat(sctring,str);
		if(PlayerInfo[playerid][pFamily] > 0) {
			format(str,sizeof(str),"{ffffff}Family member: \t\t{ffffff}%s\n", family_info[PlayerInfo[playerid][pFamily]][f_name]);
			strcat(sctring,str);
		} else {
			strcat(sctring,"{ffffff}Family member: \t\t{ffffff}�\n");
		}
		if(PlayerInfo[targetid][pAlcoInvenxua] >= 1)
		{
			format(str,sizeof(str),"{FF6347}Administrator level: \t{ffffff}%d (%d/3) \n",PlayerInfo[targetid][pAlcoInvenxua],PlayerInfo[targetid][pVigs]);
			strcat(sctring,str);
		}
		else if(PlayerInfo[targetid][pHelper] >= 1)
		{
			format(str,sizeof(str),"{FF6347}Helper level: \t{ffffff}%d \n",PlayerInfo[targetid][pHelper]);
			strcat(sctring,str);
		}
		format(str,sizeof(str),"{ffffff}Total Crimes: \t\t{ffffff}%d \n",PlayerInfo[targetid][pZakonp]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Warn(s): \t\t\t{ffffff}%d/{FF6347}3 \n",PlayerInfo[targetid][pWarns]);
		strcat(sctring,str);
		if(PlayerInfo[targetid][punWarns] == 1) format(str,sizeof(str),"\t{FF6347}For the removal of Warns:\t{ffffff}%d \n",10-PlayerInfo[targetid][punWarnstime]), strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Crime Level \t{ffffff}%d/{FF6347}6 \n",wanted);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Kills: \t\t\t{ffffff}%d \n",PlayerInfo[targetid][pKills]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Drug addict: \t\t{ffffff}%s (%d) \n",zavisimostitext,PlayerInfo[targetid][pNarcoLomka]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}First mid kits with you: \t\t{ffffff}%d \n",PlayerInfo[playerid][pHeal]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Materials with you: \t\t{ffffff}%d \n",PlayerInfo[targetid][pMats]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}lock picks with you: \t\t{ffffff}%d \n",otmi);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Rope with you: \t\t{ffffff}%d \n",tiee);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Masks with you: \t\t{ffffff}%d \n",PlayerInfo[targetid][Texts][2]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Hours in the game: \t\t\t{ffffff}%d \n",PayDayHad);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Work: \t\t\t{ffffff}%s \n",GetPlayerJobName(PlayerInfo[targetid][pJob]));
		strcat(sctring,str);
		if(!PlayerInfo[targetid][pAlcoInvenxua]) format(str,sizeof(str),"{ffffff}Organization: \t\t\t{ffffff}%s (%d/3) \n",GetPlayerFracName[PlayerInfo[targetid][pMember]],PlayerInfo[targetid][pVigs]);
		else format(str,sizeof(str),"{ffffff}Organization: \t\t\t{ffffff}%s \n",GetPlayerFracName[PlayerInfo[targetid][pMember]]);
		strcat(sctring,str);
		if(PlayerInfo[targetid][pMember] > 0 && PlayerInfo[targetid][pRank] > 0) format(str,sizeof(str),"{ffffff}Rank: \t\t\t\t{ffffff}%s(%d) \n\n",fRankName[PlayerInfo[targetid][pMember]-1][PlayerInfo[targetid][pRank]-1],PlayerInfo[targetid][pRank]); ///
		else format(str,sizeof(str),"{ffffff}Rank: \t\t\t\t{ffffff}Unknow \n\n"); ///
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Money: \t\t\t\t{ffffff}%s \n",formatInt(PlayerInfo[targetid][pCash]));
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}In the bank: \t\t\t{ffffff}%s \n",formatInt(PlayerInfo[targetid][pBank]));
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Donate points: \t\t\t{ffffff}%s \n",formatInt(PlayerInfo[targetid][pDonatemoney2]));
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Ruble Points: \t\t\t{ffffff}%s \n\n",formatInt(PlayerInfo[targetid][pRub]));
		strcat(sctring,str);
		format(str,sizeof(str),"\t\t{55ffff}[FACTION POINTS]: %s \n",formatInt(PlayerInfo[targetid][pFacPoint]));
		strcat(sctring,str);
		format(str,sizeof(str),"\t\t{FFD700}[GOLD BAR]: %s \n\n\n",formatInt(PlayerInfo[targetid][pGold]));
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Telephone: \t\t\t{ffffff}%d \n",PlayerInfo[targetid][pPnumber]);
		strcat(sctring,str);
		format(str,sizeof(str),"{ffffff}Balance on the phone: \t\t{ffffff}%d{FFFF00}$ \n\n",PlayerInfo[targetid][pMobile]);
		strcat(sctring,str);
		format(str,sizeof(str),"{FFFFFF}Statistics for %02d/%02d/%d", day, month, year);
		strcat(sctring,str);
		format(stringer1,sizeof(stringer1),"{FFD700}Player stats",PlayerInfo[targetid][pNames]);
		ShowPlayerDialog(playerid,1932,0,stringer1,sctring,"Ok","");
     }
}
stock SetPlayerToTeamColor(playerid)//����� ��������
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 0:	SetPlayerColor(playerid, 0xe6e6e6FF);
	case 1: SetPlayerColor(playerid, COLOR_DBLUE);
	case 2: SetPlayerColor(playerid, 0x313131AA);
	case 3: SetPlayerColor(playerid, 0xa38b52FF);
	case 4: SetPlayerColor(playerid, 0xd815edFF);
	case 5: SetPlayerColor(playerid, 0xDDA701FF);
	case 6: SetPlayerColor(playerid, COLOR_REDD);
	case 7: SetPlayerColor(playerid, 0x114D71FF);
	case 8: SetPlayerColor(playerid, 0xB313E7FF);
	case 10: SetPlayerColor(playerid, COLOR_DBLUE);
	case 11: SetPlayerColor(playerid, 0x139BECFF);
	case 12: SetPlayerColor(playerid, 0x8813E7FF);
	case 13: SetPlayerColor(playerid, 0xDBD604AA);
	case 14: SetPlayerColor(playerid, COLOR_GRAD1);
	case 15: SetPlayerColor(playerid, 0x24b012AA);
	case 16: SetPlayerColor(playerid, 0x40848BAA);
	case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
	case 18: SetPlayerColor(playerid, 0x83BFBFAA);
	case 19: SetPlayerColor(playerid, 0xa38b52FF);
	case 21: SetPlayerColor(playerid, COLOR_DBLUE);
	case 23: SetPlayerColor(playerid, 0x708090FF);
	case 24: SetPlayerColor(playerid, 0xF45000FF);
	case 25: SetPlayerColor(playerid, 0x0f0f0fFF);
	case 26: SetPlayerColor(playerid, 0x708090AA);
	case 27,28: SetPlayerColor(playerid, 0xFF0000AA);
	}
	return true;
}
stock SetPlayerToTeamColored(playerid)//����� ��������
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 0:	SetPlayerColor(playerid, 0xe6e6e6FF);
	case 1: SetPlayerColor(playerid, COLOR_DBLUE);
	case 2: SetPlayerColor(playerid, 0x313131AA);
	case 3: SetPlayerColor(playerid, COLOR_GREEN);
	case 4: SetPlayerColor(playerid, 0xd815edFF);
	case 5: SetPlayerColor(playerid, 0xDDA701FF);
	case 6: SetPlayerColor(playerid, COLOR_REDD);
	case 7: SetPlayerColor(playerid, 0x114D71FF);
	case 8: SetPlayerColor(playerid, 0xB313E7FF);
	case 10: SetPlayerColor(playerid, COLOR_DBLUE);
	case 11: SetPlayerColor(playerid, 0x139BECFF);
	case 12: SetPlayerColor(playerid, 0x8813E7FF);
	case 13: SetPlayerColor(playerid, 0xDBD604AA);
	case 14: SetPlayerColor(playerid, COLOR_GRAD1);
	case 15: SetPlayerColor(playerid, 0x24b012AA);
	case 16: SetPlayerColor(playerid, 0x40848BAA);
	case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
	case 18: SetPlayerColor(playerid, 0x83BFBFAA);
	case 19: SetPlayerColor(playerid, COLOR_GREEN);
	case 21: SetPlayerColor(playerid, COLOR_DBLUE);
	case 23: SetPlayerColor(playerid, 0x708090FF);
	case 24: SetPlayerColor(playerid, 0xF45000FF);
	case 25: SetPlayerColor(playerid, 0x0f0f0fFF);
	case 26: SetPlayerColor(playerid, 0x708090AA);
	case 27,28: SetPlayerColor(playerid, 0xFF0000AA);
	}
	return true;
}
stock GameModeExitFunc()
{
	SaveAccounts();
	GameModeExit();
	return true;
}
public OnGameModeExit() {

	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pOnline` = '1001'");
	mysql_function_query(connects, mysql_query_, false, "", "");
    foreach(Player,i)
	{
		if(IsPlayerConnected(i)) OnPlayerUpdateRL(i);
	}
    TextDrawDestroy(TextBizzWar);
    mysql_close();
	return true;
}
publics: hello_server_off(playerid)
{
	for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, hello_server[i]);
}

/*publics: UpdateFakeOnline()
{
        FO_SetValue(96 + random(5));
}*/
publics: LoadProperty()
{
	static rows, fields;
	cache_get_data(rows, fields);
	new temp[64],idx=0;
    if(rows)
    {
		for(new he = 0; he < rows; he++)
		{
		    cache_get_row(he, 0, temp), HouseInfo[he][hID] = strval(temp);
			cache_get_row(he, 1, temp), HouseInfo[he][hEntrancex] = floatstr(temp);
			cache_get_row(he, 2, temp), HouseInfo[he][hEntrancey] = floatstr(temp);
			cache_get_row(he, 3, temp), HouseInfo[he][hEntrancez] = floatstr(temp);
			cache_get_row(he, 4, temp), HouseInfo[he][hExitx] = floatstr(temp);
			cache_get_row(he, 5, temp), HouseInfo[he][hExity] = floatstr(temp);
			cache_get_row(he, 6, temp), HouseInfo[he][hExitz] = floatstr(temp);
			cache_get_row(he, 7, temp), strmid(HouseInfo[he][hOwner], temp, 0, strlen(temp), 255);
			cache_get_row(he, 8, temp), HouseInfo[he][hValue] = strval(temp);
			cache_get_row(he, 9, temp), HouseInfo[he][hHel] = strval(temp);
			cache_get_row(he, 10, temp), HouseInfo[he][hInt] = strval(temp);
			cache_get_row(he, 11, temp), HouseInfo[he][hLock] = strval(temp);
			cache_get_row(he, 12, temp), HouseInfo[he][hOwned] = strval(temp);
			cache_get_row(he, 13, temp), HouseInfo[he][hTakings] = strval(temp);
			cache_get_row(he, 14, temp), HouseInfo[he][hVec] = strval(temp);
			cache_get_row(he, 15, temp), HouseInfo[he][hKlass] = strval(temp);
			cache_get_row(he, 16, temp), HouseInfo[he][hVehSost] = strval(temp);
			cache_get_row(he, 17, temp), HouseInfo[he][hCarx] = floatstr(temp);
			cache_get_row(he, 18, temp), HouseInfo[he][hCary] = floatstr(temp);
			cache_get_row(he, 19, temp), HouseInfo[he][hCarz] = floatstr(temp);
			cache_get_row(he, 20, temp), HouseInfo[he][hCarc] = floatstr(temp);
			cache_get_row(he, 21, temp), HouseInfo[he][hNark] = strval(temp);
			cache_get_row(he, 22, temp), HouseInfo[he][hMoney] = strval(temp);
			cache_get_row(he, 23, temp), HouseInfo[he][hMatel] = strval(temp);
			cache_get_row(he, 24, temp), HouseInfo[he][hduggl] = strval(temp);
			cache_get_row(he, 25, temp), HouseInfo[he][hak47] = strval(temp);
			cache_get_row(he, 26, temp), HouseInfo[he][hshotgun] = strval(temp);
			cache_get_row(he, 27, temp), HouseInfo[he][hm4] = strval(temp);
			cache_get_row(he, 28, temp), HouseInfo[he][hsdpist] = strval(temp);
			cache_get_row(he, 29, temp), HouseInfo[he][hrifle] = strval(temp);
			cache_get_row(he, 30, temp), HouseInfo[he][hsmg] = strval(temp);
			cache_get_row(he, 31, temp), sscanf(temp, "a<i>[7]", HouseInfo[he][hdrugs]);
			idx++;
			HouseInfo[he][hRobhouse] = false;
			HouseInfo[he][hSquare] = CreateDynamicSphere(HouseInfo[he][hEntrancex], HouseInfo[he][hEntrancey], HouseInfo[he][hEntrancez], 1.5, 0, 0, -1);
			if(HouseInfo[he][hOwned] == 0)
			{
				HouseInfo[he][hPickup] = CreatePickup(1273, 23, HouseInfo[he][hEntrancex], HouseInfo[he][hEntrancey], HouseInfo[he][hEntrancez],0);
				HouseInfo[he][hMIcon] = CreateDynamicMapIcon(HouseInfo[he][hEntrancex], HouseInfo[he][hEntrancey], HouseInfo[he][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 200.0);
			}
			if(HouseInfo[he][hOwned] == 1)
			{
				HouseInfo[he][hPickup] = CreatePickup(19522, 23, HouseInfo[he][hEntrancex], HouseInfo[he][hEntrancey], HouseInfo[he][hEntrancez],0);
				HouseInfo[he][hMIcon] = CreateDynamicMapIcon(HouseInfo[he][hEntrancex], HouseInfo[he][hEntrancey], HouseInfo[he][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 200.0);
			}
			Update3dHouse3d(he);
		}
		printf("[ %d ] Homes uploaded successfully.",idx);
	}
	else printf("Houses are not loaded.");
	for(new i; i != MAX_PAYNSPRAY; i++) {
		PaynSpray[i] = CreateDynamicSphere(paynspray[i][0],paynspray[i][1],paynspray[i][2],10.0);
	}
	AreaBase = CreateDynamicSphere(492.6442,-153.7014,611.1124,50.0);
	door_fbi_area = CreateDynamicSphere(584.0284,1270.3948,1080.3250,4.0);
	return true;
}
stock Update3dHouse3d(houseid)
{
	new format_ex[250];
	if(HouseInfo[houseid][h3dtextc] == false)
	{
		if(HouseInfo[houseid][hOwned] == 0)
		{
			format(format_ex, sizeof(format_ex), "{38c71c}*** This house is for sell ***\n\n{ffffff}House number: {8c8c8c}%d\n{ffffff}Door: %s",houseid, (HouseInfo[houseid][hLock] > 0) ? "{ff0000}Closed" : "{38c71c}Open");
			HouseInfo[houseid][h3dtext] = CreateDynamic3DTextLabel(format_ex,-1,HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez],10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
		if(HouseInfo[houseid][hOwned] == 1)
		{
			format(format_ex, sizeof(format_ex), "{bd9031}*** This house has an owner ***\n\n{ffffff}House number: {8c8c8c}%d\n{ffffff}Owner: {8c8c8c}%s\n{ffffff}Door: %s",houseid, HouseInfo[houseid][hOwner], (HouseInfo[houseid][hLock] > 0) ? "{ff0000}Closed" : "{38c71c}Open");
			HouseInfo[houseid][h3dtext] = CreateDynamic3DTextLabel(format_ex,-1,HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez],10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
		HouseInfo[houseid][h3dtextc] = true;
	}
	else
	{
		if(HouseInfo[houseid][hOwned] == 0)
		{
			format(format_ex, sizeof(format_ex), "{38c71c}*** This house is for sell ***\n\n{ffffff}House number: {8c8c8c}%d\n{ffffff}Door: %s",houseid, (HouseInfo[houseid][hLock] > 0) ? "{ff0000}Closed" : "{38c71c}Open");
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][h3dtext], -1, format_ex);
		}
		if(HouseInfo[houseid][hOwned] == 1)
		{
			format(format_ex, sizeof(format_ex), "{bd9031}*** This house has an owner ***\n\n{ffffff}House number: {8c8c8c}%d\n{ffffff}Owner: {8c8c8c}%s\n{ffffff}Door: %s",houseid, HouseInfo[houseid][hOwner], (HouseInfo[houseid][hLock] > 0) ? "{ff0000}Closed" : "{38c71c}Open");
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][h3dtext], -1, format_ex);
		}
	}
	return 1;
}
publics: LoadBizz()
{
    new time = GetTickCount();
    static rows, fields;
    cache_get_data(rows, fields);
    new idx;
    for(idx = 1; idx <= rows; idx++)
    {
        BizzInfo[idx][bID] = cache_get_row_int(idx-1,0, connects);
        cache_get_row(idx-1, 1, BizzInfo[idx][bOwner], connects, 32);
        BizzInfo[idx][bType] = cache_get_row_int(idx-1,2, connects);
        BizzInfo[idx][bPrice] = cache_get_row_int(idx-1,3, connects);
        BizzInfo[idx][bBuyPrice] = cache_get_row_int(idx-1,4, connects);
        BizzInfo[idx][bMoney] = cache_get_row_int(idx-1,5, connects);
        BizzInfo[idx][bLic] = cache_get_row_int(idx-1,6, connects);
        BizzInfo[idx][bEntrx] = cache_get_row_float(idx-1,7, connects);
        BizzInfo[idx][bEntry] = cache_get_row_float(idx-1,8, connects);
        BizzInfo[idx][bEntrz] = cache_get_row_float(idx-1,9, connects);
        BizzInfo[idx][bExitx] = cache_get_row_float(idx-1,10, connects);
        BizzInfo[idx][bExity] = cache_get_row_float(idx-1,11, connects);
        BizzInfo[idx][bExitz] = cache_get_row_float(idx-1,12, connects);
        BizzInfo[idx][bMenux] = cache_get_row_float(idx-1,13, connects);
        BizzInfo[idx][bMenuy] = cache_get_row_float(idx-1,14, connects);
        BizzInfo[idx][bMenuz] = cache_get_row_float(idx-1,15, connects);
        BizzInfo[idx][bInt] = cache_get_row_int(idx-1,16, connects);
        BizzInfo[idx][bVirtual] = cache_get_row_int(idx-1,17, connects);
        BizzInfo[idx][bMIcon] = cache_get_row_int(idx-1,18, connects);
        cache_get_row(idx-1, 19, BizzInfo[idx][bName], connects, 32);
        BizzInfo[idx][bEnter] = cache_get_row_int(idx-1,20, connects);
        BizzInfo[idx][bLock] = cache_get_row_int(idx-1,21, connects);
        BizzInfo[idx][bProduct] = cache_get_row_int(idx-1,22, connects);
        BizzInfo[idx][bTill] = cache_get_row_int(idx-1,23, connects);
        BizzInfo[idx][bLockTime] = cache_get_row_int(idx-1,24, connects);
        BizzInfo[idx][bMafia] = cache_get_row_int(idx-1,25, connects);
        if(BizzInfo[idx][bType] > 2) BizzInfo[idx][bIcon] = CreateDynamicMapIcon(BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz], BizzInfo[idx][bMIcon], 0,-1,-1,-1,200.0);
		if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 8)
		{
  			BizzInfo[idx][bPickup] = CreatePickupAC(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
			BizzInfo[idx][bPickupExit] = CreatePickupAC(19132, 1, BizzInfo[idx][bExitx],BizzInfo[idx][bExity],BizzInfo[idx][bExitz], BizzInfo[idx][bVirtual]);
   			if(BizzInfo[idx][bType] == 1) {
				BizzInfo[idx][bMenu] = CreatePickupAC(2663, 1, BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz], BizzInfo[idx][bVirtual]);
				CreateDynamic3DTextLabel("{0aa40d}Business List",-1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],4.0);
			} else {
				BizzInfo[idx][bMenu] = CreateDynamicCP(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz], 1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
			}
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
   				format(stringer, 100, "{ffff00}%s (# %i)\n{0eaa07}Business is for sale\nBusiness price: %d$", BizzInfo[idx][bName], idx, BizzInfo[idx][bPrice]);
	 			LABELBIZZ[idx] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
			}
			else
			{
				if(BizzInfo[idx][bEnter] > 0) format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}Entrance: {FFCC00}%i$", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]], BizzInfo[idx][bEnter]);
				else format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}Entrance: {FFCC00}Free", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]]);
		 		LABELBIZZ[idx] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
			}
		}
		else
		{
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
		        if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{0eaa07}Business is for sale\nBusiness price: %d$\n{FFFFFF}Price for 1 liter - {f9f906}%i$", BizzInfo[idx][bPrice], BizzInfo[idx][bTill] / 3);
		        else format(stringer, 90, "{0eaa07}Business is for sale\nBusiness price: %d$\nName: %s", BizzInfo[idx][bPrice], BizzInfo[idx][bName]);
				LABELBIZZ[idx] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,100.0);
			}
			else
			{
				if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{FFFFFF}Owner: {0eaa07}%s\n{FFFFFF}Price for 1 liter - {f9f906}%i$",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill] / 3);
				else format(stringer, 150, "{ffff00}%s (# %i)\n{FFFFFF}Owner: {42aaff}%s\nRoof: {%s}%s",  BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner],colorchat(BizzInfo[idx][bMafia], 2),GetPlayerFracName[BizzInfo[idx][bMafia]]);
				LABELBIZZ[idx] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,100.0);
			}
		}
        TOTALBIZZ++;
	}
	printf("[Loaded businesses]: <%i>. Spent: <%i ��>.",TOTALBIZZ,GetTickCount()-time);
}
stock SaveBizz(idx)
{
    format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_BIZZ"` SET `bOwner` = '%s', `bBuyPrice` = '%d', `bMoney` = '%d', `bLic` = '%d', `bEnter` = '%d', `bLock` = '%d', `bProduct` = '%d', `bTill` = '%d', `bLockTime` = '%d',`bMafia` = '%d' WHERE `bID` = '%d'",
	BizzInfo[idx][bOwner], BizzInfo[idx][bBuyPrice], BizzInfo[idx][bMoney], BizzInfo[idx][bLic], BizzInfo[idx][bEnter], BizzInfo[idx][bLock], BizzInfo[idx][bProduct], BizzInfo[idx][bTill], BizzInfo[idx][bLockTime], BizzInfo[idx][bMafia], BizzInfo[idx][bID]);
    return mysql_function_query(connects, mysql_query_, false, "", "");
}
stock SaveHouse(houseid)
{
    new drugs[128];
    for(new i = 0; i < 7; i++) format(drugs, sizeof(drugs), "%s%d ", drugs, HouseInfo[houseid][hdrugs][i]);
	format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_HOUSE"` SET `hOwner` = '%s', `hValue` = '%d', `hHel` = '%d', `hInt` = '%d', `hLock` = '%d', `hOwned` = '%d', `hTakings` = '%d', `hKlass` = '%d',\
	`hVehSost` = '%d',`hNark` = '%d',`hMoney` = '%d',`hMatel` = '%d',`hduggl` = '%d',`hak47` = '%d', `hshotgun` = '%d', `hm4` = '%d',`hsdpist` = '%d',`hrifle` = '%d',`hsmg` = '%d', `hdrugs` = '%s' WHERE `hID` = '%d'",
	HouseInfo[houseid][hOwner],HouseInfo[houseid][hValue],HouseInfo[houseid][hHel],HouseInfo[houseid][hInt],HouseInfo[houseid][hLock], HouseInfo[houseid][hOwned],HouseInfo[houseid][hTakings],HouseInfo[houseid][hKlass],
	HouseInfo[houseid][hVehSost],HouseInfo[houseid][hNark],HouseInfo[houseid][hMoney],HouseInfo[houseid][hMatel],HouseInfo[houseid][hduggl],
    HouseInfo[houseid][hak47],HouseInfo[houseid][hshotgun],HouseInfo[houseid][hm4],HouseInfo[houseid][hsdpist],HouseInfo[houseid][hrifle],
    HouseInfo[houseid][hsmg],drugs,houseid);
    mysql_tquery(connects, mysql_query_, "", "");
	return 1;
}
publics: LoadZone()
{
    new time = GetTickCount();
    new r, f;
    cache_get_data(r, f);
    new idx;
    for(idx = 1; idx <= r; idx++)
    {
	    GREENZONE[idx][grid] = cache_get_row_int(idx-1,0, connects);
	    GREENZONE[idx][grX] = cache_get_row_float(idx-1,1, connects);
	    GREENZONE[idx][grY] = cache_get_row_float(idx-1,2, connects);
	    GREENZONE[idx][grZ] = cache_get_row_float(idx-1,3, connects);
	    GREENZONE[idx][grD] = cache_get_row_float(idx-1,4, connects);
	    cache_get_row(idx-1, 5, GREENZONE[idx][grName], connects, 32);
	    GREENZONE[idx][grVirt] = cache_get_row_int(idx-1,6, connects);
    	TOTALZONE++;
	}
	printf("[Green zones loaded]: <%i>. Spent: <%i ms>.",TOTALZONE,GetTickCount()-time);
}
stock SaveZone(idx)
{
    mysql_format(connects,mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_GREENZONE" SET grx = '%f', gry = '%f', grz = '%f', grd = '%f', grname = '%s', grvirt = '%i' WHERE id = %i",
	GREENZONE[idx][grX],GREENZONE[idx][grY],GREENZONE[idx][grZ],GREENZONE[idx][grD],GREENZONE[idx][grName],GREENZONE[idx][grVirt], idx);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return true;
}
forward UnBanBy(playerid, adm[]);
public UnBanBy(playerid, adm[])
{
	new rows, fields, fstring[144];
	cache_get_data(rows, fields, connects);
	if(rows)
	{
	    format(fstring, sizeof(fstring), "You unbanned %i banned players %s", rows, adm);
	    SendClientMessage(playerid, -1, fstring);
	    mysql_format(connects, fstring, sizeof(fstring), "DELETE FROM `banlog` WHERE `admin` = '%e'", adm);
	    mysql_function_query(connects, fstring, false, "", "");
	}
	else SendClientMessage(playerid, -1, "No accounts found banned by this Adminstrator");
	return true;
}
CMD:cameras(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 25)
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 707.1757, -1350.6324, -60.5516))
	ShowPlayerDialog(playerid, 10007, DIALOG_STYLE_LIST, "Camera", "Camera\t1 \nCamera\t2\nCamera\t3\nCamera\t4\nCamera\t5\nCamera\t6\n{FF0000}Camera OFF","{FFF000}Select","{FF0000}Close");
	return true;
}
CMD:cameraoff(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 707.1757, -1350.6324, -60.5516))
    if(PlayerInfo[playerid][pMember] == 25)
    SpawnPlayerEx(playerid);
    SetPlayerPos(playerid, 707.1938, -1352.0394, -59.7351);
    SetPlayerCheckpoint(playerid, 707.1757, -1350.6324, -60.5516,1.0);
    return true;
}
CMD:stoprent(playerid)
{
    if(GetPVarInt(playerid, "rentrc") == 0)
    SetCameraBehindPlayer(playerid);
    SetPlayerVirtualWorld(playerid, 0);
    RemoveFromVehicle(playerid);
    DestroyVehicleEx(vehiclerc[playerid]);
    DeletePVar(playerid, "rentrc");
    return true;
}
CMD:garbagejob(playerid, parmas[])
{
	if(PlayerToPoint(1.0,playerid, 504.9208,-1816.0354,5.7904))
	{
	    if(musor[playerid] == 0)
	    {
	        ShowPlayerDialog(playerid, 4499, DIALOG_STYLE_MSGBOX, "Garbage Job","Do you want to start working as a garbage man?","Yes","No");
		}//else SendClientMessage(playerid, 0xFFFFFFAA, "{1562C6}[Finish]: {FFFFFF}You finished work");
	}
	return 1;
}
CMD:unbanby(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 1) return true;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, -1,"/unbanby [Nickname Adminstrator]");
    new query_mysql[144];
	mysql_format(connects, query_mysql, sizeof(query_mysql), "SELECT * FROM `banlog` WHERE `admin` = '%e'", params[0]);
 	mysql_tquery(connects, query_mysql, "UnBanBy", "ds", playerid, params[0]);
	return true;
}
publics: CheckBanks(playerid)
{
	ClearBank(playerid);
    new rows,fields;
    cache_get_data(rows,fields);
    if(rows)
    {
        for(new i; i < rows; i++)
        {
            _INFO[playerid][ID][i] = cache_get_field_content_int(i, "id", connects);
            cache_get_field_content(i, "name", _INFONAME[playerid][i], connects, 20);
            _INFO[playerid][NUMBER][i] = cache_get_field_content_int(i, "number", connects);
            cache_get_field_content(i, "owner", _INFO[playerid][OWNER][i], connects, 24);
            _INFO[playerid][BALANCE][i] = cache_get_field_content_int(i, "balance", connects);
            _INFO[playerid][PASSWORD][i] = cache_get_field_content_int(i, "password", connects);
            _PLAYERBANK[playerid]++;
        }
    }
    return 1;
}
stock ClearBank(playerid)
{
    for(new i; i < 3; i++) {
		_INFO[playerid][ID][i] = 0;
	    _INFO[playerid][NUMBER][i] = 0;
		_INFO[playerid][BALANCE][i] = 0;
		_INFO[playerid][PASSWORD][i] = 0;
	    _INFO[playerid][gBALANCE][i] = 0;
	    _INFO[playerid][OWNER][i] = 0;
	    _INFO[playerid][gOWNER][i] = 0;
        strmid(_INFONAME[playerid][i], "0", 0, 1, 20);
	}
	_PLAYERBANK[playerid] = 0;
}
stock SaveAll()
{
    for(new idx = 1; idx <= TOTALBIZZ; idx++) SaveBizz(idx);
	return true;
}
stock SaveHousee()
{
    for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);
	return true;
}
stock CreateActorEx(name[],text[], skinid, Float:posx,Float:posy,Float:posz,Float:rot,virt = 0,inter = 0,inv = 1)
{
	for(new i = 0; i < MAX_ACTORS; i++)
	{
	    if(IsValidActor(i)) continue;
		CreateActor(skinid,posx,posy,posz,rot);
		new string[144];
	 	SetActorVirtualWorld(i,virt);
	 	SetActorInvulnerable(i,inv);
		if(strlen(name) || strlen(text))
		{
			format(string,sizeof(string),"{FFFFFF}%s\n%s",name,text);
			CreateDynamic3DTextLabel(string,COLOR_BLUE,posx,posy,posz+1.2,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, virt, inter);
		}
	    return i;
	}
    return -1;
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return false;
}
PreloadAllAnims(playerid)
{
    PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"PED");
}
public OnGameModeInit()
{
	armysteal = CreatePickupAC(19130, 23, 70.2444,1570.7354,14.5110, -1);
	armysteal2 = CreatePickupAC(1318, 23, 110.8851,1814.4972,18.6284, -1);
    medcardpic = CreatePickupAC(1581, 23, -651.7280,-909.4548,1436.1736, -1);
	spawndoor = CreatePickupAC(1318, 23, 2214.3853,-1150.5033,1025.7969, -1);
	respawndoor = CreatePickupAC(1318, 23, 1685.7915,-2237.5398,13.5469 , -1);
	dmzone = CreatePickupAC(1318, 23, 2057.5291,-1897.2125,13.5538, -1);
	dmzone1 = CreatePickupAC(1318, 23, 297.1703,290.1876,999.1485, -1);
	dmzonejoin = CreatePickupAC(1318, 23, 295.6979, 287.7957, 999.2425 ,-1);
    Create3DTextLabel("COMING SOON",0xFFFFFFFFF,295.7766, 282.0538, 999.2425,10.0,0,0);
	SetVehiclePassengerDamage(true);
   	AntiDeAMX();
    SetDisableSyncBugs(true);
    Menu();
	SetGameModeText("RolePlay - English");
	SendRconCommand("language English");
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetNameTagDrawDistance(21.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	SetWeather(4);
    CreateTextDraws();
	gettime(ghour,gminute,gsecond);
	SetWorldTime(ghour);
	#include <LoadObject>
	#include <mapping>
	#include <mappers>
	// FBI
/*	door_fbi[0] = CreateDynamicObject(1500,582.632,1270.599,1079.325,0.000,0.000,0.000,-1,-1,-1,150.000);
	door_fbi[1] = CreateDynamicObject(1500,584.113,1270.589,1079.325,0.000,0.000,0.000,-1,-1,-1,150.000);
	SetDynamicObjectMaterial(door_fbi[0], 0, 19426, "all_walls", "mirror01", 0);
	SetDynamicObjectMaterial(door_fbi[1], 0, 19426, "all_walls", "mirror01", 0);
	SetDynamicObjectMaterial(door_fbi[1], 1, 18996, "mattextures", "policeshieldgls", 0);
	SetDynamicObjectMaterial(door_fbi[0], 1, 18996, "mattextures", "policeshieldgls", 0);*/
	for(new i; i < sizeof(BazarAcc); i++)
	{
		format(stringer,sizeof(stringer),"{32CD32}%s\n{FFFFFF}Price: %d$\nTo buy: /buy_market",BazarAcc[i][BName],BazarAcc[i][bMoney]);
		Create3DTextLabel(stringer,COLOR_ORANGE,BazarAcc[i][BazX],BazarAcc[i][BazY],BazarAcc[i][BazZ],7.0,0,1);
	}
	// ? public OnGameModeInit:
 //	FO_SetMode(FO_ABSOLUTE);
 //	SetTimer("UpdateFakeOnline", 1000, true);

	// ���������:
	new moved = 0;
	for(moved = 0; moved < MAX_OBJECT_MOVED; moved++)
	{
	    moved_info[moved][moved_id]=CreateObject(moved_info[moved][moved_modelid],moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ],moved_info[moved][movedPosRotationX],moved_info[moved][movedPosRotationY],moved_info[moved][movedPosRotationZ]);
	}
	SetObjectMaterial(moved_info[6][moved_id], 0, 2823, "gb_kitchtake", "GB_takeaway04", 0);
	CreateDynamicObject(1495,-1621.8956,688.3060,6.2275,0.0000,0.0000,0.0000,0,0,-1, 100.0);
	CreateDynamicObject(1495,-1620.4497,688.3464,6.2301,0.0000,0.0000,0.0000,0,0,-1, 100.0);
	CreateDynamicObject(966,2350.7502,2423.8459,9.6203,0.0000,0.0000,0.0000,0,0,-1, 100.0); // ����
    //
	//
	addd = 100;
	for(new i;i<12;i++) CheatInfo[i][cheatid1]=-1;
	//
	for(new i = 0; i < MAX_DICETABLES; i++)
	{
	    for(new s = 0; s < 5; s++)
	    {
	    	DiceTableInfo[i][dGamer][s] = -1;
		}
	}
	for(new i = 0; i < MAX_ROULETABLES; i++)
	{
	    for(new s = 0; s < 5; s++)
	    {
	    	RouleTableInfo[i][rGamer][s] = -1;
		}
	}
	for(new i = 0; i < MAX_BLACKJACKTABLES; i++)
	{
	    for(new s = 0; s < 2; s++)
	    {
	    	BlackJackTableInfo[i][jGamer][s] = -1;
		}
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		CreateDynamicObject(1824, DiceTables[i][0], DiceTables[i][1], DiceTables[i][2], 0.0000000, 0.0000000, DiceTables[i][3]); //object(craps_table) (1)
	}
	for(new i = 0; i < sizeof(RouleTables); i++)
	{
		if(i >= 0 && i <= 3)
		{
            RouleWheel[i] = CreateDynamicObject(1979, RouleTables[i][0]-0.2, RouleTables[i][1]+1.35, RouleTables[i][2]-0.1, 0.0000000, 0.0000000, 0.0000000);
		}
		else
		{
            RouleWheel[i] = CreateDynamicObject(1979, RouleTables[i][0]-1.35, RouleTables[i][1]-0.2, RouleTables[i][2]-0.1, 0.0000000, 0.0000000, 0.0000000);
		}
		CreateDynamicObject(1978, RouleTables[i][0], RouleTables[i][1], RouleTables[i][2], 0.0000000, 0.0000000, RouleTables[i][3]);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
	    CreateDynamicObject(2188, BlackJackTables[i][0], BlackJackTables[i][1], BlackJackTables[i][2], 0.0000000, 0.0000000, BlackJackTables[i][3]);
	}
	DiceBox[0] = TextDrawCreate(622.000000, 135.000000, "_");
	TextDrawBackgroundColor(DiceBox[0], 255);
	TextDrawFont(DiceBox[0], 1);
	TextDrawLetterSize(DiceBox[0], 0.300000, 22.400001);
	TextDrawColor(DiceBox[0], -1);
	TextDrawSetOutline(DiceBox[0], 0);
	TextDrawSetProportional(DiceBox[0], 1);
	TextDrawSetShadow(DiceBox[0], 1);
	TextDrawUseBox(DiceBox[0], 1);
	TextDrawBoxColor(DiceBox[0], 144);
	TextDrawTextSize(DiceBox[0], 480.000000, 0.000000);

    DiceTitle = TextDrawCreate(518.000000, 140.000000, "Dice");
	TextDrawBackgroundColor(DiceTitle, 255);
	TextDrawFont(DiceTitle, 2);
	TextDrawLetterSize(DiceTitle, 0.779999, 1.900000);
	TextDrawColor(DiceTitle, 16711935);
	TextDrawSetOutline(DiceTitle, 0);
	TextDrawSetProportional(DiceTitle, 1);
	TextDrawSetShadow(DiceTitle, 1);

	DiceSetBet = TextDrawCreate(512.000000, 280.000000, "Set bet");
	TextDrawSetSelectable(DiceSetBet, true);
	TextDrawBackgroundColor(DiceSetBet, 255);
	TextDrawFont(DiceSetBet, 2);
	TextDrawLetterSize(DiceSetBet, 0.480000, 1.400000);
	TextDrawTextSize(DiceSetBet, 594.0, 10.0);
	TextDrawColor(DiceSetBet, -16776961);
	TextDrawSetOutline(DiceSetBet, 0);
	TextDrawSetProportional(DiceSetBet, 1);
	TextDrawSetShadow(DiceSetBet, 1);

	DiceThrow = TextDrawCreate(516.000000, 296.000000, "Throw");
	TextDrawSetSelectable(DiceThrow, true);
	TextDrawBackgroundColor(DiceThrow, 255);
	TextDrawFont(DiceThrow, 2);
	TextDrawLetterSize(DiceThrow, 0.480000, 1.400000);
	TextDrawTextSize(DiceThrow, 584.0, 10.0);
	TextDrawColor(DiceThrow, -16776961);
	TextDrawSetOutline(DiceThrow, 0);
	TextDrawSetProportional(DiceThrow, 1);
	TextDrawSetShadow(DiceThrow, 1);

	DiceExit = TextDrawCreate(528.000000, 312.000000, "Exit");
 	TextDrawSetSelectable(DiceExit, true);
	TextDrawBackgroundColor(DiceExit, 255);
	TextDrawFont(DiceExit, 2);
	TextDrawLetterSize(DiceExit, 0.480000, 1.400000);
	TextDrawTextSize(DiceExit, 572.0, 10.0);
	TextDrawColor(DiceExit, -16776961);
	TextDrawSetOutline(DiceExit, 0);
	TextDrawSetProportional(DiceExit, 1);
	TextDrawSetShadow(DiceExit, 1);

	DiceBox[1] = TextDrawCreate(618.000000, 160.000000, "_");
	TextDrawBackgroundColor(DiceBox[1], 255);
	TextDrawFont(DiceBox[1], 1);
	TextDrawLetterSize(DiceBox[1], 0.500000, 11.899999);
	TextDrawColor(DiceBox[1], -1);
	TextDrawSetOutline(DiceBox[1], 0);
	TextDrawSetProportional(DiceBox[1], 1);
	TextDrawSetShadow(DiceBox[1], 1);
	TextDrawUseBox(DiceBox[1], 1);
	TextDrawBoxColor(DiceBox[1], 80);
	TextDrawTextSize(DiceBox[1], 484.000000, 14.000000);

	DiceBet = TextDrawCreate(500.000000, 230.000000, "Bet:");
	TextDrawBackgroundColor(DiceBet, 255);
	TextDrawFont(DiceBet, 3);
	TextDrawLetterSize(DiceBet, 0.340000, 1.000000);
	TextDrawColor(DiceBet, 0x013ADFAA);
	TextDrawSetOutline(DiceBet, 0);
	TextDrawSetProportional(DiceBet, 1);
	TextDrawSetShadow(DiceBet, 1);

    DiceBank = TextDrawCreate(500.000000, 245.000000, "Bank:");
    TextDrawBackgroundColor(DiceBank, 255);
	TextDrawFont(DiceBank, 3);
	TextDrawLetterSize(DiceBank, 0.340000, 1.000000);
	TextDrawColor(DiceBank, 0x013ADFAA);
	TextDrawSetOutline(DiceBank, 0);
	TextDrawSetProportional(DiceBank, 1);
	TextDrawSetShadow(DiceBank, 1);

	DiceMoney = TextDrawCreate(500.000000, 260.000000, "Money:");
	TextDrawBackgroundColor(DiceMoney, 255);
	TextDrawFont(DiceMoney, 3);
	TextDrawLetterSize(DiceMoney, 0.340000, 1.000000);
	TextDrawColor(DiceMoney, 0x013ADFAA);
	TextDrawSetOutline(DiceMoney, 0);
	TextDrawSetProportional(DiceMoney, 1);
	TextDrawSetShadow(DiceMoney, 1);
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceSlot[i][0] = TextDrawCreate(488.000000, 167.000000, "[1] -----------");
		TextDrawBackgroundColor(DiceSlot[i][0], 255);
		TextDrawFont(DiceSlot[i][0], 1);
		TextDrawLetterSize(DiceSlot[i][0], 0.240000, 1.000000);
		TextDrawColor(DiceSlot[i][0], -1);
		TextDrawSetOutline(DiceSlot[i][0], 0);
		TextDrawSetProportional(DiceSlot[i][0], 1);
		TextDrawSetShadow(DiceSlot[i][0], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceSlot[i][1] = TextDrawCreate(488.000000, 178.000000, "[2] -----------");
		TextDrawBackgroundColor(DiceSlot[i][1], 255);
		TextDrawFont(DiceSlot[i][1], 1);
		TextDrawLetterSize(DiceSlot[i][1], 0.240000, 1.000000);
		TextDrawColor(DiceSlot[i][1], -1);
		TextDrawSetOutline(DiceSlot[i][1], 0);
		TextDrawSetProportional(DiceSlot[i][1], 1);
		TextDrawSetShadow(DiceSlot[i][1], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceSlot[i][2] = TextDrawCreate(488.000000, 189.000000, "[3] -----------");
		TextDrawBackgroundColor(DiceSlot[i][2], 255);
		TextDrawFont(DiceSlot[i][2], 1);
		TextDrawLetterSize(DiceSlot[i][2], 0.240000, 1.000000);
		TextDrawColor(DiceSlot[i][2], -1);
		TextDrawSetOutline(DiceSlot[i][2], 0);
		TextDrawSetProportional(DiceSlot[i][2], 1);
		TextDrawSetShadow(DiceSlot[i][2], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceSlot[i][3] = TextDrawCreate(488.000000, 200.000000, "[4] -----------");
		TextDrawBackgroundColor(DiceSlot[i][3], 255);
		TextDrawFont(DiceSlot[i][3], 1);
		TextDrawLetterSize(DiceSlot[i][3], 0.240000, 1.000000);
		TextDrawColor(DiceSlot[i][3], -1);
		TextDrawSetOutline(DiceSlot[i][3], 0);
		TextDrawSetProportional(DiceSlot[i][3], 1);
		TextDrawSetShadow(DiceSlot[i][3], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceSlot[i][4] = TextDrawCreate(488.000000, 211.000000, "[5] -----------");
		TextDrawBackgroundColor(DiceSlot[i][4], 255);
		TextDrawFont(DiceSlot[i][4], 1);
		TextDrawLetterSize(DiceSlot[i][4], 0.240000, 1.000000);
		TextDrawColor(DiceSlot[i][4], -1);
		TextDrawSetOutline(DiceSlot[i][4], 0);
		TextDrawSetProportional(DiceSlot[i][4], 1);
		TextDrawSetShadow(DiceSlot[i][4], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		BetGamer[i][0] = TextDrawCreate(597.000000, 166.000000, "[...]");
		TextDrawBackgroundColor(BetGamer[i][0], 255);
		TextDrawFont(BetGamer[i][0], 1);
		TextDrawLetterSize(BetGamer[i][0], 0.240000, 1.000000);
		TextDrawColor(BetGamer[i][0], -1);
		TextDrawSetOutline(BetGamer[i][0], 0);
		TextDrawSetProportional(BetGamer[i][0], 1);
		TextDrawSetShadow(BetGamer[i][0], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		BetGamer[i][1] = TextDrawCreate(597.000000, 177.000000, "[...]");
		TextDrawBackgroundColor(BetGamer[i][1], 255);
		TextDrawFont(BetGamer[i][1], 1);
		TextDrawLetterSize(BetGamer[i][1], 0.240000, 1.000000);
		TextDrawColor(BetGamer[i][1], -1);
		TextDrawSetOutline(BetGamer[i][1], 0);
		TextDrawSetProportional(BetGamer[i][1], 1);
		TextDrawSetShadow(BetGamer[i][1], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		BetGamer[i][2] = TextDrawCreate(597.000000, 188.000000, "[...]");
		TextDrawBackgroundColor(BetGamer[i][2], 255);
		TextDrawFont(BetGamer[i][2], 1);
		TextDrawLetterSize(BetGamer[i][2], 0.240000, 1.000000);
		TextDrawColor(BetGamer[i][2], -1);
		TextDrawSetOutline(BetGamer[i][2], 0);
		TextDrawSetProportional(BetGamer[i][2], 1);
		TextDrawSetShadow(BetGamer[i][2], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		BetGamer[i][3] = TextDrawCreate(597.000000, 198.000000, "[...]");
		TextDrawBackgroundColor(BetGamer[i][3], 255);
		TextDrawFont(BetGamer[i][3], 1);
		TextDrawLetterSize(BetGamer[i][3], 0.240000, 1.000000);
		TextDrawColor(BetGamer[i][3], -1);
		TextDrawSetOutline(BetGamer[i][3], 0);
		TextDrawSetProportional(BetGamer[i][3], 1);
		TextDrawSetShadow(BetGamer[i][3], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		BetGamer[i][4] = TextDrawCreate(597.000000, 210.000000, "[...]");
		TextDrawBackgroundColor(BetGamer[i][4], 255);
		TextDrawFont(BetGamer[i][4], 1);
		TextDrawLetterSize(BetGamer[i][4], 0.240000, 1.000000);
		TextDrawColor(BetGamer[i][4], -1);
		TextDrawSetOutline(BetGamer[i][4], 0);
		TextDrawSetProportional(BetGamer[i][4], 1);
		TextDrawSetShadow(BetGamer[i][4], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		DiceBetShow[i] = TextDrawCreate(529.000000, 230.000000, "0$");
		TextDrawBackgroundColor(DiceBetShow[i], 255);
		TextDrawFont(DiceBetShow[i], 3);
		TextDrawLetterSize(DiceBetShow[i], 0.340000, 1.000000);
		TextDrawColor(DiceBetShow[i], -1);
		TextDrawSetOutline(DiceBetShow[i], 0);
		TextDrawSetProportional(DiceBetShow[i], 1);
		TextDrawSetShadow(DiceBetShow[i], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
	    DiceBankShow[i] = TextDrawCreate(535.000000, 245.000000, "0$");
	    TextDrawBackgroundColor(DiceBankShow[i], 255);
		TextDrawFont(DiceBankShow[i], 3);
		TextDrawLetterSize(DiceBankShow[i], 0.340000, 1.000000);
		TextDrawColor(DiceBankShow[i], -1);
		TextDrawSetOutline(DiceBankShow[i], 0);
		TextDrawSetProportional(DiceBankShow[i], 1);
		TextDrawSetShadow(DiceBankShow[i], 1);
	}
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
	    for(new s = 0; s < 5; s++)
	    {
			DiceMoneyShow[i][s] = TextDrawCreate(545.000000, 260.000000, "0$");
			TextDrawBackgroundColor(DiceMoneyShow[i][s], 255);
			TextDrawFont(DiceMoneyShow[i][s], 3);
			TextDrawLetterSize(DiceMoneyShow[i][s], 0.340000, 1.000000);
			TextDrawColor(DiceMoneyShow[i][s], -1);
			TextDrawSetOutline(DiceMoneyShow[i][s], 0);
			TextDrawSetProportional(DiceMoneyShow[i][s], 1);
			TextDrawSetShadow(DiceMoneyShow[i][s], 1);
		}
	}
	RouleBox = TextDrawCreate(185.000000, 360.000000, "_");
	TextDrawBackgroundColor(RouleBox, 255);
	TextDrawFont(RouleBox, 2);
	TextDrawLetterSize(RouleBox, 0.479999, 7.999998);
	TextDrawColor(RouleBox, -1);
	TextDrawSetOutline(RouleBox, 1);
	TextDrawSetProportional(RouleBox, 1);
	TextDrawUseBox(RouleBox, 1);
	TextDrawBoxColor(RouleBox, 152);
	TextDrawTextSize(RouleBox, 465.000000, 1.000000);

	RouleBorder[0] = TextDrawCreate(308.000000, 340.000000, "l");
	TextDrawBackgroundColor(RouleBorder[0], 255);
	TextDrawFont(RouleBorder[0], 1);
	TextDrawLetterSize(RouleBorder[0], 0.100000, 11.499989);
	TextDrawColor(RouleBorder[0], -1);
	TextDrawSetOutline(RouleBorder[0], 0);
	TextDrawSetProportional(RouleBorder[0], 1);
	TextDrawSetShadow(RouleBorder[0], 1);

	RouleBorder[1] = TextDrawCreate(388.000000, 340.000000, "l");
	TextDrawBackgroundColor(RouleBorder[1], 255);
	TextDrawFont(RouleBorder[1], 1);
	TextDrawLetterSize(RouleBorder[1], 0.099999, 11.499994);
	TextDrawColor(RouleBorder[1], -1);
	TextDrawSetOutline(RouleBorder[1], 0);
	TextDrawSetProportional(RouleBorder[1], 1);
	TextDrawSetShadow(RouleBorder[1], 1);

	RouleGamersTitle = TextDrawCreate(219.000000, 348.000000, "Gamers");
	TextDrawBackgroundColor(RouleGamersTitle, 255);
	TextDrawFont(RouleGamersTitle, 1);
	TextDrawLetterSize(RouleGamersTitle, 0.449999, 1.799999);
	TextDrawColor(RouleGamersTitle, -16776961);
	TextDrawSetOutline(RouleGamersTitle, 0);
	TextDrawSetProportional(RouleGamersTitle, 1);
	TextDrawSetShadow(RouleGamersTitle, 1);

	RouleNumberTitle = TextDrawCreate(324.000000, 348.000000, "Number");
	TextDrawBackgroundColor(RouleNumberTitle, 255);
	TextDrawFont(RouleNumberTitle, 1);
	TextDrawLetterSize(RouleNumberTitle, 0.449999, 1.799999);
	TextDrawColor(RouleNumberTitle, -16776961);
	TextDrawSetOutline(RouleNumberTitle, 0);
	TextDrawSetProportional(RouleNumberTitle, 1);
	TextDrawSetShadow(RouleNumberTitle, 1);

	RouleBetTitle = TextDrawCreate(417.000000, 348.000000, "Bet");
	TextDrawBackgroundColor(RouleBetTitle, 255);
	TextDrawFont(RouleBetTitle, 1);
	TextDrawLetterSize(RouleBetTitle, 0.449999, 1.799999);
	TextDrawColor(RouleBetTitle, -16776961);
	TextDrawSetOutline(RouleBetTitle, 0);
	TextDrawSetProportional(RouleBetTitle, 1);
	TextDrawSetShadow(RouleBetTitle, 1);
	for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleGamerShow[i][0] = TextDrawCreate(190.000000, 366.000000, "[1] -------");
		TextDrawBackgroundColor(RouleGamerShow[i][0], 255);
		TextDrawFont(RouleGamerShow[i][0], 2);
		TextDrawLetterSize(RouleGamerShow[i][0], 0.229999, 1.200000);
		TextDrawColor(RouleGamerShow[i][0], -1);
		TextDrawSetOutline(RouleGamerShow[i][0], 1);
		TextDrawSetProportional(RouleGamerShow[i][0], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleGamerShow[i][1] = TextDrawCreate(190.000000, 378.000000, "[2] -------");
		TextDrawBackgroundColor(RouleGamerShow[i][1], 255);
		TextDrawFont(RouleGamerShow[i][1], 2);
		TextDrawLetterSize(RouleGamerShow[i][1], 0.239998, 1.200000);
		TextDrawColor(RouleGamerShow[i][1], -1);
		TextDrawSetOutline(RouleGamerShow[i][1], 1);
		TextDrawSetProportional(RouleGamerShow[i][1], 1);
		TextDrawSetShadow(RouleGamerShow[i][1], 1);
	}
	for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleGamerShow[i][2] = TextDrawCreate(190.000000, 390.000000, "[3] -------");
		TextDrawBackgroundColor(RouleGamerShow[i][2], 255);
		TextDrawFont(RouleGamerShow[i][2], 2);
		TextDrawLetterSize(RouleGamerShow[i][2], 0.239999, 1.200000);
		TextDrawColor(RouleGamerShow[i][2], -1);
		TextDrawSetOutline(RouleGamerShow[i][2], 1);
		TextDrawSetProportional(RouleGamerShow[i][2], 1);
		TextDrawSetShadow(RouleGamerShow[i][2], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleGamerShow[i][3] = TextDrawCreate(189.000000, 402.000000, "[4] -------");
		TextDrawBackgroundColor(RouleGamerShow[i][3], 255);
		TextDrawFont(RouleGamerShow[i][3], 2);
		TextDrawLetterSize(RouleGamerShow[i][3], 0.239999, 1.200000);
		TextDrawColor(RouleGamerShow[i][3], -1);
		TextDrawSetOutline(RouleGamerShow[i][3], 1);
		TextDrawSetProportional(RouleGamerShow[i][3], 1);
		TextDrawSetShadow(RouleGamerShow[i][3], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleGamerShow[i][4] = TextDrawCreate(189.000000, 414.000000, "[5] -------");
		TextDrawBackgroundColor(RouleGamerShow[i][4], 255);
		TextDrawFont(RouleGamerShow[i][4], 2);
		TextDrawLetterSize(RouleGamerShow[i][4], 0.239999, 1.200000);
		TextDrawColor(RouleGamerShow[i][4], -1);
		TextDrawSetOutline(RouleGamerShow[i][4], 1);
		TextDrawSetProportional(RouleGamerShow[i][4], 1);
		TextDrawSetShadow(RouleGamerShow[i][4], 1);
	}
	for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleNumberShow[i][0] = TextDrawCreate(318.000000, 366.000000, "-------");
		TextDrawBackgroundColor(RouleNumberShow[i][0], 255);
		TextDrawFont(RouleNumberShow[i][0], 2);
		TextDrawLetterSize(RouleNumberShow[i][0], 0.239999, 1.200000);
		TextDrawColor(RouleNumberShow[i][0], -1);
		TextDrawSetOutline(RouleNumberShow[i][0], 1);
		TextDrawSetProportional(RouleNumberShow[i][0], 1);
		TextDrawSetShadow(RouleNumberShow[i][0], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleNumberShow[i][1] = TextDrawCreate(318.000000, 378.000000, "-------");
		TextDrawBackgroundColor(RouleNumberShow[i][1], 255);
		TextDrawFont(RouleNumberShow[i][1], 2);
		TextDrawLetterSize(RouleNumberShow[i][1], 0.239999, 1.200000);
		TextDrawColor(RouleNumberShow[i][1], -1);
		TextDrawSetOutline(RouleNumberShow[i][1], 1);
		TextDrawSetProportional(RouleNumberShow[i][1], 1);
		TextDrawSetShadow(RouleNumberShow[i][1], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleNumberShow[i][2] = TextDrawCreate(318.000000, 390.000000, "-------");
		TextDrawBackgroundColor(RouleNumberShow[i][2], 255);
		TextDrawFont(RouleNumberShow[i][2], 2);
		TextDrawLetterSize(RouleNumberShow[i][2], 0.239999, 1.200000);
		TextDrawColor(RouleNumberShow[i][2], -1);
		TextDrawSetOutline(RouleNumberShow[i][2], 1);
		TextDrawSetProportional(RouleNumberShow[i][2], 1);
		TextDrawSetShadow(RouleNumberShow[i][2], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleNumberShow[i][3] = TextDrawCreate(318.000000, 402.000000, "-------");
		TextDrawBackgroundColor(RouleNumberShow[i][3], 255);
		TextDrawFont(RouleNumberShow[i][3], 2);
		TextDrawLetterSize(RouleNumberShow[i][3], 0.239999, 1.200000);
		TextDrawColor(RouleNumberShow[i][3], -1);
		TextDrawSetOutline(RouleNumberShow[i][3], 1);
		TextDrawSetProportional(RouleNumberShow[i][3], 1);
		TextDrawSetShadow(RouleNumberShow[i][3], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleNumberShow[i][4] = TextDrawCreate(318.000000, 414.000000, "-------");
		TextDrawBackgroundColor(RouleNumberShow[i][4], 255);
		TextDrawFont(RouleNumberShow[i][4], 2);
		TextDrawLetterSize(RouleNumberShow[i][4], 0.239999, 1.200000);
		TextDrawColor(RouleNumberShow[i][4], -1);
		TextDrawSetOutline(RouleNumberShow[i][4], 1);
		TextDrawSetProportional(RouleNumberShow[i][4], 1);
		TextDrawSetShadow(RouleNumberShow[i][4], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleBetShow[i][0] = TextDrawCreate(414.000000, 366.000000, "-------");
		TextDrawBackgroundColor(RouleBetShow[i][0], 255);
		TextDrawFont(RouleBetShow[i][0], 2);
		TextDrawLetterSize(RouleBetShow[i][0], 0.280000, 1.200000);
		TextDrawColor(RouleBetShow[i][0], -1);
		TextDrawSetOutline(RouleBetShow[i][0], 1);
		TextDrawSetProportional(RouleBetShow[i][0], 1);
		TextDrawSetShadow(RouleBetShow[i][0], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleBetShow[i][1] = TextDrawCreate(414.000000, 378.000000, "-------");
		TextDrawBackgroundColor(RouleBetShow[i][1], 255);
		TextDrawFont(RouleBetShow[i][1], 2);
		TextDrawLetterSize(RouleBetShow[i][1], 0.280000, 1.200000);
		TextDrawColor(RouleBetShow[i][1], -1);
		TextDrawSetOutline(RouleBetShow[i][1], 1);
		TextDrawSetProportional(RouleBetShow[i][1], 1);
		TextDrawSetShadow(RouleBetShow[i][1], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleBetShow[i][2] = TextDrawCreate(414.000000, 390.000000, "-------");
		TextDrawBackgroundColor(RouleBetShow[i][2], 255);
		TextDrawFont(RouleBetShow[i][2], 2);
		TextDrawLetterSize(RouleBetShow[i][2], 0.280000, 1.200000);
		TextDrawColor(RouleBetShow[i][2], -1);
		TextDrawSetOutline(RouleBetShow[i][2], 1);
		TextDrawSetProportional(RouleBetShow[i][2], 1);
		TextDrawSetShadow(RouleBetShow[i][2], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleBetShow[i][3] = TextDrawCreate(414.000000, 402.000000, "-------");
		TextDrawBackgroundColor(RouleBetShow[i][3], 255);
		TextDrawFont(RouleBetShow[i][3], 2);
		TextDrawLetterSize(RouleBetShow[i][3], 0.280000, 1.200000);
		TextDrawColor(RouleBetShow[i][3], -1);
		TextDrawSetOutline(RouleBetShow[i][3], 1);
		TextDrawSetProportional(RouleBetShow[i][3], 1);
		TextDrawSetShadow(RouleBetShow[i][3], 1);
	}
    for(new i = 0; i < sizeof(RouleTables); i++)
	{
		RouleBetShow[i][4] = TextDrawCreate(414.000000, 414.000000, "-------");
		TextDrawBackgroundColor(RouleBetShow[i][4], 255);
		TextDrawFont(RouleBetShow[i][4], 2);
		TextDrawLetterSize(RouleBetShow[i][4], 0.280000, 1.200000);
		TextDrawColor(RouleBetShow[i][4], -1);
		TextDrawSetOutline(RouleBetShow[i][4], 1);
		TextDrawSetProportional(RouleBetShow[i][4], 1);
		TextDrawSetShadow(RouleBetShow[i][4], 1);
	}
	BlackJackBox[0] = TextDrawCreate(125.000000, 105.000000, "_");
	TextDrawBackgroundColor(BlackJackBox[0], 255);
	TextDrawFont(BlackJackBox[0], 0);
	TextDrawLetterSize(BlackJackBox[0], 0.520000, 27.000000);
	TextDrawColor(BlackJackBox[0], -1);
	TextDrawSetOutline(BlackJackBox[0], 0);
	TextDrawSetProportional(BlackJackBox[0], 1);
	TextDrawSetShadow(BlackJackBox[0], 1);
	TextDrawUseBox(BlackJackBox[0], 1);
	TextDrawBoxColor(BlackJackBox[0], 190909336);
	TextDrawTextSize(BlackJackBox[0], 505.000000, 100.000000);
	TextDrawSetPreviewModel(BlackJackBox[0], 19474);
	TextDrawSetPreviewRot(BlackJackBox[0], -90.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(BlackJackBox[0], 0);

	BlackJackTitle = TextDrawCreate(228.000000, 202.000000, "BlackJack");
	TextDrawBackgroundColor(BlackJackTitle, 255);
	TextDrawFont(BlackJackTitle, 0);
	TextDrawLetterSize(BlackJackTitle, 1.440000, 4.000000);
	TextDrawColor(BlackJackTitle, -16776961);
	TextDrawSetOutline(BlackJackTitle, 0);
	TextDrawSetProportional(BlackJackTitle, 1);
	TextDrawSetShadow(BlackJackTitle, 1);
	TextDrawSetSelectable(BlackJackTitle, 0);

	BlackJackChip[0] = TextDrawCreate(114.000000, 262.000000, "_");
	TextDrawBackgroundColor(BlackJackChip[0], 0xFFFFFF00);
	TextDrawFont(BlackJackChip[0], 5);
	TextDrawLetterSize(BlackJackChip[0], 0.300000, 4.099998);
	TextDrawColor(BlackJackChip[0], -1);
	TextDrawSetOutline(BlackJackChip[0], 0);
	TextDrawSetProportional(BlackJackChip[0], 1);
	TextDrawSetShadow(BlackJackChip[0], 1);
	TextDrawTextSize(BlackJackChip[0], 80.000000, 70.000000);
	TextDrawSetPreviewModel(BlackJackChip[0], 1938);
	TextDrawSetPreviewRot(BlackJackChip[0], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(BlackJackChip[0], 0);

	BlackJackChip[1] = TextDrawCreate(278.000000, 262.000000, "_");
	TextDrawBackgroundColor(BlackJackChip[1], 0xFFFFFF00);
	TextDrawFont(BlackJackChip[1], 5);
	TextDrawLetterSize(BlackJackChip[1], 0.500000, 1.000000);
	TextDrawColor(BlackJackChip[1], -1);
	TextDrawSetOutline(BlackJackChip[1], 0);
	TextDrawSetProportional(BlackJackChip[1], 1);
	TextDrawSetShadow(BlackJackChip[1], 1);
	TextDrawTextSize(BlackJackChip[1], 80.000000, 70.000000);
	TextDrawSetPreviewModel(BlackJackChip[1], 1938);
	TextDrawSetPreviewRot(BlackJackChip[1], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(BlackJackChip[1], 0);

	BlackJackBorder[0] = TextDrawCreate(510.000000, 102.000000, "_");
	TextDrawBackgroundColor(BlackJackBorder[0], 255);
	TextDrawFont(BlackJackBorder[0], 1);
	TextDrawLetterSize(BlackJackBorder[0], 0.500000, 0.000000);
	TextDrawColor(BlackJackBorder[0], -1);
	TextDrawSetOutline(BlackJackBorder[0], 0);
	TextDrawSetProportional(BlackJackBorder[0], 1);
	TextDrawSetShadow(BlackJackBorder[0], 1);
	TextDrawUseBox(BlackJackBorder[0], 1);
	TextDrawBoxColor(BlackJackBorder[0], 255);
	TextDrawTextSize(BlackJackBorder[0], 121.000000, 30.000000);
	TextDrawSetSelectable(BlackJackBorder[0], 0);

	BlackJackBorder[1] = TextDrawCreate(510.000000, 350.000000, "_");
	TextDrawBackgroundColor(BlackJackBorder[1], 255);
	TextDrawFont(BlackJackBorder[1], 1);
	TextDrawLetterSize(BlackJackBorder[1], 0.500000, 0.000000);
	TextDrawColor(BlackJackBorder[1], -1);
	TextDrawSetOutline(BlackJackBorder[1], 0);
	TextDrawSetProportional(BlackJackBorder[1], 1);
	TextDrawSetShadow(BlackJackBorder[1], 1);
	TextDrawUseBox(BlackJackBorder[1], 1);
	TextDrawBoxColor(BlackJackBorder[1], 255);
	TextDrawTextSize(BlackJackBorder[1], 121.000000, -2.000000);
	TextDrawSetSelectable(BlackJackBorder[1], 0);

	BlackJackBorder[2] = TextDrawCreate(122.000000, 102.000000, "_");
	TextDrawBackgroundColor(BlackJackBorder[2], 255);
	TextDrawFont(BlackJackBorder[2], 1);
	TextDrawLetterSize(BlackJackBorder[2], 0.500000, 27.600000);
	TextDrawColor(BlackJackBorder[2], -1);
	TextDrawSetOutline(BlackJackBorder[2], 0);
	TextDrawSetProportional(BlackJackBorder[2], 1);
	TextDrawSetShadow(BlackJackBorder[2], 1);
	TextDrawUseBox(BlackJackBorder[2], 1);
	TextDrawBoxColor(BlackJackBorder[2], 255);
	TextDrawTextSize(BlackJackBorder[2], 122.000000, 0.000000);
	TextDrawSetSelectable(BlackJackBorder[2], 0);

	BlackJackBorder[3] = TextDrawCreate(509.000000, 102.000000, "_");
	TextDrawBackgroundColor(BlackJackBorder[3], 255);
	TextDrawFont(BlackJackBorder[3], 1);
	TextDrawLetterSize(BlackJackBorder[3], 0.500000, 27.600000);
	TextDrawColor(BlackJackBorder[3], -1);
	TextDrawSetOutline(BlackJackBorder[3], 0);
	TextDrawSetProportional(BlackJackBorder[3], 1);
	TextDrawSetShadow(BlackJackBorder[3], 1);
	TextDrawUseBox(BlackJackBorder[3], 1);
	TextDrawBoxColor(BlackJackBorder[3], 255);
	TextDrawTextSize(BlackJackBorder[3], 509.000000, 0.000000);
	TextDrawSetSelectable(BlackJackBorder[3], 0);

    BlackJackBox[1] = TextDrawCreate(116.000000, 327.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[1], 255);
	TextDrawFont(BlackJackBox[1], 4);
	TextDrawLetterSize(BlackJackBox[1], 0.500000, 1.000000);
	TextDrawColor(BlackJackBox[1], 255);
	TextDrawSetOutline(BlackJackBox[1], 0);
	TextDrawSetProportional(BlackJackBox[1], 1);
	TextDrawSetShadow(BlackJackBox[1], 1);
	TextDrawUseBox(BlackJackBox[1], 1);
	TextDrawBoxColor(BlackJackBox[1], 255);
	TextDrawTextSize(BlackJackBox[1], 150.000000, 46.000000);
	TextDrawSetSelectable(BlackJackBox[1], 0);

	BlackJackBox[2] = TextDrawCreate(239.000000, 327.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[2], 255);
	TextDrawFont(BlackJackBox[2], 4);
	TextDrawLetterSize(BlackJackBox[2], 0.500000, 1.000000);
	TextDrawColor(BlackJackBox[2], 255);
	TextDrawSetOutline(BlackJackBox[2], 0);
	TextDrawSetProportional(BlackJackBox[2], 1);
	TextDrawSetShadow(BlackJackBox[2], 1);
	TextDrawUseBox(BlackJackBox[2], 1);
	TextDrawBoxColor(BlackJackBox[2], 255);
	TextDrawTextSize(BlackJackBox[2], 150.000000, 46.000000);
	TextDrawSetSelectable(BlackJackBox[2], 0);

	BlackJackBox[3] = TextDrawCreate(364.000000, 327.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[3], 255);
	TextDrawFont(BlackJackBox[3], 4);
	TextDrawLetterSize(BlackJackBox[3], 0.500000, 1.200000);
	TextDrawColor(BlackJackBox[3], 255);
	TextDrawSetOutline(BlackJackBox[3], 0);
	TextDrawSetProportional(BlackJackBox[3], 1);
	TextDrawSetShadow(BlackJackBox[3], 1);
	TextDrawUseBox(BlackJackBox[3], 1);
	TextDrawBoxColor(BlackJackBox[3], 255);
	TextDrawTextSize(BlackJackBox[3], 150.000000, 46.000000);
	TextDrawSetSelectable(BlackJackBox[3], 0);

    BlackJackBox[4] = TextDrawCreate(119.000000, 331.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[4], 255);
	TextDrawFont(BlackJackBox[4], 4);
	TextDrawLetterSize(BlackJackBox[4], 0.500000, 0.799998);
	TextDrawColor(BlackJackBox[4], 421097616);
	TextDrawSetOutline(BlackJackBox[4], 0);
	TextDrawSetProportional(BlackJackBox[4], 1);
	TextDrawSetShadow(BlackJackBox[4], 1);
	TextDrawUseBox(BlackJackBox[4], 1);
	TextDrawBoxColor(BlackJackBox[4], 255);
	TextDrawTextSize(BlackJackBox[4], 144.000000, 38.000000);
	TextDrawSetSelectable(BlackJackBox[4], 0);

    BlackJackBox[5] = TextDrawCreate(242.000000, 331.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[5], 255);
	TextDrawFont(BlackJackBox[5], 4);
	TextDrawLetterSize(BlackJackBox[5], 0.500000, 1.000000);
	TextDrawColor(BlackJackBox[5], 421097616);
	TextDrawSetOutline(BlackJackBox[5], 0);
	TextDrawSetProportional(BlackJackBox[5], 1);
	TextDrawSetShadow(BlackJackBox[5], 1);
	TextDrawUseBox(BlackJackBox[5], 1);
	TextDrawBoxColor(BlackJackBox[5], 255);
	TextDrawTextSize(BlackJackBox[5], 145.000000, 38.000000);
	TextDrawSetSelectable(BlackJackBox[5], 0);

	BlackJackBox[6] = TextDrawCreate(366.000000, 331.000000, "ld_beat:chit");
	TextDrawBackgroundColor(BlackJackBox[6], 255);
	TextDrawFont(BlackJackBox[6], 4);
	TextDrawLetterSize(BlackJackBox[6], 0.500000, 1.000000);
	TextDrawColor(BlackJackBox[6], 421097642);
	TextDrawSetOutline(BlackJackBox[6], 0);
	TextDrawSetProportional(BlackJackBox[6], 1);
	TextDrawSetShadow(BlackJackBox[6], 1);
	TextDrawUseBox(BlackJackBox[6], 1);
	TextDrawBoxColor(BlackJackBox[6], 255);
	TextDrawTextSize(BlackJackBox[6], 145.000000, 38.000000);
	TextDrawSetSelectable(BlackJackBox[6], 0);

 	BlackJackDealerTitle = TextDrawCreate(284.000000, 180.000000, "Dealer");
	TextDrawBackgroundColor(BlackJackDealerTitle, 255);
	TextDrawFont(BlackJackDealerTitle, 2);
	TextDrawLetterSize(BlackJackDealerTitle, 0.280000, 1.399999);
	TextDrawColor(BlackJackDealerTitle, -1);
	TextDrawSetOutline(BlackJackDealerTitle, 1);
	TextDrawSetProportional(BlackJackDealerTitle, 1);
	TextDrawSetSelectable(BlackJackDealerTitle, 0);
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][0] = TextDrawCreate(180.000000, 258.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][0], 255);
		TextDrawFont(BlackJackCardShow[i][0], 4);
		TextDrawLetterSize(BlackJackCardShow[i][0], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][0], -1);
		TextDrawSetOutline(BlackJackCardShow[i][0], 0);
		TextDrawSetProportional(BlackJackCardShow[i][0], 1);
		TextDrawSetShadow(BlackJackCardShow[i][0], 1);
		TextDrawUseBox(BlackJackCardShow[i][0], 1);
		TextDrawBoxColor(BlackJackCardShow[i][0], 255);
		TextDrawTextSize(BlackJackCardShow[i][0], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][0], 0);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][1] = TextDrawCreate(195.000000, 258.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][1], 255);
		TextDrawFont(BlackJackCardShow[i][1], 4);
		TextDrawLetterSize(BlackJackCardShow[i][1], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][1], -1);
		TextDrawSetOutline(BlackJackCardShow[i][1], 0);
		TextDrawSetProportional(BlackJackCardShow[i][1], 1);
		TextDrawSetShadow(BlackJackCardShow[i][1], 1);
		TextDrawUseBox(BlackJackCardShow[i][1], 1);
		TextDrawBoxColor(BlackJackCardShow[i][1], 255);
		TextDrawTextSize(BlackJackCardShow[i][1], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][1], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][2] = TextDrawCreate(210.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][2], 255);
		TextDrawFont(BlackJackCardShow[i][2], 4);
		TextDrawLetterSize(BlackJackCardShow[i][2], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][2], -1);
		TextDrawSetOutline(BlackJackCardShow[i][2], 0);
		TextDrawSetProportional(BlackJackCardShow[i][2], 1);
		TextDrawSetShadow(BlackJackCardShow[i][2], 1);
		TextDrawUseBox(BlackJackCardShow[i][2], 1);
		TextDrawBoxColor(BlackJackCardShow[i][2], 255);
		TextDrawTextSize(BlackJackCardShow[i][2], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][2], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][3] = TextDrawCreate(225.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][3], 255);
		TextDrawFont(BlackJackCardShow[i][3], 4);
		TextDrawLetterSize(BlackJackCardShow[i][3], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][3], -1);
		TextDrawSetOutline(BlackJackCardShow[i][3], 0);
		TextDrawSetProportional(BlackJackCardShow[i][3], 1);
		TextDrawSetShadow(BlackJackCardShow[i][3], 1);
		TextDrawUseBox(BlackJackCardShow[i][3], 1);
		TextDrawBoxColor(BlackJackCardShow[i][3], 255);
		TextDrawTextSize(BlackJackCardShow[i][3], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][3], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][4] = TextDrawCreate(240.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][4], 255);
		TextDrawFont(BlackJackCardShow[i][4], 4);
		TextDrawLetterSize(BlackJackCardShow[i][4], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][4], -1);
		TextDrawSetOutline(BlackJackCardShow[i][4], 0);
		TextDrawSetProportional(BlackJackCardShow[i][4], 1);
		TextDrawSetShadow(BlackJackCardShow[i][4], 1);
		TextDrawUseBox(BlackJackCardShow[i][4], 1);
		TextDrawBoxColor(BlackJackCardShow[i][4], 255);
		TextDrawTextSize(BlackJackCardShow[i][4], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][4], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][5] = TextDrawCreate(342.000000, 258.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][5], 255);
		TextDrawFont(BlackJackCardShow[i][5], 4);
		TextDrawLetterSize(BlackJackCardShow[i][5], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][5], -1);
		TextDrawSetOutline(BlackJackCardShow[i][5], 0);
		TextDrawSetProportional(BlackJackCardShow[i][5], 1);
		TextDrawSetShadow(BlackJackCardShow[i][5], 1);
		TextDrawUseBox(BlackJackCardShow[i][5], 1);
		TextDrawBoxColor(BlackJackCardShow[i][5], 255);
		TextDrawTextSize(BlackJackCardShow[i][5], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][5], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][6] = TextDrawCreate(357.000000, 258.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][6], 255);
		TextDrawFont(BlackJackCardShow[i][6], 4);
		TextDrawLetterSize(BlackJackCardShow[i][6], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][6], -1);
		TextDrawSetOutline(BlackJackCardShow[i][6], 0);
		TextDrawSetProportional(BlackJackCardShow[i][6], 1);
		TextDrawSetShadow(BlackJackCardShow[i][6], 1);
		TextDrawUseBox(BlackJackCardShow[i][6], 1);
		TextDrawBoxColor(BlackJackCardShow[i][6], 255);
		TextDrawTextSize(BlackJackCardShow[i][6], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][6], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][7] = TextDrawCreate(372.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][7], 255);
		TextDrawFont(BlackJackCardShow[i][7], 4);
		TextDrawLetterSize(BlackJackCardShow[i][7], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][7], -1);
		TextDrawSetOutline(BlackJackCardShow[i][7], 0);
		TextDrawSetProportional(BlackJackCardShow[i][7], 1);
		TextDrawSetShadow(BlackJackCardShow[i][7], 1);
		TextDrawUseBox(BlackJackCardShow[i][7], 1);
		TextDrawBoxColor(BlackJackCardShow[i][7], 255);
		TextDrawTextSize(BlackJackCardShow[i][7], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][7], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][8] = TextDrawCreate(387.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][8], 255);
		TextDrawFont(BlackJackCardShow[i][8], 4);
		TextDrawLetterSize(BlackJackCardShow[i][8], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][8], -1);
		TextDrawSetOutline(BlackJackCardShow[i][8], 0);
		TextDrawSetProportional(BlackJackCardShow[i][8], 1);
		TextDrawSetShadow(BlackJackCardShow[i][8], 1);
		TextDrawUseBox(BlackJackCardShow[i][8], 1);
		TextDrawBoxColor(BlackJackCardShow[i][8], 255);
		TextDrawTextSize(BlackJackCardShow[i][8], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][8], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][9] = TextDrawCreate(402.000000, 258.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][9], 255);
		TextDrawFont(BlackJackCardShow[i][9], 4);
		TextDrawLetterSize(BlackJackCardShow[i][9], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][9], -1);
		TextDrawSetOutline(BlackJackCardShow[i][9], 0);
		TextDrawSetProportional(BlackJackCardShow[i][9], 1);
		TextDrawSetShadow(BlackJackCardShow[i][9], 1);
		TextDrawUseBox(BlackJackCardShow[i][9], 1);
		TextDrawBoxColor(BlackJackCardShow[i][9], 255);
		TextDrawTextSize(BlackJackCardShow[i][9], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][9], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][10] = TextDrawCreate(268.000000, 124.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][10], 255);
		TextDrawFont(BlackJackCardShow[i][10], 4);
		TextDrawLetterSize(BlackJackCardShow[i][10], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][10], -1);
		TextDrawSetOutline(BlackJackCardShow[i][10], 0);
		TextDrawSetProportional(BlackJackCardShow[i][10], 1);
		TextDrawSetShadow(BlackJackCardShow[i][10], 1);
		TextDrawUseBox(BlackJackCardShow[i][10], 1);
		TextDrawBoxColor(BlackJackCardShow[i][10], 255);
		TextDrawTextSize(BlackJackCardShow[i][10], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][10], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][11] = TextDrawCreate(283.000000, 124.000000, "ld_card:cdback");
		TextDrawBackgroundColor(BlackJackCardShow[i][11], 255);
		TextDrawFont(BlackJackCardShow[i][11], 4);
		TextDrawLetterSize(BlackJackCardShow[i][11], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][11], -1);
		TextDrawSetOutline(BlackJackCardShow[i][11], 0);
		TextDrawSetProportional(BlackJackCardShow[i][11], 1);
		TextDrawSetShadow(BlackJackCardShow[i][11], 1);
		TextDrawUseBox(BlackJackCardShow[i][11], 1);
		TextDrawBoxColor(BlackJackCardShow[i][11], 255);
		TextDrawTextSize(BlackJackCardShow[i][11], 45.000000, 55.000000);
		TextDrawSetSelectable(BlackJackCardShow[i][11], 0);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
	    BlackJackCardShow[i][12] = TextDrawCreate(298.000000, 124.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][12], 255);
		TextDrawFont(BlackJackCardShow[i][12], 4);
		TextDrawLetterSize(BlackJackCardShow[i][12], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][12], -1);
		TextDrawSetOutline(BlackJackCardShow[i][12], 0);
		TextDrawSetProportional(BlackJackCardShow[i][12], 1);
		TextDrawSetShadow(BlackJackCardShow[i][12], 1);
		TextDrawUseBox(BlackJackCardShow[i][12], 1);
		TextDrawBoxColor(BlackJackCardShow[i][12], 255);
		TextDrawTextSize(BlackJackCardShow[i][12], 45.000000, 55.000000);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][13] = TextDrawCreate(313.000000, 124.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][13], 255);
		TextDrawFont(BlackJackCardShow[i][13], 4);
		TextDrawLetterSize(BlackJackCardShow[i][13], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][13], -1);
		TextDrawSetOutline(BlackJackCardShow[i][13], 0);
		TextDrawSetProportional(BlackJackCardShow[i][13], 1);
		TextDrawSetShadow(BlackJackCardShow[i][13], 1);
		TextDrawUseBox(BlackJackCardShow[i][13], 1);
		TextDrawBoxColor(BlackJackCardShow[i][13], 255);
		TextDrawTextSize(BlackJackCardShow[i][13], 45.000000, 55.000000);
	}
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackCardShow[i][14] = TextDrawCreate(328.000000, 124.000000, "_");
		TextDrawBackgroundColor(BlackJackCardShow[i][14], 255);
		TextDrawFont(BlackJackCardShow[i][14], 4);
		TextDrawLetterSize(BlackJackCardShow[i][14], 0.500000, 1.000000);
		TextDrawColor(BlackJackCardShow[i][14], -1);
		TextDrawSetOutline(BlackJackCardShow[i][14], 0);
		TextDrawSetProportional(BlackJackCardShow[i][14], 1);
		TextDrawSetShadow(BlackJackCardShow[i][14], 1);
		TextDrawUseBox(BlackJackCardShow[i][14], 1);
		TextDrawBoxColor(BlackJackCardShow[i][14], 255);
		TextDrawTextSize(BlackJackCardShow[i][14], 45.000000, 55.000000);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackGamerShow[i][0] = TextDrawCreate(180.000000, 314.000000, "Empty");
		TextDrawBackgroundColor(BlackJackGamerShow[i][0], 255);
		TextDrawFont(BlackJackGamerShow[i][0], 2);
		TextDrawLetterSize(BlackJackGamerShow[i][0], 0.280000, 1.400000);
		TextDrawColor(BlackJackGamerShow[i][0], -1);
		TextDrawSetOutline(BlackJackGamerShow[i][0], 1);
		TextDrawSetProportional(BlackJackGamerShow[i][0], 1);
		TextDrawSetSelectable(BlackJackGamerShow[i][0], 0);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackGamerShow[i][1] = TextDrawCreate(342.000000, 314.000000, "Empty");
		TextDrawBackgroundColor(BlackJackGamerShow[i][1], 255);
		TextDrawFont(BlackJackGamerShow[i][1], 2);
		TextDrawLetterSize(BlackJackGamerShow[i][1], 0.280000, 1.400000);
		TextDrawColor(BlackJackGamerShow[i][1], -1);
		TextDrawSetOutline(BlackJackGamerShow[i][1], 1);
		TextDrawSetProportional(BlackJackGamerShow[i][1], 1);
		TextDrawSetSelectable(BlackJackGamerShow[i][1], 0);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
  		BlackJackBetShow[i][0] = TextDrawCreate(132.000000, 314.000000, "_");
		TextDrawBackgroundColor(BlackJackBetShow[i][0], 255);
		TextDrawFont(BlackJackBetShow[i][0], 1);
		TextDrawLetterSize(BlackJackBetShow[i][0], 0.299998, 1.399999);
		TextDrawColor(BlackJackBetShow[i][0], 16711935);
		TextDrawSetOutline(BlackJackBetShow[i][0], 1);
		TextDrawSetProportional(BlackJackBetShow[i][0], 1);
		TextDrawSetSelectable(BlackJackBetShow[i][0], 0);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
	    BlackJackBetShow[i][1] = TextDrawCreate(294.000000, 314.000000, "_");
		TextDrawBackgroundColor(BlackJackBetShow[i][1], 255);
		TextDrawFont(BlackJackBetShow[i][1], 1);
		TextDrawLetterSize(BlackJackBetShow[i][1], 0.300000, 1.399999);
		TextDrawColor(BlackJackBetShow[i][1], 16711935);
		TextDrawSetOutline(BlackJackBetShow[i][1], 1);
		TextDrawSetProportional(BlackJackBetShow[i][1], 1);
		TextDrawSetSelectable(BlackJackBetShow[i][1], 0);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackPointsShow[i][0] = TextDrawCreate(160.000000, 254.000000, "_");
		TextDrawBackgroundColor(BlackJackPointsShow[i][0], 255);
		TextDrawFont(BlackJackPointsShow[i][0], 2);
		TextDrawLetterSize(BlackJackPointsShow[i][0], 0.380000, 1.400000);
		TextDrawColor(BlackJackPointsShow[i][0], -1);
		TextDrawSetOutline(BlackJackPointsShow[i][0], 0);
		TextDrawSetProportional(BlackJackPointsShow[i][0], 1);
		TextDrawSetShadow(BlackJackPointsShow[i][0], 1);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackPointsShow[i][1] = TextDrawCreate(322.000000, 254.000000, "_");
		TextDrawBackgroundColor(BlackJackPointsShow[i][1], 255);
		TextDrawFont(BlackJackPointsShow[i][1], 2);
		TextDrawLetterSize(BlackJackPointsShow[i][1], 0.380000, 1.400000);
		TextDrawColor(BlackJackPointsShow[i][1], -1);
		TextDrawSetOutline(BlackJackPointsShow[i][1], 0);
		TextDrawSetProportional(BlackJackPointsShow[i][1], 1);
		TextDrawSetShadow(BlackJackPointsShow[i][1], 1);
	}
	for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
		BlackJackPointsShow[i][2] = TextDrawCreate(248.000000, 120.000000, "_");
		TextDrawBackgroundColor(BlackJackPointsShow[i][2], 255);
		TextDrawFont(BlackJackPointsShow[i][2], 2);
		TextDrawLetterSize(BlackJackPointsShow[i][2], 0.380000, 1.400000);
		TextDrawColor(BlackJackPointsShow[i][2], -1);
		TextDrawSetOutline(BlackJackPointsShow[i][2], 0);
		TextDrawSetProportional(BlackJackPointsShow[i][2], 1);
		TextDrawSetShadow(BlackJackPointsShow[i][2], 1);
	}
	BlackJackSetBet = TextDrawCreate(160.000000, 343.000000, "Set Bet");
	TextDrawTextSize(BlackJackSetBet, 224.000000, 14.000000);
	TextDrawBackgroundColor(BlackJackSetBet, 255);
	TextDrawFont(BlackJackSetBet, 3);
	TextDrawLetterSize(BlackJackSetBet, 0.479999, 1.299998);
	TextDrawColor(BlackJackSetBet, -1);
	TextDrawSetOutline(BlackJackSetBet, 0);
	TextDrawSetProportional(BlackJackSetBet, 1);
	TextDrawSetShadow(BlackJackSetBet, 1);
	TextDrawSetSelectable(BlackJackSetBet, 1);

	BlackJackHit = TextDrawCreate(302.000000, 343.000000, "Hit");
	TextDrawTextSize(BlackJackHit, 326.000000, 14.000000);
	TextDrawBackgroundColor(BlackJackHit, 255);
	TextDrawFont(BlackJackHit, 3);
	TextDrawLetterSize(BlackJackHit, 0.499998, 1.299999);
	TextDrawColor(BlackJackHit, -1);
	TextDrawSetOutline(BlackJackHit, 0);
	TextDrawSetProportional(BlackJackHit, 1);
	TextDrawSetShadow(BlackJackHit, 1);
	TextDrawSetSelectable(BlackJackHit, 1);

	BlackJackDouble = TextDrawCreate(412.000000, 343.000000, "Double");
	TextDrawTextSize(BlackJackDouble, 464.000000, 14.000000);
	TextDrawBackgroundColor(BlackJackDouble, 255);
	TextDrawFont(BlackJackDouble, 3);
	TextDrawLetterSize(BlackJackDouble, 0.479999, 1.299999);
	TextDrawColor(BlackJackDouble, -1);
	TextDrawSetOutline(BlackJackDouble, 0);
	TextDrawSetProportional(BlackJackDouble, 1);
	TextDrawSetShadow(BlackJackDouble, 1);
	TextDrawSetSelectable(BlackJackDouble, 1);

    BlackJackExit = TextDrawCreate(486.000000, 100.000000, "LD_Beat:cross");
	TextDrawBackgroundColor(BlackJackExit, 255);
	TextDrawFont(BlackJackExit, 4);
	TextDrawLetterSize(BlackJackExit, 0.500000, 1.000000);
	TextDrawColor(BlackJackExit, -1);
	TextDrawSetOutline(BlackJackExit, 0);
	TextDrawSetProportional(BlackJackExit, 1);
	TextDrawSetShadow(BlackJackExit, 1);
	TextDrawUseBox(BlackJackExit, 1);
	TextDrawBoxColor(BlackJackExit, 255);
	TextDrawTextSize(BlackJackExit, 25.000000, 20.000000);
	TextDrawSetSelectable(BlackJackExit, 1);
/*	//�� �����������
	hello_server[0] = TextDrawCreate(516.5000, 247.7500, "WELCOME_TO"); // �����
	TextDrawLetterSize(hello_server[0], 0.3149, 1.9280);
	TextDrawAlignment(hello_server[0], 1);
	TextDrawColor(hello_server[0], -1);
	TextDrawBackgroundColor(hello_server[0], 255);
	TextDrawFont(hello_server[0], 2);
	TextDrawSetProportional(hello_server[0], 1);
	TextDrawSetShadow(hello_server[0], 0);

	hello_server[1] = TextDrawCreate(533.5000, 265.6875, "TU"); // �����
	TextDrawLetterSize(hello_server[1], 0.3149, 1.9280);
	TextDrawAlignment(hello_server[1], 1);
	TextDrawColor(hello_server[1], -1);
	TextDrawBackgroundColor(hello_server[1], 255);
	TextDrawFont(hello_server[1], 2);
	TextDrawSetProportional(hello_server[1], 1);
	TextDrawSetShadow(hello_server[1], 0);

	hello_server[2] = TextDrawCreate(549.3961, 265.6875, "XE"); // �����
	TextDrawLetterSize(hello_server[2], 0.3149, 1.9278);
	TextDrawAlignment(hello_server[2], 1);
	TextDrawColor(hello_server[2], 65535);
	TextDrawBackgroundColor(hello_server[2], 255);
	TextDrawFont(hello_server[2], 2);
	TextDrawSetProportional(hello_server[2], 0);
	TextDrawSetShadow(hello_server[2], 0);

	hello_server[3] = TextDrawCreate(565.4921, 265.6875, "DO"); // �����
	TextDrawLetterSize(hello_server[3], 0.3149, 1.9280);
	TextDrawAlignment(hello_server[3], 1);
	TextDrawColor(hello_server[3], -16055297);
	TextDrawBackgroundColor(hello_server[3], 255);
	TextDrawFont(hello_server[3], 2);
	TextDrawSetProportional(hello_server[3], 1);
	TextDrawSetShadow(hello_server[3], 0);

	hello_server[4] = TextDrawCreate(581.5000, 275.1878, "Box"); // �����
	TextDrawLetterSize(hello_server[4], 0.0000, 0.0498);
	TextDrawTextSize(hello_server[4], 592.0000, 0.0000);
	TextDrawAlignment(hello_server[4], 1);
	TextDrawColor(hello_server[4], -1);
	TextDrawUseBox(hello_server[4], 1);
	TextDrawBoxColor(hello_server[4], 65535);
	TextDrawBackgroundColor(hello_server[4], 255);
	TextDrawFont(hello_server[4], 1);
	TextDrawSetProportional(hello_server[4], 1);
	TextDrawSetShadow(hello_server[4], 0);

	hello_server[5] = TextDrawCreate(581.5000, 278.4880, "Box"); // �����
	TextDrawLetterSize(hello_server[5], 0.0000, 0.0498);
	TextDrawTextSize(hello_server[5], 592.0000, 0.0000);
	TextDrawAlignment(hello_server[5], 1);
	TextDrawColor(hello_server[5], -1);
	TextDrawUseBox(hello_server[5], 1);
	TextDrawBoxColor(hello_server[5], -316538625);
	TextDrawBackgroundColor(hello_server[5], 255);
	TextDrawFont(hello_server[5], 1);
	TextDrawSetProportional(hello_server[5], 1);
	TextDrawSetShadow(hello_server[5], 0);

	hello_server[6] = TextDrawCreate(552.0000, 284.5000, "Server 01"); // �����
	TextDrawLetterSize(hello_server[6], 0.2826, 1.6568);
	TextDrawAlignment(hello_server[6], 1);
	TextDrawColor(hello_server[6], -1);
	TextDrawBackgroundColor(hello_server[6], 255);
	TextDrawFont(hello_server[6], 2);
	TextDrawSetProportional(hello_server[6], 1);
	TextDrawSetShadow(hello_server[6], 0);

	hello_server[7] = TextDrawCreate(579.3001, 269.0874, "LD_SPAC:white"); // �����
	TextDrawTextSize(hello_server[7], 14.2699, 4.0000);
	TextDrawAlignment(hello_server[7], 1);
	TextDrawColor(hello_server[7], -1);
	TextDrawBackgroundColor(hello_server[7], 255);
	TextDrawFont(hello_server[7], 4);
	TextDrawSetProportional(hello_server[7], 0);
	TextDrawSetShadow(hello_server[7], 0);*/
	//**************************************************************************/
	Create3DTextLabel("Military inspection",0xFFFFFFFFF,1174.2035,1354.4834,10.9219,10.0,0,0);
	Create3DTextLabel("{009900}Dice:\n{FF8800}/dice", -1, 1127.0945,-1.5882,1000.6797, 20, 1, 1);
	Create3DTextLabel("{009900}Dice:\n{FF8800}/dice", -1, 1133.3717,-1.6181,1000.6797, 20, 1, 1);
	Create3DTextLabel("General's reception room",0xFFFFFFFFF,1173.3198,1348.3237,10.9219,10.0,0,0);
	Create3DTextLabel("Medical checkup",0xFFFFFFFFF,1174.2035,1358.4862,10.9219,10.0,0,0);
	Create3DTextLabel("  Military enlistment office   ",0x9500FFFF,1168.6603,1363.4364,10.8203,17.0,0,0);
	Create3DTextLabel("Use - \'ALT\'",0x696969FF,1172.1096,1357.7673,10.9219,2.0,0,0);
	Create3DTextLabel("REGISTER FOR PAINTBALL", COLOR_ORANGE, 822.0084,1.8883,1004.1797, 25.0, 3, 0);
	//Create3DTextLabel("/adonate\nADMIN STORE", COLOR_RED, 1538.3015,-1361.0278,170.7159, 25.0, 0, 0);
	fight = CreatePickupAC(1239,23,765.6758,14.3615,1000.7010);
	parashut = CreatePickupAC(1274,23,2428.0544,-741.8817,1422.5161);
	// Removing The Russian Spawn
/*	CreateDynamicObject(4019, 1777.83594, -1773.90625, 12.52344,   356.85840, 0.00000, 3.14159);
    CreateDynamicObject(3986, 1719.74219, -1770.78125, 23.42969,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(4012, 1777.43750, -1782.30469, 12.62500,   356.85840, 0.00000, 3.14159);
    CreateDynamicObject(3983, 1722.50000, -1775.39844, 14.51563,   356.85840, 0.00000, 3.14159);*/
	// Top ghetto players
	CreateDynamicObject(8132, 2428.60571, -1647.32458, 14.97850, 0.00000, 0.00000, 281.41760);
	CreateDynamicObject(14467, 2434.99023, -1648.09570, 15.10990, 0.00000, 0.00000, 325.51569);
	CreateDynamicObject(2692, 2423.43628, -1649.38306, 13.26140, 0.00000, 0.00000, 26.09580);
	CreateDynamicObject(8132, 1709.84241, -2120.70776, 14.89730, 0.00000, 0.00000, 281.97971);
	CreateDynamicObject(14467, 1713.52673, -2119.16553, 15.21000, 0.00000, 0.00000, 233.44949);
	CreateDynamicObject(2693, 1706.42712, -2119.12549, 13.24370, 0.00000, 0.00000, 161.65440);
	CreateDynamicObject(8132, 2172.49365, -1787.27954, 14.96020, 0.00000, 0.00000, 281.70074);
	CreateDynamicObject(2693, 2169.00293, -1789.40906, 13.13800, 0.00000, 0.00000, 26.98710);
	CreateDynamicObject(14467, 2176.77075, -1789.50757, 14.99470, 0.00000, 0.00000, 359.47211);
	CreateDynamicObject(8132, 2746.57642, -1184.94031, 70.94600, 0.00000, 0.00000, 191.66110);
	CreateDynamicObject(14467, 2744.34863, -1189.19763, 70.94040, 0.00000, 0.00000, 269.62369);
	CreateDynamicObject(2692, 2744.30029, -1181.10315, 69.14140, 0.00000, 0.00000, 288.00381);
	CreateDynamicObject(2693, 2744.53613, -1182.36121, 69.07800, 0.00000, 0.00000, 262.20200);
	CreateDynamicObject(8132, 2034.55286, -1143.73511, 26.03290, -1.38000, 0.00000, 282.87189);
	CreateDynamicObject(14467, 2028.88220, -1141.78479, 25.92340, 0.00000, -2.20800, 160.76126);
	CreateDynamicObject(2693, 2039.17371, -1142.19299, 24.08490, 0.00000, -0.28070, 204.07320);
	// Citizen Spawn Mappings
    CreateDynamicObject(2692, 1687.35193, -2263.24707, 13.19940,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8132, 1682.95764, -2265.93384, 15.08120,   0.00000, 0.00000, 102.00000);
    CreateDynamicObject(14467, 1678.49243, -2263.23682, 15.17780,   0.00000, 0.00000, 135.00000);
	// Removeing The Russian Spawn From The server..
/*    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.22958,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.00957,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18980, 1749.83545, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1774.84424, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(19353, 1724.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1721.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1718.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19479, 1721.29175, -1773.23523, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1721.18164, -1773.24524, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1790.91138, -1773.24524, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19479, 1791.02148, -1773.23523, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19353, 1715.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1751.79578, -1811.39197, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(19353, 1712.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1718.92554, -1741.78589, 11.98836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1731.73596, -1806.01050, 12.03837,   0.00000, 90.00000, 164.90004);
    CreateDynamicObject(19445, 1711.34851, -1757.98523, 10.77574,   -0.00002, 0.00000, -89.99993);
    CreateDynamicObject(19353, 1709.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1706.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19445, 1806.84106, -1771.75745, 10.57074,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19834, 1702.94470, -1771.75000, 12.32579,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1775.93665, -1817.89246, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(19834, 1700.61475, -1771.75000, 12.32579,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1812.14709, -1766.48669, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1699.07642, -1766.48669, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1707.26575, -1802.75696, 12.03837,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1812.14709, -1791.49585, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1699.07642, -1791.46667, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(738, 1710.06104, -1724.62805, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18980, 1795.08704, -1823.01672, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(18980, 1799.45325, -1822.79565, 12.03837,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(700, 1806.10510, -1818.21838, 12.53269,   0.00000, 0.00000, 42.10002);
    CreateDynamicObject(18980, 1812.15210, -1814.07471, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(738, 1757.10303, -1681.09900, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19353, 1836.23206, -1814.48303, 5.18600,   0.00000, 0.00000, 257.99744);
    CreateDynamicObject(19353, 1836.72107, -1814.58704, 5.18600,   0.00000, 0.00000, 257.99744);
    CreateDynamicObject(738, 1655.85400, -1740.00305, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(738, 1681.64502, -1692.78601, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(738, 1696.56702, -1648.70898, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.22958,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.00957,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18980, 1749.83545, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1774.84424, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(19353, 1724.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1721.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1718.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19479, 1721.29175, -1773.23523, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1721.18164, -1773.24524, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1790.91138, -1773.24524, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19479, 1791.02148, -1773.23523, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19353, 1715.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1751.79578, -1811.39197, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(19353, 1712.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1718.92554, -1741.78589, 11.98836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1731.73596, -1806.01050, 12.03837,   0.00000, 90.00000, 164.90004);
    CreateDynamicObject(19445, 1711.34851, -1757.98523, 10.77574,   -0.00002, 0.00000, -89.99993);
    CreateDynamicObject(19353, 1709.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1706.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19445, 1806.84106, -1771.75745, 10.57074,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19834, 1702.94470, -1771.75000, 12.32579,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1775.93665, -1817.89246, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(19834, 1700.61475, -1771.75000, 12.32579,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1812.14709, -1766.48669, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1699.07642, -1766.48669, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1707.26575, -1802.75696, 12.03837,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1812.14709, -1791.49585, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(18980, 1699.07642, -1791.46667, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(738, 1710.06104, -1724.62805, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18980, 1795.08704, -1823.01672, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(18980, 1799.45325, -1822.79565, 12.03837,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(700, 1806.10510, -1818.21838, 12.53269,   0.00000, 0.00000, 42.10002);
    CreateDynamicObject(18980, 1812.15210, -1814.07471, 12.03837,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(738, 1757.10303, -1681.09900, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19353, 1836.23206, -1814.48303, 5.18600,   0.00000, 0.00000, 257.99744);
    CreateDynamicObject(19353, 1836.72107, -1814.58704, 5.18600,   0.00000, 0.00000, 257.99744);
    CreateDynamicObject(738, 1655.85400, -1740.00305, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(738, 1681.64502, -1692.78601, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(738, 1696.56702, -1648.70898, 12.72200,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.22958,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19477, 1755.80908, -1753.75867, 13.00957,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18980, 1749.83545, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1774.84424, -1741.78589, 12.03836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(19353, 1724.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1721.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1718.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19479, 1721.29175, -1773.23523, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1721.18164, -1773.24524, 32.31329,   0.00003, 0.00000, 89.99991);
    CreateDynamicObject(19479, 1790.91138, -1773.24524, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19479, 1791.02148, -1773.23523, 32.31329,   0.00002, 0.00000, 89.99993);
    CreateDynamicObject(19353, 1715.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1751.79578, -1811.39197, 12.03837,   0.00000, 90.00000, 165.00012);
    CreateDynamicObject(19353, 1712.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(18980, 1718.92554, -1741.78589, 11.98836,   0.00000, 90.00000, 180.00000);
    CreateDynamicObject(18980, 1731.73596, -1806.01050, 12.03837,   0.00000, 90.00000, 164.90004);
    CreateDynamicObject(19445, 1711.34851, -1757.98523, 10.77574,   -0.00002, 0.00000, -89.99993);
    CreateDynamicObject(19353, 1709.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19353, 1706.61743, -1756.29663, 10.77074,   0.00000, -0.00003, 179.99982);
    CreateDynamicObject(19445, 1806.84106, -1771.75745, 10.57074,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19834, 1702.94470, -1771.75000, 12.32579,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1775.93665, -1817.89246, 12.03837,   0.00000, 90.00000, 165.00012);
*/
    //================================ [ city hall parkings ] =============================//
    new mayor[88];
    mayor[42] = CreateDynamicObject(19552, 1496.93506, -1760.41101, 12.36600, 0.00000, 0.00000, 0.00000); // ????????
    SetDynamicObjectMaterial(mayor[42], 0, 8390, "vegasemulticar", "ws_carpark2", 0xFFFFFFFF);
    mayor[0] = CreateDynamicObject(19552, 1494.97302, -1656.31006, 12.35600, 0.00000, 0.00000, 0.00000); // ????
    SetDynamicObjectMaterial(mayor[0], 0, 4593, "buildblk55", "sl_plazatile01", 0xFFFFFFFF);
    CreateDynamicObject(18759, 5512.34229, 1244.40442, 22.18864, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(5706, 135.93359, 1953.40723, 23.30762, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14602, 374.27539, -60.06250, 1080.83801, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1226, 1533.88611, -1721.75012, 16.25723, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1257, 1536.10010, -1653.64282, 13.82607, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1226, 1534.02441, -1682.33228, 16.25723, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1553.49133, -1760.11133, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1226, 1533.99768, -1663.30945, 16.25723, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1216, 1535.82898, -1651.57007, 13.23888, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1541.96057, -1749.06262, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(738, 1555.36694, -1724.83899, 12.72200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1535.73560, -1649.93640, 12.61121, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1366, 1536.37708, -1650.20654, 13.16037, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1226, 1533.83643, -1638.90637, 16.25723, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1525.00488, -1748.95215, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1247, 1555.06006, -1675.57996, 21.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1247, 1555.06006, -1675.57996, 21.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1535.38940, -1656.95227, 12.63621, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1521.84521, -1684.46582, 12.68620, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1216, 1522.68555, -1682.52832, 13.23890, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1366, 1523.01953, -1683.73047, 13.16037, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1405.88074, -1816.17200, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1257, 1522.68164, -1680.45996, 13.82610, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1258, 1522.11707, -1676.39038, 13.20860, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(808, 1304.80005, -1724.80005, 14.30000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1494.72058, -1832.45227, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1461.44373, -1832.55933, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1509.46765, -1832.39832, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1449.82813, -1832.64185, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1553.72668, -1822.26233, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1543.96265, -1832.38794, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(738, 1655.85400, -1740.00305, 12.72200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1413.74097, -1832.73047, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(808, 1304.90002, -1764.90002, 14.30000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(808, 1304.80005, -1787.80005, 14.30000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(808, 1304.80005, -1802.30005, 14.30000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(808, 1304.90002, -1705.80005, 14.30000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1607.82373, -1602.69824, 16.49421, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(808, 1304.80005, -1690.40002, 14.30000, 0.00000, 0.00000, 0.00000);
    mayor[43] = CreateDynamicObject(18766, 1437.04895, -1718.98499, 11.95800, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[43], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[44] = CreateDynamicObject(18766, 1439.55005, -1724.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[44], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[45] = CreateDynamicObject(18766, 1437.05005, -1710.55103, 11.89000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[45], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53101, -1720.22900, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1439.53003, -1716.07800, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[46] = CreateDynamicObject(18766, 1437.05005, -1701.29602, 11.95800, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[46], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[47] = CreateDynamicObject(18766, 1437.05005, -1697.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[47], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1704.19702, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1439.53003, -1700.03003, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1443.70203, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[48] = CreateDynamicObject(18766, 1437.05005, -1687.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[48], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1695.87598, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1439.53003, -1691.72302, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1441.61902, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1687.55896, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[49] = CreateDynamicObject(18766, 1437.05005, -1677.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[49], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1443.70203, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1447.85706, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1683.39197, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[50] = CreateDynamicObject(18766, 1449.55530, -1724.78076, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[50], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1679.22900, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19121, 1439.39502, -1675.79797, 13.06700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1445.78796, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19121, 1439.39502, -1674.29102, 13.06700, 0.00000, 0.00000, 0.00000);
    mayor[51] = CreateDynamicObject(18766, 1437.05005, -1667.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[51], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(1232, 1444.10400, -1687.19202, 14.99800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1447.85706, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1670.93201, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1452.03198, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[1] = CreateDynamicObject(3578, 1444.55298, -1682.26501, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[1], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1666.78198, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1549, 1443.84094, -1679.57202, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1280, 1443.89648, -1677.89648, 12.77400, 0.00000, 0.00000, 0.00000);
    mayor[52] = CreateDynamicObject(18766, 1437.05005, -1657.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[52], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1449.93994, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1662.63501, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1452.03198, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1658.47498, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1456.17700, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[2] = CreateDynamicObject(3578, 1444.56702, -1671.99902, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[2], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[3] = CreateDynamicObject(3578, 1449.44397, -1687.19702, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[3], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(1232, 1444.12598, -1667.35901, 14.99800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1654.30505, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[53] = CreateDynamicObject(18766, 1437.05005, -1647.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[53], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1454.10303, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[54] = CreateDynamicObject(18766, 1459.55005, -1724.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[54], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1650.13904, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[4] = CreateDynamicObject(3578, 1444.57800, -1661.70703, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[4], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1456.17700, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1460.35901, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1443.84094, -1657.78296, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(712, 1451.27600, -1679.09399, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1645.98096, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1280, 1443.89600, -1656.19702, 12.76900, 0.00000, 0.00000, 0.00000);
    mayor[55] = CreateDynamicObject(18766, 1437.05005, -1637.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[55], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1458.26294, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1641.81995, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1290, 1458.26294, -1697.72400, 18.37500, 0.00000, 0.00000, 0.00000);
    mayor[5] = CreateDynamicObject(3578, 1444.58997, -1651.41003, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[5], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1460.35901, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1637.66504, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1464.52795, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[6] = CreateDynamicObject(3578, 1457.95605, -1687.20801, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[6], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(712, 1451.27600, -1665.11902, 21.77700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1458.76794, -1687.90100, 12.75300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1232, 1444.14600, -1644.81604, 14.99800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1633.50000, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[56] = CreateDynamicObject(18766, 1437.05005, -1627.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[56], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1462.43506, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1460.34302, -1687.83997, 12.37300, 0.00000, 0.00000, 0.00000);
    mayor[57] = CreateDynamicObject(18766, 1467.86401, -1724.79895, 11.95800, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[57], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[7] = CreateDynamicObject(3578, 1444.60400, -1641.11804, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[7], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1629.33301, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1464.52795, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19543, 1451.88501, -1656.18298, 12.93000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1468.69202, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1443.84094, -1636.20398, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1280, 1443.89600, -1634.57202, 12.75300, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.54407, -1625.15173, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(712, 1451.27600, -1649.90002, 21.96600, 0.00000, 0.00000, 0.00000);
    mayor[58] = CreateDynamicObject(18766, 1471.32202, -1724.79895, 11.89000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[58], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1466.60303, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[59] = CreateDynamicObject(18766, 1437.05005, -1617.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[59], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1439.53003, -1621.00000, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[8] = CreateDynamicObject(3578, 1444.61499, -1630.82104, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[8], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[9] = CreateDynamicObject(3578, 1444.61902, -1630.02698, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[9], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1468.69202, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1616.83997, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1232, 1444.18506, -1625.19604, 14.98900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1470.75195, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[10] = CreateDynamicObject(3578, 1468.24902, -1687.21997, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[10], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(711, 1464.92004, -1673.10498, 18.34400, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.52795, -1612.66504, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[60] = CreateDynamicObject(18766, 1437.05005, -1607.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[60], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1472.83398, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(712, 1451.27600, -1634.57202, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53381, -1608.49548, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[11] = CreateDynamicObject(3578, 1449.53601, -1625.13904, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[11], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1474.89905, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1439.53003, -1604.35486, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1232, 1473.62500, -1687.20203, 14.99800, 0.00000, 0.00000, 0.00000);
    mayor[61] = CreateDynamicObject(18766, 1481.31396, -1724.79895, 11.89000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[61], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(711, 1464.92004, -1657.17004, 18.34400, 0.00000, 0.00000, 0.00000);
    mayor[12] = CreateDynamicObject(3578, 1473.16797, -1682.30896, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[12], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19543, 1465.83203, -1656.19702, 12.93900, 0.00000, 0.00000, 0.00000);
    mayor[62] = CreateDynamicObject(18766, 1439.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[62], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(19121, 1478.42505, -1698.05200, 12.93700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1441.61902, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 1442.83606, -1604.28003, 13.19900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1473.85205, -1677.89600, 12.76200, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1549, 1473.86694, -1676.33704, 12.37300, 0.00000, 0.00000, 90.00000);
    mayor[13] = CreateDynamicObject(3578, 1473.18201, -1672.01904, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[13], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19121, 1480.57495, -1698.05200, 12.92700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 1473.63098, -1667.39404, 15.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1457.09705, -1624.49902, 12.37300, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(711, 1464.92004, -1642.09399, 18.34400, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1445.78198, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1445.78198, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[14] = CreateDynamicObject(3578, 1458.02002, -1625.15100, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[14], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[15] = CreateDynamicObject(3578, 1473.19702, -1661.73706, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[15], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(1280, 1458.76904, -1624.54102, 12.75300, 0.00000, 0.00000, 270.00000);
    CreateDynamicObject(970, 1484.19299, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1473.85205, -1656.20203, 12.75300, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19866, 1486.28198, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1449.94202, -1602.27405, 12.94800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1473.85596, -1654.66797, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19866, 1490.45300, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[16] = CreateDynamicObject(3578, 1473.20898, -1651.44299, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[16], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[63] = CreateDynamicObject(18766, 1491.21997, -1724.79895, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[63], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[64] = CreateDynamicObject(18766, 1449.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[64], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(1232, 1484.99597, -1687.14502, 14.98900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9833, 1458.76794, -1615.43799, 15.56500, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 1459.07605, -1615.31104, 10.43200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1488.36499, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[17] = CreateDynamicObject(3578, 1485.43005, -1682.22595, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[17], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(1549, 1484.86304, -1679.70605, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1232, 1473.65198, -1644.83801, 15.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1484.81799, -1677.99304, 12.75300, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1454.10205, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1490.45300, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[18] = CreateDynamicObject(3578, 1473.22302, -1641.15198, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[18], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1494.60803, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[19] = CreateDynamicObject(3578, 1485.44202, -1671.95398, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[19], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[20] = CreateDynamicObject(3578, 1468.31897, -1625.16296, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[20], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1492.52197, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[21] = CreateDynamicObject(3578, 1490.33496, -1687.15002, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[21], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[67] = CreateDynamicObject(18766, 1469.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[67], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[28] = CreateDynamicObject(3578, 1485.49194, -1630.76697, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[28], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[29] = CreateDynamicObject(3578, 1485.49194, -1630.03003, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[29], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(11489, 1479.14905, -1615.54395, 12.36800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11489, 1479.16199, -1614.56702, 12.36600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 1485.06299, -1625.19397, 14.98900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1474.87500, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(711, 1493.45801, -1642.09399, 18.34400, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19121, 1478.51294, -1602.18701, 13.06700, 0.00000, 0.00000, 0.00000);
    mayor[30] = CreateDynamicObject(3578, 1490.41797, -1625.12500, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[30], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19121, 1480.47498, -1602.18701, 13.06700, 0.00000, 0.00000, 0.00000);
    mayor[68] = CreateDynamicObject(18766, 1479.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[68], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1484.21497, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1340, 1487.22998, -1603.92798, 13.49100, 0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1549, 1498.13696, -1624.54395, 12.37300, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1488.36804, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[31] = CreateDynamicObject(3578, 1499.06201, -1625.13599, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[31], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(1280, 1499.82202, -1624.56201, 12.75300, 0.00000, 0.00000, 270.00000);
    mayor[69] = CreateDynamicObject(18766, 1489.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[69], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1492.51794, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9833, 1499.82202, -1615.43799, 15.56500, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1496.68103, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[70] = CreateDynamicObject(18766, 1499.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[70], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1502.92505, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1500.84204, -1697.72400, 18.37500, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1500.84204, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    mayor[32] = CreateDynamicObject(3578, 1500.61804, -1687.16101, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[32], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(19866, 1502.92505, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1501.41296, -1687.83997, 12.37300, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1507.06897, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1504.99304, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1507.06897, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[71] = CreateDynamicObject(18766, 1509.55005, -1724.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[71], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1509.16296, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1511.24097, -1719.76794, 11.63800, 0.00000, 0.00000, 0.00000);
    mayor[33] = CreateDynamicObject(3578, 1509.27295, -1687.17102, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[33], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(712, 1507.85498, -1679.09399, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1511.24097, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1513.33496, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1515.41602, -1719.76904, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(712, 1507.85999, -1665.11902, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19866, 1515.41602, -1700.53296, 11.63800, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19543, 1506.91797, -1656.15198, 12.93000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 1514.63403, -1687.17798, 14.98900, 0.00000, 0.00000, 0.00000);
    mayor[34] = CreateDynamicObject(3578, 1514.18896, -1682.28101, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[34], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[72] = CreateDynamicObject(18766, 1519.55005, -1724.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[72], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1517.48999, -1697.94897, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1720.22998, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1716.07800, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(712, 1507.85999, -1649.90002, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1514.89844, -1677.89648, 12.77400, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1549, 1514.88501, -1676.21997, 12.37300, 0.00000, 0.00000, 90.00000);
    mayor[35] = CreateDynamicObject(3578, 1514.20300, -1671.98804, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[35], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1704.19702, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1700.03003, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1695.87598, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1232, 1514.62903, -1667.39502, 15.00000, 0.00000, 0.00000, 0.00000);
    mayor[73] = CreateDynamicObject(18766, 1522.06897, -1718.98499, 11.95800, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[73], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1691.72302, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[74] = CreateDynamicObject(18766, 1522.06897, -1710.55103, 11.89000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[74], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[36] = CreateDynamicObject(3578, 1514.21497, -1661.71301, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[36], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1687.55896, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[75] = CreateDynamicObject(18766, 1522.06897, -1701.29602, 11.95800, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[75], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1683.39197, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[76] = CreateDynamicObject(18766, 1522.06897, -1697.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[76], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(18764, 1500.28796, -1615.31006, 10.43200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1679.22900, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(712, 1507.85498, -1634.57202, 21.96600, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 1514.89795, -1656.19897, 12.75300, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19121, 1519.65601, -1675.79797, 13.06700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, 1514.88501, -1654.59998, 12.37300, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19121, 1519.65601, -1674.29102, 13.06700, 0.00000, 0.00000, 0.00000);
    mayor[77] = CreateDynamicObject(18766, 1522.07117, -1687.31995, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[77], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[37] = CreateDynamicObject(3578, 1514.22900, -1651.41602, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[37], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1670.93201, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1666.78198, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[78] = CreateDynamicObject(18766, 1522.06897, -1677.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[78], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(1232, 1514.65100, -1644.84998, 15.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1662.63501, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[38] = CreateDynamicObject(3578, 1514.24097, -1641.11597, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[38], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1658.47498, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[39] = CreateDynamicObject(3578, 1509.35498, -1625.15100, 12.16300, 0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[39], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[79] = CreateDynamicObject(18766, 1522.06897, -1667.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[79], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1654.30505, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1500.85303, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1650.13904, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1280, 1514.89795, -1634.57800, 12.75300, 0.00000, 0.00000, 180.00000);
    mayor[80] = CreateDynamicObject(18766, 1522.06897, -1657.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[80], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(1549, 1514.88501, -1632.98303, 12.37300, 0.00000, 0.00000, 90.00000);
    mayor[40] = CreateDynamicObject(3578, 1514.25403, -1630.85303, 12.16300, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[40], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    mayor[41] = CreateDynamicObject(3578, 1514.25403, -1630.07898, 12.16100, 0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[41], 0, 5727, "sunrise04_lawn", "citywall1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1645.98096, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1641.81995, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1505.01697, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 1514.70898, -1625.17297, 14.98900, 0.00000, 0.00000, 0.00000);
    mayor[81] = CreateDynamicObject(18766, 1522.06897, -1647.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[81], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1637.66504, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1519.60205, -1633.50000, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[82] = CreateDynamicObject(18766, 1522.06897, -1637.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[82], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.59741, -1629.31360, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1509.18396, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1625.16602, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[83] = CreateDynamicObject(18766, 1509.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[83], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1621.00000, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[84] = CreateDynamicObject(18766, 1522.06897, -1627.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[84], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1513.32703, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1616.83997, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1363, 1515.77197, -1604.32898, 13.19900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1612.68506, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[85] = CreateDynamicObject(18766, 1522.06897, -1617.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[85], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(970, 1519.60205, -1608.52002, 12.94700, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1517.51001, -1602.27405, 12.94700, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1519.60205, -1604.35852, 12.94700, 0.00000, 0.00000, 90.00000);
    mayor[86] = CreateDynamicObject(18766, 1522.06897, -1607.30005, 11.95000, 90.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(mayor[86], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    mayor[87] = CreateDynamicObject(18766, 1519.55005, -1599.80005, 11.95000, 90.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(mayor[87], 0, 4570, "stolenbuild03", "sl_blokpave1", 0xFFFFFFFF);
    CreateDynamicObject(803, 1405.62231, -1757.49585, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1420.96130, -1748.81274, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3934, 1422.06299, -1790.67798, 32.43000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(803, 1442.49182, -1748.81946, 13.84119, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1557, 1438.32104, -1787.15002, 32.43000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19122, 1564.56006, -1675.23999, 60.69000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19122, 1564.56006, -1675.23999, 60.69000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1539.83008, -1602.56641, 16.49270, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(738, 1600.69800, -1739.70605, 12.72200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, 1579.64160, -1632.87219, 14.04855, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1569, 1582.60059, -1637.81738, 12.54957, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1569, 1582.60059, -1637.81738, 10.09961, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2922, 1584.33887, -1637.81738, 14.18543, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2922, 1584.33887, -1637.81738, 14.18543, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2922, 1592.77222, -1639.49597, 14.21177, 0.00000, 0.00000, -512.00000);
    CreateDynamicObject(1215, 1568.26563, -1602.63086, 16.49417, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(738, 1618.80005, -1724.91101, 12.72200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1607.92432, -1637.71704, 16.48620, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1590.70117, -1602.66309, 16.49432, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1607.91821, -1618.42078, 16.48620, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1516.84790, -1748.37598, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1530.95227, -1748.29065, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1545.63354, -1748.25464, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1553.71912, -1757.51831, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1445.54016, -1748.33862, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1428.44910, -1748.21619, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1413.54358, -1748.08765, 13.29478, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(717, 1405.38318, -1760.49561, 13.29478, 0.00000, 0.00000, 0.00000);
   // Swat Interior
    CreateDynamicObject(19389, 760.33698, -1341.55920, 10.66870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19552, 2667.44067, -2146.42798, -9689.10449,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19552, 761.87482, -1361.71265, -60.86270,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 704.59619, -1356.15735, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.76331, -1365.75537, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.76752, -1375.33667, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.27307, -1375.37158, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.10004, -1365.72729, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 714.96014, -1356.13794, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.50232, -1356.15283, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.35162, -1365.76917, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.67310, -1375.39978, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.55768, -1385.00928, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.07666, -1385.01611, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.69672, -1384.92334, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.65601, -1394.56384, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.07666, -1385.01611, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.17627, -1394.64075, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.67908, -1394.59631, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.05328, -1346.60352, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.79059, -1346.62646, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.79712, -1337.06458, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 715.13971, -1337.13477, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.59735, -1337.08545, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 736.04797, -1336.96802, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.97778, -1346.61084, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.82709, -1356.25854, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.81885, -1365.75684, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 736.06030, -1375.36536, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 736.04120, -1385.05432, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 736.09094, -1394.65063, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19552, 762.51086, -1356.72058, -57.63570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.88745, -1335.22388, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 729.28015, -1333.84766, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 732.57434, -1333.75659, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 723.12628, -1333.90198, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1507, 726.16315, -1333.95691, -60.67247,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1507, 724.68695, -1333.96289, -60.67247,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 726.20850, -1333.78918, -56.45500,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 9506.38281, -2364.60083, -4980.66016,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1502, 730.91974, -1338.34106, -60.67210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 735.79413, -1333.69824, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 737.31268, -1335.21155, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.36536, -1338.41235, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.41858, -1341.58228, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 731.97345, -1216.62988, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.47260, -1344.77368, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.51825, -1347.95483, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.57440, -1351.15894, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.63947, -1354.36646, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.70807, -1357.56458, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.70807, -1357.56458, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.77057, -1360.75989, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.86151, -1363.96057, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 730.91663, -1339.92310, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 737.86151, -1363.96057, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.89197, -1367.17395, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 737.94147, -1370.37366, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 738.00360, -1373.57324, -59.26300,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(19367, 730.88806, -1342.07776, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 732.58716, -1341.66174, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 735.78845, -1341.60938, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 730.93304, -1337.59692, -56.51210,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19367, 730.89374, -1346.80139, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.89685, -1349.52515, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.81470, -1351.40320, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.85217, -1356.11218, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.87848, -1359.12427, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.87543, -1361.73218, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 730.91882, -1366.43323, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 732.45874, -1367.91345, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 735.67633, -1367.85889, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 738.85962, -1367.81055, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 732.49805, -1351.45581, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 735.70215, -1351.39075, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 738.89203, -1351.32751, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 732.57288, -1361.07520, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 735.77393, -1361.01550, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 738.95941, -1360.93494, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 715.23047, -1335.65967, -60.67210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 730.90997, -1345.20996, -60.67210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 730.88794, -1344.54675, -56.51210,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1502, 730.84796, -1354.51733, -60.67210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 730.82666, -1353.76575, -56.51210,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1502, 730.92474, -1364.84863, -60.67210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 730.82672, -1353.76575, -56.51210,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, 730.91962, -1364.50269, -56.51210,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 736.34088, -1375.10583, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 733.13928, -1375.16492, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 729.93542, -1375.24072, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 726.72864, -1375.30408, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 723.52258, -1375.36377, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 730.93298, -1337.59692, -56.51210,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, 730.88794, -1344.54675, -56.51210,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, 730.88788, -1344.54675, -56.51210,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, 730.91962, -1364.50269, -56.51210,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.30182, -1336.21631, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 729.27905, -1367.98718, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 723.06903, -1368.05408, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 724.64508, -1368.04028, -60.67210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1502, 727.68854, -1367.97974, -60.67210,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1649, 726.21808, -1368.01147, -56.51210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 721.41785, -1369.69165, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 721.41620, -1372.89233, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 721.89777, -1374.92517, -59.26300,   0.00000, 0.00000, 37.00000);
    CreateDynamicObject(19367, 719.92267, -1333.96973, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 716.75879, -1334.01770, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 713.55676, -1334.08569, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 710.36499, -1334.13489, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 707.17523, -1334.18762, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 705.64673, -1335.71936, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.65814, -1338.89929, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.67017, -1342.09814, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.66248, -1345.31750, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.65686, -1348.53662, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.65082, -1351.75867, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.65924, -1354.94604, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.66644, -1358.15222, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.66644, -1358.15222, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.67267, -1361.35645, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.65918, -1364.55981, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.66296, -1367.76172, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.66730, -1370.96436, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.63123, -1370.91638, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.67114, -1374.17151, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 705.67114, -1374.17151, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 707.19757, -1375.84167, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 710.40576, -1375.77527, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 713.60645, -1375.71545, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 713.60645, -1375.71545, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 716.80219, -1375.65332, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 716.80219, -1375.65332, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 719.97382, -1375.59644, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 723.10278, -1375.55237, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 707.26837, -1341.83777, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 710.47906, -1341.77991, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 713.69440, -1341.72632, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 715.20007, -1340.03601, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19303, 714.24371, -1338.43640, -59.41890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19303, 714.24371, -1338.43640, -56.97690,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 710.47906, -1341.77991, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 711.59961, -1340.07410, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19303, 712.51440, -1338.44067, -59.41890,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19303, 712.52258, -1338.42151, -56.97690,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2738, 714.73541, -1341.29370, -60.07790,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(0, 709.29962, -1339.92200, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19303, 706.59808, -1338.54297, -59.41890,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19303, 708.33362, -1338.54309, -59.41890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19404, 709.28577, -1340.11865, -58.95670,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19303, 709.25952, -1339.80090, -58.82490,   0.00000, 90.00000, -91.00000);
    CreateDynamicObject(19303, 706.58557, -1338.56812, -56.96390,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19303, 708.31067, -1338.55798, -56.96390,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19367, 715.19141, -1337.22424, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1800, 711.99860, -1342.86658, -60.67200,   0.00000, 0.00000, -3.00000);
    CreateDynamicObject(1800, 706.26172, -1342.85107, -60.67200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, 720.37036, -1340.58069, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.46478, -1344.94214, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.46478, -1344.94214, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.55219, -1349.36340, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.77502, -1366.00024, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 722.41766, -1368.06250, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.69769, -1361.60742, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.61487, -1357.22144, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 713.56641, -1357.86609, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 715.23779, -1359.36084, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 715.23779, -1359.36084, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 715.22729, -1362.54236, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 715.22894, -1365.76221, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 715.21155, -1368.96704, -59.26300,   0.00000, 0.00000, -1.00000);
    CreateDynamicObject(1649, 720.55219, -1349.36340, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.37042, -1340.58069, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.30182, -1336.21631, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.61487, -1357.22144, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.61487, -1357.22144, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.61493, -1357.22144, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.69769, -1361.60742, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.69769, -1361.60742, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 720.77502, -1366.00024, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 720.77502, -1366.00024, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19367, 713.51025, -1370.48853, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 707.32544, -1370.61023, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 815.70313, 7136.20166, -5511.32764,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1502, 708.91199, -1370.62720, -60.67310,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(1502, 711.99738, -1370.51917, -60.67310,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(19367, 720.32916, -1374.31555, -59.26300,   0.00000, 0.00000, -40.00000);
    CreateDynamicObject(1649, 726.21808, -1368.01147, -56.51210,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, 710.53870, -1370.55505, -56.54300,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1649, 710.53870, -1370.55505, -56.54300,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1649, 710.53870, -1370.55505, -56.54300,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(19367, 710.36346, -1357.91187, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 710.36346, -1357.91187, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19367, 707.15485, -1357.95581, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 715.42316, -1355.55444, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 715.33948, -1343.98535, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1649, 715.41425, -1348.34827, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19367, 713.84863, -1357.85071, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 715.41418, -1348.34827, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 715.33948, -1343.98535, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1649, 715.39746, -1355.54858, -59.26300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2308, 713.88696, -1354.74487, -60.67272,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2308, 711.94940, -1354.75586, -60.67272,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2198, 714.95587, -1350.02539, -60.67230,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(2777, 714.26477, -1348.86133, -60.16270,   0.00000, 0.00000, -47.00000);
    CreateDynamicObject(2777, 714.91248, -1354.69568, -60.16170,   0.00000, 0.00000, -149.00000);
    CreateDynamicObject(2777, 712.77167, -1355.00842, -60.16170,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(2963, 705.55627, -1373.21301, -59.20920,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2198, 712.97656, -1349.20850, -60.67230,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2198, 712.95959, -1345.29883, -60.67230,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2198, 712.89966, -1343.33948, -60.67230,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2777, 713.72968, -1344.82703, -60.16270,   0.00000, 0.00000, -55.00000);
    CreateDynamicObject(2777, 713.67474, -1342.90027, -60.16270,   0.00000, 0.00000, -55.00000);
    CreateDynamicObject(2184, 707.64850, -1342.15906, -60.67500,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(19786, 706.52649, -1342.56360, -58.54230,   0.00000, 0.00000, 41.00000);
    CreateDynamicObject(2311, 706.24640, -1348.66211, -60.67310,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2311, 706.19775, -1351.08630, -60.67310,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2184, 706.00629, -1356.13025, -60.67500,   0.00000, 0.00000, -43.00000);
    CreateDynamicObject(19786, 706.51270, -1357.17407, -58.45280,   0.00000, 0.00000, 137.00000);
    CreateDynamicObject(19787, 705.74109, -1351.62585, -58.37880,   4.00000, 0.00000, 90.00000);
    CreateDynamicObject(19787, 705.79010, -1349.64661, -58.37880,   4.00000, 0.00000, 90.00000);
    CreateDynamicObject(19787, 705.79010, -1349.64661, -59.39880,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(19787, 705.74921, -1351.62354, -59.39880,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(19404, 713.50635, -1363.71057, -59.05810,   0.00000, 0.00000, -87.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(19367, 710.31226, -1363.88342, -59.26300,   0.00000, 0.00000, -87.00000);
    CreateDynamicObject(19367, 708.78998, -1365.62488, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 708.78973, -1367.17761, -59.26300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19367, 710.42480, -1368.70154, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19367, 712.03534, -1368.67139, -59.26300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1502, 715.15088, -1368.57275, -60.67310,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(1649, 713.51129, -1363.73962, -59.26300,   0.00000, -89.00000, 184.00000);
    CreateDynamicObject(19893, 713.48822, -1364.02197, -59.73740,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(19894, 712.72479, -1364.20886, -59.71220,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(19894, 714.28107, -1364.09082, -59.71220,   0.00000, 0.00000, -18.00000);
    CreateDynamicObject(2206, 712.62555, -1364.34302, -60.67250,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(2206, 709.79535, -1364.54797, -60.67250,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(2190, 710.90686, -1363.98474, -59.86190,   0.00000, 0.00000, -18.00000);
    CreateDynamicObject(2190, 709.99463, -1364.29395, -59.86190,   0.00000, 0.00000, 13.00000);
    CreateDynamicObject(2190, 711.87714, -1364.41821, -59.86190,   0.00000, 0.00000, -55.00000);
    CreateDynamicObject(19999, 710.91492, -1365.88696, -60.67230,   0.00000, 0.00000, 193.00000);
    CreateDynamicObject(19999, 713.50452, -1365.70349, -60.67230,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(14604, 709.34082, -1368.10132, -59.65240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14604, 710.29956, -1368.09473, -59.65240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14604, 709.56909, -1360.55249, -59.65240,   0.00000, 0.00000, -88.00000);
    CreateDynamicObject(2115, 713.22614, -1360.07007, -60.67270,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19418, 713.50330, -1360.56226, -59.78810,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1810, 714.31799, -1360.89172, -60.67260,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(11729, 736.84399, -1361.34021, -60.67220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11729, 736.13190, -1361.35413, -60.67220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11729, 737.42957, -1361.96814, -60.67220,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(11729, 737.44025, -1362.64587, -60.67220,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(11729, 735.43207, -1361.36096, -60.67220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11729, 734.73242, -1361.37268, -60.67220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3761, 736.21436, -1366.95825, -60.26810,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(3761, 734.73511, -1366.97607, -60.26810,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(356, 736.91534, -1367.26318, -60.59520,   98.00000, 41.00000, 0.00000);
    CreateDynamicObject(356, 736.67224, -1367.02563, -60.59520,   98.00000, 41.00000, 0.00000);
    CreateDynamicObject(356, 736.42828, -1366.85107, -60.59520,   98.00000, 41.00000, 0.00000);
    CreateDynamicObject(353, 735.52368, -1367.42126, -60.64690,   98.00000, 60.00000, 0.00000);
    CreateDynamicObject(353, 735.23279, -1367.11035, -60.64690,   98.00000, 60.00000, 0.00000);
    CreateDynamicObject(353, 734.93286, -1366.73938, -60.64690,   98.00000, 60.00000, 0.00000);
    CreateDynamicObject(2400, 737.71899, -1362.68823, -60.95340,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2036, 737.70660, -1364.40393, -58.48240,   84.00000, 0.00000, 89.00000);
    CreateDynamicObject(1242, 737.38715, -1363.77271, -59.36120,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(1242, 737.24744, -1363.76587, -59.36120,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(1242, 737.41479, -1363.17249, -59.36120,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(1242, 737.21423, -1363.18286, -59.36120,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(371, 737.52948, -1364.35706, -59.44950,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(371, 737.30847, -1364.36084, -59.44950,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(371, 737.53400, -1364.93689, -59.44950,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(371, 737.31439, -1364.92358, -59.44950,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(1672, 737.42938, -1363.49280, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.44568, -1363.27710, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.56952, -1363.51477, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.56952, -1363.51477, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.39264, -1363.69824, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.39264, -1363.69824, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.59277, -1363.69458, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1672, 737.62585, -1363.29395, -58.89980,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1636, 8871.43652, 399.17569, -5739.75049,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(363, 737.60291, -1363.74902, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(363, 737.60291, -1363.74902, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(363, 737.39874, -1363.74866, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(363, 737.62097, -1364.05188, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(363, 737.62097, -1364.05188, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(363, 737.37372, -1364.03955, -58.70000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(348, 734.17139, -1366.86182, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(348, 733.92181, -1366.78711, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(348, 733.83521, -1367.43640, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(348, 733.58307, -1367.27893, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(348, 733.32385, -1367.15759, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(348, 733.60345, -1366.68481, -60.64640,   86.00000, -4.00000, 62.00000);
    CreateDynamicObject(342, 737.53430, -1364.69250, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.38062, -1364.63245, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.38062, -1364.63245, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.53650, -1364.83423, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.36298, -1364.77136, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.53870, -1364.97571, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(342, 737.36517, -1364.91309, -58.92310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(334, 737.47882, -1365.41650, -58.99270,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(334, 737.22815, -1365.27808, -58.99270,   90.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 737.37061, -1363.52759, -60.31850,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 737.37061, -1363.52759, -60.31850,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 737.38397, -1364.37122, -60.31850,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 737.38397, -1364.37122, -60.31850,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 737.39288, -1365.23511, -60.31850,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3014, 733.82147, -1361.49268, -60.43630,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 733.07025, -1361.60510, -60.43630,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 732.31641, -1361.72046, -60.43630,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 731.58240, -1361.83435, -60.43630,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 733.82147, -1361.49268, -59.98530,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 733.07031, -1361.60510, -59.98530,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 732.31641, -1361.72046, -59.98530,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(3014, 731.58240, -1361.83435, -59.98530,   0.00000, 0.00000, -127.00000);
    CreateDynamicObject(19379, 725.47375, -1346.70007, -60.76000,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.11731, -1346.45850, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(2639, 735.04694, -1334.21338, -60.18700,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2639, 732.88397, -1334.21631, -60.18700,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2639, 735.04694, -1334.21338, -60.18700,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2639, 736.79736, -1335.80908, -60.18700,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2639, 736.79340, -1337.97900, -60.18700,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2639, 736.79340, -1337.97900, -60.18700,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2639, 736.77197, -1340.16101, -60.18700,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19999, 725.30469, -1342.12927, -60.67270,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(19893, 726.00720, -1340.95190, -59.73000,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(2059, 725.25122, -1340.82410, -59.70840,   0.00000, 0.00000, -170.00000);
    CreateDynamicObject(2161, 736.02606, -1351.29736, -60.67410,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 736.02612, -1351.29736, -59.33910,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 734.50659, -1351.31116, -60.67410,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 736.14136, -1351.40271, -59.33910,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 734.46082, -1351.28955, -59.33910,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 732.98541, -1351.33801, -60.67410,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, 732.98541, -1351.33801, -59.34910,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(0, 733.66937, -1346.88330, -60.67310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2184, -4489.85693, 1484.37256, -8297.65918,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2184, 735.47424, -1347.17981, -60.67220,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(19893, 734.96613, -1347.79871, -59.89790,   0.00000, 0.00000, -40.00000);
    CreateDynamicObject(19893, 733.89142, -1347.82141, -59.89790,   0.00000, 0.00000, 40.00000);
    CreateDynamicObject(19999, 734.31128, -1348.98877, -60.67180,   0.00000, 0.00000, -193.00000);
    CreateDynamicObject(2207, 733.68988, -1370.52344, -60.67500,   0.00000, 0.00000, -88.00000);
    CreateDynamicObject(2343, 735.42413, -1371.44031, -60.03840,   0.00000, 0.00000, 171.00000);
    CreateDynamicObject(19894, 733.77252, -1371.44531, -59.89860,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2059, 733.83417, -1370.64648, -59.89920,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(2059, 733.62354, -1370.89771, -59.89920,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(1742, 737.93530, -1368.84387, -60.67260,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1742, 738.05127, -1373.52698, -60.67260,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19307, 737.76569, -1373.13000, -58.73310,   4.00000, 40.00000, 102.00000);
    CreateDynamicObject(2614, 737.76105, -1371.44421, -58.84540,   0.00000, 0.00000, -92.00000);
    CreateDynamicObject(19619, 737.85791, -1371.07446, -60.22340,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(2240, 721.09650, -1363.79016, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 721.00513, -1359.40698, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 720.92853, -1355.12134, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 720.95361, -1351.50085, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 720.86609, -1347.12744, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 720.78339, -1342.74500, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 720.69312, -1338.48230, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1814, 732.69586, -1336.23230, -60.67360,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1814, 734.73022, -1336.21204, -60.67360,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(1814, 734.77075, -1338.76147, -60.67360,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(2240, 731.50201, -1341.15271, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2240, 731.39655, -1338.73083, -60.19700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2121, 733.24292, -1346.52966, -60.19560,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(2121, 735.53741, -1346.46423, -60.19560,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(2399, 733.63556, -1361.37769, -58.77724,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2399, 732.79413, -1361.41724, -58.77724,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2399, 731.91412, -1361.46362, -58.77724,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2043, 732.93823, -1366.83667, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.53064, -1366.85254, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.10254, -1366.87134, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.09619, -1367.61206, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.57666, -1367.59534, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.95691, -1367.58618, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.53058, -1366.85254, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.93823, -1366.83667, -60.54070,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.93817, -1366.83667, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.10248, -1366.87134, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.09619, -1367.61206, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.57672, -1367.59534, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2043, 732.95691, -1367.58618, -59.74570,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2358, 732.61407, -1366.57288, -58.93250,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(2358, 732.61798, -1367.34973, -58.93250,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(2358, 732.61798, -1367.34973, -58.72050,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(2358, 732.61407, -1366.57288, -58.93250,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(2358, 732.61407, -1366.57288, -58.72050,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(19786, 721.42072, -1371.31372, -58.59830,   2.00000, 0.00000, 91.00000);
    CreateDynamicObject(2311, 721.97266, -1370.62122, -60.67420,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(2243, 721.96167, -1369.51819, -60.46310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2243, 721.95459, -1373.26331, -60.46310,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19171, 729.73352, -1375.11780, -58.75110,   273.00000, 360.00000, 0.00000);
    CreateDynamicObject(1724, 733.13470, -1373.12231, -60.67320,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1724, 731.97485, -1369.96985, -60.67320,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2083, 732.08954, -1372.03284, -60.67263,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2357, 734.22821, -1355.51733, -60.24840,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(19166, 734.40973, -1360.92761, -58.98810,   -90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19307, 737.62286, -1369.60205, -58.73310,   4.00000, 40.00000, 275.00000);
    CreateDynamicObject(18647, 734.41681, -1360.90784, -58.02230,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(11727, 734.35205, -1356.09814, -57.63620,   91.00000, 0.00000, 0.00000);
    CreateDynamicObject(2206, 724.74377, -1340.76636, -60.67260,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2605, 736.22479, -1359.00916, -60.24900,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19996, 736.62738, -1360.12451, -60.67300,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(19996, 735.70520, -1354.08167, -60.67300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19996, 735.76904, -1355.19312, -60.67300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19996, 735.79150, -1356.18811, -60.67300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19996, 735.81934, -1357.19446, -60.67300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19996, 735.70520, -1354.08167, -60.67300,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(19996, 732.71649, -1355.31433, -60.67300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19996, 732.73621, -1356.27380, -60.67300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19996, 732.74200, -1357.27271, -60.67300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19996, 732.73779, -1354.11829, -60.67300,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1671, 734.08008, -1352.54224, -60.24760,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2571, 723.41199, -1369.86072, -60.67240,   0.00000, 0.00000, -89.00000);
    CreateDynamicObject(2842, 729.52618, -1372.14209, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2842, 727.69958, -1372.13098, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2842, 727.70764, -1373.05200, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2842, 729.52789, -1373.05688, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2842, 727.69086, -1371.21167, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2842, 729.51611, -1371.21191, -60.67232,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19552, 762.51086, -1356.72058, -57.63570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 714.62781, -1336.84851, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.05652, -1336.83862, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.54309, -1336.84778, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.59607, -1346.47388, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.18378, -1356.06360, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.19476, -1365.69556, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 725.16144, -1375.31946, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.66187, -1375.31750, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.69507, -1365.66980, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 735.69098, -1356.09741, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 714.63605, -1346.47131, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 714.72809, -1356.07336, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 714.71869, -1365.70068, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 714.67535, -1375.30737, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.20593, -1375.27991, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.22131, -1365.68188, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.24982, -1356.08728, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.26892, -1346.45532, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19379, 704.26801, -1336.83240, -57.57500,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(11737, 726.11243, -1368.88049, -60.67290,   0.00000, 0.00000, 179.00000);
    CreateDynamicObject(11737, 726.22632, -1334.67444, -60.67160,   0.00000, 0.00000, 180.00000);

	// Army Mappings
	CreateDynamicObject(3694, 18.40160, 1570.25256, 12.16710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3694, 37.16307, 1565.39355, 12.16710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3694, 23.12202, 1559.08594, 12.16710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3694, 2.97091, 1567.03674, 12.16710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3694, 39.52754, 1557.75647, 12.16710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5399, 70.43002, 1572.77332, 17.17070,   0.00000, 0.00000, -15.00000);
	CreateDynamicObject(19912, 75.62055, 1570.07092, 16.35110,   0.00000, -2.00000, -15.00000);
	CreateDynamicObject(19377, 73.00891, 1575.19983, 22.69130,   0.00000, -90.00000, -14.00000);
	CreateDynamicObject(19377, 69.02835, 1575.94348, 22.69130,   0.00000, -90.00000, -14.00000);
	CreateDynamicObject(19377, 61.84180, 1577.66772, 22.69130,   0.00000, -90.00000, -14.00000);
	CreateDynamicObject(19377, 78.25567, 1574.04944, 22.69130,   0.00000, -90.00000, -14.00000);
	CreateDynamicObject(19377, 81.53285, 1570.95776, 17.43730,   0.00000, 0.00000, 108.00000);
	CreateDynamicObject(19377, 82.50854, 1576.92407, 22.69130,   0.00000, -90.00000, -14.00000);
	CreateDynamicObject(19858, 111.27202, 1815.23718, 19.04780,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1472, 110.22710, 1814.57507, 17.21430,   0.00000, 0.00000, -89.00000);

	// Dmzone Interior
    CreateDynamicObject(1569, 296.42569, 290.66013, 998.14777,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1506, 295.23364, 287.03024, 998.17902,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1506, 295.22253, 281.30054, 998.17902,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(14878, 299.11139, 291.20453, 998.54291,   0.00000, 0.00000, 3.14160);
    CreateDynamicObject(1271, 302.80566, 283.29672, 998.47693,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(1271, 302.81277, 284.47281, 998.47693,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 302.81934, 283.90207, 999.18890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 302.77997, 285.63858, 998.47693,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 302.85648, 285.02051, 999.18890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 297.72339, 279.33362, 998.48828,   0.00000, 0.00000, 25.00000);
    CreateDynamicObject(1271, 296.93817, 280.06323, 998.48828,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(1271, 296.52390, 279.13620, 998.48828,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1271, 297.14523, 279.56873, 999.20831,   0.00000, 0.00000, -25.00000);
    CreateDynamicObject(14746, 2441.53809, -1734.77954, 1012.49298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14745, 2449.95044, -1727.95288, 1011.19000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(14743, 2447.48804, -1728.57703, 1012.49872,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14744, -3883.72021, -825.75800, -6997.70264,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14744, 2447.48584, -1728.60657, 1012.49872,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(0, 2447.43188, -1693.49670, 1012.47662,   3.14160, 0.00000, 1.57080);
    CreateDynamicObject(14763, -7603.68457, -2342.90649, 508.74118,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14763, 2436.83228, -1726.90454, 1012.39978,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(14741, 2436.99829, -1726.09204, 1010.70972,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1498, 2458.72583, -1730.14734, 1010.71448,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(14383, 2793.14526, -1167.54749, 1027.30945,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2300, 2797.62085, -1165.01331, 1029.15833,   0.00000, 0.00000, 179.00000);
    CreateDynamicObject(2068, 2785.33496, -1167.57471, 1028.42236,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2297, 2787.28418, -1163.45508, 1025.55725,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(1765, 2787.63843, -1166.76196, 1025.55896,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(1821, 2784.61108, -1168.48792, 1028.14111,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1821, 2786.44067, -1166.30078, 1025.55908,   0.00000, 0.00000, 55.00000);
    CreateDynamicObject(1764, 2784.68140, -1166.00378, 1025.55798,   0.00000, 0.00000, -273.00000);
    CreateDynamicObject(0, 2789.03052, -1167.17017, 1025.55896,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2058, 2785.92749, -1163.97522, 1025.61182,   0.00000, 0.00000, 55.00000);
    CreateDynamicObject(2053, 2786.60742, -1166.10217, 1025.61243,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2064, 2786.42749, -1170.01147, 1026.14172,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2060, 2786.17578, -1171.50500, 1025.61230,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1498, 2782.63940, -1173.48474, 1025.55896,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(0, 2789.75317, -1165.66138, 1029.15906,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 2789.12109, -1168.72937, 1025.55884,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 2789.65503, -1165.69214, 1029.15967,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2160, 2791.68188, -1163.14832, 1025.55688,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2159, 2793.05029, -1163.15002, 1025.55774,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2157, 2794.41821, -1163.13843, 1025.55859,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2156, 2789.39795, -1165.56750, 1025.55823,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2157, 2796.44971, -1165.59106, 1025.55774,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2046, 2795.59570, -1172.13379, 1027.31714,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(2157, 2794.71729, -1172.19275, 1025.55713,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(2116, 2790.29614, -1171.62158, 1025.55884,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(2121, 2789.98096, -1170.71082, 1026.03516,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(2121, 2791.16992, -1170.47937, 1026.03516,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(3014, 298.58026, 279.85172, 998.36353,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2040, 297.63907, 280.17047, 998.21930,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(2040, 296.28738, 280.12314, 998.21930,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(2035, 296.97150, 280.11279, 998.82507,   0.00000, 0.00000, -156.00000);
    CreateDynamicObject(2035, 297.15961, 279.63571, 999.54608,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(1271, 296.52390, 279.13620, 998.48828,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14746, 2441.53809, -1734.77954, 1012.49298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14745, 2449.95044, -1727.95288, 1011.19000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(14743, 2447.48804, -1728.57703, 1012.49872,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14744, -3883.72021, -825.75800, -6997.70264,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14744, 2447.48584, -1728.60657, 1012.49872,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(0, 2447.43188, -1693.49670, 1012.47662,   3.14160, 0.00000, 1.57080);
    CreateDynamicObject(14763, -7603.68457, -2342.90649, 508.74118,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14763, 2436.83228, -1726.90454, 1012.39978,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(14741, 2436.99829, -1726.09204, 1010.70972,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1498, 2458.72583, -1730.14734, 1010.71448,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(14383, 2793.14526, -1167.54749, 1027.30945,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2300, 2797.62085, -1165.01331, 1029.15833,   0.00000, 0.00000, 179.00000);
    CreateDynamicObject(2068, 2785.33496, -1167.57471, 1028.42236,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2297, 2787.28418, -1163.45508, 1025.55725,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(1765, 2787.63843, -1166.76196, 1025.55896,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(1821, 2786.44067, -1166.30078, 1025.55908,   0.00000, 0.00000, 55.00000);
    CreateDynamicObject(1764, 2784.68140, -1166.00378, 1025.55798,   0.00000, 0.00000, -273.00000);
    CreateDynamicObject(0, 2789.03052, -1167.17017, 1025.55896,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2058, 2785.92749, -1163.97522, 1025.61182,   0.00000, 0.00000, 55.00000);
    CreateDynamicObject(2053, 2786.60742, -1166.10217, 1025.61243,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2064, 2786.42749, -1170.01147, 1026.14172,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2060, 2786.17578, -1171.50500, 1025.61230,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1498, 2782.63940, -1173.48474, 1025.55896,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(0, 2789.75317, -1165.66138, 1029.15906,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 2789.12109, -1168.72937, 1025.55884,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1502, 2789.65503, -1165.69214, 1029.15967,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2160, 2791.68188, -1163.14832, 1025.55688,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2159, 2793.05029, -1163.15002, 1025.55774,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2157, 2794.41821, -1163.13843, 1025.55859,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2156, 2789.39795, -1165.56750, 1025.55823,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2157, 2796.44971, -1165.59106, 1025.55774,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2046, 2795.59570, -1172.13379, 1027.31714,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(2157, 2794.71729, -1172.19275, 1025.55713,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(2116, 2790.29614, -1171.62158, 1025.55884,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(2121, 2789.98096, -1170.71082, 1026.03516,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(2121, 2791.16992, -1170.47937, 1026.03516,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(14876, 301.76749, 286.19769, 1003.21881,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2035, 295.38647, 283.26572, 998.56812,   0.00000, 244.00000, 0.00000);
    CreateDynamicObject(2035, 295.41214, 283.64853, 998.56812,   0.00000, 244.00000, 0.00000);
    CreateDynamicObject(2035, 295.41858, 284.03265, 998.56812,   0.00000, 244.00000, 0.00000);
    CreateDynamicObject(359, 295.25992, 285.05478, 1000.10522,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(355, 295.57904, 285.52594, 998.45288,   -27.00000, -92.00000, 76.00000);
    CreateDynamicObject(355, 295.56863, 286.08145, 998.45288,   -27.00000, -92.00000, 76.00000);
    CreateDynamicObject(355, 295.53967, 286.56519, 998.45288,   -27.00000, -92.00000, 76.00000);
    CreateDynamicObject(3014, 295.52536, 284.77325, 998.52417,   0.00000, 84.00000, 0.00000);
    CreateDynamicObject(3014, 295.47079, 284.75842, 999.09119,   0.00000, 84.00000, 0.00000);

	// ADMINS SPAWN
    CreateDynamicObject(4602, -1638.36902, 1631.78381, 75.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1634.98474, 1621.90283, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1648.19067, 1624.11096, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.19507, 1628.49158, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.19934, 1632.91296, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.20410, 1637.31677, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.21228, 1639.43701, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1646.00757, 1641.67407, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1641.57129, 1641.67346, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1637.14514, 1641.67993, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1632.73535, 1641.69104, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1630.63647, 1641.70447, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1628.50684, 1624.09875, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1630.58154, 1621.89600, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1639.36768, 1621.90491, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1643.67041, 1621.89844, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1646.03442, 1621.88049, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1628.49719, 1628.46252, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.49792, 1632.89124, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.48889, 1637.29077, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.33984, 1639.58752, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18769, -1638.25195, 1631.79871, 149.09840,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1634.98474, 1621.90283, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1648.19067, 1624.11096, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.19507, 1628.49158, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.19934, 1632.91296, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.20410, 1637.31677, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1648.21228, 1639.43701, 147.69890,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1649, -1646.00757, 1641.67407, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1641.57129, 1641.67346, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1637.14514, 1641.67993, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1632.73535, 1641.69104, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1630.63647, 1641.70447, 147.69600,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, -1628.50684, 1624.09875, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1630.58154, 1621.89600, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1639.36768, 1621.90491, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1643.67041, 1621.89844, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1646.03442, 1621.88049, 147.69180,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1649, -1628.49719, 1628.46252, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.49792, 1632.89124, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.48889, 1637.29077, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1649, -1628.33984, 1639.58752, 147.69180,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19378, -1642.96680, 1638.28601, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19378, -1632.47876, 1638.29016, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19378, -1642.96936, 1628.68311, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19378, -1632.48242, 1628.71912, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19378, -1632.54016, 1626.60327, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(2755, -1633.54358, 1623.30066, 146.81030,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(16151, -1647.15247, 1631.33081, 145.31500,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(1827, -1644.39368, 1639.71204, 145.01781,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1827, -1640.40747, 1639.78394, 145.01781,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1827, -1633.71887, 1639.73303, 145.01781,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1724, -1640.62732, 1637.96008, 145.01961,   0.00000, 0.00000, 149.00000);
    CreateDynamicObject(1724, -1646.27173, 1639.84802, 145.01961,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(1724, -1638.76526, 1640.42065, 145.01961,   0.00000, 0.00000, 280.00000);
    CreateDynamicObject(1724, -1642.69763, 1640.50256, 145.01961,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(1724, -1631.96826, 1639.31750, 145.03000,   0.00000, 0.00000, -112.00000);
    CreateDynamicObject(1724, -1631.96826, 1639.31750, 145.03000,   0.00000, 0.00000, -112.00000);
    CreateDynamicObject(1724, -1635.53845, 1639.76831, 145.03000,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(2755, -1633.55908, 1625.97705, 146.81030,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2755, -1633.55908, 1625.97705, 146.81030,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(2755, -1629.88904, 1627.19775, 146.81030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1629.41870, 1627.01758, 145.01938,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1630.72461, 1627.01831, 145.01938,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1630.71387, 1627.03516, 146.37640,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1630.72461, 1627.01831, 145.01938,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1630.72461, 1627.01831, 145.01938,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1629.41614, 1627.03699, 146.37640,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, 3505.94458, -5112.54004, -5603.41504,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2161, -1628.97681, 1621.91687, 145.02080,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1630.29321, 1621.91052, 145.02080,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1631.59924, 1621.91016, 145.02080,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1633.30469, 1623.07312, 145.02080,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2161, -1633.32275, 1623.06458, 146.31880,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2161, -1633.30469, 1623.07312, 145.02080,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2161, -1633.29883, 1624.40320, 145.02080,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2161, -1633.29883, 1624.40320, 146.31880,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2161, -1631.59924, 1621.91016, 146.37781,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1630.29321, 1621.91052, 145.02080,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1630.29321, 1621.91052, 146.37781,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1628.97681, 1621.91687, 145.02080,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2161, -1628.97681, 1621.91687, 146.37781,   0.00000, 0.00000, -180.00000);
    CreateDynamicObject(2206, -1630.69800, 1623.55188, 145.01939,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19999, -1629.21021, 1624.73071, 145.02119,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(2207, 6874.30420, 1433.51648, -5136.52295,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2207, -1639.03381, 1624.73938, 145.01950,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(2343, -1640.23413, 1623.07080, 145.61060,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(1829, -1642.31738, 1622.84277, 145.53160,   0.00000, 0.00000, -244.00000);
    CreateDynamicObject(1550, -3087.87671, -5014.82910, -7340.42139,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1550, -3304.68848, -4844.15820, -7502.62158,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1550, -6280.13916, -1703.48694, -8471.41309,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1550, -1643.01147, 1623.24683, 145.37320,   30.00000, 0.00000, 0.00000);
    CreateDynamicObject(1550, -1642.57263, 1622.63477, 146.19920,   0.00000, 84.00000, 0.00000);
    CreateDynamicObject(2357, -1631.06909, 1632.23511, 145.43210,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2123, -1632.54797, 1631.00391, 145.60890,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(2123, -1632.55151, 1631.98450, 145.60890,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(2123, -1632.48889, 1633.94238, 145.60890,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(2123, -1632.53687, 1633.00378, 145.60890,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(2123, -1629.65125, 1630.97449, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2123, -1629.65125, 1630.97449, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2123, -1629.64136, 1631.95520, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2123, -1629.69263, 1632.99658, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2123, -1629.69263, 1632.99658, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2123, -1629.70776, 1633.89868, 145.60890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19999, -1631.19958, 1629.02441, 145.02119,   0.00000, 0.00000, 164.00000);
    CreateDynamicObject(19999, -1631.19958, 1629.02441, 145.02119,   0.00000, 0.00000, 164.00000);
    CreateDynamicObject(19999, -1631.01392, 1635.36877, 145.02119,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19786, -2164.94214, 11575.66602, 918.72327,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19786, -1638.61426, 1630.12354, 148.52721,   6.00000, 0.00000, -25.00000);
    CreateDynamicObject(19786, -1638.91870, 1631.55737, 148.52721,   11.00000, 0.00000, 164.00000);
    CreateDynamicObject(2311, -1639.57043, 1631.28687, 145.01939,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(16101, -1638.71619, 1631.28577, 145.23120,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2311, -1639.55835, 1630.18555, 145.01939,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19378, -1643.02454, 1626.61121, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19378, -1643.02454, 1626.61121, 144.93280,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19440, -1638.63672, 1630.75037, 146.87869,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(19440, -1638.63672, 1630.75037, 148.71170,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(16101, -1638.72119, 1630.18237, 145.23120,   0.00000, 0.00000, 0.00000);

	//SetObjectMaterial(Flagman_Mer_LS[0], 3, 12959, "sw_library", "sw_brick05", 0xFFFFFFFF);
	CreateDynamicObject(738,1783.91699219,-1739.86096191,12.72200012,0.00000000,0.00000000,0.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1776.93200684,-1725.12304688,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1748.86499023,-1739.48095703,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1710.06103516,-1724.62805176,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1757.10302734,-1681.09899902,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1681.64501953,-1692.78601074,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1696.56701660,-1648.70898438,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1655.85400391,-1740.00305176,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1618.80004883,-1724.91101074,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1600.69799805,-1739.70605469,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	CreateDynamicObject(738,1555.36694336,-1724.83898926,12.72200012,0.00000000,0.00000000,90.00000000); //object(aw_streettree2) (4)
	//
	CreateDynamicObject(983, 1414.86340, -1722.27136, 13.21950, 0.00000, 0.00000, 270.07999);
	CreateDynamicObject(984, 1419.50452, -1712.31396, 13.17550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(984, 1419.51050, -1696.68140, 13.17550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(983, 1414.64404, -1690.33630, 13.21950, 0.00000, 0.00000, 270.07999);
	CreateDynamicObject(983, 1416.46143, -1722.27136, 13.21950, 0.00000, 0.00000, 270.07999);
	CreateDynamicObject(984, 1419.50452, -1713.91199, 13.17550, 0.00000, 0.00000, 0.00000);
	//
	realtorInfo = CreatePickupAC(1239,1,1490.2839,1305.6566,1093.2964, 147); // realtor infos 1490.2839,1305.6566,1093.2964
	adons = CreatePickupAC(1210,1,1538.3015,-1361.0278,170.7159, -1); // AdmMagaz
	realtorFreeBusiness = CreatePickupAC(1274,1,1496.8921,1309.0562,1093.2916, 147); // 1496.8921,1309.0562,1093.2916
	realtorFreePickup = CreatePickupAC(1273,1,1494.6450,1309.0562,1093.2839, 147);
	RealtorPickupExit = CreatePickupAC(1318,1,1494.4130,1303.5784,1093.2891, 147); // ����� �� ���������
	//��������
	CreateDynamicObject(14593,341.20001221,411.10000610,1024.13000488,0.00000000,0.00000000,0.00000000); //object(paperchase04) (1)
	CreateDynamicObject(14597,347.50000000,384.09960938,1023.79998779,0.00000000,0.00000000,90.00000000); //object(paperchase07) (1)
	CreateDynamicObject(1536,347.60000610,425.01000977,1021.79998779,0.00000000,0.00000000,0.00000000); //object(gen_doorext15) (1)
	CreateDynamicObject(1998,342.60000610,407.70001221,1021.79998779,0.00000000,0.00000000,359.99450684); //object(officedesk1l) (1)
	CreateDynamicObject(2002,332.29998779,414.50000000,1021.79998779,0.00000000,0.00000000,90.00000000); //object(water_coolnu) (1)
	CreateDynamicObject(2164,340.60000610,406.39999390,1021.79998779,0.00000000,0.00000000,180.00000000); //object(med_office_unit_5) (1)
	CreateDynamicObject(2001,335.09960938,421.19921875,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(2008,344.60000610,408.70001221,1021.79998779,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
	CreateDynamicObject(1703,335.39999390,410.39999390,1021.79998779,0.00000000,0.00000000,89.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2163,350.29998779,375.70001221,1023.20001221,0.00000000,0.00000000,270.00000000); //object(med_office_unit_2) (1)
	CreateDynamicObject(1714,345.10000610,407.50000000,1021.79998779,0.00000000,0.00000000,140.71960449); //object(kb_swivelchair1) (1)
	CreateDynamicObject(2007,349.79998779,379.10000610,1021.79998779,0.00000000,0.00000000,269.99450684); //object(filing_cab_nu01) (1)
	CreateDynamicObject(1796,341.39999390,391.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (1)
	CreateDynamicObject(1812,353.20001221,392.79998779,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_5) (1)
	CreateDynamicObject(2146,350.10000610,385.79998779,1022.29998779,0.00000000,0.00000000,0.00000000); //object(cj_trolly1) (1)
	CreateDynamicObject(2146,345.79998779,398.50000000,1022.29998779,0.00000000,0.00000000,0.00000000); //object(cj_trolly1) (2)
	CreateDynamicObject(2146,349.70001221,423.39999390,1022.29998779,0.00000000,0.00000000,0.00000000); //object(cj_trolly1) (3)
	CreateDynamicObject(2146,349.70001221,420.29998779,1022.29998779,0.00000000,0.00000000,0.00000000); //object(cj_trolly1) (4)
	CreateDynamicObject(1812,356.20001221,392.79998779,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_5) (1)
	CreateDynamicObject(1812,359.10000610,392.79998779,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_5) (1)
	CreateDynamicObject(1812,359.10000610,390.50000000,1021.79998779,0.00000000,0.00000000,180.00000000); //object(low_bed_5) (1)
	CreateDynamicObject(1812,356.20001221,390.50000000,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_bed_5) (1)
	CreateDynamicObject(1812,353.10000610,390.50000000,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_bed_5) (1)
	CreateDynamicObject(1796,338.29998779,391.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (1)
	CreateDynamicObject(1796,335.20001221,391.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (1)
	CreateDynamicObject(1796,335.39999390,391.39999390,1021.79998779,0.00000000,0.00000000,180.00000000); //object(low_bed_4) (1)
	CreateDynamicObject(1796,338.50000000,391.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (1)
	CreateDynamicObject(1796,341.70001221,391.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (1)
	CreateDynamicObject(2330,342.29998779,386.10000610,1021.79998779,0.00000000,0.00000000,0.00000000); //object(cj_bedroom1_w) (1)
	CreateDynamicObject(1799,357.89999390,384.00000000,1021.79998779,0.00000000,0.00000000,0.00000000); //object(med_bed_4) (1)
	CreateDynamicObject(2090,340.10000610,384.10000610,1021.79998779,0.00000000,0.00000000,0.00000000); //object(swank_bed_5) (1)
	CreateDynamicObject(2090,337.39999390,383.39999390,1021.79998779,0.00000000,0.00000000,90.00000000); //object(swank_bed_5) (3)
	CreateDynamicObject(2090,341.79998779,380.50000000,1021.79998779,0.00000000,0.00000000,90.00000000); //object(swank_bed_5) (4)
	CreateDynamicObject(1799,353.50000000,384.00000000,1021.79998779,0.00000000,0.00000000,0.00000000); //object(med_bed_4) (3)
	CreateDynamicObject(1799,354.39999390,383.70001221,1021.79998779,0.00000000,0.00000000,180.00000000); //object(med_bed_4) (4)
	CreateDynamicObject(1799,358.79998779,383.70001221,1021.79998779,0.00000000,0.00000000,179.99450684); //object(med_bed_4) (5)
	CreateDynamicObject(2328,342.60000610,393.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_cabinet_1_s) (1)
	CreateDynamicObject(2328,339.50000000,393.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_cabinet_1_s) (2)
	CreateDynamicObject(2328,336.39999390,393.89999390,1021.79998779,0.00000000,0.00000000,0.00000000); //object(low_cabinet_1_s) (4)
	CreateDynamicObject(2328,336.39999390,389.39999390,1021.79998779,0.00000000,0.00000000,180.00000000); //object(low_cabinet_1_s) (5)
	CreateDynamicObject(2328,339.50000000,389.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_cabinet_1_s) (6)
	CreateDynamicObject(2328,342.70001221,389.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_cabinet_1_s) (7)
	CreateDynamicObject(2328,352.20001221,389.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_cabinet_1_s) (8)
	CreateDynamicObject(2328,355.29998779,389.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_cabinet_1_s) (9)
	CreateDynamicObject(2328,358.20001221,389.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(low_cabinet_1_s) (10)
	CreateDynamicObject(2328,358.10000610,393.89999390,1021.79998779,0.00000000,0.00000000,359.99450684); //object(low_cabinet_1_s) (11)
	CreateDynamicObject(2328,355.20001221,393.89999390,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (12)
	CreateDynamicObject(2328,359.79998779,386.10000610,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (13)
	CreateDynamicObject(2328,352.19921875,393.89941406,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (14)
	CreateDynamicObject(2328,357.00000000,386.10000610,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (15)
	CreateDynamicObject(2328,352.60000610,386.10000610,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (16)
	CreateDynamicObject(2328,355.39941406,386.09960938,1021.79998779,0.00000000,0.00000000,359.98901367); //object(low_cabinet_1_s) (18)
	CreateDynamicObject(2328,352.50000000,381.60000610,1021.79998779,0.00000000,0.00000000,179.98901367); //object(low_cabinet_1_s) (19)
	CreateDynamicObject(2328,355.29998779,381.60000610,1021.79998779,0.00000000,0.00000000,179.98352051); //object(low_cabinet_1_s) (20)
	CreateDynamicObject(2328,356.89999390,381.60000610,1021.79998779,0.00000000,0.00000000,179.98352051); //object(low_cabinet_1_s) (21)
	CreateDynamicObject(2328,359.79998779,381.60000610,1021.79998779,0.00000000,0.00000000,179.98352051); //object(low_cabinet_1_s) (22)
	CreateDynamicObject(1714,343.79998779,407.39999390,1021.79998779,0.00000000,0.00000000,210.71838379); //object(kb_swivelchair1) (1)
	CreateDynamicObject(2164,338.79998779,406.39999390,1021.79998779,0.00000000,0.00000000,179.99450684); //object(med_office_unit_5) (1)
	CreateDynamicObject(2002,345.60000610,416.39999390,1021.79998779,0.00000000,0.00000000,270.00000000); //object(water_coolnu) (1)
	CreateDynamicObject(1703,335.70001221,421.10000610,1021.79998779,0.00000000,0.00000000,359.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2001,345.79998779,413.00000000,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(16780,338.81152344,415.04101562,1026.56262207,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (2)
	CreateDynamicObject(2001,335.10000610,413.00000000,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(1703,335.39999390,407.00000000,1021.79998779,0.00000000,0.00000000,89.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2001,335.10000610,409.70001221,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(2001,335.10000610,406.39999390,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(1822,338.20001221,420.60000610,1021.79998779,0.00000000,0.00000000,0.00000000); //object(coffee_swank_6) (2)
	CreateDynamicObject(1703,345.50000000,412.39999390,1021.79998779,0.00000000,0.00000000,269.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2160,344.79998779,378.50000000,1021.79998779,0.00000000,0.00000000,89.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(1822,339.50000000,420.60000610,1021.79998779,0.00000000,0.00000000,0.00000000); //object(coffee_swank_6) (3)
	CreateDynamicObject(2001,343.59960938,421.19921875,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(2001,345.79998779,409.79998779,1021.79998779,0.00000000,0.00000000,44.98352051); //object(nu_plant_ofc) (1)
	CreateDynamicObject(3383,347.50000000,375.20001221,1021.79998779,0.00000000,0.00000000,90.00000000); //object(a51_labtable1_) (1)
	CreateDynamicObject(2025,334.29998779,385.70001221,1021.79998779,0.00000000,0.00000000,89.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(1703,341.00000000,421.09960938,1021.79998779,0.00000000,0.00000000,359.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2025,343.00000000,380.60000610,1021.79998779,0.00000000,0.00000000,179.98901367); //object(kb_couch02) (1)
	CreateDynamicObject(2167,350.29998779,376.60000610,1023.20001221,0.00000000,0.00000000,270.00000000); //object(med_office_unit_7) (1)
	CreateDynamicObject(2163,350.29998779,375.70001221,1022.20001221,0.00000000,0.00000000,270.00000000); //object(med_office_unit_2) (1)
	CreateDynamicObject(2163,350.29998779,377.50000000,1022.20001221,0.00000000,0.00000000,270.00000000); //object(med_office_unit_2) (1)
	CreateDynamicObject(2167,350.29998779,377.50000000,1023.20001221,0.00000000,0.00000000,270.00000000); //object(med_office_unit_7) (1)
	CreateDynamicObject(2007,349.79998779,378.60000610,1021.79998779,0.00000000,0.00000000,269.98901367); //object(filing_cab_nu01) (1)
	CreateDynamicObject(14604,349.29998779,371.50000000,1022.79998779,0.00000000,0.00000000,60.00000000); //object(tv_stand_bike) (1)
	CreateDynamicObject(14604,349.79998779,372.89999390,1022.79998779,0.00000000,0.00000000,79.99633789); //object(tv_stand_bike) (2)
	CreateDynamicObject(2700,347.89999390,404.20001221,1025.40002441,0.00000000,0.00000000,90.00000000); //object(cj_sex_tv2) (1)
	CreateDynamicObject(2700,347.39941406,396.89941406,1025.30004883,0.00000000,0.00000000,270.00000000); //object(cj_sex_tv2) (2)
     //==========================Island of Majors (Lemon, Limon)============== ===============
    CreateDynamicObject(4247, 612.64594, -2774.34814, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4247, 612.74652, -2972.69678, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6213, 620.37994, -2861.35352, 1.16000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6039, 576.38257, -2827.05640, 9.18000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6041, 632.96667, -2777.54248, 9.16000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(6039, 662.08331, -2832.30981, 9.46000, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(6039, 652.44403, -2927.74951, 9.16000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3606, 606.97858, -2940.53271, 4.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 611.78912, -2850.36694, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 631.39844, -2850.37646, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 586.85577, -2946.32422, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 598.14301, -2954.83325, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 617.89008, -2954.83325, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 637.70758, -2954.83325, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 657.49139, -2954.83325, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 677.46222, -2954.83325, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 687.88721, -2946.34521, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 586.84473, -2926.70508, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.83655, -2926.18042, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.90894, -2906.29614, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.88770, -2886.51025, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.88062, -2866.52881, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.89197, -2846.52515, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.85803, -2826.65845, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 687.87457, -2806.75000, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 672.81390, -2798.08984, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6039, 576.32031, -2773.55615, 9.18000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 665.64832, -2801.62573, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 675.58301, -2801.59521, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2801.71460, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2811.52637, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2821.54028, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2831.48999, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2841.44824, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2851.42065, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2861.36548, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2871.33252, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2881.31055, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2891.27271, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2901.90942, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2911.84204, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2921.73999, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2931.63354, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2941.55908, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 684.43652, -2951.08984, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 674.13818, -2950.12378, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 664.15436, -2950.12646, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 654.23792, -2950.17017, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 644.34668, -2950.19946, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 634.40021, -2950.17041, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 624.37213, -2950.28027, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 621.02734, -2939.70288, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 614.39252, -2949.66528, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 604.50543, -2949.67749, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 594.50366, -2949.66577, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 593.06006, -2940.16919, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 593.03833, -2930.13721, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2760.63916, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2770.60620, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2790.45654, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2800.31909, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 582.80621, -2744.08569, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 573.09558, -2744.08569, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 563.19879, -2744.08569, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2744.08569, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2754.04150, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2763.98706, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2773.89819, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2783.88110, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2793.83813, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2803.79102, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2813.70410, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2823.58936, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2833.34424, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 553.88312, -2838.80054, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2844.28052, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2854.14673, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2864.07446, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2874.02197, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2883.94507, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2903.79468, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2893.87720, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 553.88312, -2913.63208, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 563.50439, -2913.63257, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 573.36890, -2913.61353, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 583.21185, -2913.65747, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 684.43652, -2896.57983, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(5716, 723.67920, -2880.47144, 14.50000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(5709, 718.99408, -2925.23779, 9.96000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(6522, 675.86505, -2709.95117, 9.26000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(8675, 654.10120, -2771.04517, 9.94000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6100, 660.98877, -2875.32813, 25.34000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3605, 630.35425, -2710.82788, 7.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6038, 512.83984, -2774.42700, 9.18000, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(6039, 506.13034, -2852.66382, 9.18000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 652.47510, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 691.33441, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2725.76221, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2735.59766, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2745.45557, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2755.32202, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2765.20947, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2775.02368, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 514.88519, -2943.44141, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 514.88519, -2953.37793, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 551.65161, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 561.36322, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 571.00128, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 580.98499, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 590.93079, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 600.79968, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 610.66199, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 620.59723, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 630.55823, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 640.49512, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 650.41443, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 660.25983, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 670.22223, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 680.11371, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 689.90637, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 699.82050, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2952.67505, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2942.79077, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2932.92847, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2923.06836, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2913.18481, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2903.31177, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2893.42773, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2883.58203, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2873.80981, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2863.92749, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2853.94849, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2844.09863, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2834.21558, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2824.43066, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2814.76392, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2804.82642, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2794.83496, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2784.99219, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 544.11761, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 554.02173, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 563.97992, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 573.85168, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 583.75708, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 593.66132, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 603.45282, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 623.29773, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 633.21979, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 643.16339, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2780.51245, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 681.51392, -2802.71948, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 677.62769, -2832.26733, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 682.76825, -2844.23071, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 677.61957, -2885.97681, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 682.96997, -2899.59058, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 683.24347, -2942.26733, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 659.80933, -2951.11646, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 605.85278, -2952.07739, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 593.71143, -2949.69531, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 588.99957, -2950.12598, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3506, 606.90106, -2918.84155, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 561.77631, -2914.14868, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 553.30798, -2846.31958, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 561.05481, -2827.08081, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 555.03003, -2811.30396, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 553.14496, -2785.04614, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 560.70667, -2773.42773, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 554.21759, -2752.09863, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 569.60345, -2742.23999, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 583.37231, -2743.15723, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 701.14886, -2776.02466, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 701.31458, -2808.31372, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 700.88538, -2828.50024, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 641.30530, -2857.57275, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 607.93018, -2857.73315, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 606.17712, -2890.19727, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 642.18884, -2890.77881, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 581.27881, -2970.90015, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 619.86243, -2969.98901, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 668.90045, -2970.07593, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 697.72571, -2971.21533, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 703.21075, -2958.08716, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 701.09186, -2936.44800, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 702.25061, -2851.53027, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 645.04425, -2785.67334, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 701.36670, -2743.47144, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 673.20599, -2773.62158, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 663.03546, -2797.12354, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 682.95068, -2797.23267, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 682.83832, -2821.69116, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 682.95093, -2862.39868, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 682.37018, -2916.02222, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 682.13489, -2950.72192, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 641.57556, -2951.78735, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 613.18793, -2951.18555, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 593.38202, -2935.93726, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 575.60669, -2914.17896, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 552.10748, -2910.56177, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 554.18152, -2827.32227, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 554.10645, -2792.54419, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 554.00555, -2762.16968, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 555.38867, -2742.73193, 3.90000, 0.00000, 0.00000, 45.00000);
    CreateDynamicObject(1231, 580.01447, -2741.80859, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 593.91077, -2747.55200, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 594.61127, -2773.67676, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 589.11084, -2773.89404, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 595.92926, -2796.63379, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 632.19537, -2790.01025, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 701.50519, -2784.07739, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 700.85626, -2765.52124, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 700.63171, -2812.82373, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 700.16718, -2846.97144, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 710.19733, -2880.52393, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 700.90314, -2927.91602, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 701.51257, -2961.54175, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 666.50140, -2972.26172, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 615.37769, -2971.58057, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 592.58765, -2971.37158, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 536.00977, -2725.23584, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 559.46936, -2724.77612, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 551.70111, -2727.39722, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 602.57654, -2727.81714, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 575.08539, -2726.42480, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 591.60425, -2724.86182, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 539.15009, -2724.30225, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 601.49683, -2850.36792, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 599.60687, -2885.88281, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 632.34802, -2914.89526, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 637.27618, -2878.48804, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 610.53076, -2879.32227, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 610.82593, -2856.01538, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 637.28845, -2855.91138, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1368, 611.36334, -2879.18091, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1368, 611.50531, -2861.22290, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1368, 636.73944, -2860.39307, 1.68000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1368, 636.70306, -2878.88281, 1.68000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1368, 636.73071, -2903.75708, 1.68000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1368, 610.89355, -2902.47437, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1363, 611.11609, -2874.10303, 1.86000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 636.69812, -2874.81665, 1.86000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 636.66302, -2900.40845, 1.86000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 610.97742, -2904.66504, 1.86000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 610.32813, -2902.42456, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 681.77582, -2918.19873, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 653.97089, -2949.95386, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 591.08179, -2950.27466, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 589.44006, -2912.65771, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 565.65332, -2916.22827, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 554.32684, -2799.54907, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 551.96307, -2744.14697, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 536.92236, -2729.13770, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 592.43323, -2726.28516, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 593.99426, -2842.43286, 1.52000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 593.68243, -2866.37988, 1.52000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 594.41364, -2896.71216, 1.52000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 587.17468, -2915.76245, 1.70000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 556.11230, -2911.18140, 1.70000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 554.20038, -2771.09204, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 566.49335, -2725.91724, 1.70000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1291, 593.87659, -2744.78149, 1.70000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1291, 683.99823, -2821.56787, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 682.96924, -2861.65015, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 701.78949, -2925.39502, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 692.28918, -2967.62256, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 667.18439, -2969.99243, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 615.40735, -2969.83276, 1.70000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1637, 711.47943, -3043.78247, 2.28000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1637, 668.50220, -3043.74268, 2.28000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1637, 624.16034, -3046.63110, 2.28000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1637, 576.85571, -3045.86133, 2.28000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1637, 520.35907, -3047.58740, 2.28000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1637, 507.85709, -3013.80566, 2.28000, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1637, 505.82144, -2974.57349, 2.28000, 0.00000, 0.00000, 180.00000);
    CreateDynamicObject(642, 699.91791, -3045.53467, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 644.18866, -3047.05688, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 599.52124, -3047.61035, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 553.35895, -3048.88525, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 520.34747, -3030.10376, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 511.82404, -2993.60938, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 502.33954, -2954.45581, 2.36000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4247, 612.61920, -2675.35034, -98.26000, -90.00000, 0.00000, 0.00000);
    CreateDynamicObject(4247, 488.66519, -2799.26050, -98.26000, -90.00000, 0.00000, 90.00000);
    CreateDynamicObject(4247, 736.58887, -2798.66870, -98.26000, -90.00000, 0.00000, -90.00000);
    CreateDynamicObject(4247, 736.76746, -2947.70142, -98.26000, -90.00000, 0.00000, -90.00000);
    CreateDynamicObject(4247, 488.61130, -2947.60376, -98.26000, -90.00000, 0.00000, 90.00000);
    CreateDynamicObject(4247, 613.03748, -3170.80420, -98.26000, -90.00000, 0.00000, 180.00000);
    CreateDynamicObject(6965, 623.12708, -2884.70776, 4.44000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6965, 622.55164, -2888.65747, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6965, 623.21094, -2880.97095, 0.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(7288, 716.84308, -2876.94849, 16.26000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3187, 701.29004, -2981.69995, 5.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(973, 704.33514, -2959.38794, 2.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(973, 704.29077, -2968.78247, 2.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18765, 613.36871, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 686.51453, -3030.32324, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 654.93945, -3029.09619, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 614.65582, -3029.89746, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 632.96802, -3029.32080, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 565.77661, -3029.03418, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 587.20538, -3028.42725, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 524.17438, -3034.60571, 1.80000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1281, 514.60278, -3007.38745, 1.80000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1642, 684.94427, -3048.58398, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1642, 673.24915, -3049.88013, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1643, 664.26074, -3051.71313, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1643, 638.50391, -3042.88647, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1643, 601.47223, -3055.53101, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1644, 605.27521, -3055.46167, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1641, 578.44629, -3052.90234, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1641, 544.98138, -3048.17480, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1641, 522.65820, -3002.64795, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1641, 522.28961, -2980.78174, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1570, 646.78772, -3025.79590, 2.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1570, 601.30200, -3025.12134, 2.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1570, 541.49854, -3025.35376, 2.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1570, 678.41492, -3025.28857, 2.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2600, 653.29669, -3042.60864, 1.78000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2600, 617.34131, -3042.74878, 1.78000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2600, 582.49475, -3044.27148, 1.78000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2600, 535.30341, -3043.27490, 1.78000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2600, 705.16919, -3041.57593, 1.78000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(13714, 716.35724, -2961.37402, 19.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(619, 708.42999, -3015.37451, 0.98222, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(619, 722.66577, -3010.20752, 0.98220, 0.00000, 0.00000, 120.00000);
    CreateDynamicObject(619, 719.31671, -2988.74731, 0.98220, 0.00000, 0.00000, 120.00000);
    CreateDynamicObject(619, 617.89972, -3018.87378, 0.98220, 0.00000, 0.00000, 120.00000);
    CreateDynamicObject(619, 586.81934, -2982.58252, 0.98222, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(619, 532.74414, -2975.89868, 0.98222, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(619, 559.25366, -3006.72900, 0.98222, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(619, 548.46063, -2981.67188, 0.98222, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 715.99072, -3001.22974, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 703.40149, -3014.03833, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 663.31763, -3022.52490, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 608.43732, -3035.84229, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 584.21594, -3016.18335, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 528.34393, -3004.82837, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 495.95224, -2994.06812, 0.97689, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 604.90942, -2670.89819, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 604.87817, -2660.89575, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 604.88733, -2650.99146, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 622.73529, -2670.89819, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 622.71570, -2660.89575, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 622.73328, -2650.99146, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 639.79437, -2670.91895, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 639.76251, -2660.91577, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 639.76331, -2650.99146, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18850, 721.11353, -2742.43701, -4.58000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18850, 720.09015, -2704.33154, -4.58000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18850, 507.39099, -2706.57666, -4.58000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(12985, 713.65656, -2720.99951, 4.80000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(12985, 713.41541, -2759.20044, 4.80000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(12985, 514.76355, -2689.91724, 4.80000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18765, 514.89252, -2933.65967, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 701.29797, -2962.53809, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 705.29352, -2968.98657, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18765, 541.85138, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 514.88519, -2963.32666, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 531.95258, -2968.99878, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 521.99323, -2969.00317, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 514.88519, -2968.98315, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6039, 576.07739, -2881.84253, 9.18000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(6039, 505.99780, -2906.46069, 9.18000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 590.62799, -2758.92017, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 593.11292, -2766.29199, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 593.09808, -2771.21558, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 593.09741, -2776.02710, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 593.08099, -2780.79443, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 590.59198, -2790.25732, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 590.62799, -2800.25244, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 681.41711, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 671.52838, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 661.65521, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 534.17102, -2727.72314, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 652.60931, -2768.16650, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 663.08484, -2768.17017, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 672.99554, -2768.18066, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 663.20978, -2778.00635, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 673.04657, -2777.97388, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 653.50378, -2778.38623, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 643.65161, -2777.72412, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 642.23596, -2763.89233, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 632.46515, -2767.67114, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 633.79846, -2777.70508, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 666.16211, -2781.76904, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 676.60724, -2773.21582, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 666.11639, -2764.20825, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 605.84229, -2752.20239, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 622.35217, -2744.43604, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 632.33350, -2744.43604, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 642.23071, -2744.43604, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 642.23761, -2754.00537, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 657.95142, -2768.16821, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18765, 632.36487, -2757.78394, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 629.79785, -2751.26099, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 634.75610, -2751.13989, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 632.42224, -2767.74023, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 639.66479, -2770.78760, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 555.57764, -2994.51465, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 585.40381, -2994.78052, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 609.94910, -2994.70654, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 631.71863, -2994.85425, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 655.49902, -2995.36206, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 676.72614, -2996.21387, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3615, 531.22961, -2993.88159, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 645.65546, -2749.29150, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 632.09192, -2740.27124, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 580.57892, -2740.04761, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 558.88147, -2740.04761, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 550.17102, -2754.78979, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2777.06006, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2799.51929, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2821.33032, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2842.82373, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2863.56860, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2884.53003, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 550.17102, -2904.95654, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 569.13257, -2917.29395, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2938.68677, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2928.67896, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2918.73071, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2908.89844, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2899.07349, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2889.20972, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2879.34839, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2869.60156, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2859.79248, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2849.88501, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2840.00537, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 524.87073, -2830.08081, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2830.31909, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2820.41504, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2810.53833, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2800.65576, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2791.00171, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2781.05615, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2771.20776, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2761.24390, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2751.49341, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 535.71771, -2741.71411, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 538.20789, -2734.91162, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1255, 623.26996, -3004.80835, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 602.12006, -3004.74854, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 609.35858, -3045.81470, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 654.90582, -3047.89355, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 576.42188, -3005.80493, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 544.80939, -3005.16577, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 543.55780, -3042.09375, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 695.98956, -3034.11182, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 644.79962, -3003.22388, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 668.32062, -3001.12964, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1255, 687.75659, -3001.21753, 1.56000, 0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18766, 587.97791, -2950.06494, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18766, 624.35645, -2945.01514, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 674.42572, -2902.25928, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 664.50891, -2902.20850, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 654.48346, -2902.20605, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 674.02667, -2912.16846, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 664.17340, -2912.10693, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 654.47638, -2912.22241, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 592.93982, -2910.13867, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 592.90344, -2920.13013, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 594.07843, -2784.27905, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 591.48383, -2784.31665, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 590.62830, -2749.09033, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18765, 612.38910, -2744.43604, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 603.30908, -2744.79590, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 602.34161, -2740.93872, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 605.03979, -2740.92554, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 606.97357, -2744.43188, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18766, 606.31049, -2745.89673, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18765, 615.80896, -2754.13037, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 623.20074, -2751.41992, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 626.23151, -2750.26489, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18763, 594.10522, -2740.58350, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18764, 590.29529, -2741.58740, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4887, 724.25580, -2803.33057, 11.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(643, 726.81879, -2795.20703, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 725.39899, -2817.10132, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.88855, -2816.42627, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.70520, -2807.05371, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.42096, -2796.20483, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 727.48212, -2825.33838, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 727.84277, -2832.37012, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 724.65881, -2839.86279, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 718.53699, -2840.90234, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.57825, -2840.14819, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.58435, -2833.08813, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 710.44086, -2825.81201, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 727.04041, -2801.67041, 10.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.49072, -2840.25171, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.55017, -2829.81470, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.56323, -2819.42578, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.56232, -2808.92041, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.63593, -2798.48218, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.74023, -2788.06128, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.80200, -2777.56934, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 743.68353, -2767.04419, 6.00000, 90.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.85803, -2798.35938, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.88519, -2803.69263, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.30255, -2795.65454, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.29871, -2800.98022, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.25610, -2816.66602, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.22577, -2811.31128, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.88141, -2817.03931, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.94769, -2825.11182, 11.46000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.80609, -2834.81079, 11.46000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.16736, -2824.95605, 11.46000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 714.12634, -2834.64771, 11.46000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 718.79028, -2837.57397, 11.46000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(642, 727.02039, -2801.71045, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 726.79883, -2795.24707, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.40100, -2796.24487, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.69110, -2807.09619, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.86023, -2816.50024, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 725.29901, -2817.10132, 11.24000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 727.46350, -2825.37402, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 727.83014, -2832.42090, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 724.64221, -2839.89111, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 718.51886, -2840.93750, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.56952, -2840.25684, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.49481, -2833.09204, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 710.39386, -2825.89429, 12.08000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 722.82117, -2792.97119, 10.56000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 714.39722, -2804.11499, 10.12000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 714.25018, -2808.22534, 10.12000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 722.98260, -2806.71362, 10.12000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 722.85925, -2813.98047, 10.12000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 722.88898, -2828.11084, 11.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 722.76959, -2831.87305, 11.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 714.18542, -2827.99072, 11.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(644, 714.08130, -2831.45288, 11.04000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 611.61481, -2740.27124, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 679.45605, -2950.09521, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18766, 679.17401, -2910.55078, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18763, 594.12854, -2742.86914, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 647.54669, -2768.15991, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18766, 705.73224, -2969.05615, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 549.52429, -2731.37744, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 572.51569, -2731.37744, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 595.96570, -2731.37744, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 621.13678, -2731.37744, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 654.81152, -2731.37744, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 688.14020, -2731.41211, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 697.10193, -2744.44189, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2769.89966, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2793.91992, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2821.30371, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2846.76099, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2873.90454, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2899.64600, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2926.46533, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 697.10193, -2951.01001, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 684.84125, -2964.53613, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 662.21326, -2964.44067, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 638.09082, -2964.41333, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 614.86938, -2964.51587, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 591.79327, -2964.52417, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 562.19727, -2964.75122, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 540.03186, -2964.78638, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 518.76709, -2953.82104, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 528.49939, -2933.78003, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 528.49939, -2907.30957, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 528.49939, -2880.32324, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 528.49939, -2854.62207, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 615.27216, -2808.66992, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 634.85004, -2808.77686, 3.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 539.41034, -2825.41211, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 539.41028, -2798.50098, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 539.41028, -2770.45337, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3660, 539.41028, -2746.63818, 3.00000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18764, 533.41742, -2735.13550, -1.32000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 530.27191, -2830.30835, -1.32000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 620.93359, -2943.99341, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 591.96979, -2917.93579, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 549.17688, -2918.25977, 3.90000, 0.00000, 0.00000, -45.00000);
    CreateDynamicObject(1231, 555.27399, -2886.92871, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 555.26758, -2860.30664, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 513.88751, -2938.61401, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 513.71954, -2969.26489, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 551.05560, -2970.26074, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 571.35156, -2970.39478, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 636.03223, -2972.20459, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 684.53870, -2972.60864, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 529.21295, -2923.82031, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 528.98505, -2896.77588, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 528.96106, -2870.24927, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 529.04962, -2844.37012, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 536.00867, -2824.00635, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 534.43250, -2799.34595, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 533.54889, -2748.19043, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 624.69952, -2727.36646, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 643.02203, -2727.91016, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 662.33716, -2727.13037, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 683.71100, -2727.15747, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 701.61298, -2727.16992, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 656.04938, -2780.60107, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 654.49420, -2765.04346, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 641.12244, -2742.00586, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 621.80963, -2740.69580, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 601.55231, -2740.74854, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 603.52081, -2756.46997, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 603.10443, -2770.72754, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 603.39063, -2785.88672, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1231, 603.73987, -2804.06860, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3506, 701.91864, -2755.43970, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 701.86816, -2735.98584, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 690.86505, -2727.14551, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 667.56964, -2726.38330, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 651.06409, -2726.64258, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 619.03125, -2727.73779, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 528.18439, -2748.91992, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 539.79010, -2757.62085, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 539.75525, -2781.14941, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 529.17340, -2799.80859, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 539.89215, -2809.49268, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 532.23895, -2831.35132, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 534.36761, -2831.11792, 3.90000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3506, 517.49536, -2852.49829, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 524.01575, -2882.64551, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 518.16949, -2906.31177, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 524.43353, -2941.03540, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 513.60669, -2953.82886, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 528.00562, -2970.70044, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 560.89777, -2970.51099, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 591.78772, -2930.65332, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 604.62292, -2918.12646, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 607.72009, -2915.15942, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 604.82117, -2915.51172, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 700.43652, -2908.32593, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 702.16498, -2886.53784, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 710.30383, -2870.69922, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 702.99280, -2865.11060, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 703.08514, -2879.87280, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 697.18335, -2857.18677, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 697.34021, -2863.74951, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 688.19202, -2856.60913, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 688.22223, -2836.72583, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 688.37817, -2816.73853, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 688.37811, -2816.63843, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1291, 593.68915, -2811.62109, 1.52000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 593.77228, -2789.11548, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 606.55194, -2745.05298, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 602.94507, -2765.62402, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 602.65710, -2793.89697, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 636.88757, -2746.38135, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1291, 665.54022, -2731.44458, 1.68000, 0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1363, 591.25269, -2743.82520, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 616.08966, -2746.05542, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 631.13794, -2749.31909, 0.96900, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1231, 624.19507, -2746.66602, 3.90000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 642.92438, -2745.21533, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 700.26318, -2733.79736, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 697.30933, -2783.15479, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1363, 704.86072, -2860.95117, 2.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(746, 606.91272, -2915.95581, 1.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(700, 617.34070, -2920.49902, 1.01725, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(700, 599.70416, -2921.15723, 1.01725, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(700, 597.47504, -2888.90527, 1.01725, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(700, 630.89795, -2853.59375, 1.01725, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 604.45441, -2868.79834, 1.19200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 604.03229, -2859.59814, 1.19200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 593.48163, -2858.53271, 1.19200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 588.58173, -2881.84082, 1.19200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 604.74133, -2877.63940, 1.19200, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18766, 653.79651, -2670.67114, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 653.79651, -2660.79272, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 653.79651, -2650.81763, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 590.41583, -2670.55688, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 590.41577, -2660.69971, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(18766, 590.41577, -2650.74292, 0.00000, 90.00000, 90.00000, 0.00000);
    CreateDynamicObject(19338, 506.90262, -2708.61694, 7.68000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19337, 555.28894, -2679.01514, 1.02000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19336, 721.69452, -2678.18066, 1.02000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18770, 590.36176, -2647.14258, -100.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18770, 604.77374, -2648.75098, -100.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18770, 622.57318, -2648.86719, -100.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18770, 639.90723, -2648.45410, -100.00000, 0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18770, 654.07904, -2648.60181, -100.00000, 0.00000, 0.00000, 0.00000);
	//island house
	CreateDynamicObject(18751, 596.34637, -2068.30737, 3.46339,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18751, 536.69910, -2068.82202, 2.66657,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 515.63983, -2043.84985, 7.60534,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 515.62939, -2059.83936, 7.60530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 515.61908, -2075.83008, 7.60530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 515.61078, -2091.83154, 7.60530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 512.18420, -2033.36011, 7.60530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 501.68451, -2036.82104, 7.60530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 501.70401, -2052.81470, 7.60530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 501.71170, -2068.79492, 7.60530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 501.72400, -2084.79346, 7.60530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 505.17981, -2095.27856, 7.60530,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3648, 508.01010, -2087.96069, 10.55300,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(11496, 508.65665, -2079.49536, 7.58530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3640, 507.30945, -2071.60181, 12.26150,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 510.62582, -2061.88550, 7.58530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 510.65671, -2047.18677, 7.58530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 515.69330, -2079.85571, 7.58530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 504.89444, -2062.25537, 7.58530,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 502.87411, -2047.24585, 7.58530,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 510.73071, -2043.86646, 7.56530,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 502.96829, -2043.80347, 7.56530,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3648, 506.66141, -2054.48535, 10.55300,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(11496, 543.45758, -2088.39331, 9.84066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 559.40601, -2088.39478, 9.84066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 575.39697, -2088.36133, 9.84066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 539.99298, -2098.87427, 9.84070,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11490, 560.33850, -2097.88281, 8.54900,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 550.47089, -2102.33936, 9.84070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 568.35864, -2102.30273, 9.84070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 578.85040, -2098.85278, 9.84070,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 557.39313, -2102.31177, 9.82070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 568.37860, -2093.34692, 9.84070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 550.44879, -2093.37549, 9.84070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 591.38043, -2088.39551, 9.84066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19452, 560.37720, -2090.50952, 11.51665,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19452, 560.82324, -2102.36865, 12.23800,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 562.52380, -2090.51709, 13.81900,   0.00000, -135.00000, 0.00000);
	CreateDynamicObject(1649, 558.28027, -2090.47412, 13.93320,   0.00000, 135.00000, 0.00000);
	CreateDynamicObject(1569, 559.50360, -2089.23071, 10.04120,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11496, 594.83820, -2098.88965, 9.84070,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 586.97510, -2102.31421, 9.82070,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3640, 506.95349, -2039.54346, 12.26150,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3648, 587.33881, -2096.04346, 12.76980,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11496, 613.47504, -2088.46069, 9.83850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 613.47742, -2072.46631, 9.83850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 613.48560, -2056.47681, 9.83850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 613.49554, -2040.47302, 9.83850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, 623.95209, -2091.93335, 9.83850,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11496, 627.41089, -2081.44067, 9.83850,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 627.41455, -2065.44824, 9.83850,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 627.42261, -2049.45337, 9.83850,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11496, 623.98633, -2037.02063, 9.83850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.91290, -2044.02429, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.70258, -2050.91602, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.73773, -2058.05884, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.56085, -2065.13940, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.96240, -2072.09253, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.88837, -2079.03003, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11496, 623.58667, -2086.99390, 9.81850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3648, 621.19019, -2042.80225, 12.75750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3640, 622.01056, -2059.30884, 14.46980,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(5520, 622.40472, -2080.75391, 15.15860,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11496, 623.73901, -2082.95166, 9.79850,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.11029, -2031.58728, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.09869, -2034.78699, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.09393, -2042.90552, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.10565, -2048.35693, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.10083, -2051.95679, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.09790, -2059.39844, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.07892, -2064.82251, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.05890, -2066.82495, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.07446, -2075.01147, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.09229, -2080.45361, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.08459, -2084.43481, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.06390, -2091.49561, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 520.06580, -2097.11597, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 517.30963, -2099.76172, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 511.86911, -2099.74756, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 506.40912, -2099.74146, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 500.96634, -2099.75098, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 499.76517, -2099.73047, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 517.30170, -2080.60669, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 511.85855, -2080.60767, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 517.34351, -2062.27222, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 511.88550, -2062.26294, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 506.43771, -2062.25269, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 517.31738, -2047.42395, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 511.87158, -2047.42200, 8.36220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 517.39954, -2028.90747, 8.36220,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1408, 511.94080, -2028.90161, 8.36220,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1408, 506.49338, -2028.89868, 8.36220,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1408, 501.04022, -2028.90710, 8.36220,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3361, 522.94202, -2038.84729, 5.72540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3361, 522.94202, -2038.84729, 5.72540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3361, 522.96295, -2055.70435, 5.72540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3361, 522.93658, -2070.80420, 5.72540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3361, 522.88812, -2087.94482, 5.72540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 538.22711, -2083.94092, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 543.66669, -2083.92041, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 549.09418, -2083.92310, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 554.53656, -2083.93164, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 556.13623, -2083.93555, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 563.99951, -2083.92993, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 569.45972, -2083.91748, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 574.93939, -2083.89331, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 580.38367, -2083.89917, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 583.96820, -2083.90283, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 591.35114, -2083.92432, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 596.66980, -2083.92163, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 599.30249, -2086.64575, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 599.29926, -2092.10571, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 599.29602, -2097.56396, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 599.29443, -2103.00269, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 579.45782, -2086.67920, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 579.44940, -2092.12305, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 579.45496, -2097.52466, 10.60170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 535.53296, -2086.65308, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 535.52350, -2092.12158, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 535.52887, -2097.58154, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 535.53650, -2103.04492, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3361, 560.08569, -2081.11841, 7.94930,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3361, 587.63525, -2081.00464, 7.94930,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 505.08801, -2031.70288, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 508.44049, -2047.07532, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 504.45404, -2062.39111, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 506.69336, -2079.82227, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 505.59601, -2097.02271, 8.36220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1408, 579.31793, -2097.01123, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 609.01453, -2093.67896, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.00983, -2088.23779, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.00177, -2080.73169, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.01434, -2075.27832, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.00397, -2069.81201, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.00519, -2064.35156, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.03009, -2056.84351, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.01385, -2051.42334, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.02155, -2045.32288, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.04218, -2037.96069, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 609.04224, -2035.19739, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 611.78870, -2032.57556, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 617.25104, -2032.58264, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 622.73114, -2032.56287, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 628.15100, -2032.56226, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 611.81073, -2050.64478, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 617.25916, -2050.63623, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 611.78613, -2068.17944, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 617.17096, -2068.17969, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 623.16266, -2035.28809, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 621.92255, -2050.44189, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 619.10718, -2069.50415, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 611.69189, -2096.37622, 10.60170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 617.14789, -2096.39209, 10.60170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 622.60779, -2096.38892, 10.60170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 628.05847, -2096.38843, 10.60170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 623.70959, -2093.66870, 10.60170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3361, 606.08807, -2084.57471, 7.94930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3361, 606.18695, -2060.63867, 7.94930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3361, 606.21539, -2041.62256, 7.94930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3361, 600.71210, -2041.62561, 4.27270,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(625, 520.96289, -2029.61157, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.25720, -2043.44861, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.18976, -2050.09937, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.07275, -2061.53809, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.29852, -2066.12354, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.27570, -2075.92676, 8.52080,   0.00000, 0.00000, 1.56000);
	CreateDynamicObject(625, 521.26379, -2083.00952, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.11176, -2099.02661, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 508.13220, -2099.11475, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 514.42407, -2099.09351, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 521.19202, -2093.19067, 8.52080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 538.35492, -2100.51855, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1408, 596.48364, -2099.47485, 10.60170,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(625, 537.99426, -2099.93091, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 537.98566, -2091.72412, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 538.03540, -2084.54517, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 547.51581, -2084.64941, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 556.75525, -2084.56421, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 569.14368, -2084.54053, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 577.90741, -2084.58887, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 584.38672, -2084.78662, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 593.32849, -2084.45459, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 600.30096, -2084.66113, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 600.43201, -2091.56982, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 600.41272, -2098.88696, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 597.55048, -2103.22925, 10.84430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 622.28424, -2093.97656, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.77924, -2093.89795, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.63550, -2087.09814, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.75598, -2079.01001, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.72266, -2067.24902, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.69000, -2055.88818, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.72540, -2048.19995, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 609.63318, -2038.14087, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 616.83441, -2031.49023, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 622.50604, -2031.41577, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(625, 627.71228, -2032.58594, 10.84430,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(18228, 627.82111, -2022.18042, -5.65032,   0.00000, 0.00000, 132.89998);
	CreateDynamicObject(710, 590.78564, -2049.71436, 20.61799,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 580.28424, -2070.23413, 18.10714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 535.91705, -2068.75464, 22.83529,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 538.07758, -2048.14478, 18.99059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 543.91187, -2054.99121, 18.99059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 526.35406, -2112.86890, 15.61975,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18228, 505.32523, -2116.62793, -5.65032,   0.00000, 0.00000, 300.89996);
	CreateDynamicObject(710, 497.02563, -2101.55884, 15.61975,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 492.16971, -2081.14038, 14.39736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 489.92517, -2051.07983, 14.39736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 513.52838, -2023.81995, 14.39736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 606.65698, -2066.92529, 22.86846,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 636.40021, -2032.36523, 18.33943,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 642.04413, -2058.50610, 14.31365,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 642.27826, -2080.59692, 14.31365,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 630.78766, -2103.22266, 19.36145,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 590.13196, -2108.65405, 16.78982,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 549.99487, -2117.69873, 16.78982,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 609.03760, -2108.42480, -12.37333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 523.13727, -2106.58716, -12.37333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 565.37238, -2116.48120, -22.24227,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 627.43164, -2110.46240, -27.10451,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 636.22125, -2071.85181, -12.37333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 644.86536, -2043.57507, -25.76430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 491.43634, -2068.17505, -24.32100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(622, 631.36157, -2018.19727, -0.16370,   0.00000, 0.00000, -4.68000);
	CreateDynamicObject(622, 493.83286, -2031.41455, -0.16370,   0.00000, 0.00000, 54.36002);
	CreateDynamicObject(622, 641.16187, -2026.84900, -0.16370,   0.00000, 0.00000, -67.74000);
	CreateDynamicObject(18228, 487.53516, -2040.79456, -5.65032,   0.00000, 0.00000, 220.91998);
	CreateDynamicObject(18228, 639.39563, -2107.05200, -5.65032,   0.00000, 0.00000, 356.39996);
	CreateDynamicObject(622, 639.08826, -2106.23291, -0.16370,   0.00000, 0.00000, -67.74000);
	CreateDynamicObject(622, 494.86606, -2110.51904, -0.16370,   0.00000, 0.00000, -208.79996);
	CreateDynamicObject(622, 485.19919, -2047.86450, -0.16370,   0.00000, 0.00000, 87.12000);
	CreateDynamicObject(6296, 561.40698, -2038.62146, 6.10189,   0.00000, 0.00000, 89.45999);
	CreateDynamicObject(11495, 524.56134, -2015.90405, 1.23730,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11495, 524.55823, -2006.73865, 1.21730,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(822, 590.69611, -2049.03638, 6.03149,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 606.04852, -2066.08496, 8.82695,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 580.31525, -2069.87817, 7.51925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(740, 582.08197, -2068.64575, -27.10451,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 581.95587, -2069.36230, 7.51925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 535.84045, -2068.27734, 8.83406,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 543.79559, -2054.24854, 7.11698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 538.47992, -2047.32007, 4.86358,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 567.09656, -2032.93518, 3.56001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 568.32629, -2033.14075, 3.56001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 569.54504, -2035.42090, 3.56001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 570.24640, -2037.36267, 4.26906,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(822, 571.24878, -2040.71545, 4.57207,   0.00000, 0.00000, -74.16000);
	CreateDynamicObject(822, 555.74994, -2032.37830, 3.56001,   0.00000, 0.00000, 262.62000);
	CreateDynamicObject(822, 553.37451, -2034.77319, 3.56001,   0.00000, 0.00000, 284.40002);
	CreateDynamicObject(822, 552.61444, -2037.61487, 3.56001,   0.00000, 0.00000, 284.40002);
	CreateDynamicObject(822, 553.17200, -2040.58630, 4.07011,   0.00000, 0.00000, 284.40002);
	CreateDynamicObject(822, 554.39764, -2043.42468, 4.47615,   0.00000, 0.00000, 284.40002);
	CreateDynamicObject(1255, 515.10352, -2031.35095, 8.34530,   0.00000, 0.00000, 40.44000);
	CreateDynamicObject(1255, 514.82526, -2033.60291, 8.34530,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(1255, 517.34985, -2034.36621, 8.34530,   0.00000, 0.00000, 54.12000);
	CreateDynamicObject(1255, 612.88312, -2035.30103, 10.60110,   0.00000, 0.00000, 147.48000);
	CreateDynamicObject(1255, 612.84558, -2037.61768, 10.60110,   0.00000, 0.00000, 138.84001);
	CreateDynamicObject(1255, 610.57007, -2037.28296, 10.60110,   0.00000, 0.00000, 103.01999);
	CreateDynamicObject(1255, 572.40955, -2032.23059, 5.24213,   0.00000, 0.00000, 88.80000);
	CreateDynamicObject(1255, 578.10449, -2032.83508, 4.42593,   0.00000, 0.00000, 61.67999);
	CreateDynamicObject(1255, 582.03247, -2033.12073, 4.52896,   0.00000, 0.00000, 90.89999);
	CreateDynamicObject(1255, 586.28754, -2032.91736, 4.52896,   0.00000, 0.00000, 90.30000);
	CreateDynamicObject(1255, 589.70398, -2032.98462, 4.93096,   0.00000, 0.00000, 90.30000);
	CreateDynamicObject(18751, 607.93988, -2010.18469, -4.53550,   0.00000, 0.00000, -94.20000);
	CreateDynamicObject(18751, 610.01587, -1984.05420, -4.53550,   0.00000, 0.00000, -94.20000);
	CreateDynamicObject(18751, 603.90295, -1963.33630, -4.53550,   0.00000, 0.00000, -273.05991);
	CreateDynamicObject(18751, 614.68036, -1938.68530, -4.53550,   0.00000, 0.00000, -198.71989);
	CreateDynamicObject(18751, 623.38385, -1918.77917, -4.53550,   0.00000, 0.00000, -120.71990);
	CreateDynamicObject(622, 633.86127, -1919.66357, -0.44779,   0.00000, 0.00000, 244.97997);
	CreateDynamicObject(622, 602.32483, -1914.62744, -0.44779,   0.00000, 0.00000, 108.53996);
	CreateDynamicObject(710, 628.90405, -1929.86938, 13.84110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 596.36719, -1932.80823, 13.78244,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(710, 620.21619, -2015.49182, 13.78244,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18751, 607.11755, -2024.68176, -3.05497,   0.00000, 0.00000, -229.25999);
	CreateDynamicObject(896, 638.11700, -1919.77466, 0.17528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(896, 648.00592, -1924.91724, 0.17528,   0.00000, 0.00000, -61.86000);
	CreateDynamicObject(896, 636.75464, -1930.35645, 0.17528,   0.00000, 0.00000, -61.86000);
	CreateDynamicObject(896, 596.02026, -1921.69116, 0.17528,   0.00000, 0.00000, -70.98000);
	CreateDynamicObject(896, 597.96564, -1913.68665, 0.17528,   0.00000, 0.00000, 43.19999);
	CreateDynamicObject(896, 599.49670, -1928.47351, 0.17528,   0.00000, 0.00000, 87.06000);
/*	//=== Spawn
    CreateDynamicObject(896, -3962.20190, -848.51056, 2.97160,   0.00000, 0.00000, -113.00000);
    CreateDynamicObject(897, -3955.66016, -847.30060, 2.97160,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(900, -3946.83252, -851.03009, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3962.88013, -869.39978, 7.82300,   -25.00000, -18.00000, -115.00000);
    CreateDynamicObject(900, -3936.32544, -848.67889, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3940.55151, -858.03564, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3932.12012, -854.01959, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 6.61500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 9.63500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 12.35300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.49658, -890.18109, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.49658, -890.18109, 6.31300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.49658, -890.18109, 8.42700,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.76318, -905.91644, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3964.21216, -904.38525, 7.21900,   -142.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.47266, -916.20886, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.47266, -916.20886, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3965.03027, -922.89270, 6.61500,   -25.00000, -55.00000, -338.00000);
    CreateDynamicObject(900, -3965.25146, -928.09082, 6.61500,   -91.00000, 149.00000, -4.00000);
    CreateDynamicObject(900, -3965.55615, -933.42761, 6.61500,   -149.00000, 47.00000, -120.00000);
    CreateDynamicObject(900, -3966.79541, -941.69513, 6.61500,   -25.00000, -135.00000, -120.00000);
    CreateDynamicObject(900, -3967.34961, -949.94983, 6.61500,   -25.00000, 0.00000, -164.00000);
    CreateDynamicObject(900, -3967.75952, -955.07880, 6.61500,   -25.00000, 0.00000, -11.00000);
    CreateDynamicObject(900, -3956.37598, -962.33228, 17.05500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3946.03394, -967.03339, 12.01500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3940.83911, -967.49554, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3940.54565, -857.67560, 9.33300,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3932.12012, -854.01959, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3935.03076, -853.08807, 5.70900,   40.00000, 0.00000, 142.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 12.35300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 15.37300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3942.00830, -854.20807, 5.60500,   156.00000, -160.00000, -113.00000);
    CreateDynamicObject(900, -3935.47266, -967.82391, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3927.88721, -967.01208, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3927.43213, -966.79077, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3916.61401, -962.05420, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3919.45288, -965.93439, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3917.98926, -966.89941, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(19550, -3948.60962, -907.27478, 3.01890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(900, -3916.88574, -966.87097, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3914.80054, -966.89758, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3911.73511, -965.80402, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3912.56152, -967.54816, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3910.91772, -965.10938, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3894.88721, -957.46552, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3894.54858, -954.14423, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3895.68115, -953.89026, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3895.68115, -953.89026, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3897.95068, -953.26630, 6.61500,   -25.00000, 47.00000, 91.00000);
    CreateDynamicObject(900, -3895.14111, -943.63116, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.41895, -939.35962, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3910.91772, -965.10938, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3910.85107, -964.89587, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3894.41895, -939.35962, 6.61500,   55.00000, 60.00000, 65.00000);
    CreateDynamicObject(900, -3894.31543, -937.60828, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.31543, -937.60828, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3896.70508, -936.47913, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3892.63208, -932.90961, 6.61500,   -25.00000, -185.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.88379, -926.57257, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.75244, -920.06299, 6.61500,   -25.00000, -149.00000, 198.00000);
    CreateDynamicObject(900, -3893.88379, -926.57257, 6.61500,   59.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.99976, -924.92242, 6.61500,   -200.00000, 0.00000, 244.00000);
    CreateDynamicObject(900, -3893.84326, -916.23914, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.21533, -930.45947, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   105.00000, 40.00000, 65.00000);
    CreateDynamicObject(900, -3894.07861, -905.75201, 6.61500,   -25.00000, 0.00000, -69.00000);
    CreateDynamicObject(900, -3894.07861, -905.75201, 6.61500,   -25.00000, 0.00000, 244.00000);
    CreateDynamicObject(900, -3893.96704, -897.93689, 6.61500,   -25.00000, 0.00000, 101.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, 25.00000, 65.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, -84.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.94629, -884.82806, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.13525, -880.12805, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.13525, -880.12805, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.08594, -875.87311, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.98486, -872.74823, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.98486, -872.74823, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.94482, -867.99017, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3895.26416, -861.27203, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 35.00000);
    CreateDynamicObject(900, -3897.57007, -860.18506, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3897.57007, -860.18506, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3899.75024, -859.65259, 6.61500,   -25.00000, 0.00000, -127.00000);
    CreateDynamicObject(900, -3900.30176, -859.35773, 6.61500,   -25.00000, 0.00000, -127.00000);
    CreateDynamicObject(900, -3903.82861, -857.05768, 6.61500,   -25.00000, 0.00000, -229.00000);
    CreateDynamicObject(900, -3900.30176, -859.35773, 6.61500,   -25.00000, 0.00000, -222.00000);
    CreateDynamicObject(900, -3921.32153, -853.58820, 5.70900,   40.00000, 0.00000, -76.00000);
    CreateDynamicObject(900, -3921.32153, -853.58820, 5.70900,   40.00000, 0.00000, -76.00000);
    CreateDynamicObject(900, -3914.03516, -854.36133, 5.70900,   40.00000, 0.00000, -98.00000);
    CreateDynamicObject(898, -3901.22070, -892.09302, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.42529, -888.80157, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.42529, -888.80157, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.29077, -885.52087, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3898.93213, -883.86749, 11.46370,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3903.92017, -880.16272, 13.57770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3904.90771, -875.93579, 13.57770,   0.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3915.72363, -959.63318, 10.85970,   0.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3919.85498, -958.62091, 10.85970,   -105.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3923.83252, -959.48578, 10.85970,   178.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3925.92529, -957.61328, 7.53770,   178.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3928.79956, -957.13184, 7.53770,   178.00000, 47.00000, -200.00000);
    CreateDynamicObject(898, -3931.38892, -958.01129, 7.53770,   178.00000, 47.00000, -200.00000);
    CreateDynamicObject(18747, -3956.17212, -865.46912, 17.55690,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18747, -3900.86475, -961.44550, 32.25240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19840, -3903.97388, -956.24988, 10.11240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3904.38403, -955.68329, 6.79040,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3904.11450, -956.05566, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3903.20630, -956.90320, 11.92440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3902.84131, -957.30536, 13.43440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3902.21265, -958.10858, 14.64240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.23218, -960.21307, 16.45440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.46704, -952.37012, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3898.56128, -955.37347, 14.64240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3903.72900, -948.97229, 5.58240,   0.00000, 0.00000, 287.00000);
    CreateDynamicObject(19840, -3901.46704, -952.37012, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.46704, -952.37012, 7.39440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3911.85278, -957.08472, 5.58240,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(19842, -3907.10986, -955.44897, 3.04470,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(19842, -3902.37598, -950.82959, 3.04470,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(900, -3969.03491, -951.85663, 10.61100,   -25.00000, -76.00000, -135.00000);
    CreateDynamicObject(900, -3903.71631, -962.48822, 10.61100,   -25.00000, -76.00000, -11.00000);
    CreateDynamicObject(900, -3896.23315, -864.03943, 10.61100,   -25.00000, -76.00000, 76.00000);
    CreateDynamicObject(900, -3896.23315, -864.03943, 10.61100,   -25.00000, -76.00000, 76.00000);
    CreateDynamicObject(900, -3937.56763, -852.46588, 10.61100,   -25.00000, -76.00000, 127.00000);
    CreateDynamicObject(900, -3918.00757, -850.56012, 10.61100,   -25.00000, -76.00000, 91.00000);
    CreateDynamicObject(900, -3961.23096, -872.06921, 10.61100,   -25.00000, -76.00000, 207.00000);
    CreateDynamicObject(900, -3968.64868, -894.51886, 10.61100,   -25.00000, -76.00000, 207.00000);
    CreateDynamicObject(900, -3973.60791, -918.42462, 10.61100,   -25.00000, -76.00000, 11.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(19952, -3910.10815, -938.49310, 3.00980,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(19952, -3910.34546, -936.74860, 3.00980,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(19952, -3909.38989, -935.47437, 3.00980,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(19379, -3930.74951, -876.34546, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.72583, -885.88062, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.67603, -895.26385, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.69824, -904.90289, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.75562, -914.53571, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.75562, -914.53571, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.72681, -924.13574, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3926.75488, -931.44720, 2.95960,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3944.16187, -948.26184, 3.00760,   0.00000, 91.00000, -91.00000);
    CreateDynamicObject(19379, -3922.41675, -936.44208, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3922.30005, -936.55157, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3918.16333, -940.85156, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3918.16333, -940.85156, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3914.11084, -945.18207, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3936.44409, -931.44611, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3943.95728, -937.82391, 3.00760,   0.00000, 91.00000, 89.00000);
    CreateDynamicObject(19379, -3940.79102, -953.07355, 3.00760,   0.00000, 91.00000, -91.00000);
    CreateDynamicObject(898, -3919.85498, -958.62091, 10.85970,   -105.00000, 215.00000, -200.00000);
    CreateDynamicObject(19379, -3930.74951, -876.34546, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.76855, -866.72467, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(896, -3962.20190, -848.51056, 2.97160,   0.00000, 0.00000, -113.00000);
    CreateDynamicObject(897, -3955.66016, -847.30060, 2.97160,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(900, -3946.83252, -851.03009, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3962.88013, -869.39978, 7.82300,   -25.00000, -18.00000, -115.00000);
    CreateDynamicObject(900, -3936.32544, -848.67889, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3940.55151, -858.03564, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3932.12012, -854.01959, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 6.61500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3962.36182, -865.63141, 9.63500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 12.35300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.49658, -890.18109, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.49658, -890.18109, 6.31300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3962.84204, -890.63501, 8.42700,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.76318, -905.91644, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.47266, -916.20886, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3963.47266, -916.20886, 3.59500,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3965.03027, -922.89270, 6.61500,   -25.00000, -55.00000, -338.00000);
    CreateDynamicObject(900, -3965.25146, -928.09082, 6.61500,   -91.00000, 149.00000, -4.00000);
    CreateDynamicObject(900, -3965.55615, -933.42761, 6.61500,   -149.00000, 47.00000, -120.00000);
    CreateDynamicObject(900, -3966.79541, -941.69513, 6.61500,   -25.00000, -135.00000, -120.00000);
    CreateDynamicObject(900, -3967.34961, -949.94983, 6.61500,   -25.00000, 0.00000, -164.00000);
    CreateDynamicObject(900, -3967.75952, -955.07880, 6.61500,   -25.00000, 0.00000, -11.00000);
    CreateDynamicObject(900, -3956.37598, -962.33228, 17.05500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3946.03394, -967.03339, 12.01500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3940.83911, -967.49554, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3939.35278, -853.46844, 9.33300,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3932.58887, -857.20868, 3.59500,   40.00000, 0.00000, 11.00000);
    CreateDynamicObject(900, -3934.92041, -853.98712, 5.70900,   40.00000, 0.00000, 142.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 12.35300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3957.93384, -857.74408, 15.37300,   -25.00000, 0.00000, -120.00000);
    CreateDynamicObject(900, -3942.00830, -854.20807, 5.60500,   156.00000, -160.00000, -113.00000);
    CreateDynamicObject(900, -3935.47266, -967.82391, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3927.88721, -967.01208, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3927.43213, -966.79077, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3916.63379, -962.05713, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3919.31689, -965.85687, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3917.98926, -966.89941, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3916.88574, -966.87097, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3914.80054, -966.89758, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3911.73511, -965.80402, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3912.56152, -967.54816, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3910.91772, -965.10938, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3894.88721, -957.46552, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3894.54858, -954.14423, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3895.68115, -953.89026, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3895.68115, -953.89026, 6.61500,   -25.00000, 0.00000, 91.00000);
    CreateDynamicObject(900, -3897.95068, -953.26630, 6.61500,   -25.00000, 47.00000, 91.00000);
    CreateDynamicObject(900, -3896.27637, -943.72992, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.41895, -939.35962, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3910.91772, -965.10938, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3910.85107, -964.89587, 6.61500,   -25.00000, 0.00000, -40.00000);
    CreateDynamicObject(900, -3894.41895, -939.35962, 6.61500,   55.00000, 60.00000, 65.00000);
    CreateDynamicObject(900, -3894.31543, -937.60828, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.31543, -937.60828, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3897.96655, -935.44019, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.88379, -926.57257, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.75244, -920.06299, 6.61500,   -25.00000, -149.00000, 198.00000);
    CreateDynamicObject(900, -3893.88379, -926.57257, 6.61500,   59.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.99976, -924.92242, 6.61500,   -200.00000, 0.00000, 244.00000);
    CreateDynamicObject(900, -3893.84326, -916.23914, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.21533, -930.45947, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.89478, -930.41730, 6.61500,   105.00000, 40.00000, 65.00000);
    CreateDynamicObject(900, -3894.07861, -905.75201, 6.61500,   -25.00000, 0.00000, -69.00000);
    CreateDynamicObject(900, -3894.07861, -905.75201, 6.61500,   -25.00000, 0.00000, 244.00000);
    CreateDynamicObject(900, -3893.96704, -897.93689, 6.61500,   -25.00000, 0.00000, 101.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, 25.00000, 65.00000);
    CreateDynamicObject(900, -3894.36572, -893.70837, 6.61500,   -25.00000, -84.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.94629, -884.82806, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.13525, -880.12805, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.13525, -880.12805, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.08594, -875.87311, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.98486, -872.74823, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.98486, -872.74823, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3893.94482, -867.99017, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3895.26416, -861.27203, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3894.58008, -890.11133, 6.61500,   -25.00000, 0.00000, 35.00000);
    CreateDynamicObject(900, -3897.57007, -860.18506, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3897.57007, -860.18506, 6.61500,   -25.00000, 0.00000, 65.00000);
    CreateDynamicObject(900, -3899.75024, -859.65259, 6.61500,   -25.00000, 0.00000, -127.00000);
    CreateDynamicObject(900, -3900.30176, -859.35773, 6.61500,   -25.00000, 0.00000, -127.00000);
    CreateDynamicObject(900, -3903.82861, -857.05768, 6.61500,   -25.00000, 0.00000, -229.00000);
    CreateDynamicObject(900, -3900.30176, -859.35773, 6.61500,   -25.00000, 0.00000, -222.00000);
    CreateDynamicObject(900, -3921.32153, -853.58820, 5.70900,   40.00000, 0.00000, -76.00000);
    CreateDynamicObject(900, -3921.32153, -853.58820, 5.70900,   40.00000, 0.00000, -76.00000);
    CreateDynamicObject(900, -3914.03516, -854.36133, 5.70900,   40.00000, 0.00000, -98.00000);
    CreateDynamicObject(898, -3901.22070, -892.09302, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.42529, -888.80157, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.42529, -888.80157, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3901.29077, -885.52087, 9.04770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3898.93213, -883.86749, 11.46370,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3903.92017, -880.16272, 13.57770,   0.00000, 84.00000, -200.00000);
    CreateDynamicObject(898, -3904.90771, -875.93579, 13.57770,   0.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3915.82275, -959.68506, 10.85970,   0.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3919.85498, -958.62091, 10.85970,   -105.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3923.83252, -959.48578, 10.85970,   178.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3925.92529, -957.61328, 7.53770,   178.00000, 215.00000, -200.00000);
    CreateDynamicObject(898, -3928.79956, -957.13184, 7.53770,   178.00000, 47.00000, -200.00000);
    CreateDynamicObject(898, -3931.38892, -958.01129, 7.53770,   178.00000, 47.00000, -200.00000);
    CreateDynamicObject(18747, -3956.17212, -865.46912, 17.55690,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18747, -3900.86475, -961.44550, 32.25240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19840, -3903.97388, -956.24988, 10.11240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3904.38403, -955.68329, 6.79040,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3904.04224, -956.02142, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3903.20630, -956.90320, 11.92440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3902.84131, -957.30536, 13.43440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3902.21265, -958.10858, 14.64240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.23218, -960.21307, 16.45440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.65527, -952.08160, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3898.54980, -955.25751, 14.64240,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3903.87329, -948.61188, 5.58240,   0.00000, 0.00000, 287.00000);
    CreateDynamicObject(19840, -3902.75977, -952.05737, 10.71640,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3901.21045, -952.19116, 7.39440,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(19840, -3911.85278, -957.08472, 5.58240,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(19842, -3902.34180, -950.85046, 3.04470,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(900, -3969.03491, -951.85663, 10.61100,   -25.00000, -76.00000, -135.00000);
    CreateDynamicObject(900, -3902.44800, -960.85541, 10.61100,   -25.00000, -76.00000, -11.00000);
    CreateDynamicObject(900, -3896.23315, -864.03943, 10.61100,   -25.00000, -76.00000, 76.00000);
    CreateDynamicObject(900, -3896.23315, -864.03943, 10.61100,   -25.00000, -76.00000, 76.00000);
    CreateDynamicObject(900, -3937.56763, -852.46588, 10.61100,   -25.00000, -76.00000, 127.00000);
    CreateDynamicObject(900, -3918.00757, -850.56012, 10.61100,   -25.00000, -76.00000, 91.00000);
    CreateDynamicObject(900, -3961.23096, -872.06921, 10.61100,   -25.00000, -76.00000, 207.00000);
    CreateDynamicObject(900, -3968.64868, -894.51886, 10.61100,   -25.00000, -76.00000, 207.00000);
    CreateDynamicObject(900, -3973.60791, -918.42462, 10.61100,   -25.00000, -76.00000, 11.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(900, -3972.05469, -938.86761, 10.61100,   -25.00000, 69.00000, -4.00000);
    CreateDynamicObject(19952, -3910.10815, -938.49310, 3.00980,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(19952, -3910.34546, -936.74860, 3.00980,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(19379, -3930.74951, -876.34546, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.72583, -885.88062, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.67603, -895.26385, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.69824, -904.90289, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.75562, -914.53571, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.75562, -914.53571, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.72681, -924.13574, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3922.41675, -936.44208, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3918.16333, -940.85156, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3918.09424, -940.89178, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3914.02515, -945.17963, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3936.44409, -931.44611, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3950.43286, -952.92993, 3.00760,   0.00000, 91.00000, -91.00000);
    CreateDynamicObject(898, -3919.85498, -958.38086, 10.85970,   -105.00000, 215.00000, -200.00000);
    CreateDynamicObject(19379, -3930.74951, -876.34546, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19379, -3930.74902, -866.71991, 3.00760,   0.00000, 91.00000, 0.00000);
    CreateDynamicObject(19952, -3926.27441, -935.71826, 3.00990,   -87.00000, 0.00000, -47.00000);
    CreateDynamicObject(19952, -3915.48608, -947.69910, 3.00990,   -88.00000, 0.00000, -47.00000);
    CreateDynamicObject(19952, -3918.51978, -944.45532, 3.00990,   -87.00000, 0.00000, -47.00000);
    CreateDynamicObject(19952, -3921.97095, -940.56244, 3.00990,   -87.00000, 0.00000, -47.00000);
    CreateDynamicObject(970, -3911.11084, -943.87500, 3.50560,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3911.11426, -945.94324, 3.50560,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3915.15967, -949.99774, 3.54560,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(0, -3912.88965, -949.96881, 3.59350,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3911.13574, -948.14532, 3.59350,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, -3917.26050, -950.04199, 3.54560,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(970, -3917.26050, -950.04199, 3.54560,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(970, -3920.80884, -951.48041, 3.46560,   0.00000, 0.00000, 45.00000);
    CreateDynamicObject(970, -3909.52417, -940.50879, 3.50560,   0.00000, 0.00000, 40.00000);
    CreateDynamicObject(706, -3914.40894, -890.82196, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3917.51001, -876.57135, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3943.37305, -882.12982, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3944.07642, -900.34485, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3942.04712, -914.07318, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3916.19360, -923.34863, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3921.61792, -911.31885, 3.01570,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(706, -3947.55908, -925.67700, 3.01569,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, -3935.86865, -868.92657, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.84741, -873.98779, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.83936, -878.58246, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.81494, -883.45825, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.79492, -888.61414, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.75391, -893.70203, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.73364, -899.10095, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.70093, -904.21893, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.68237, -909.44489, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.64185, -914.29242, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.61182, -919.72943, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3935.61182, -919.72943, 3.83790,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.64478, -919.83911, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.71948, -914.43628, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.71948, -914.43628, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.71338, -909.35681, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.71338, -909.35681, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.76343, -903.95520, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79980, -899.05554, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79321, -894.12860, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79614, -889.14545, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79614, -889.14545, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.80957, -883.92169, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79590, -878.40405, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.79590, -878.40405, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.83398, -873.27649, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, -3926.81665, -868.08057, 3.55590,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3666, -3926.76367, -870.70313, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.78076, -875.87396, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.72729, -881.21674, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.75049, -886.62024, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.73877, -891.70239, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.72339, -896.62537, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.72656, -901.57123, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.70239, -906.65100, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.66260, -911.93164, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.62695, -917.15118, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.54565, -923.05383, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, -3921.61792, -911.31885, 3.01570,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(3666, -3926.56665, -924.17352, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.56470, -925.27399, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3926.50415, -926.45557, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.66089, -922.83087, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.66895, -924.07819, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.60791, -925.19269, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.63159, -926.41455, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.81519, -916.96796, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.84155, -911.82794, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.87500, -906.83197, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.86621, -901.67181, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.91699, -896.39117, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.84937, -891.12964, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.94824, -885.99054, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3935.96509, -880.97021, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3936.03198, -876.28845, 3.54210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3666, -3936.00806, -871.52130, 3.54210,   0.00000, 0.00000, 0.00000);*/
	//=== City Hall
	CreateDynamicObject(3934,1422.063,-1790.678,32.430,0.0000000,0.0000000,90.0000000); //object(helipad01)(1)
	CreateDynamicObject(1557,1438.321,-1787.15,32.43,0.0000000,0.0000000,90.0000000); //object(helipad01)(1)
	//=== ����� � ����������
	CreateDynamicObject(3095,603.7069702,-10.4429998,999.9119873,90.0000000,0.0000000,270.0000000); //object(a51_jetdoor) (1)
	//========================== [ ���� ] ==========================================
	DoorOpen[0] = CreateObject(2634,2144.178,1627.082,994.2620,0.0000000,0.0000000,180.0000000);
	DoorOpen[1] = CreateObject(2634,2196.2200,1618.6563,1000.4614,0.0000000,0.0000000,90.0000000);
	DoorOpen[2] = CreateObject(2634,2176.3901,1609.1923,1000.3464,0.0000000,0.0000000,180.0000000);
	CreateObject(3089,2148.5500488,1604.6839600,1006.4979858,0.0000000,0.0000000,180.0000000); //object(ab_casdorlok) (1)
	CreateObject(3089,2160.4370117,1601.8039551,1000.3029785,0.0000000,0.0000000,90.0000000); //object(ab_casdorlok) (3)
	CreateObject(3089,2168.5778809,1617.9239502,1000.3070068,0.0000000,0.0000000,90.0000000); //object(ab_casdorlok) (4)
	CreateObject(16732,2143.1088867,1621.2180176,1002.0479736,0.0000000,0.0000000,0.0000000); //object(a51_ventcover) (1)
	CreateObject(2986,2129.6030273,1626.2110596,992.7700195,0.0000000,90.0000000,0.0000000); //object(lxr_motelvent) (1)
	//==================
	CreateObject(8168, 503.738769,-1812.714355,6.567204, 0.000000,0.000000,0.000000);
	CreateObject(1236, 500.550720,-1815.381713,5.295200, 0.000000,0.000000,-17.700000);
	CreateObject(710, 507.594909,-1817.003662,6.529620, 0.000000,0.000000,0.000000);
	//================================= ������ � ���� ==========================

	CreateDynamicObject(970,1541.80004883,-1622.80004883,13.10000038,0.00000000,0.00000000,0.25000000);
	CreateDynamicObject(970,1539.59997559,-1620.80004883,13.10000038,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(970,1539.59997559,-1618.69995117,13.10000038,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(970,1545.50000000,-1635.69995117,13.10000038,0.00000000,0.00000000,270.00000000);
	//======================[������]=======================
	gatevorota = CreateObject(975,777.56915283,-1384.85498047,14.39731598,0.00000000,0.00000000,180.00000000); //object(columbiangate) (1)3�������
	gatevorota2 = CreateObject(976,781.87298584,-1330.21044922,12.70648003,0.00000000,0.00000000,179.00000000); //object(phils_compnd_gate) (1)��������
	paintball = CreatePickupAC(19134, 23, 822.0084,1.8883,1004.1797,3);
	sportzal[0] = CreatePickupAC(19132,23,2229.7566,-1721.5988,13.5646);//�������� ��
	sportzal[1] = CreatePickupAC(19132,23,772.4290,-5.0806,1000.7289);//gym
	lspic[0] = CreatePickupAC(19130,23,1658.5272,-1691.3774,15.6094); // LSN ����
	lspic[1] = CreatePickupAC(19132,23,1754.1464,-1915.6738,1961.1769,1); // LSN �����
	lspic[2] = CreatePickupAC(19130,23,1648.9468,-1641.9387,83.7813); // LSN Roof
	medpic[0] = CreatePickupAC(19132,23,1172.4338,-1323.2861,15.4029);//����
	medpic[1] = CreatePickupAC(19132,23,-642.8237,-897.6291,1436.1736, 1); // ������ LS �����
	medpic[2] = CreatePickupAC(19132,23,-642.8705,-921.5659,1436.1736, 1); // ������ LS Roof
	medpic[3] = CreatePickupAC(19132,23,1161.0642,-1342.9989,26.6233); // ������ LS Roof
	autoshoppick[0] = CreatePickupAC(19133, 23, 556.5716,-1292.6392,17.2482, 0);
	autoshoppick[1] = CreatePickupAC(19133, 23, -1951.2544,293.6375,35.4688, 0);
    autoshoppick[2] = CreatePickupAC(19133, 23, -1657.7015,1210.2267,7.2500, 0);
    autoshoppick[3] = CreatePickupAC(19133, 23, 2200.8857,1394.2892,11.0625, 0);
    //=============================RentSpawn================================
	rentspawn = CreatePickupAC(19134, 23, 1678.8414, -2244.5857, 13.0502);
	Create3DTextLabel("{FFFFFF}Rent Vehicle",0xC2A2DAFF,1678.8414, -2244.5857, 13.0502,20.0,0);
    //====================================================================
    //=============================gangsquest rob================================
    Create3DTextLabel( "Gang Quests\n{FF0000}/gangquest", COLOR_YELLOW, 2479.0840, -1685.0800,13.5078,16.0,0);
    Create3DTextLabel( "Gang Quests\n{FF0000}/gangquest", COLOR_YELLOW, 2748.2913, -1175.5117,69.4072,16.0,0);
    Create3DTextLabel( "Gang Quests\n{FF0000}/gangquest", COLOR_YELLOW, 2005.2358,-1126.6787,25.3666, 16.0,0);
    Create3DTextLabel( "Gang Quests\n{FF0000}/gangquest", COLOR_YELLOW, 2179.7507,-1811.1519,13.5469, 16.0,0);
    Create3DTextLabel( "Gang Quests\n{FF0000}/gangquest", COLOR_YELLOW, 1679.3185,-2110.2795,13.5469, 16.0,0);
    gangsquest = CreatePickupAC(1254, 23, 2479.0840, -1685.0800, 13.5078);//grove
    gangsquest = CreatePickupAC(1254, 23, 2748.2913, -1175.5117, 69.4072);//vagos
    gangsquest = CreatePickupAC(1254, 23, 2005.2358, -1126.6787, 25.3666);//ballas
    gangsquest = CreatePickupAC(1254, 23, 2179.7507, -1811.1519, 13.5469);//rifa
    gangsquest = CreatePickupAC(1254, 23, 1679.3185, -2110.2795, 13.5469);//aztecas
    //=============================gangsquest================================
    // �����
    P_VOKZALLS[0] = CreatePickupAC(19132, 1,1730.0175,-1874.9624,13.7828, 0);
	P_VOKZALLS[1] = CreatePickupAC(19132, 1,1893.7062,-2093.4875,1000.9810, 1);
	/// ���������
	chekmats[0] = CreatePickupAC(1210,2,-1297.3777,505.1444,11.1953); // �����1
	chekmats[1] = CreatePickupAC(1210,2,-1405.5594,502.5779,11.1953); // �����1
	chekmats[2] = CreatePickupAC(1210,2,-1336.0455,500.4789,11.3047); // �����1
	paintvnutrpic = CreatePickupAC(19132,23,2595.8333,2790.2686,10.8203);// �����
	paintvnutrpic1 = CreatePickupAC(19132,23,299.9672,-141.9943,1004.0625);// ����
	paintulicpic = CreatePickupAC(19132,23,2495.4136,2781.5190,10.8203);// �����
	paintulicpic1 = CreatePickupAC(19132,23,2503.4006,2778.9316,10.8203);// ����
	hospital[0] = CreatePickupAC(1240,23,-635.6673,-897.7122,1436.1736, 1); // ������ � ���������
	hospital[1] = CreatePickupAC(1240,23,-632.6085,-897.7417,1436.1736, 1); // ������ � ���������
	hospital[2] = CreatePickupAC(1240,23,-629.6038,-897.8250,1436.1736, 1); // ������ � ���������
	hospital[3] = CreatePickupAC(1240,23,-629.5061,-921.5504,1436.1736, 1); // ������ � ���������
	hospital[4] = CreatePickupAC(1240,23,-632.6378,-921.5361,1436.1736, 1); // ������ � ���������
	hospital[5] = CreatePickupAC(1240,23,-635.5251,-921.5021,1436.1736, 1); // ������ � ���������
/*	hospital[6] = CreatePickupAC(1240,23,342.6070,389.3177,1022.8078, 1); // ������ � ���������
	hospital[7] = CreatePickupAC(1240,23,342.6197,393.8665,1022.8078, 1); // ������ � ���������
	hospital[8] = CreatePickupAC(1240,23,339.4053,389.5098,1022.8078, 1); // ������ � ���������
	hospital[9] = CreatePickupAC(1240,23,339.5314,394.1024,1022.8078, 1); // ������ � ���������
	hospital[10] = CreatePickupAC(1240,23,336.3462,389.4204,1022.8078, 1); // ������ � ���������
	hospital[11] = CreatePickupAC(1240,23,336.4222,393.9380,1022.8078, 1); // ������ � ���������*/
	hospital[12] = CreatePickupAC(1559,23,-614.3599,-910.7431,1436.1736, 1); // ������ � ���������
	serdce[0] = CreatePickupAC(1240,23,-778.0333,1544.8420,1139.2369);//�������� � ��
	serdce[1] = CreatePickupAC(1240,23,1467.1392,-1805.4489,2995.6321, 1);//�������� � �����
	serdce[2] = CreatePickupAC(1240,23,2131.47,-2283.91,20.67);//�������� �� ���������
	serdce[3] = CreatePickupAC(1240,23,1883.0814,-2106.7578,1001.3329, 1);//�������� � ����������
	serdce[4] = CreatePickupAC(1240,23,1793.1504,-1776.2810,13.3637);//�������� � ���������� 2
	gunarm[1] = CreatePickupAC(353,23,707.5522,-1336.8497,1102.0000,3);//������ ����� ��
	gunarm[0] = CreatePickupAC(353,23,707.5522,-1336.8497,1102.0000,2);//������ ����� ��
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	JobsDJ[0] = CreatePickupAC(1239,23,-2634.7278,1409.7086,906.4647,77);// Jizzy
	JobsDJ[1] = CreatePickupAC(1239,23,503.0325,-11.7202,1000.6797,73);// Alhambra
	mast[0] = CreatePickupAC(19132,23,613.4505,3.7427,1000.9219,0);//
	mast[1] = CreatePickupAC(19132,23,613.4505,3.7427,1000.9219,1);//
	mast[2] = CreatePickupAC(19132,23,613.4505,3.7427,1000.9219,2);//
	paint[0] = CreatePickupAC(19132, 23, 1549.4998,-1790.7054,15.4356);
	paint[1] = CreatePickupAC(19132, 23, 834.6680,7.3610,1004.1870,3);
	tserkov[0] = CreatePickupAC(19132, 23, -1991.2052,1117.9052,54.5319);
	tserkov[1] = CreatePickupAC(19132, 23, -1989.4176,1117.9325,54.4688);
	razdevalka[0] = CreatePickupAC(1275, 23, 255.3375,77.4590,1003.6406,0);
	razdevalka[1] = CreatePickupAC(1275, 23, 223.9633,122.7822,999.0156);
	razdevalka[2] = CreatePickupAC(1275, 23, 212.3952,182.1377,1003.0313,122);
	razdevalka[3] = CreatePickupAC(1275, 23, 713.8503,-1296.0908,1102.0000,3);
	razdevalka[4] = CreatePickupAC(1275, 23, 713.8503,-1296.0908,1102.0000,2);
	razdevalka[5] = CreatePickupAC(1275, 23, 1467.1796,-1795.1459,2995.6421,1);
	razdevalka[6] = CreatePickupAC(1275, 23, 600.6026,1293.0442,1080.3459, 5); // fbi
	razdevalka[7] = CreatePickupAC(1275, 23, -662.0769,-911.9298,1436.2230, 1);
//	razdevalka[8] = CreatePickupAC(1275, 23, 229.3250,168.6987,1003.0234);
    razdevalka[8] = CreatePickupAC(1275, 23, 736.2610,-1362.7385,-59.6741);//swat
	razdevalka[9] = CreatePickupAC(1275, 23, -795.2935,1553.9207,1139.2369);
	razdevalka[10] = CreatePickupAC(1275, 23, -812.0899,-675.9764,4004.5850);
	barkazino[0] = CreatePickupAC(1239,23,1955.6802,1018.1819,992.4688,VW_DRAGONS); // ��� ������
	barkazino[1] = CreatePickupAC(1239,23,2199.6467,1603.8728,1005.0625,VW_CALIGULAS); // ��� ������
	// RACE
	racePickup[0] = CreatePickupAC(19132,23,-2158.6536,643.1413,1052.3750,43);// ����� ������ � ����
    racePickup[1] = CreatePickupAC(19132,23,1778.2397,-1661.6633,14.4365);// ����� ����� � ����
    racePickup[2] = CreatePickupAC(19134,23,-2158.9663,640.3579,1052.3817,43); // ����� ������ �� �������
    racePickup[3] = CreatePickupAC(19134,23,-2161.2383,640.3594,1052.3817,43); // ����� ������ �� �������
    // ����
    //rc
    rentcar = CreatePickupAC(19134,23,-2237.0754,130.1879,1035.4141,1);
    //
    BasePic[0] = CreatePickupAC(19132,23,2186.9199,1113.3633,12.6538); // ����� ����� � ����
    BasePic[1] = CreatePickupAC(19132,23,834.6677,7.3224,1004.1870,301); //  ����� ������ �� ����
    BasePic[2] = CreatePickupAC(19134,23,822.7521,3.1842,1004.1797,301); // ����� ������ �� �����������
    // ����
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,1142.8103,-1764.0710,15.5082,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0); // ���������
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-1676.34570312,434.01806641,8.08183193,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-2033.32604980,159.50723267,29.94120598,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,2236.16186523,-1665.79772949,26.27980804,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,1367.56359863,-1290.13696289,14.44901943,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,1142.44287109,-1763.92932129,14.59816360,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,847.58093262,-1799.19348145,14.71945286,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-78.74282837,-1171.64892578,2.95329499,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-1551.53637695,-2737.33691406,49.64560318,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,661.71307373,-576.21777344,17.25428581,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,557.32824707,-1294.28137207,18.24994087,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-2035.70605469,-102.35491180,36.07402039,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,1919.78381348,-1766.21813965,14.44901943,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,2843.30444336,1286.17187500,12.29276943,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,2187.36035156,2478.89160156,12.14433193,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,1587.30920410,2218.34838867,11.96464443,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,2174.20336914,1402.93469238,11.96464443,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-818.55200195,1567.63708496,28.01933098,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,91.92106628,1180.56555176,19.56620598,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-1282.38098145,2715.18652344,51.16842651,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-2452.32275391,2252.62988281,5.87058449,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-2621.31445312,1415.23510742,7.88521862,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\nClick to use: {FFD700}ALT",-1,-1648.57336426,1213.76684570,8.12228298,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("{ffffff}ATM\n�Click to use: {FFD700}ALT",-1,-2421.45410156,958.35540771,46.18632126,4.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0); //
	// Server Informations
	Create3DTextLabel("{ffff00}New {2cdb0d}York\n{a8c4e4}If you want to know more things about the server\nType {ff0000}/serverinfo",0xEEEE88FF,1682.3789,-2253.6841,13.3807 +0.75,20.0,0,1);
	// Hacker Job
	Create3DTextLabel("{ff0000}Hacker Job\n{A8C4E4}Type {ffff00}/hacker {A8C4E4}to work as hacker man",0xEEEE88FF,-91.1709,-1576.5309,2.6172 +0.75,20.0,0,1);
	// ACTORS NAME
	Create3DTextLabel("{ff0000}[Founders]-Blackrose_Rog",0xEEEE88FF,1682.2393,-2263.7275,13.5109 +0.75,20.0,0,1);
	Create3DTextLabel("{ffff00}[Founders]-Magnus Carlsen",0xEEEE88FF,1680.2196,-2263.6416,13.5233 +0.75,20.0,0,1);
	Create3DTextLabel("{ff0000}[Founders]-Mr_Stane",0xEEEE88FF,1684.1688,-2263.4878,13.4992 +0.75,20.0,0,1);
//	Create3DTextLabel("{ff0000}[Founder]-Blackrose_Rog",0xEEEE88FF,1682.2748,-2262.6082,13.5107 +0.75,20.0,0,1);
	//-------------------------------------------[ 3d ������]----------------------------------------------
	Create3DTextLabel("{FFFFFF}State City Hall entrance",COLOR_WHITE,1481.055,-1772.040,18.796,10.0,0,1);
	Create3DTextLabel("{B4B5B7}SWAT DUTY",COLOR_GREY,736.2610,-1362.7385,-59.6741,10.0,0,1);//swat duty
	Create3DTextLabel("{B4B5B7}Take Weapons",COLOR_GREY,735.9212, -1365.2938, -59.6741,10.0,0,1);//swat take weapons
	Create3DTextLabel("{FFFFFF}Camera Checks \n{0641c2}/cameras",COLOR_GREY,707.1757, -1350.6324, -60.5516,10.0,0,1);//CAMERAS CHECK FROM HERE \\ ONLY SWAT
	Create3DTextLabel("{2485e0}Car {f0c816}License {aadb16}Test",COLOR_GREEN,-774.1007,1555.5155,1139.2369+0.5,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~~~\nReception at\nwork\n~~~~~~~~~~~~~~~~~",COLOR_YELLOW,359.8466,184.7337,1008.3828,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nUnloading\nzone\n~~~~~~~~~~~~~~~",COLOR_GREEN,334.9307,1962.9658,17.6406,10.0,0,1);
	//---
	Create3DTextLabel("~~~~~~~~~~~~~~~\nUnloading location\nRussian mafia\n~~~~~~~~~~~~~~~",COLOR_GREEN,967.3965,1684.1112,8.8516,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nUnloading location\nyakuza\n~~~~~~~~~~~~~~~",COLOR_GREEN,1460.3116,2763.8110,10.8203,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nUnloading location\nLCN\n~~~~~~~~~~~~~~~",COLOR_GREEN,1454.3406,758.1638,11.0234,10.0,0,1);

	Create3DTextLabel("Use the signal (H) to open the gate",COLOR_GREEN,-1195.4439697,-1038.7869873,130.9980011,10.0,0,1);
	//=============
	Create3DTextLabel("{A8C4E4}Welcome to {ffff00}New {2cdb0d}York {ff0000}RolePlay",COLOR_GREEN,1685.7018,-2245.1821,13.5469,10.0,0,1);
	//---
	Create3DTextLabel("Club Alhambra\n{FF0000}DJ stand.\n{a38b52}Enter /dj",COLOR_GREEN,487.35198974609,-2.1640000343323,1002.3829956055,10.0,73);
	Create3DTextLabel("Club Jizzy\n{FF0000}DJ stand.\n{a38b52}Enter /dj",COLOR_GREEN,-2648.001953125,1422.7509765625,906.46099853516,10.0,77);
	//---
	CreatePickupAC(1212, 2, 2147.2971,1637.2709,993.5759,3); //�����
	CreatePickupAC(1276, 2, 2204.0378,1589.0151,999.9772,3);
	Create3DTextLabel( "Breaking the safe\n{FF0000}/robbank", COLOR_YELLOW, 2147.2971,1637.2709,993.5759, 16.0, 3);
	Create3DTextLabel( "Breaking the safe\n{FF0000}/robjewel", COLOR_YELLOW, 2204.0378,1589.0151,999.9772, 16.0, 3);
	Create3DTextLabel( "Off bank lights, use\n{FF0000}/light", COLOR_YELLOW, 2143.0061,1620.307,1000.969, 20.0, 3);
	Create3DTextLabel( "Breaking open the door\n{FF0000}/bankdoor", COLOR_YELLOW, 2144.178,1627.082,994.2620, 13.0, 3);
	Create3DTextLabel( "Breaking open the door\n{FF0000}/jeweldoor", COLOR_YELLOW, 2196.2200,1618.6563,1000.4614, 13.0, 3);
	Create3DTextLabel( "{FF0000}JEWEL ENTRANCE - Gangs/Mafias", COLOR_RED, 2149.9795,1602.8489,1001.9688, 13.0, 3);
	Create3DTextLabel( "{FFFF00}BANK ENTRANCE - Hitman/SR/Casino", COLOR_RED, 2147.8826,1600.9877,1001.6696, 13.0, 3);
	Create3DTextLabel( "To get out through the back door\n{FF0000}press ALT", COLOR_YELLOW,2129.9822,1626.2155,993.6882,18.0, 3);
	Create3DTextLabel( "{FF0000}/getweapon", COLOR_YELLOW,1257.1469,-792.7399,1084.2344,16.0, 2);
	Create3DTextLabel( "{FF0000}/getweapon", COLOR_YELLOW,1257.1469,-792.7399,1084.2344,16.0, 1);
	Create3DTextLabel( "{FF0000}/getweapon", COLOR_YELLOW,1257.1469,-792.7399,1084.2344,16.0, -1);
	Create3DTextLabel( "{FFFF00}/npanel", COLOR_YELLOW,1737.1704,-1908.9467,1961.1769,13.0, 1);
	//---
	Create3DTextLabel("{42e004}Banking services\n{ed9905}/bank",0xFFFFFFFF,2033.3008,-731.7920,1121.0779,7.0,0,1);
	Create3DTextLabel ("[ - - - - - - - - - - - - - - ]\n Purchase of products\nUsage: /load\n[ - - - - - - - - - - - - - - ]",COLOR_YELLOW,-18.9035,-269.3631,5.4297 + 0.6,20,0);
    Create3DTextLabel ("[ - - - - - - - - - - - - - - ]\n Purchase of gasoline\nUsage: /load\n[ - - - - - - - - - - - - - - ]",COLOR_YELLOW,-1037.3811,-625.9559,32.0078 + 0.6,20,0);
	//------------------------------------------------------------[������ �����/������]--------------------------------------------------
	//=============��������� ����� �� 51
	chekmatlva[0] = CreatePickupAC(1210,2,223.8502,1931.5122,17.6406); // �����1
	chekmatlva[1] = CreatePickupAC(1210,2,190.7502,1931.7085,17.6406); // �����1
	chekmatlva[2] = CreatePickupAC(1210,2,155.8935,1903.3306,18.6603); // �����3
	chekmatlva[3] = CreatePickupAC(1210,2,137.4635,1880.8014,17.8359); // �����4
	chekmatlva[4] = CreatePickupAC(1210,2,117.9774,1869.8710,17.8359); // �����5
	chekmatlva[5] = CreatePickupAC(1210,2,112.7323,1875.2440,17.8359); // �����6
	chekmatlva[6] = CreatePickupAC(1210,2,153.5131,1845.9530,17.6406); // �����7
	chekmatlva[7] = CreatePickupAC(1210,2,171.9801,1834.7606,17.6406); // �����8
	chekmatlva[8] = CreatePickupAC(1210,2,176.9783,1841.3126,17.6406); // �����9
	chekmatlva[9] = CreatePickupAC(1210,2,233.3041,1842.0875,17.6406); // �����10
	//////////////////////
	Create3DTextLabel("{E8FF68}Here you go back with the garbage bags\nto get the money for the work done.", 0x447494FF, 500.3105,-1816.4789,5.7757,10.0, 0, 1);
	Create3DTextLabel("{ffff00}Garbage Job\n{a8c4e4}Type {ff0000}/garbagejob", 0x447494FF, 504.9208,-1816.0354,5.7904,10.0, 0, 1);
	Create3DTextLabel("WORK", 0x447494FF, 505.177215, -1815.161865, 6.914987,40.0, 0, 1);
	/////////////////////Fate Room/////////////////////////
	joinfactions = CreatePickupAC(18631, 23, 1685.6383,-2247.2698,13.5433, 0);
	Create3DTextLabel("{FF0000}MENU FOR JOIN FACTIONS COME AT ICON\n{FFFFFF}Enter /works /fate",0xC2A2DAFF,1685.6383,-2247.2698,13.5433,20.0,0);
	/////////////////////car X bunny jump free/////////////////////////
	Create3DTextLabel("{FF0000}Claim Free Car License / Remove Bunny Hops",0xC2A2DAFF,1678.5592,-2247.2634,13.5623,20.0,0);
	carxbunny = CreatePickupAC(1581, 23, 1678.5592,-2247.2634,13.5623, 0);
	///////////////////// �������� /////////////////////////
	CreatePickupAC(1644, 23, 2757.7693,-1176.0519,69.4070, 0); // Vagos pic
	Create3DTextLabel("{FFFFFF}Place for unloading alcohol.\n{FF0000}Enter /unloadalko",0xC2A2DAFF,2757.7693,-1176.0519,69.4070,20.0,0);
	CreatePickupAC(1644, 23, 2005.6473,-1121.6650,26.6733, 0); // Ballas pic
	Create3DTextLabel("{FFFFFF}Place for unloading alcohol.\n{FF0000}Enter /unloadalko",0xC2A2DAFF,2005.6473,-1121.6650,26.6733,20.0,0);
	CreatePickupAC(1644, 23, 1673.3033,-2108.5610,13.5469, 0); // Aztec pic
	Create3DTextLabel("{FFFFFF}Place for unloading alcohol.\n{FF0000}Enter /unloadalko",0xC2A2DAFF,1673.3033,-2108.5610,13.5469,20.0,0);
	CreatePickupAC(1644, 23, 2188.7148,-1812.3773,13.5469, 0); // Rifa pic
	Create3DTextLabel("{FFFFFF}Place for unloading alcohol.\n{FF0000}Enter /unloadalko",0xC2A2DAFF,2188.7148,-1812.3773,13.5469,20.0,0);
	CreatePickupAC(1644, 23, 2498.8372,-1686.5349,13.4772, 0); // Grove pic
	Create3DTextLabel("{FFFFFF}Place for unloading alcohol.\n{FF0000}Enter /unloadalko",0xC2A2DAFF,2498.8372,-1686.5349,13.4772,20.0,0);
	CreatePickupAC(1644, 23, 2845.4294,948.4973,10.7500, 0); // ������� ��������
	Create3DTextLabel("{FFFFFF}To load alcoholic beverages, enter\n{FF0000}/loadalko",0xFFFF00FF,2845.4294,948.4973,10.7500,10.0,0,1);
    Create3DTextLabel("{DBD604}Los Santos Vagos Bar\n{FF0000}Enter /drink",0xFFFF00FF,301.3799,301.4108,1003.5391,10.0,75,1);// 13
    Create3DTextLabel("{8813E7}Ballas Gang Bar\n{FF0000}Enter /drink",0xFFFF00FF,-58.1986,1362.6846,1080.2109,10.0,34,1);// 12
    Create3DTextLabel("{83BFBF}Rifa Gang Bar\n{FF0000}Enter /drink",0xFFFF00FF,-225.0098,1404.4785,27.7734,10.0,63,1);// 18
    Create3DTextLabel("{01FCFF}Varios Los Aztecas Bar\n{FF0000}Enter /drink",0xFFFF00FF,-46.7964,1399.9537,1084.4297,10.0,36,1);// 17
    Create3DTextLabel("{24b012}Grove Street Bar\n{FF0000}Enter /drink",0xFFFF00FF,2498.9570,-1709.2249,1014.7422,10.0,1,1);// 15
    //
    CreateDynamic3DTextLabel("To use the elevator, Press the horn.",0xFF6600FF,-2440.8933,528.3586,29.9144,20.0);//fbi
   	CreateDynamic3DTextLabel("To use the elevator, Press the horn.",0xFF6600FF,-2535.2244,504.4874,-10.8553,20.0);//fbi
	////////////////////////////////////////////////////////
    cname = CreatePickupAC(1581,23,1484.8192,-1803.4949,2995.6265,1);
	serverhelp = CreatePickupAC(1239,23,1684.9338,-2244.4680,13.5469);
	jobspickup[0] = CreatePickupAC(1277,23,2440.8113,-1472.5089,24.0000); // �����������
	buygunzakon[0] = CreatePickupAC(353,23,596.4246,1307.5225,1080.3359,5); //gun FBI
	buygunzakon[1] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,5); //gun Police
	buygunzakon[2] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = CreatePickupAC(353,23,302.5668,-127.6718,1004.0625,15); //gun Police
	buygunzakon[4] = CreatePickupAC(353,23,290.3902,-107.9638,1001.5156,0); //gun swat
	lspd[0] = CreatePickupAC(19132,23,1555.1332,-1675.7180,16.1953);//Lspd ����
	lspd[1] = CreatePickupAC(19132,23,246.7096,62.8786,1003.6406);//Lspd �����
	lspd[4] = CreatePickupAC(19132,23,316.6778,-170.0422,999.5938,5);//Lspd ��� �� ����
	lspd[2] = CreatePickupAC(19132,23,1524.486938,-1677.990844,6.218750);//Lspd ����
	lspd[5] = CreatePickupAC(19132,23,1568.6144,-1689.9901,6.2188);//Lspd ���� �� ������
	lspd[3] = CreatePickupAC(19132,23,246.4416,87.6784,1003.6406);//Lspd ����� � ������
	sf[4]  = CreatePickupAC(19132,23,-1606.4298,672.0637,-4.9063);//Lspd ����� � ������
	sf[0]  = CreatePickupAC(19132,23,316.3047,-170.2971,999.5938,1);//Lspd ����� � ������
	sf[1]  = CreatePickupAC(19132,23,213.9762,120.8990,999.0156);//Lspd ����� � ������
	sf[2] = CreatePickupAC(19132,23,-1594.2096,716.1803,-4.9063);//sfpd
	sf[3] = CreatePickupAC(19132,23,246.4636,107.2969,1003.2188);//����
	lvpdpic[0] = CreatePickupAC(19132,23,2297.1138,2451.4346,10.8203);//lvpd ���� � ������
	lvpdpic[1] = CreatePickupAC(19132,23,238.7510,138.6254,1003.0234,-1);//lvpd ���� � �����
	lvpdpic[2] = CreatePickupAC(19132,23,2337.1335,2459.3105,14.9742);//����������� ����
	lvpdpic[3] = CreatePickupAC(19132,23,288.8456,166.9235,1007.1719,-1);//����������� �����
	lvpdpic[4] = CreatePickupAC(19132,23,2297.1165,2468.6892,10.8203);//lvpd ������ ����
	lvpdpic[5] = CreatePickupAC(19132,23,299.9460,-141.8767,1004.0625,15);//lvpd ������ �����
	lvpdpic[6] = CreatePickupAC(19132,23,2278.3835,2458.0950,38.6837);//Roof
	rmpic[0] = CreatePickupAC(19132,23,1298.7498,-797.0133,1084.0078,1);
	yakexit[0] = CreatePickupAC(19132,23,1298.7498,-797.0133,1084.0078);
	yakexit[1] = CreatePickupAC(19132,23,1456.1324,2773.4790,10.8203);
	fbi[1] = CreatePickupAC(19132,23,585.6788,1247.9541,1081.1888, 5);//fbi ����� �� ���������
	fbi[0] = CreatePickupAC(19132,23,1122.7107,-2037.0114,69.8942);//fbi ���� � ��������
	fbi[2] = CreatePickupAC(19132,23,582.6173,1247.8571,1081.2518, 5);//fbi ����� ����
	fbi[3] = CreatePickupAC(19132,23,556.0175,1292.3226,1083.0673, 5);//fbi ����� �����
//	fbi[4] = CreatePickupAC(19132,23,-2486.7429,495.2537,-10.5974);//fbi ���� 1 ����
	fbi[5] = CreatePickupAC(19132,23,-2454.8359,515.9101,45.5625);//fbi Roof �����
	//fbi[6] = CreatePickupAC(19132,23,577.8590,1282.1603,1080.3250, 5);//fbi ���� 2 �����
	fbi[7] = CreatePickupAC(19132,23,-2472.5420,469.1994,-10.6521);//fbi �������� ����
	lcnpic[0] = CreatePickupAC(19132,23,1298.7498,-797.0133,1084.0078,2);
	lcnpic[1] = CreatePickupAC(19132,23,1455.8972,751.4310,11.0234);//lcn ����
	rmpic[1] = CreatePickupAC(19132,23,937.0892,1733.2124,8.8516);//RM ����
	narkoexit = CreatePickupAC(19132,23,318.6952,1114.5037,1083.8828); //����������� �����
	narkoenter =  CreatePickupAC(19132,23,2166.0068,-1671.3362,15.0734); // ����������� ����
	ash = CreatePickupAC(19132,23,-796.8530,1545.4983,1139.23699);
	autoschool1 = CreatePickupAC(19132,23,-2026.5902,-101.8477,35.1641);
	avtosh[0] = CreatePickupAC(1581,23,-2029.6637,-120.8377,35.1728);
	avtosh[1] = CreatePickupAC(1581,23,-774.4894,1542.9104,1139.2369);
	avtosh[2] = CreatePickupAC(1581,23,-774.1007,1555.5155,1139.2369);
	//08.03.2018
	topghetto[0] = CreatePickupAC(19131,23,2429.3687,-1649.7891,13.5469);//groove
	topghetto[1] = CreatePickupAC(19131,23,2173.3945,-1789.1586,13.5216);//rifa
	topghetto[2] = CreatePickupAC(19131,23,2035.4033,-1142.5162,24.5063);//ballas
	topghetto[3] = CreatePickupAC(19131,23,2744.6260,-1185.6953,69.3997);//vagos
	topghetto[4] = CreatePickupAC(19131,23,1710.5889,-2119.6548,13.5469);//aztec
	//
	marenter[0] = CreatePickupAC(19132,23,1481.055,-1772.040,18.796);// City Hall//���� � �����
	marenter[1] = CreatePickupAC(19132,23,1489.4110,-1810.3328,2995.6211, 1);// City Hall//���� � �����
	marenter[3] = CreatePickupAC(19132,23,1481.8967,-1773.7837,2995.6377, 1);// ����� �� �����
	marenter[4] = CreatePickupAC(19132,23,1437.931,-1786.454,33.43);// � ����� �����
	marenter[5] = CreatePickupAC(19132,23,1497.3665,-1797.9243,2995.6240, 1);// �� ����� �����
	//RC
	rcpickup[0] = CreatePickupAC(19132,23,1377.8049,-1753.1317,14.1406);//
	rcpickup[1] = CreatePickupAC(19132,23,-2240.7808,137.1907,1035.4141,1);//
	//���� ���� ���������� (����)
	automasterskay[0] = CreatePickupAC(19132,23,945.6629,-1721.3329,13.7208); ///��� ����� �����
	automasterskay[1] = CreatePickupAC(19132,23,1494.4075,1303.5784,1093.2891, 2); /// ���� ����� ������.
	//jewelpic
	jewels[0] = CreatePickupAC(19132,23,2168.1296,1618.6710,999.9781,3);
	jewels[1] = CreatePickupAC(19132,23,2169.1125,1618.6616,999.9766,3);
	//BK
	bankpic[0] = CreatePickupAC(19132,23,1411.5270,-1699.5909,13.5395);//���� ����
	bankpic[3] = CreatePickupAC(1318,23,2022.9456,-722.4740,1121.0779);//���� �����
	bankpic[2] = CreatePickupAC(19132,23,2147.8579,1603.9347,1006.1677,3); // ���� ����� �� ���������.
	bankpic[5] = CreatePickupAC(1318,23,2041.1854,-730.1318,1121.0779); // ���� ���� �� ���������.
	ballasvhod[0] = CreatePickupAC(19132,23,-68.8021,1351.1979,1080.2109,34);//Ballas �� �����
	ballasvhod[1] = CreatePickupAC(19132,23,2000.0640,-1114.0533,27.1250);//Ballas � �������
	rifa[0] = CreatePickupAC(19132,23,-229.29,1401.13,27.77,63);//���� ���� �� �����
	rifa[1] = CreatePickupAC(19132,23,2185.8225,-1815.2219,13.5469);//���� ����
	mo[0] = CreatePickupAC(19132,23,952.5549,-909.1080,45.7656);//���� � Administration of the President
	mo[1] = CreatePickupAC(19132,23,-785.8101,-665.2892,4001.0859);//����� �� ������������
	vagospic[0] = CreatePickupAC(19132,23,2756.3350,-1182.8081,69.4035);//Vagos ����
	vagospic[1] = CreatePickupAC(19132,23,300.4915,305.8677,1003.5391,75);//Vagos �����
	aztecpic[0] = CreatePickupAC(19132,23,1667.52,-2106.94,14.07);//Aztec ����
	aztecpic[1] = CreatePickupAC(19132,23,-42.5856,1405.4747,1084.4297,36);//Aztec �����
//	dmz1 = CreatePickupAC(1313,23,295.5955, 284.8759, 998.8647);
//	dmz2 = CreatePickupAC(1313,23,295.3513, 287.8804, 998.8647);
//	dmzone = CreatePickupAC(19133,23,297.0966, 290.4334, 998.9574);
	grooveexit = CreatePickupAC(19132,23,2495.7993,-1692.4044,1014.7422,1);//grove spawn �����
	grooveenter = CreatePickupAC(19132,23,2495.3271,-1690.9893,14.7656);//��� ����
/*	swatenter = CreatePickupAC(19132,1,742.7875,-1359.1245,13.5000);//swat
	swatenter2 = CreatePickupAC(19132,1,296.8525,-112.0709,1001.5156);//swat
	swatexit = CreatePickupAC(19132,1,238.6690,139.3077,1003.0234);//swat
	swatexit2 = CreatePickupAC(19132,1,288.7522,166.9949,1007.1719);//swat*/
	sannewspanel = CreatePickupAC(1274,1,1737.1704,-1908.9467,1961.1769,-1);//panel sannews
	swatenter = CreatePickupAC(19132,1,742.7875,-1359.1245,13.5000);//swat exit V2
	swatexit = CreatePickupAC(19132,1,726.1910, -1334.1082, -59.7621);//swat exit V2
    swatgun = CreatePickupAC(2061,1,735.9212, -1365.2938, -59.6741);//swat gun 
    grovegun = CreatePickupAC(2061,1,2492.1294,-1686.1688,13.5117,0);//grove gun
    vagosgun = CreatePickupAC(2061,1,2753.2090,-1179.0964,69.4003,0);//vagos gun
    ballasgun = CreatePickupAC(2061,1,1998.8053,-1119.4050,26.7813,0);//ballas gun
    rifagun = CreatePickupAC(2061,1,2184.3008,-1811.3616,13.5469,0);//rifa gun
    aztecgun = CreatePickupAC(2061,1,1670.5774,-2110.8569,13.5469,0);//aztec gun
    yakuzgun = CreatePickupAC(2061,1,1257.1469,-792.7399,1084.2344,-1);//yakuza gun
    lcngun = CreatePickupAC(2061,1,1257.1469,-792.7399,1084.2344,2);//lcn gun
    rusmagun = CreatePickupAC(2061,1,1257.1469,-792.7399,1084.2344,1);//russiam gun
	ammomer = CreatePickupAC(1239,23,1477.9186,-1806.0344,2995.6282, 1);
	CreateDynamic3DTextLabel("{9ACD32} Illegal work \n\n{AFAFAF}Get up at the checkpoint to get settled",COLOR_WHITE,2447.9407,-1962.9333,13.5469,20.0);
	CreateDynamic3DTextLabel("To exit the garage, click 'ALT'", -1, 2548.0430,-1548.7075,2023.5859+0.8,9.0);
	CreateDynamic3DTextLabel("To leave the garage\nSignal 'H'", COLOR_GREEN, 2522.0203,-1543.2173,2023.5754+0.8,9.0);
	ammomerrr = CreatePickupAC(1239,23,2447.9407,-1962.9333,13.5469,0);
	enterpickup[0] = CreatePickupAC(19132,1,2019.3174,1007.7612,10.8203, 0); // ���� � 4 �������
	exitpickup[0] = CreatePickupAC(19132,1,2019.0691,1017.8333,996.8750, VW_DRAGONS); // ����� �� 4 ��������
    enterpickup[1] = CreatePickupAC(19132,1,2196.9653,1677.1760,12.3672, 0); // ���� � ��������
	exitpickup[1] = CreatePickupAC(19132,1,2233.9465,1714.6853,1012.3828, VW_CALIGULAS); // ����� �� ��������
    dresspickup[0] = CreatePickupAC(1275,2,1963.3717,1062.4791,994.4688, VW_DRAGONS); // ���������� 4 �������
    dresspickup[1] = CreatePickupAC(1275,2,2152.4712,1599.9259,1006.1735, VW_CALIGULAS); // ���������� � ��������
    army[0] = CreatePickupAC(19132,23,-1372.8932,498.9633,11.1953); // ����� ��
    army[1] = CreatePickupAC(19132,23,690.8471,-1332.6432,1102.0000,3); // ����� ��
    army[2] = CreatePickupAC(19132,23,213.3248,1921.7208,17.6406); // ����� ��
    army[3] = CreatePickupAC(19132,23,690.8471,-1332.6432,1102.0000,2); // ����� ��
    //-------------------------------------------------[helpcmd]-----------------------------------------------------------------------
    lspdhelp = CreatePickupAC(18631,1,1575.4640,-1694.6792,6.2188,0);//cmdhelp
    fbihelp = CreatePickupAC(18631,1,1135.6237,-2032.8961,69.0078,0);//cmdhelp
    armysfhelp = CreatePickupAC(18631,1,-1365.8090,497.0754,11.1953,0);//cmdhelp
    medichelp = CreatePickupAC(18631,1,1178.6505,-1320.5220,14.1306,0);//cmdhelp
    lcnhelp = CreatePickupAC(18631,1,1451.6323,755.8189,11.0234,0);//cmdhelp
    yakuzahelp = CreatePickupAC(18631,1,1462.0275,2778.0420,10.8203,0);//cmdhelp
    cityhallhelp = CreatePickupAC(18631,1,1477.9381,-1767.2585,18.7958,0);//cmdhelp
    sfpdhelp = CreatePickupAC(18631,1,-1588.0048,723.0652,-4.9063,0);//cmdhelp
    inshelp = CreatePickupAC(18631,1,-2023.4465,-98.8200,35.1641,0);//cmdhelp
    ballashelp = CreatePickupAC(18631,1,1997.1296,-1121.1262,26.7678,0);//cmdhelp
    vagoshelp = CreatePickupAC(18631,1,2757.8408,-1179.2681,69.3999,0);//cmdhelp
    rmhelp = CreatePickupAC(18631,1,947.6232,1731.7473,8.8516,0);//cmdhelp
    grovehelp = CreatePickupAC(18631,1,2487.2603,-1686.0564,13.5119,0);//cmdhelp
    sanhelp = CreatePickupAC(18631,1,1653.5725,-1692.7765,15.6094,0);//cmdhelp
    aztechelp = CreatePickupAC(18631,1,1674.5847,-2110.1118,13.5469,0);//cmdhelp
    rifahelp = CreatePickupAC(18631,1,2182.2053,-1811.0851,13.5469,0);//cmdhelp
    armylvhelp = CreatePickupAC(18631,1,215.6606,1919.6357,17.6406,0);//cmdhelp
    lvpdhelp = CreatePickupAC(18631,1,2290.6938,2456.8103,10.8203,0);//cmdhelp
    hitmanhelp = CreatePickupAC(18631,1,-2483.8655,2403.7036,16.1896,0);//cmdhelp
    srhelp = CreatePickupAC(18631,1,1287.0038,1271.3712,10.8281,0);//cmdhelp
    swathelp = CreatePickupAC(18631,1,746.7645,-1353.2168,13.5000,0);//cmdhelp
    pahelp = CreatePickupAC(18631,1,957.6509,-910.2476,45.7656,0);//cmdhelp
    //------------------------------------------------------------------------------------------------------------------------
	clearmusor = CreatePickup(1328, 23, 500.3105,-1816.4789,5.7757, 0);
	CreatePickup(1239, 23, 504.9208,-1816.0354,5.7904, 0);
	CreatePickup(1550, 23, -91.1709,-1576.5309,2.6172, 0);
	//----------------------------------------------------------------------[ ������� ]----------------------------------------
	plen[0] = CreatePickupAC(19132,23,305.6964,-159.2085,999.5938);//�������1
	plen[1] = CreatePickupAC(19132,23,306.4392,-159.2731,999.5938);//�������2
	zona = CreatePickupAC(19132,23,279.2340,1833.1393,18.0874);//�������1
	zonaa = CreatePickupAC(19132,23,290.1648,1833.3087,18.0226);//�������2
	hitss[0] = CreatePickupAC(19132,23,-2482.3145,2406.6223,17.1094);// ����
	hitss[1] = CreatePickupAC(19132,23,1819.9954,-890.9791,1085.7050);// �����
	hitss[2] = CreatePickupAC(353,23,1849.8071,-869.6999,1081.4220); //gun FBI
	sklad[0] = CreatePickupAC(19132,23,325.0629,1954.1919,21.7746);//�������3
	sklad[1] = CreatePickupAC(19132,23,316.3806,-170.2857,999.5938);//�������4
	minstr = CreatePickupAC(1239,23,-812.9762,-672.9258,4004.5850);
	Furi[0][gBallas] = 0; Furi[0][gVagos] = 0; Furi[0][gGrove] = 0; Furi[0][gAztek] = 0; Furi[0][gRifa] = 0;
	AlhambraDJ = false; JizzyDJ = false;
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	MatHaul[3][mCapasity] = 5000;
	MatHaul[4][mCapasity] = 5000;
	MatHaul[5][mCapasity] = 5000;
	MatHaul[6][mCapasity] = 5000;
	LimitPlayerMarkerRadius(100.0);
	ManualVehicleEngineAndLights();
	AllowInteriorWeapons(1);
	AddPlayerClass(79,1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	// ������
	// �����
//	CreateDynamic3DTextLabel("{FFFFFF}"NICK_NPC"\n{FFFFFF}Welcome to {FFFFFF}Ru{0000ff}ss{FF0000}ia",COLOR_WHITE,1760.8982,-1756.0311,15.0,20.1623);
//	CreateDynamic3DTextLabel("{FFFFFF}"NICK_NPC2"\n{FFFFFF}Welcome to {FFFFFF}Ru{0000ff}ss{FF0000}ia",COLOR_WHITE,1750.7335,-1756.2549,15.0,20.2408);

//	CreateDynamic3DTextLabel("{00cc00}��������� ��������\n{FFFFFF}������ ����, � ���� ���� ��� ���� �������!\n(( ����������� /quest, ����� ���������� ������� ))",-1,1740.9570,-1743.3402,14.3102,20.3887);
//	CreateDynamic3DTextLabel("{FF0000}��� ����� ���\n{FFFFFF}__________________________\n{FFFFFF}��������� ���� �� {FF0000}500 ������ {FFFFFF}� �� �������� {FF0000}+500 ������ � �������!\n{FFFFFF}��� ���������� �����, ��������� �� ����: {FF0000}"PAGE_SITE"",COLOR_WHITE,1771.9375,-1743.9713,13.3102,25.3932);

	CreateDynamic3DTextLabel("{FFFFFF}Auto repair shop\nPoint - {FFFF00}/tune", -1, 965.9856,-1738.6276,14.5469,20.4038);

	CreateDynamic3DTextLabel("{FFFFFF}Auto repair shop\nPoint - {FFFF00}/tune", -1, 966.2149,-1730.1909,14.5469,20.1912);

	actormed = CreateActorEx("", "", 87, 336.0027,-2593.7864,-34.5836,309.4692, 0);//
 	ApplyActorAnimation(actormed, "ON_LOOKERS", "wave_loop" ,4.1, 1, 0, 0, 0, 0);

	actormed = CreateActorEx("", "", 63, 336.0027,-2593.7864,-34.5836,309.4692, 0);//
	ApplyActorAnimation(actormed, "ON_LOOKERS", "wave_loop" ,4.1, 1, 0, 0, 0, 0);
	
	actormed = CreateActorEx("", "", 264, 1685.4890,-2247.9561,13.5453,2.7181, 0);//
	ApplyActorAnimation(actormed, "ON_LOOKERS", "wave_loop" ,4.1, 1, 0, 0, 0, 0);

	actormed = CreateActorEx("", "", 249, 1740.9570,-1743.3402,13.3102,201.3887, 0);
	ApplyActorAnimation(actormed, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 0, 0);
	
//	actormed = CreateActorEx("", "", 294, 1682.2748,-2262.6082,13.5107,0.6758, 0); // Blackrose
//   ApplyActorAnimation(actormed, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 0, 0);
	
	actormed = CreateActorEx("", "", 23, 1682.2393,-2263.7275,13.5109,3.9018, 0); // blackrose
    ApplyActorAnimation(actormed, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 0, 0);
    
   	actormed = CreateActorEx("", "", 171, 1684.1688,-2263.4878,13.4992,0.7683, 0); // stane
    ApplyActorAnimation(actormed, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 0, 0);
    
   	actormed = CreateActorEx("", "", 292, 1680.2196,-2263.6416,13.5233,5.3510, 0); // magnus
    ApplyActorAnimation(actormed, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 0, 0);
	
	CreateActorEx("", "", 144,505.177215,-1815.161865,5.814987,161.485198, 0);

	actormed = CreateActorEx("", "", 308, -653.6170,-909.4547,1436.2280, 269.5560, 1);//������ ������� ������
	ApplyActorAnimation(actormed, "ped", "IDLE_chat", 4.1, 1, 0, 0, 0, 0);

    CreateActor(144, 505.177215, -1815.161865, 5.814987, 161.485198);//

//	actormed = CreateActorEx("", "", 274, 339.2629, 408.2478, 1022.8019, 356.8889, 1);//������ ������� ������
//	ApplyActorAnimation(actormed, "ped", "IDLE_chat", 4.1, 1, 0, 0, 0, 0);
	//
//	CreateActorEx("Doctor Petya", "Press N to interact", 70, 344.5555,407.9677,1022.8019,356.4930, 1, 1); // ��� ����, ������
	//CreateDynamic3DTextLabel("���� ����\n������� N ��� ��������������", COLOR_GRAD1, 344.5555,407.9677,1022.8019+1.0, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0);
    CreateActor(245, 332.3312,1123.1025,1083.8903,94.4069); // ������� �������, ��������
//    CreateDynamic3DTextLabel("���������� ��������\n������� N ��� ��������������", COLOR_GRAD1, 332.3312,1123.1025,1083.8903+1.0, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0);
    new actor = CreateActor(5, 327.0063,1123.8032,1083.8828,134.6589); // ������� (������);
    ApplyActorAnimation(actor, "DEALER", "Dealer_idle", 4.1, 1, 0, 0, 1, 0);
	//
	// Hacker Job
	CreateDynamicMapIcon(-91.1709,-1576.5309,2.6172, 23, 0);
	CreateDynamicMapIcon(2057.5154,-1899.2584,13.5469, 23, 0);
	//------------------------ ������ �� ����� - ///// map icon --
	CreateDynamicMapIcon(2000.0640,-1114.0533,27.1250,59,0);  // Ballas
	CreateDynamicMapIcon(2756.3350,-1182.8081,69.4035,60,0);  // Vagos
	CreateDynamicMapIcon(2495.3684,-1688.0365,13.5553,62,0);  // Grove
	CreateDynamicMapIcon(1679.5066,-2110.2134,13.5469,58,0);  // Aztec
	CreateDynamicMapIcon(2185.9600,-1811.9399,13.5469,61,0);  // Rifa
	CreateDynamicMapIcon(2448.0530,-1964.6006,13.5469,51,0);  // ����
	//==============================================================
	CreateDynamicMapIcon(-18.9371,-269.3633,5.4297,51,0); //
	CreateDynamicMapIcon(-1037.8792,-625.9905,32.0078,51,0); //
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); //Car ls
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); //Car sf
	CreateDynamicMapIcon(-1638.6560,1206.3889,68.9698,55,0); //car sf
	CreateDynamicMapIcon(2200.1370,1391.9717,10.8203,55,0); //car lv
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); //!
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,19,0); //City Hall
	CreateDynamicMapIcon(-2026.9664,-100.3766,35.1641,36,0); //��
	CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0);  // �������� ��
	CreateDynamicMapIcon(-2270.6406,-155.9734,35.3203,54,0);  // �������� ��
	CreateDynamicMapIcon(1411.5504,-1699.5670,13.5395,52,0);//����
	//----------------------------- ���� 51 -----------------------------
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); //����� ����������
    CreateDynamicMapIcon(2440.8113,-1472.5089,24.0000,53,0); // �����������
	CreateDynamicMapIcon(1549.4998,-1790.7054,15.4356,18,0); // �����������
	//
	CreateDynamicMapIcon(2019.4121,1007.7014,10.8203,25,0); // 4 �������
	CreateDynamicMapIcon(2196.7544,1677.1366,12.3672,25,0); // ��������
	//
	CreateDynamicMapIcon(2779.7739,2453.8762,11.0625, 38, 0); // ������� ������� (��)
//	CreateDynamicMapIcon(967.6221,-1738.3638,13.5469, 27, 0); // �������������� (��)
	LoadVehicles();
	//----------------------------[ ������� ]-----------------------------------
	SetTimer("TimerUpdate", 1000, 1);
	foreach(new x : valid_vehicles)
	{
		Fuell[x] = 50.0;
		VEHICLE[x][vHealth] = 1000.0;
		vehcreat[x] = 0;
		SetVehicleNumberPlate(x, ""NAME_SERVER"-RP");
	}
	CreateMySQLConnection(); // ���� ������ ����� 1
	return true;
}

stock CreateMySQLConnection()
{
	LoadMySQLSettings();
    connects = mysql_connect(MySQLSettings[DOOME_HOST],MySQLSettings[DOOME_USERNAME],MySQLSettings[DOOME_DATABASE],MySQLSettings[DOOME_PASSWORD]);
	if(mysql_errno()==0)
	{
	    print("Creator of the copy of The NYRP mod");
		printf("Connection to database successful!");
	}
	else
	{
	    print("Creator of the copy of The NYRP mod");
		printf("Failed to connect to database!");
	}
	mysql_function_query(connects,"SET NAMES cp1251",false,"","");
	mysql_function_query(connects,"set character_set_client=\'cp1251\'",false,"","");
	mysql_function_query(connects,"set character_set_results=\'cp1251\'",false,"","");
	mysql_function_query(connects,"set collation_connection=\'cp1251_general_ci\'",false,"","");
	mysql_function_query(connects, "UPDATE `accounts` SET `pHotvet` = '0', `pOnlineYes` = `day_online`, `day_online` = '0', `pAfkYes` = `pDayAfk`, `pDayAfk` = '0'", false, "", "");
	mysql_function_query(connects, "UPDATE `bizz` SET `bProduct` = '100000'", false, "", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_BIZZ"`", true, "LoadBizz", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_HOUSE"`",true,"LoadProperty","");
	mysql_tquery(connects,"SELECT * FROM `gzlogo`", "LoadGZLogo","");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_GANGZONE"`", true, "OnLoadGzCallback", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_OTHER"`", true, "OnLoadOtherCallback", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_MERIA"`", true, "OnLoadMeriaCallback", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_PICK"`", true, "LoadPick", "");
	mysql_function_query(connects,"SELECT * FROM `"TABLE_GREENZONE"`", true, "LoadZone", "");
	mysql_function_query(connects,"SELECT * FROM `family_system`", true, "family_loading", "" ) ;
	mysql_function_query(connects, "SELECT * FROM `dropped_items` WHERE `storage_type` = '11'", true, "LoadPlantsCallBack", "");
	mysql_function_query(connects, "DELETE FROM `dropped_items` WHERE `drop_time` < UNIX_TIMESTAMP()-5760 AND `storage_type` != '11'", false, "", "");
	mysql_function_query(connects, "SELECT * FROM dropped_items WHERE `storage_type` != '11'", true, "LoadDItems", "");
	mysql_function_query(connects,"SELECT * FROM `bank`", true, "TotalBankCeck", "" ) ;
	mysql_tquery(connects,"SELECT * FROM `fraction_ranks`","OnFracRankLoad","");
	mysql_tquery(connects,"SELECT * FROM `realtors`", "LoadRealtors", "");
	mysql_function_query(connects, "SELECT * FROM `config`", true, "LoadConfig", "");
	mysql_function_query(connects, "SELECT * FROM `hostnames`", true, "LoadNames", "");
	mysql_function_query(connects, "SELECT * FROM `AntiCheat`", true, "LoadSettings", "");
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid) //
{
	if(pickupid == clearmusor)
	{
		if(total[playerid] >= 0)
		{
			new zp[200];
			format(zp,sizeof(zp),"{1562C6}[Money]: {FFFFFF}You got {1562C6}%d$.{FFFFFF}.", total[playerid]*MUSOR);
			SendClientMessage(playerid, 0xFFFFFFAA, zp);
//		    SetPlayerSkin(playerid, GetPVarInt(playerid, "SKINID"));
		    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		    GiveMoney(playerid, total[playerid]*MUSOR);
		    new tx[10];
		    format(tx,sizeof(tx),"~g~+%d$",total[playerid]*MUSOR);
		    GameTextForPlayer(playerid,tx,100,1);
		    total[playerid] = 0;
		    musor[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    //________________________[]_______________________
			TextDrawHideForPlayer(playerid, work0);
			TextDrawHideForPlayer(playerid, work1);
			TextDrawHideForPlayer(playerid, work2);
			TextDrawHideForPlayer(playerid, work3);
			TextDrawHideForPlayer(playerid, work4);
			TextDrawHideForPlayer(playerid, work5);
			TextDrawHideForPlayer(playerid, work6);
			//________________________[]_____________________
		    DestroyPlayerObject(playerid, object1[playerid]);
		    DestroyPlayerObject(playerid, object2[playerid]);
		    DestroyPlayerObject(playerid, object3[playerid]);
		    DestroyPlayerObject(playerid, object4[playerid]);
		    DestroyPlayerObject(playerid, object5[playerid]);
		    DestroyPlayerObject(playerid, object6[playerid]);
		}else SendClientMessage(playerid, 0xFFFFFFAA, "{FF0000}[!]: {FFFFFF}You finished work");
    }
	else if(pickupid == spawndoor)
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,1685.5988,-2240.3325,13.5469);
	    SetPlayerFacingAngle(playerid,175.6255);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "New York RolePlay - SPAWN", "{FFFF00}New {2cdb0d}York {FF0000}RolePlay\n\n{A8C4E4}our server say welcome to you, have a great time and good roleplay\nhope you don't break the roleplay rules or you will got jail by adminstrators\nAnd You Can Contact Founder Anytime On Discord: {FFFF00}Blackrose_Rog {FF0000}- {FFFF00}Mr_Stane {FF0000}- {FFFF00}Magnus_Carlsen", "Close", "");
	}
	else if(pickupid == armysteal)
	{
	    SetPlayerPos(playerid,109.1006,1814.4536,18.0839);
	    SetPlayerFacingAngle(playerid,91.6751);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == armysteal2)
	{
	    SetPlayerPos(playerid,69.8372,1568.4376,14.8374);
	    SetPlayerFacingAngle(playerid,170.5183);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medcardpic)
	{
		if(PlayerInfo[playerid][pMedCard] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You are already have a med card!");
		ShowPlayerDialog(playerid, 5451, DIALOG_STYLE_MSGBOX, "Buying a med card", "Do you want to buy a med card for {1da31d}$2.500.000 {ffffff}from the General Hospital {d91ed3}[MCLS]{ffffff}?", "Buy", "Close");
	}
	else if(pickupid == respawndoor)
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,2216.8977,-1150.4619,1025.7969);
	    SetPlayerFacingAngle(playerid,268.7649);
	    SetPlayerInterior(playerid, 15);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == dmzone)
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,300.5217, 280.4201, 1001.1425);
	    SetPlayerFacingAngle(playerid, 91.5311);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == dmzone1)
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,2057.6042, -1899.8652, 13.7455);
	    SetPlayerFacingAngle(playerid, 0.6112);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == dmzonejoin)
    {
		ShowPlayerDialog(playerid, 24124, DIALOG_STYLE_LIST, "{ffffff}Dmzone", "Kit 1\tDeagle\nKit 2\tDeagle + Shotgun\nKit 3\tDeagle + M4\nKit 4\tDeagle + Country Rifle", "Select", "Close");
        return true;
    }
    if(pickupid >= MAX_PICKUPS || pickupid < 0) return 0;
    if(!IsPlayerInRangeOfPoint(playerid, 7.0, PickupInfo[pickupid][PickX], PickupInfo[pickupid][PickY], PickupInfo[pickupid][PickZ])) return true;
    if(pickupid == GetPVarInt(playerid,"OLDPICKUP") || GetPVarInt(playerid,"TIMEPICKUP") > 0) return true;
    new Float:z;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
    SetPVarInt(playerid,"TIMEPICKUP",3);
    SetPVarInt(playerid,"OLDPICKUP",pickupid);
    if(pickupid >= autoshoppick[0] && pickupid <= autoshoppick[3]) return GameTextForPlayer(playerid, "~g~print: ~w~\"/buycar\"", 3000, 3);
    else if(pickupid == paintball)
    {
        if(StartPaintBall != 1 || TimerPaintBall <= 5) return SendClientMessage(playerid, COLOR_WHITE,"Registration closed!");
        if(TeamPain[playerid] != 0) return SendClientMessage(playerid, COLOR_WHITE,"You are already registered!");
        if(PlayerPB[0] > 25 && PlayerPB[1] > 25) return SendClientMessage(playerid, COLOR_GREY,"All seats are taken.");
        if(PlayerPB[1] == 0 && PlayerPB[0] == 0 || PlayerPB[0] < PlayerPB[1] || PlayerPB[1] == PlayerPB[0])
        {
            SendClientMessage(playerid, -1,"You are registered for the match. You play as a team {33AAFF}blue{FFFFFF}!");
            PlayerPB[0] ++;
            TeamPain[playerid] = 1;
            KillPain[playerid] = 0;
            DeathPain[playerid] = 0;
        }
        else if(PlayerPB[0] > PlayerPB[1])
        {
            SendClientMessage(playerid, -1,"You are registered for the match. You play as a team {FF0000}red{FFFFFF}!");
            PlayerPB[1] ++;
            TeamPain[playerid] = 2;
            KillPain[playerid] = 0;
            DeathPain[playerid] = 0;
        }
        return true;
    }
    else if(pickupid == P_VOKZALLS[0])
	{
	    SetPPos(playerid,1893.6660,-2095.2715,1000.9688);
	    SetPlayerFacingAngle(playerid,179.2869);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPlayerInteriorEx(playerid, 1);
		SetCameraBehindPlayer(playerid);
	    return true;
	}
	else if(pickupid == rentcar)
	{
	    ShowPlayerDialog(playerid, 1398, DIALOG_STYLE_TABLIST_HEADERS, "{ffffb3}RC toys rental",
		"{99CCFF}Name\t\t{99CCFF}Rent price\n\
		{ffffff}RC Bandit(441)\t\t{FF8800}350000$\n\
		{ffffff}RC Tiger(564)\t\t{FF8800}350000$\n\
		{ffffff}RC Goblin(501)\t\t{FF8800}350000$\n\
		{ffffff}RC Raider(465)\t\t{FF8800}350000$",
		"Accept", "Cancle");
		return true;
	}
	else if(pickupid == rentspawn)
	{
	    ShowPlayerDialog(playerid, 1399, DIALOG_STYLE_TABLIST_HEADERS, "{ffffb3}Car/Bike Rental",
		"{99CCFF}Name\t\t{99CCFF}Rent price\n\
		{ffffff}Sunrise(550)\t\t{FF8800}20000$\n\
		{ffffff}Wayfarer(586)\t\t{FF8800}15000$",
		"Accept", "Cancle");
		return true;
	}
	else if(pickupid == gangsquest)
	{
	    ShowPlayerDialog(playerid, 9644, DIALOG_STYLE_TABLIST_HEADERS, "{ffffb3}Gangs Quest",
		"{99CCFF}QUEST\t\t{99CCFF}LOCATIONS\n\
		{ffffff}Jewel Robbery\n\
		{ffffff}Army SF Robbery\n\
		{ffffff}Army LV Robbery",
		"Accept", "Cancle");
		return true;
	}
	else if(pickupid == P_VOKZALLS[1])
	{
		SetPPos(playerid,1730.0095,-1880.9292,13.7828);
	    SetPlayerFacingAngle(playerid,267.8674);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerInteriorEx(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
    else if(pickupid == racePickup[0])
	{
	    SetPPos(playerid,1774.4395,-1663.5664,14.4277);
		SetPlayerFacingAngle(playerid,119.0623);
		SetCameraBehindPlayer(playerid);
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
	}//�����
	else if(pickupid == racePickup[1])
	{
		SetPPos(playerid,-2158.7422,641.9844,1052.3750);
		SetPlayerFacingAngle(playerid,178.3607);
		SetCameraBehindPlayer(playerid);
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid,43);
		return true;
	}
	else if(pickupid == racePickup[2] || pickupid == racePickup[3])
	{
	    if(GetPVarInt(playerid, "DialogShow")) return 1;
	    if(RaceStarting[2] != 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}Registration for racing events is closed.");
		if (PlayersInRace{0} >= 40) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}No places.");
		if (GetPVarInt(playerid, "PlayerInRace")) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}You are already registered for the race.");
		SetPVarInt(playerid, "DialogShow", 1);
		ShowPlayerDialog(playerid,4312,DIALOG_STYLE_LIST,"{FF6F00}Registration for race #1{FFFFFF} (Select a car)","{FFFFFF}[1] Hotring Racer\n[2] Super GT\n[3] Bullet\n[4] Phoenix\n[5] Infernus\n[6] Turismo","Select","Cancle");
		return 1;
	}
	else if(pickupid == BasePic[0])
	{
		SetPPos(playerid,831.5885,7.0524,1004.1797);
		SetPlayerFacingAngle(playerid,120.23);
		SetCameraBehindPlayer(playerid);
		SetPlayerInteriorEx(playerid,3);
		SetPlayerVirtualWorldEx(playerid,301);
		return true;
	}
	else if(pickupid == BasePic[1])
	{
		SetPPos(playerid,2177.1746,1117.2573,12.6484);
		SetPlayerFacingAngle(playerid,62.6900);
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
	}
	else if(pickupid == BasePic[2])
	{
	    if(BaseStarting[1] != 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}Registration for BASE jumping is closed.");
	    if(PlayersInBase{0} >= 30) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}Unfortunately all places are taken.");
	    if(GetPVarInt(playerid, "PlayerInBase")) return SendClientMessage(playerid,-1, "� {AC0000}[ERROR] {ffffff}You are already registered for BASE jumping.");
	    ShowPlayerDialog(playerid, 385, DIALOG_STYLE_MSGBOX, "{FF6F00}Registration for BASE jumping","{FFFFFF}BASE jumping\n\nTicket price: {FF6F00}15,000${FFFFFF}\nNumber of attempts: {FF6F00}3{FFFFFF}\n\nAfter completing the entire map you will receive: {FF6F00}100 DonateMoney ", "Go","Exit");
	    return 1;
	}
    else if(pickupid == army[0])
	{
	    SetPlayerInteriorEx(playerid, 15);
	    SetPPos(playerid, 690.7396,-1330.5793,1102.0000);
	    SetPlayerFacingAngle(playerid, 0.9381);
	    SetPlayerVirtualWorldEx(playerid, 3);
	    SetCameraBehindPlayer(playerid);
     	return true;
	}
	else if(pickupid == army[1])
	{
	    SetPlayerInteriorEx(playerid, 0);
	    SetPPos(playerid, -1370.8291,498.9630,11.1953);
	    SetPlayerFacingAngle(playerid, 269.4792);
     	SetPlayerVirtualWorldEx(playerid, 0);
     	SetCameraBehindPlayer(playerid);
     	return true;
	}
    else if(pickupid == army[2])
	{
	    SetPlayerInteriorEx(playerid, 15);
	    SetPPos(playerid, 690.7396,-1330.5793,1102.0000);
	    SetPlayerFacingAngle(playerid, 0.9381);
	    SetPlayerVirtualWorldEx(playerid, 2);
	    SetCameraBehindPlayer(playerid);
     	return true;
	}
	else if(pickupid == army[3])
	{
	    SetPlayerInteriorEx(playerid, 0);
	    SetPPos(playerid, 213.4010,1918.3643,17.6406);
	    SetPlayerFacingAngle(playerid, 181.4985);
     	SetPlayerVirtualWorldEx(playerid, 0);
     	SetCameraBehindPlayer(playerid);
     	return true;
	}
	else if(pickupid == rentspawn)
	{
	    ShowPlayerDialog(playerid, 1399, DIALOG_STYLE_TABLIST_HEADERS, "{ffffb3}Rent Bike/Car","To Rent Click the thing that you want and click 'Rent' \nWayfarer / Sunrise \t20000$ / 15000$", "Rent", "Cancel");
		return 1;
	}
    else if(pickupid == enterpickup[0])
	{
	    SetPPos(playerid, 2017.6039,1017.8492,996.8750);
	    SetPlayerFacingAngle(playerid, 90);
	    SetPlayerInteriorEx(playerid, 10);
     	SetCameraBehindPlayer(playerid);
     	SetPlayerVirtualWorldEx(playerid, VW_DRAGONS);
     	return true;
	}
	else if(pickupid == exitpickup[0])
	{
	    SetPPos(playerid, 2020.6541,1007.7291,10.8203);
	    SetPlayerFacingAngle(playerid, 270);
	    SetPlayerInteriorEx(playerid, 0);
     	SetCameraBehindPlayer(playerid);
     	SetPlayerVirtualWorldEx(playerid, 0);
     	return true;
	}
	else if(pickupid == enterpickup[1])
	{
	    SetPPos(playerid, 2233.8965,1713.1022,1012.0331);
	    SetPlayerFacingAngle(playerid, 180);
	    SetPlayerInteriorEx(playerid, 1);
     	SetCameraBehindPlayer(playerid);
     	SetPlayerVirtualWorldEx(playerid, VW_CALIGULAS);
     	return true;
	}
	else if(pickupid == exitpickup[1])
	{
	    SetPPos(playerid, 2195.2456,1677.1650,12.3672);
	    SetPlayerFacingAngle(playerid, 90);
	    SetPlayerInteriorEx(playerid, 0);
     	SetCameraBehindPlayer(playerid);
     	SetPlayerVirtualWorldEx(playerid, 0);
     	return true;
	}
	else if(pickupid == dresspickup[0])
	{
	    if(PlayerInfo[playerid][pMember] != DRAGONS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You don't work at Four Dragons Casino");
		if(StartDuty[playerid] == 0)
		{
			ShowPlayerDialog(playerid, D_DUTY, DIALOG_STYLE_MSGBOX, "Dressing room", "Do you really want to start your work day?", "Yes", "No");
		}
		else
		{
 			ShowPlayerDialog(playerid, D_DUTY, DIALOG_STYLE_MSGBOX, "Dressing room", "Are you sure you want to end your day at work?", "Yes", "No");
		}
		return true;
	}
	else if(pickupid == dresspickup[1])
	{
	    if(PlayerInfo[playerid][pMember] != CALIGULAS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You do not work at Casino Caligula's");
		if(StartDuty[playerid] == 0)
		{
			ShowPlayerDialog(playerid, D_DUTY, DIALOG_STYLE_MSGBOX, "Dressing room", "Do you really want to start your work day?", "Yes", "No");
		}
		else
		{
			ShowPlayerDialog(playerid, D_DUTY, DIALOG_STYLE_MSGBOX, "Dressing room", "Do you really want to end your work day?", "Yes", "No");
		}
		return true;
	}
	else if(pickupid == fight) return ShowPlayerDialog(playerid,9979,DIALOG_STYLE_MSGBOX,"Boxer","Are you looking to get a job as a boxer?","Get settled","Cancle");
	else if(pickupid == parashut) return GiveWeapon(playerid, 46, 100);
	else if(pickupid == sportzal[0])
	{
		if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0) SetPlayerSkinEx(playerid, 49);
		SetPlayerInteriorEx(playerid,5);
		ResetWeapons(playerid);
		SetPPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
		return true;
	}
	else if(pickupid == sportzal[1])
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2227.1162,-1723.1353,13.5533);
		SetPlayerFacingAngle(playerid, 130.5909);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		if(PlayerInfo[playerid][pMember] >=1) {	SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);}
		if(PlayerInfo[playerid][pMember] ==0) {	SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);}
		return true;
	}
	else if(pickupid == JobsDJ[0] || pickupid == JobsDJ[1]) return ShowPlayerDialog(playerid,10099,DIALOG_STYLE_MSGBOX,"DJ job","Are you sure you want to apply for a DJ job?","Yes","No");
	else if(pickupid== jobspickup[0]) return ShowPlayerDialog(playerid,1775,DIALOG_STYLE_MSGBOX,"Car thief job","Are you sure you want to get a car theft job?","Yes","No");
	else if(pickupid == paintvnutrpic)// �����
	{
		SetPlayerInteriorEx(playerid,7);
		SetPPos(playerid,303.1312,-140.8648,1004.0625);
		SetPlayerFacingAngle(playerid, 500);
		return true;
	}
	else if(pickupid == paintvnutrpic1)// ����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2588.9453,2789.9827,10.8203);
		SetPlayerFacingAngle(playerid, 500);
		return true;
	}
	else if(pickupid == paintulicpic)// �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2503.0715,2776.3035,10.8203);
		SetPlayerFacingAngle(playerid, 500);
		return true;
	}
	else if(pickupid == paintulicpic1)// ����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2490.6626,2779.3379,10.8203);
		SetPlayerFacingAngle(playerid, 500);
		return true;
	}
	else if(pickupid == ammomer)
	{
		if (PlayerInfo[playerid][pMember] == 7) return GiveWeapon(playerid, 24, 35), SendClientMessage(playerid, 0x6495EDFF, "You have been given a weapon");
		else return SendClientMessage(playerid, COLOR_RED, "You are not a member of the City Hall!");
	}
	else if(pickupid == ammomerrr)
	{
		return ShowPlayerDialog(playerid,28,0,": Thief job","{FFFFFF}You are about to get a job as a Thief\nYou agree to the terms?","Yes","No");
	}
	else if(pickupid == lspic[0])
	{
		if(GetPVarInt(playerid,"NewsEnter") > gettime()) return SendClientMessage(playerid, -1, "You were kicked out of the studio, wait for your time.");
		return ShowPlayerDialog(playerid,8242,DIALOG_STYLE_MSGBOX,"Enter","Where do you want to enter?","Office","On the roof");
	}
	else if(pickupid == lspic[1]) return ShowPlayerDialog(playerid,8243,DIALOG_STYLE_MSGBOX,"Exit","Where do you want to go?","Parking","On the roof");
	else if(pickupid == lspic[2]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(playerid, 175.8234);
		return true;
	}
	else if(pickupid == medpic[0]) // ������ ���� ls
	{
	    if(GetPVarInt(playerid,"MdEnter") > gettime()) return SendClientMessage(playerid, -1, "You were kicked out of the hospital, wait your time.");
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPlayerInteriorEx(playerid, 1);
		SetPPos(playerid,-642.8376,-900.7119,1436.1736);
		SetPlayerFacingAngle(playerid, 179.9173);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		return true;
	}
	else if(pickupid == medpic[1]) // ������ ����� ls
	{
	    if(PlayerInfo[playerid][pHospital] == 1 && GetPlayerHealth(playerid) < 95) return SendClientMessage(playerid,COLOR_WHITE,"You have not completed the course of treatment, go back and stand on the heart icon and go through the procedure.");
		if(PlayerInfo[playerid][pHospital] == 1) PlayerInfo[playerid][pHospital] = 0;
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,1177.1721,-1323.3220,14.0576);
		SetPlayerFacingAngle(playerid, 270);
		return true;
	}
	else if(pickupid == medpic[2]) {
		if(PlayerInfo[playerid][pMember] != 4) return SendClientMessage(playerid, -1, "You don't have the keys!");
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,1160.1693,-1346.6605,26.6863);
		SetPlayerFacingAngle(playerid, 182.3363);
	}
	else if(pickupid == medpic[3]) {
		if(PlayerInfo[playerid][pMember] != 4) return SendClientMessage(playerid, -1, "You don't have the keys!");
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPlayerInteriorEx(playerid, 1);
		SetPPos(playerid,-642.7936,-918.7679,1436.1736);
		SetPlayerFacingAngle(playerid, 358.0099);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2900, 0, "d", playerid);
	}
	else if(pickupid == paint[0])
    {
    	SetPlayerInteriorEx(playerid,3);
		SetPPos(playerid,832.2192,7.5384,1004.1797);
		SetPlayerFacingAngle(playerid, 92.0962);
		SetPlayerVirtualWorldEx(playerid,3);
		return true;
    }
    else if(pickupid == paint[1])
    {
		if(TeamPain[playerid])
		{
			PlayerPB[TeamPain[playerid]-1] --;
			TeamPain[playerid] = 0;
			SendClientMessage(playerid,COLOR_WHITE,"You have given up on paintball.");
		}
    	SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1553.7068,-1790.6709,13.5469);
		SetPlayerFacingAngle(playerid, 267.5410);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
    }
    else if(pickupid == tserkov[0])
    {
    	SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,-1987.3539,1117.9453,54.2397);
		SetPlayerFacingAngle(playerid, 269.6494);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
    }
    else if(pickupid == razdevalka[0] && PlayerInfo[playerid][pMember] == 1) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room LSPD","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[1] && PlayerInfo[playerid][pMember] == 10) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room SFPD","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[2] && PlayerInfo[playerid][pMember] == 21) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room LVPD","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[3] && PlayerInfo[playerid][pMember] == 3) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room SFA","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[4] && PlayerInfo[playerid][pMember] == 19) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room LVA","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[5] && PlayerInfo[playerid][pMember] == 7) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room City-Hall","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[6] && PlayerInfo[playerid][pMember] == 2) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room FBI","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[7] && PlayerInfo[playerid][pMember] == 4) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room MEDICS","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[8] && PlayerInfo[playerid][pMember] == 25) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room SWAT","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[9] && PlayerInfo[playerid][pMember] == 11) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Changing room INSTRUCTORS","Do you want to wear work or casual clothes?", "Working", "The usual");
	else if(pickupid == razdevalka[10] && PlayerInfo[playerid][pMember] == 26) return ShowPlayerDialog(playerid,2250,DIALOG_STYLE_MSGBOX, "Locker room GOVERNMENT","Do you want to wear work or casual clothes?", "Working", "The usual");
    else if(pickupid == tserkov[1])
    {
    	SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,-1992.6265,1117.9254,54.5319);
		SetPlayerFacingAngle(playerid, 85.7211);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
    }
	else if(pickupid == mast[0]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,-1800.4135,1197.5573,25.1194);
		SetPlayerFacingAngle(playerid, 182.3717);
		SetPlayerVirtualWorldEx(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
		return true;
	}
	else if(pickupid == mast[1]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1657.9347,2197.8618,10.8203);
		SetPlayerFacingAngle(playerid, 183.9151);
		SetPlayerVirtualWorldEx(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
		return true;
	}
	else if(pickupid == mast[2]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,854.0541,-601.7619,18.4219);
		SetPlayerFacingAngle(playerid, 0.6835);
		SetPlayerVirtualWorldEx(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
		return true;
	}
	else if(pickupid == narkoenter) //
	{
		SetPlayerInteriorEx(playerid,5);
		SetPPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == lcnpic[0]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == lcnpic[1]) //
	{
		SetPlayerInteriorEx(playerid, 5);
		SetPPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorldEx(playerid, 2);
		return true;
	}
	else if(pickupid == narkoexit) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2168.0977,-1673.5548,15.0826);
		SetPlayerFacingAngle(playerid,217.7220);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
	}
	else if(pickupid == rmpic[1]) //
	{
		SetPlayerInteriorEx(playerid, 5);
		SetPPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorldEx(playerid, 1);
		return true;
	}
	else if(pickupid == rmpic[0]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,940.2619,1733.4958,8.8516);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
	}
	else if(pickupid == yakexit[1]) //
	{
		SetPlayerInteriorEx(playerid, 5);
		SetPPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		return true;
	}
	else if(pickupid == yakexit[0]) //
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
		return true;
	}
	else if(pickupid == fbi[1]) //fbi �����
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid,0);
		SetPPos(playerid,1124.6821,-2037.5505,69.8832);
		SetPlayerFacingAngle(playerid, 272.4807);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == fbi[0]) //fbi ����
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid,5);
		SetPPos(playerid,585.6392,1249.8828,1080.3250);
		SetPlayerFacingAngle(playerid, 358.2691);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == fbi[2]) //fbi ����
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid,5);
		SetPPos(playerid,555.9778, 1293.6598, 1083.0673);
		SetPlayerFacingAngle(playerid, 2.0995);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == fbi[3]) //fbi �����
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid,5);
		SetPPos(playerid,582.2357,1249.6730,1080.3250);
		SetPlayerFacingAngle(playerid, 359.2559);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == fbi[5]) //fbi ����� � �����
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid,0);
		SetPPos(playerid,-2486.6475,493.7961,-10.5974);
		SetPlayerFacingAngle(playerid, 180.3599);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == fbi[7]) //fbi �����
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid,5);
		SetPPos(playerid,577.8264,1280.4301,1080.3250);
		SetPlayerFacingAngle(playerid, 176.0201);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == lspd[0]) //LSPD ���� � ������
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,6);
			SetPPos(playerid,246.6428,65.8026,1003.6406);
			SetPlayerFacingAngle(playerid, 2.2168);
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == lspd[1])///LSPD ����� � ������
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,1547.14,-1675.85,13.95);
			SetPlayerFacingAngle(playerid, 91.8310);
			SetPlayerVirtualWorldEx(playerid, 0);
			keys[playerid] = 0;
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == lspd[4])//LSPD ��� �� ������
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == lspd[2])//LSPD ���� �� �����
	{
		if (IsAArm(playerid)|| IsACop(playerid))
		{
			SetPlayerInteriorEx(playerid,6);
			SetPPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorldEx(playerid, 5);
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == sf[4])//���� � ����� ������ � sfpd
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,6);
			SetPPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorldEx(playerid, 1);
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == sf[0])//
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == sf[2])//
	{
		SetPlayerInteriorEx(playerid,10);
		SetPPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
		return true;
	}
	else if(pickupid == sf[3])//
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == lspd[5])
	{
		SetPlayerInteriorEx(playerid,6);
		SetPPos(playerid,246.5438,85.7663,1003.6406);
		SetPlayerFacingAngle(playerid, 278.0311);
		return true;
	}
	else if(pickupid == sf[1])//���� �� ������ � LSPD
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorldEx(playerid, 0);
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == lspd[3])//LSPD ����� � ������
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
			SetPlayerVirtualWorldEx(playerid, 0);
			keys[playerid] = 0;
		}
		else SendClientMessage(playerid, COLOR_RED,"The door is locked! You don't have a pass");
		return true;
	}
	else if(pickupid == autoschool1)//��������� ����1
	{
	    if(GetPVarInt(playerid,"AvtoEnter") > gettime()) return SendClientMessage(playerid, -1, "You were kicked out of driving school, wait for your time.");
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,-795.2729,1545.2925,1139.2369);
		SetPlayerFacingAngle(playerid, 267.8888);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == avtosh[0])//������ ����
	{
        if(GetPVarInt(playerid,"AvtoEnter") > gettime()) return SendClientMessage(playerid, -1, "You were kicked out of driving school, wait for your time.");
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,-776.2069,1545.2877,1139.2369);
		SetPlayerFacingAngle(playerid, 357.1665);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == avtosh[1])//������ �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,-2029.9843,-123.2148,35.2010);
		SetPlayerFacingAngle(playerid,178.4111);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == avtosh[2]) return ShowPlayerDialog(playerid,10022,DIALOG_STYLE_MSGBOX,"Car License","{ffffff}The cost of the car license test is {1f9e1b}$350\n{ffffff}Do you want to pass the test?", "Yes", "No");
	else if(pickupid == ash)//��������� �����1
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,-2026.9436,-99.6266,35.1641);
		SetPlayerFacingAngle(playerid, 355.8038);
		DisablePlayerCheckpoint(playerid);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == jewels[0]) //lvpd 1 ���� � ������ � ������
	{
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 3);
		SetPPos(playerid,2169.1125,1618.6616,999.9766);
		SetPlayerFacingAngle(playerid, 359.1617);
		return true;
	}
	else if(pickupid == jewels[1])//lvpd 2 ���� � �����..
	{
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 3);
		SetPPos(playerid,2168.1296,1618.6710,999.9781);
		SetPlayerFacingAngle(playerid, 94.8742);
		return true;
	}
	else if(pickupid == lvpdpic[0]) //lvpd 1 ���� � ������ � ������
	{
		SetPlayerInteriorEx(playerid,3);
		SetPlayerVirtualWorldEx(playerid, -1);
		SetPPos(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
		return true;
	}
	else if(pickupid == lvpdpic[1])//lvpd 2 ���� � �����..
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
		return true;
	}
	else if(pickupid == lvpdpic[2]) //lvpd 3 � ������
	{
		SetPlayerInteriorEx(playerid,3);
		SetPlayerVirtualWorldEx(playerid, -1);
		SetPPos(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
		return true;
	}
	else if(pickupid == lvpdpic[3])//lvpd  4 �� �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
		return true;
	}
	else if(pickupid == lvpdpic[4]) return ShowPlayerDialog(playerid,8240,DIALOG_STYLE_MSGBOX,"Enter","Where do you want to go?","Warehouse","Rooftop");
	else if(pickupid == lvpdpic[5])//lvpd 6 ������ �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
		return true;
	}
	else if(pickupid == lvpdpic[6]) return ShowPlayerDialog(playerid,8241,DIALOG_STYLE_MSGBOX,"Enter","Where do you want to enter?","Warehouse","Down");
	else if(pickupid >= chekmatlva[0] && pickupid <= chekmatlva[9])//  ������ �����
	{
		if (!IsAGang(playerid)) return    SendClientMessage(playerid,COLOR_GREY,"You are not in a gang!");
		if(kazna <= 0) return	SendClientMessage(playerid,COLOR_GRAD1,"No Cash Box In Army Base!");
		if(PlayerInfo[playerid][pCash] >= 60000) return SendClientMessage(playerid,COLOR_GREY,"Can't Take More");
		SendClientMessage(playerid,COLOR_BLUE,"You Successfully Steal $120000 City Hall Cash Box From Army Base");
		kazna -= 60000;
  		PlayerInfo[playerid][pCash] += 20000;
  		return true;
	}
	else if(pickupid >= chekmats[0] && pickupid <= chekmats[2])
	{
		if (!IsAGang(playerid)) return    SendClientMessage(playerid,COLOR_GREY,"You are not in a gang!");
		if(kazna <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"No Cash Box In Army Base!");
		if(PlayerInfo[playerid][pCash] >= 60000) return SendClientMessage(playerid,COLOR_GREY,"Can't take more");
		SendClientMessage(playerid,COLOR_BLUE,"You Successfully Steal $120000 City Hall Cash Box From Army Base");
		kazna -= 60000;
		PlayerInfo[playerid][pCash] += 20000;
		return true;
	}
	else if(pickupid == buygunzakon[0])
	{
		if(PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunfbiTime] > 0) return SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can take a weapon once a minute!");
			if(fbimats <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}No materials in the organization safe!");
			{
			    GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 21);
				GiveWeapon(playerid, 41, 1000);
				GiveWeapon(playerid, 29, 90);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealthAC(playerid,100);
				fbimats -= 100;
				PlayerInfo[playerid][pGunfbiTime] = 60;
				PlayerInfo[playerid][pSatiety] = 100;
				SendClientMessage(playerid, COLOR_GREEN,"Issued by: Armor, Desert Eagle (3 Clips),Spray, MP5 (3 Clips)");
			}
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You are not an FBI agent!");
		return true;
	}
	else if(pickupid == buygunzakon[1])
	{
		if(PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunlspdTime] > 0) return	SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can take a weapon once a minute!");
			if(lspdmatbi <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
			{
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 175);
				GiveWeapon(playerid, 31, 150);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmour(playerid, 100);
				lspdmatbi -= 100;
				PlayerInfo[playerid][pGunlspdTime] = 60;
				PlayerInfo[playerid][pSatiety] = 100;
				SendClientMessage(playerid, COLOR_GREEN,"Police Duty: Armor - Desert Eagle - M4");
				Police +=1;
			}
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You are not a member LSPD!");
		return true;
	}
	else if(pickupid == buygunzakon[3])
	{
		if(PlayerInfo[playerid][pLeader] == 21 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunlspdTime] > 0) return	SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can take a weapon once a minute!");
			if(lvpdmats <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
			{
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 175);
				GiveWeapon(playerid, 31, 150);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmour(playerid, 100);
				lvpdmats -= 100;
				PlayerInfo[playerid][pGunlspdTime] = 60;
				PlayerInfo[playerid][pSatiety] = 100;
				SendClientMessage(playerid, COLOR_GREEN,"Police Duty: Armor - Desert Eagle - M4");
				Police +=1;
			}
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You are not a member LVPD!");
		return true;
	}
	else if(pickupid == buygunzakon[2])
	{
		if(PlayerInfo[playerid][pLeader] == 10 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunlspdTime] > 0) return	SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can take a weapon once a minute!");
			if(sfpdmats <= 0) return	SendClientMessage(playerid,COLOR_GRAD1,"No materials in the organization safe!");
			{
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 175);
				GiveWeapon(playerid, 31, 150);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmour(playerid, 100);
				sfpdmats -= 100;
				PlayerInfo[playerid][pGunlspdTime] = 60;
				PlayerInfo[playerid][pSatiety] = 100;
				SendClientMessage(playerid, COLOR_GREEN,"Police Duty: Armor - Desert Eagle - M4");
				Police +=1;
			}
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You are not an SFPD member!");
		return true;
	}
	else if(pickupid >= serdce[0] && pickupid <= serdce[4])
	{
		if(PlayerInfo[playerid][pLevel] >= 9) { SetPlayerHealthAC(playerid, 100), PlayerInfo[playerid][pSatiety] = 100; }
		else SendClientMessage(playerid, COLOR_RED,"For beginners only! (Lvl 9)");
		return true;
	}
	else if(pickupid >= hospital[0] && pickupid <= hospital[5])
	{
        if(PlayerInfo[playerid][pHospital] == 1)
        {
            new Float:Health,hosp[40];
            GetPlayerHealth(playerid,Health);
            SetPlayerHealthAC(playerid, Health+10);
            PlayerInfo[playerid][pCash] --;
            format(hosp,sizeof(hosp),"~r~-1$~g~ +10/%.0f HP",Health+1);
            GameTextForPlayer(playerid,hosp,1000,4);
            SetPVarInt(playerid,"TIMEPICKUP",0);
            SetPVarInt(playerid,"OLDPICKUP",-1);
//            if(Health >= 100) { SendClientMessage(playerid, COLOR_GREEN,"The course of treatment has been completed. You can now leave the hospital"); PlayerInfo[playerid][pHospital] = 0; return true; }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"The course of treatment has been completed. You can leave the hospital.");
        return true;
	}
	else if(pickupid == hospital[12])
	{
        if(PlayerInfo[playerid][pNarcoLomka] > 0)
        {
            new hosp[40];
            PlayerInfo[playerid][pNarcoLomka] --;
            PlayerInfo[playerid][pCash] -= 5;
            SetPVarInt(playerid,"TIMEPICKUP",0);
            SetPVarInt(playerid,"OLDPICKUP",-1);
            format(hosp,sizeof(hosp),"~r~-5$~g~ -1/%d",PlayerInfo[playerid][pNarcoLomka]);
            GameTextForPlayer(playerid,hosp,1000,4);
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"You are completely cured of drug addiction.");
        return true;
	}
	else if(pickupid == minstr)
	{
		if(PlayerInfo[playerid][pLeader] == 26 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunlspdTime] > 0) return SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can pick up a weapon once per minute!");
			{
				SetPlayerArmour(playerid, 100);
				SetPlayerHealthAC(playerid,100);
				PlayerInfo[playerid][pSatiety] = 100;
				GiveWeapon(playerid, 41, 999);//�����
				GiveWeapon(playerid, 24, 21);//3 ������ �����
				SendClientMessage(playerid, COLOR_WHITE,"Issued by: Armor, Spraycan, Desert Eagle (3 Clips)");
				PlayerInfo[playerid][pGunlspdTime] = 60;
			}
		}
		return true;
	}
	else if(pickupid == buygunzakon[4])
	{
		if(PlayerInfo[playerid][pLeader] == 26 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pOdet] == 1) return ShowPlayerDialog(playerid,9678,DIALOG_STYLE_MSGBOX, "Kits � SWAT � San Andreas kits", "You have access to one of two kits:\n\nSet # 1\t\tSet # 2\nArmor\t\t\tArmor\nBaton\t\tBaton\nDesert Eagle\t\tSDPistol\nMP5\t\t\tShotgun\nSmoke Bomb\tSmoke Bomb", "# 1","# 2");
		else return SendClientMessage(playerid, COLOR_GREY,"{FF0000}x {AFAFAF}You are not a member of SWAT!");
	}
	else if(pickupid == barkazino[0] || pickupid == barkazino[1])//��� ������
	{
	    ShowPlayerDialog(playerid,9998, DIALOG_STYLE_LIST, "Bar counter", "Beer 750Money\nWine 1000Money\nPort 1250Money\nVodka 1500Money\nTequila 1750Money\nCognac 2500Money\nWhisky 3000Money\nAbsinthe 5000", "Order", "Cancle");
	    return true;
	}
	else if(pickupid == topghetto[0] || pickupid == topghetto[1] || pickupid == topghetto[2] || pickupid == topghetto[3] || pickupid == topghetto[4])
	{
		mysql_function_query(connects, "SELECT `Name`, `pKInCapt` FROM `accounts` ORDER BY `pKInCapt` DESC LIMIT 5", true, "top_ghetto", "d", playerid);
	}
	else if(pickupid == marenter[0])
	{
	    if(GetPVarInt(playerid,"MerEnter") > gettime()) return SendClientMessage(playerid, -1, "You were kicked out of the mayor's office, wait for your time.");
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPPos(playerid,1481.7789,-1777.1801,2995.6367);
		SetPlayerFacingAngle(playerid, 181.1083);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		SetPlayerCheckpoint(playerid,1473.7715,-1805.7227,2994.6,1.5);
		PicCP[playerid] = 2;
		return true;
	}
	else if(pickupid == marenter[1])
	{
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPPos(playerid,1493.2820,-1797.5125,2995.6255);
		SetPlayerFacingAngle(playerid, 91.5170);
		return true;
	}
	else if(pickupid == marenter[3])
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,1481.055,-1769.540,18.796);
		SetPlayerFacingAngle(playerid, 0.3133);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
		return true;
	}
	else if(pickupid == marenter[4])
	{
		SetPlayerInteriorEx(playerid,1);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPPos(playerid,1493.2820,-1797.5125,2995.6255);
		SetPlayerFacingAngle(playerid, 91.5170);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		SetPlayerCheckpoint(playerid,1473.7715,-1805.7227,2994.6,1.5);
		PicCP[playerid] = 2;
		return true;
	}
	else if(pickupid == marenter[5])
	{
		if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7) ShowPlayerDialog(playerid, 1634, DIALOG_STYLE_LIST, "Where do you want to go", "Salon\nRoof\nParking", "Select", "Back");
		else SendClientMessage(playerid,COLOR_GREY,"You have no keys.");
		return true;
	}
	else if(pickupid == rcpickup[0])
	{
		SetPlayerInteriorEx(playerid, 6);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPPos(playerid,-2240.468505,137.060440,1035.414062);
		SetPlayerFacingAngle(playerid, 91.5170);
		return true;
	}
	else if(pickupid == rcpickup[1])
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,1379.4756,-1753.3787,14.1406);
		SetPlayerFacingAngle(playerid, 91.5170);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
		return true;
	}
	else if(pickupid == automasterskay[0]) // ����
 	{
 	    if(strcmp(BizzInfo[84][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "The business has no owner! (buy - /buybiz)");
 	    ShowPlayerDialog(playerid,4001,DIALOG_STYLE_MSGBOX, "Business","{FFFFFF}The entrance is paid and is {FFA500}10000$\n{00cb00}Are you sure you want to login here?","Yes","No");
  	}
  	else if(pickupid == automasterskay[1]) // �����
  	{
		ShowPlayerDialog(playerid,4002,DIALOG_STYLE_MSGBOX, "Business","{FFFFFF}Do you want to go out of business?","Yes","No");
  	}
	else if(pickupid == rifa[0])//���� ���� �� �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2185.96,-1811.94,13.55);
		SetPlayerFacingAngle(playerid, 400);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	else if(pickupid == rifa[1])//���� ���� � ��������
	{
		SetPlayerInteriorEx(playerid,18);
		SetPlayerVirtualWorldEx(playerid, 63);
		SetPPos(playerid,-226.9188,1401.3635,27.7656);
		SetPlayerFacingAngle(playerid, 500);
		SetPlayerCheckpoint(playerid,-219.9122,1407.0699,27.7656,1.0);
		PicCP[playerid] = 18;
		return true;
	}
	else if(pickupid == mo[0]) //���� ������ ������������
	{
		SetPlayerInteriorEx(playerid,1);
		SetPPos(playerid,-788.8539,-665.4137,4001.0859);
		SetPlayerFacingAngle(playerid, 89.7221);
		SetTimerEx("freezeplayer", 2500, false, "i", playerid);
		TogglePlayerControllable(playerid,0);
		return true;
	}
	else if(pickupid == mo[1]) //����� �� ������������
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,952.2511,-912.2477,45.7656);
		SetPlayerFacingAngle(playerid, 180.3593);
		return true;
	}
	else if(pickupid == vagospic[0])//Vagos ���� � ��������
	{
		SetPlayerInteriorEx(playerid,4);
		SetPlayerVirtualWorldEx(playerid, 75);
		SetPPos(playerid,303.2970,307.1475,1003.5391);
		SetPlayerFacingAngle(playerid, 500);
		SetPlayerCheckpoint(playerid,300.5920,307.3983,1003.5391,1.0);
		PicCP[playerid] = 13;
		return true;
	}
	else if(pickupid == vagospic[1])//Vagos �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2756.5786,-1180.7452,69.3951);
		SetPlayerFacingAngle(playerid, 0.0457);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	else if(pickupid == grooveenter) //����
	{
		SetPlayerInteriorEx(playerid,3);
		SetPPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPlayerCheckpoint(playerid,2492.4380,-1708.5669,1018.3368,1.0);
		PicCP[playerid] = 15;
		return true;
	}
/*	else if(pickupid == swatenter) //swat
	{
		SetPlayerInteriorEx(playerid,3);
		SetPPos(playerid,238.7926,141.2375,1003.0234);
		SetPlayerFacingAngle(playerid,2.1113);
		return true;
	}
	else if(pickupid == swatenter2) //swat
	{
		SetPlayerInteriorEx(playerid,3);
		SetPPos(playerid,288.8489,168.3671,1007.1719);
		SetPlayerFacingAngle(playerid,1.7594);
		return true;
	}
	else if(pickupid == swatexit) //swat
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,742.6971,-1357.1042,13.5000);
		SetPlayerFacingAngle(playerid,1.6001);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == swatexit2) //swat
	{
		SetPlayerInteriorEx(playerid,6);
		SetPPos(playerid,296.9200,-108.0720,1001.5156);
		SetPlayerFacingAngle(playerid,0.8520);
		return true;
	}*/
	else if(pickupid == swatenter) //swat
	{
		SetPPos(playerid,726.1509, -1334.4285, -59.7621);
 		SetPlayerCheckpoint(playerid, 707.1757, -1350.6324, -60.5516,1.0);
		SetPlayerFacingAngle(playerid,2.1113);
		return true;
	}
	else if(pickupid == swatenter2) //swat
	{
		SetPPos(playerid,726.1509, -1334.4285, -59.7621);
 		SetPlayerCheckpoint(playerid, 707.1757, -1350.6324, -60.5516,1.0);
		SetPlayerFacingAngle(playerid,1.7594);
		return true;
	}
	else if(pickupid == swatexit) //swat
	{
		SetPPos(playerid,742.6971,-1357.1042,13.5000);
		SetPlayerFacingAngle(playerid,1.6001);
        DisablePlayerCheckpoint(playerid);
        SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(pickupid == carxbunny) //fate
	{
		ShowPlayerDialog(playerid, 10061, DIALOG_STYLE_LIST, "{CCFF00}Basic Free Claim", "[1] Remove Anti Bunny Hop Free\n[2] Claim Car Licenses Free", "Select", "Back");
		return true;
	}
	else if(pickupid == joinfactions) //fate
	{
		ShowPlayerDialog(playerid, 9676, DIALOG_STYLE_LIST, "{FFD700}Fate System Join Factions $200K", "[1] LSPD\n[2] FBI\n[3] Army Aircraft Carrier\n[4] Ministry of Emergency Situations LS\n[5] La Cosa Nostra\n[6] Yakuza\n[7] City hall\n[8] SFPD\n[9] Instructors\n[10] Ballas Gang\
		\n[11] Los Santos Vagos\n[12] Russian Mafia\n[13] Groove Street\n[14] Sa News\n[15] Varios Los Varios Los Aztecas\n[16] Rifa Gang\n[17] Army Area 51\n[18] LVPD\n[19] Hitman\n[20] Street racers\n[21] SWAT\n[22] Administration of the President\
		\n[23] Casino 4 Dragons\n[24] Casino Caligulas", "Next", "Cancle");
		return true;
	}
	else if(pickupid == sannewspanel) //swat
	{
		if(PlayerInfo[playerid][pMember] == 16)
		ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "[ NEWS MENU ]", "{B8B8B8}Announcements\n [ 1 ] Live\n [ 2 ] Get off the air.\n [ 3 ] Start receiving calls / sms\n [ 4 ] Stop receiving calls/ sms\n [ 5 ] Set the price for calls sms\n [ 6 ] Set the price for advertisements", "Accept", "Cancle");
		return true;
	}
	else if(pickupid == swatgun) //swat
	{
		if(PlayerInfo[playerid][pMember] == 25)
		ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "SWAT Guns", "Deagle\t75-Ammo \nM4\t100-Ammo \nShotgun\t50-Ammo\nMP5\t100-Ammo\nDuty Health\t100-HP\nDuty Armour\t100-AM", "Take", "Close");
		return true;
	}
	else if(pickupid == rifagun) //grove
	{
		if(PlayerInfo[playerid][pMember] == 18)
  		ShowPlayerDialog(playerid, 9599, 2, "Gang Guns", "> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\tMaterials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
		return true;
	}
	else if(pickupid == grovegun) //grove
	{
		if(PlayerInfo[playerid][pMember] == 15)
  		ShowPlayerDialog(playerid, 9599, 2, "Gang Guns", "> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\tMaterials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
		return true;
	}
	else if(pickupid == ballasgun) //ballas
	{
		if(PlayerInfo[playerid][pMember] == 12)
  		ShowPlayerDialog(playerid, 9599, 2, "Gang Guns", "> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\tMaterials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
		return true;
	}
	else if(pickupid ==  vagosgun) //vagos
	{
		if(PlayerInfo[playerid][pMember] == 13)
	    ShowPlayerDialog(playerid, 9599, 2, "Gang Guns", "> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\tMaterials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
		return true;
	}
	else if(pickupid == aztecgun) //ballas
	{
		if(PlayerInfo[playerid][pMember] == 17)
  		ShowPlayerDialog(playerid, 9599, 2, "Gang Guns", "> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\tMaterials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
		return true;
	}
	else if(pickupid == yakuzgun) //swat
	{
		if(PlayerInfo[playerid][pMember] == 6)
		ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Take the gun off the shelf Yakuza", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 rounds] ]\n- Mp5 [400 mats/200 rounds]\n- Sdpistol [100 mats/100 rounds])", "Select", "Cancle");
		return true;
	}
	else if(pickupid == rusmagun) //swat
	{
		if(PlayerInfo[playerid][pMember] == 14)
		ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Take the gun off the shelf Russian mafia", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 cartridges]\n- Mp5 [400 mats/200 cartridges]\n- Sdpistol [100 mats/100 cartridges])", "Select", "Cancle");
		return true;
	}
	else if(pickupid == lcngun) //swat
	{
		if(PlayerInfo[playerid][pMember] == 5)
		ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Take the gun off the shelf LCN", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 cartridges]\n- Mp5 [400 mats/200 cartridges]\n- Sdpistol [100 mats/100 cartridges])", "Select", "Cancle");
		return true;
	}
	if(pickupid == lspdhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == fbihelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == armysfhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == medichelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == lcnhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back"); 
		return true;
	}
	else if(pickupid == yakuzahelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == cityhallhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == sfpdhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == inshelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == ballashelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == vagoshelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
	}
	else if(pickupid == rmhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == grovehelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == sanhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == aztechelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == rifahelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == armylvhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == lvpdhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == hitmanhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == srhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == swathelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == pahelp) //cmd...
	{
		ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{24c773}Server Commands", "{FFFF00}[1] {FFFFFF}Get a description\n{328fed}[2] {FFFFFF}General\n{328fed}[3] {FFFFFF}Chat\n{328fed}[4] {FFFFFF}Telephone\n{328fed}[5] {FFFFFF}Leaders commands\n{328fed}[6] {FFFFFF}House\n{328fed}[7] {FFFFFF}Business\n{328fed}[8] {FFFFFF}Vehicle\n{328fed}[9] {FFFFFF}Family\n{328fed}[10] My commands", "Select", "Back");
		return true;
	}
	else if(pickupid == cname) //cmd...
	{
		if(PlayerInfo[playerid][pAlcoInvenxua] > 1) return SendClientMessage(playerid, 0xafafafff, "Sorry, you are an administrator");
//		if(PlayerInfo[playerid][pRub] < 0) return SendClientMessage(playerid, 0xafafafff, "You don't have enough rubles!");
		ShowPlayerDialog(playerid, 6511, DIALOG_STYLE_INPUT, "Change of nickname", "Enter your desired nickname in the field below:", "Next", "Cancle");
		return true;
	}
	else if(pickupid == serverhelp) //cmd...
	{
		ShowPlayerDialog(playerid, 0, 0, "Information About New York RolePlay", "{FFFFFF}Welcome To New York RolePlay City\n{30D5C8}First Join Any Faction By /works /fate Or Spawn Clown Actor [?] Icon!\n{3090D5}Choose Your Life Become Crimnal Or Goverment Law!\n{D5C830}Find Any Location Via Command /gps Its Free!\n{FFFF00}The Server Got Donation Systems - Everyone Make Rich Or Get Easy Money Exchange Etc Use /donaterub /donate\n{FF00FF}Join Our Discord Server For More Informations discord.gg/BjWJ6Ks28J\n{FF00FF}Got Problem Or Questions And Need Help Use /report Anytime!\n{FF0000}Server IP : 103.179.45.98:5265", "Close", "");
		return true;
	}
	else if(pickupid == grooveexit) //����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorldEx(playerid, 0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	else if(pickupid == aztecpic[0])//Aztec ���� � ��������
	{
		SetPlayerInteriorEx(playerid,8);
		SetPlayerVirtualWorldEx(playerid, 36);
		SetPPos(playerid,-42.31,1408.18,1084.43);
		SetPlayerFacingAngle(playerid, 1000);
		SetPlayerCheckpoint(playerid,-46.0471,1398.3119,1084.4297,1.0);
		PicCP[playerid] = 17;
		return true;
	}
	else if(pickupid == aztecpic[1])//Aztec �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	else if(pickupid == bankpic[0]) //���� ����
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,2024.4034,-722.4582,1121.0779);
		SetPlayerFacingAngle(playerid, 15.4214);
		SetPlayerVirtualWorldEx(playerid,0);
		SetTimerEx("freezeplayer", 3000, false, "i", playerid);
		TogglePlayerControllable(playerid,0);
		return true;
	}
	else if(pickupid == bankpic[2])
	{
		SetPPos(playerid,1413.7816,-1701.7587,13.5395);
		SetPlayerVirtualWorldEx(playerid,0);
		SetPlayerInteriorEx(playerid,0);
		SetPlayerFacingAngle(playerid, 173.9942);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == bankpic[5])
	{
		new membersss = PlayerInfo[playerid][pMember];
		if(membersss==5 || membersss==6 || membersss==12 || membersss==13 || membersss==14 || membersss==15 || membersss==17 || membersss==18 || membersss==23 || membersss==24 || membersss==27 || membersss==28 || PlayerInfo[playerid][pJob]==12 && !IsACop(playerid))
		{
			if(PlayerInfo[playerid][pPayCheck] == 0) return ShowPlayerDialog(playerid, 667, DIALOG_STYLE_MSGBOX, "Entering the repository ", "Do you really want to login?", "Yes", "No");
			else return SendClientMessage(playerid, COLOR_GREY, " You appeared on cameras during the last robbery, wait until next paydays.");
		}
		else if(IsACop(playerid))
		{
			SetPPos(playerid,2147.862,1601.332,1006.168);
			SetPlayerInteriorEx(playerid,1);
			SetPlayerVirtualWorldEx(playerid,3);
			SetPlayerFacingAngle(playerid, 180.0);
            SetCameraBehindPlayer(playerid);
			return true;
		}
		return true;
	}
	else if(pickupid == bankpic[3]) //���� �����
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,1413.7816,-1701.7587,13.5395);
		SetPlayerFacingAngle(playerid, 178.5871);
		SetPlayerVirtualWorldEx(playerid,0);
		return true;
	}
	else if(pickupid == jewels[0])
	{
		new membersss = PlayerInfo[playerid][pMember];
		if(membersss==5 || membersss==6 || membersss==12 || membersss==13 || membersss==14 || membersss==15 || membersss==17 || membersss==18 || membersss==23 || membersss==24 || membersss==27 || membersss==28 || PlayerInfo[playerid][pJob]==12 && !IsACop(playerid))
		{
			if(PlayerInfo[playerid][pPayCheck] == 0) return ShowPlayerDialog(playerid, 667, DIALOG_STYLE_MSGBOX, "Entering the repository ", "Do you really want to login?", "Yes", "No");
			else return SendClientMessage(playerid, COLOR_GREY, " You appeared on cameras during the last robbery, wait until next paydays.");
		}
		else if(IsACop(playerid))
		{
			SetPPos(playerid,2147.862,1601.332,1006.168);
			SetPlayerInteriorEx(playerid,1);
			SetPlayerVirtualWorldEx(playerid,3);
			SetPlayerFacingAngle(playerid, 180.0);
            SetCameraBehindPlayer(playerid);
			return true;
		}
		return true;
	}
	else if(pickupid == ballasvhod[0])//����� ���� �� �����
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid,2000.0796,-1116.2708,26.8559);
		SetPlayerFacingAngle(playerid, 178.1123);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	else if(pickupid == ballasvhod[1])//����� ���� � ���
	{
		SetPlayerInteriorEx(playerid,6);
		SetPlayerVirtualWorldEx(playerid, 34);
		SetPPos(playerid,-68.6311,1353.8743,1080.2109);
		SetPlayerFacingAngle(playerid, 100);
		SetPlayerCheckpoint(playerid,-58.0202,1366.2246,1080.2109,1.0);
		PicCP[playerid] = 12;
		return true;
	}
	else if(pickupid == sklad[1]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,323.0864,1954.0352,21.7746);
		SetPlayerFacingAngle(playerid, 91.1673);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == sklad[0]) //
	{
		SetPlayerInteriorEx(playerid,6);
		SetPPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == gunarm[0])
	{
		if(PlayerInfo[playerid][pMember] != 19) return SendClientMessage(playerid, COLOR_WHITE,"You are not an Area 51 soldier!");
		if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid, COLOR_WHITE,"You are not on duty!");
		if(PlayerInfo[playerid][pGun51Time] > 0) return SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can pick up a weapon once every minute!");
		if(armmatbi <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"There are no weapons in the warehouse!");
		GiveWeapon(playerid, 24, 21);
		GiveWeapon(playerid, 31, 150);
		SetPlayerArmour(playerid, 100);
		SetPlayerHealthAC(playerid,100);
		armmatbi -= 100;
		PlayerInfo[playerid][pGun51Time] = 60;
		PlayerInfo[playerid][pSatiety] = 100;
		SendClientMessage(playerid, COLOR_GREEN,"Issued: Armor, Desert Eagle (3 Clips), M4A1 (3 Clips)");//������� ����
		return true;
	}
	else if(pickupid == gunarm[1])
	{
		if(PlayerInfo[playerid][pLeader] == 3 && PlayerInfo[playerid][pOdet] == 1 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pOdet] == 1)
		{
			if(PlayerInfo[playerid][pGunaviaTime] > 0) return SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can pick up a weapon once per minute!");
			if(armmatsf <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"There are no weapons in the warehouse!");
			GiveWeapon(playerid, 24, 21);
			GiveWeapon(playerid, 31, 150);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armmatsf -= 100;
			PlayerInfo[playerid][pGunaviaTime] = 60;
			PlayerInfo[playerid][pSatiety] = 100;
			SendClientMessage(playerid, COLOR_GREEN,"Issued: Armor, Desert Eagle (3 Clips), M4A1 (3 Clips)");//������� ����
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You are not a SF Army soldier!");
		return true;
	}
	else if(pickupid == zonaa) //
	{
		if(PlayerInfo[playerid][pMember] == 19 || keys[playerid] == 1 || PlayerInfo[playerid][pMember] == 23)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You don't have a key!");
		return true;
	}
	else if(pickupid == zona) //
	{
		if( PlayerInfo[playerid][pMember] == 19 || keys[playerid] == 1)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPPos(playerid,290.1921,1835.0770,17.6481);
			SetPlayerFacingAngle(playerid, 356.2967);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_WHITE,"You don't have a key!");
		return true;
	}
	else if(pickupid == hitss[0]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,1821.9070,-891.0353,1085.7050);
		SetPlayerFacingAngle(playerid, 270.4146);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == hitss[1]) //
	{
		SetPlayerInteriorEx(playerid,0);
		SetPPos(playerid,-2484.9268,2404.6436,16.1831);
		SetPlayerFacingAngle(playerid, 121.9165);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == hitss[2])
	{
		if(PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid, COLOR_WHITE,"You are not a member of the Funeral Home!");
		return ShowPlayerDialog(playerid,7765,DIALOG_STYLE_TABLIST,"Weapon depot","[1]\tWeapon set # 1\t1 k.\t10,000$\n[2]\tWeapon set # 2\t1 k.\t20,000$\n[3]\tWeapon set # 3\t1 k.\t30.000$\n[4]\tWeapon set # 4\t1 k.\t40.000$\n[5]\tSet of weapon # 5\t1 k.\t50.000$\n [6]\tWeapon set # 6\t1 k.\t60,000$\n[7]\tWeapon set # 7\t1 k.\t70,000$","Buy","Close");
	}
	else if(pickupid == plen[0]) //
	{
		SetPlayerInteriorEx(playerid,6);
		SetPPos(playerid,308.0302,-159.7244,999.5938);
		SetPlayerFacingAngle(playerid, 258.2231);
		return true;
	}
	else if(pickupid == plen[1]) //
	{
		SetPlayerInteriorEx(playerid,6);
		SetPPos(playerid,303.6572,-159.7246,999.5938);
		SetPlayerFacingAngle(playerid, 88.7500);
		return true;
	}
	else if(pickupid == mapa)
	{
		if(PlayerInfo[playerid][pIzol] > 0) return SendClientMessage(playerid, -1, "Have you already voted in this election?!");
		return ShowPlayerDialog(playerid, 8924, 0, "President elections", "{ffffff}Do you want to take your ballot and vote?", "Yes", "No");
	}
    else if(pickupid >= Pickup1[0] && pickupid <= Pickup1[2])
	{
		if(viborplayer[playerid] == 0) return SendClientMessage(playerid, -1, "Take the ballot");
		return GetPick(playerid, 0);
	}
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
    {
    	if(pickupid == BizzInfo[idx][bPickup])
        {
            PicCP[playerid] = 0;
  		   	if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		  	{
		  	    SetPVarInt(playerid, "PlayerBizz", idx);
 				format(stringer1,144,"{ffffff}Name:\t\t\t{FFD700}%s\n{FFFFFF}Price:\t\t\t{3399FF}%d$\n\n{00cb00}Are you sure you want to enter here?",BizzInfo[idx][bName],BizzInfo[idx][bPrice]);
		  		if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 8) return ShowPlayerDialog(playerid, 9291, 0, "{63CB00}Business", stringer1, "Yes", "No");
		  	}
		  	else
		  	{
		  	    SetPVarInt(playerid, "PlayerBizz", idx);
				if(BizzInfo[idx][bEnter] > 0) format(stringer1, 100, "{ffffff}The entrance is paid and is {FFA500}%i$\n{00cb00}Are you sure you want to enter here?", BizzInfo[idx][bEnter]);
				else format(stringer1, 64, "{ffffff}Free admission\n{00cb00}Are you sure you want to enter here?");
				ShowPlayerDialog(playerid, 9291, 0, "Business", stringer1, "Yes", "No");
				return true;
		  	}
        }
        if(pickupid == BizzInfo[idx][bPickupExit])
        {
            SetPVarInt(playerid, "PlayerBizz", idx);
            return ShowPlayerDialog(playerid, 9292, 0, "Business", "{ffffff}Do you want to go out of business?", "Yes", "No");
        }
		if(pickupid == BizzInfo[idx][bMenu]) {
	    	if(BizzInfo[idx][bType] == 1) return MagazineList(playerid, idx);
		}
    }
	if(pickupid == RealtorPickupExit)
	{
		new realtor;// = GetPlayerVirtualWorld(playerid) - 1000;
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPPos(playerid, RI[realtor][bX], RI[realtor][bY], RI[realtor][bZ]);
		SetPlayerFacingAngle(playerid, RI[realtor][bAngle]);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == realtorFreeBusiness)
	{
		new itters = 0, fstring[2000] = "{ffffff}";
		for(new i = 1; i < TOTALBIZZ + 1; i++)
		{
			if(!strcmp(BizzInfo[i][bOwner], "None", true))
			{
				format(fstring, sizeof(fstring), "%s[%i] %s\n", fstring, i, BizzInfo[i][bName]);
				itters++;
			}
		}
		if(!itters) return SendClientMessage(playerid, COLOR_GREY, "No vacant businesses found in the state!");
		ShowPlayerDialog(playerid, 24151, DIALOG_STYLE_LIST, "{00FF00}List of free businesses", fstring, "Close", "");
		return true;
	}
	else if(pickupid == adons)
	{
//        callcmd::adonate(playerid);
		return true;
	}
	else if(pickupid == realtorInfo)
	{
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{63CB00}Information", "{ffffff}\
		In a real estate agency you can find houses that will be sold soon.\n\
		{ffffff}If the house has less than {e6ed11}two payments {ffffff} for the house (according to the class of the house), then it will be sold to the state.\n\n\
		{ffffff}Use: {63CB00}/gethome {ffffff}- Find out the house score.\n\
		{ffffff}Use: {63CB00}/real {ffffff}- Find out the location of the house.\
		", "Close", "");
		return true;
	}
	else if(pickupid == realtorFreePickup)
	{
		new fstring[1700] = "{ffffff}", count = 1, takings;
		for(new i = 0; i < sizeof HouseInfo; i++)
		{
			if(count < 401) {
				if(HouseInfo[i][hID])
				{
					if(HouseInfo[i][hOwned])
					{
						switch(HouseInfo[i][hKlass]) {
							case 0: takings = 300;
							case 1: takings = 600;
							case 2: takings = 900;
							case 3: takings = 1200;
							case 4: takings = 1500;
						}
						if(HouseInfo[i][hTakings] < takings * 2) {
							if(count % 10 == 0 && count != 0) format(fstring, sizeof fstring, "%s\t%i\n", fstring, i);
							else format(fstring, sizeof fstring, "%s\t%i", fstring, i);
							count++;
						}
					}
				}
			}
			//continue;
		}
		if(count > 1) ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{00FF00}Debtor numbers", fstring, "Close", "");
		else SendClientMessage(playerid, -1, "There are no debtors in the state!");
		return true;
	}
	else if(TOTALREALTORS > 0)
	{
		if(pickupid >= RI[0][bPickup] && pickupid <= RI[TOTALREALTORS-1][bPickup])
		{
			for(new i = 0; i < TOTALREALTORS; i++)
			{
				if(pickupid == RI[i][bPickup])
				{
					SetPlayerInteriorEx(playerid, 3);
					SetPlayerVirtualWorldEx(playerid, 147);
					SetPPos(playerid, 1494.325195,1304.942871,1093.289062);
					SetPlayerFacingAngle(playerid, 0.0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		}
	}
	return true;
}
forward LoadConfig();
public LoadConfig()
{
	Config[sDist] = cache_get_field_content_int(0, "distribution", connects);
	Config[sDistRub] = cache_get_field_content_int(0, "distrub", connects);
	Config[sDonPower] = cache_get_field_content_int(0, "donpower", connects);
	print("[Loading]: Config loaded");
	print("[WANTED] Creator of the copy of The NYRP MOD");
	print("[WANTED] NYRP.com");
	return true;
}
forward LoadNames();
public LoadNames()
{
	cache_get_field_content(0, "one_name", ServerName[0], connects, 64);
	cache_get_field_content(0, "two_name", ServerName[1], connects, 64);
	cache_get_field_content(0, "three_name", ServerName[2], connects, 64);
	NameEnabled[0] = cache_get_field_content_int(0, "one_enbl", connects);
	NameEnabled[1] = cache_get_field_content_int(0, "two_enbl", connects);
	NameEnabled[2] = cache_get_field_content_int(0, "three_enbl", connects);
	print("[Loading]: Config(Names) loaded successfully!");
	return true;
}
forward LoadRealtors();
public LoadRealtors()
{
	new rows, fields, time = GetTickCount();
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			if(TOTALREALTORS >= MAX_REALTORS - 1)
			{
				printf("[Loading]: Realtors | Reposition all MAX_REALTORS");
				break;
			}
			RI[i][bID] = cache_get_field_content_int(i, "ID", connects);
			RI[i][bPrice] = cache_get_field_content_int(i, "Price", connects);
			RI[i][bRentDays] = cache_get_field_content_int(i, "RentDays", connects);
			cache_get_field_content(i, "Owner", RI[i][bOwner], connects, MAX_PLAYER_NAME);
			RI[i][bX] = cache_get_field_content_float(i, "Close", connects);
			RI[i][bY] = cache_get_field_content_float(i, "Y", connects);
			RI[i][bZ] = cache_get_field_content_float(i, "Z", connects);
			RI[i][bAngle] = cache_get_field_content_float(i, "Angle", connects);
			RI[i][bBalance] = cache_get_field_content_int(i, "Balance", connects);
			CreateRealtor(i);
			TOTALREALTORS++;
		}
	}
	printf("[Loading]: Realtors | Uploaded: %i | Time: %i (ms)", TOTALREALTORS, GetTickCount() - time);
	return true;
}
stock CreateRealtor(idrl)
{
	if(IsValidDynamicPickup(RI[idrl][bPickup])) DestroyDynamicPickup(RI[idrl][bPickup]);
	if(IsValidDynamicMapIcon(RI[idrl][bMapIcon])) DestroyDynamicMapIcon(RI[idrl][bMapIcon]);
	RI[idrl][bMapIcon] = CreateDynamicMapIcon(RI[idrl][bX], RI[idrl][bY], RI[idrl][bZ], 34, 0xFFFFFFFF);
	RI[idrl][bPickup] = CreatePickupAC(1318, 1, RI[idrl][bX], RI[idrl][bY], RI[idrl][bZ], 0);
	RI[idrl][bText] = CreateDynamic3DTextLabel("{F2A738}Real estate agency", 0xFFFFFFFF,RI[idrl][bX], RI[idrl][bY], RI[idrl][bZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	return true;
}
publics: TimerUpdate(playerid, speedonly)
{
	Fresh();
	UpdateSpeedometr(playerid, speedonly);
	return true;
}
stock SaveAccounts()
{
	foreach(Player,i) { if(IsPlayerConnected(i)) OnPlayerUpdateRL(i); }
}
stock SaveSettings()
{
	new query[500], Buff[2500];
	format(Buff, 500, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	SettingInfo[CheatSetting][0],
	SettingInfo[CheatSetting][1],
	SettingInfo[CheatSetting][2],
	SettingInfo[CheatSetting][3],
	SettingInfo[CheatSetting][4],
	SettingInfo[CheatSetting][5],
	SettingInfo[CheatSetting][6],
	SettingInfo[CheatSetting][7],
	SettingInfo[CheatSetting][8],
	SettingInfo[CheatSetting][9],
	SettingInfo[CheatSetting][10],
	SettingInfo[CheatSetting][11],
	SettingInfo[CheatSetting][12],
	SettingInfo[CheatSetting][13],
	SettingInfo[CheatSetting][14],
	SettingInfo[CheatSetting][15],
	SettingInfo[CheatSetting][16],
	SettingInfo[CheatSetting][17],
	SettingInfo[CheatSetting][18],
	SettingInfo[CheatSetting][19],
	SettingInfo[CheatSetting][20],
	SettingInfo[CheatSetting][21],
	SettingInfo[CheatSetting][22],
	SettingInfo[CheatSetting][23],
	SettingInfo[CheatSetting][24],
	SettingInfo[CheatSetting][25],
	SettingInfo[CheatSetting][26],
	SettingInfo[CheatSetting][27],
	SettingInfo[CheatSetting][28],
	SettingInfo[CheatSetting][29],
	SettingInfo[CheatSetting][30],
	SettingInfo[CheatSetting][31],
	SettingInfo[CheatSetting][32],
	SettingInfo[CheatSetting][33],
	SettingInfo[CheatSetting][34],
	SettingInfo[CheatSetting][35],
	SettingInfo[CheatSetting][36],
	SettingInfo[CheatSetting][37],
	SettingInfo[CheatSetting][38],
	SettingInfo[CheatSetting][39],
	SettingInfo[CheatSetting][40],
	SettingInfo[CheatSetting][41],
	SettingInfo[CheatSetting][42],
	SettingInfo[CheatSetting][43],
	SettingInfo[CheatSetting][44],
	SettingInfo[CheatSetting][45],
	SettingInfo[CheatSetting][46],
	SettingInfo[CheatSetting][47],
	SettingInfo[CheatSetting][48],
	SettingInfo[CheatSetting][49],
	SettingInfo[CheatSetting][50],
	SettingInfo[CheatSetting][51],
	SettingInfo[CheatSetting][52]);
	format(query, sizeof(query), "UPDATE `AntiCheat` SET `CheatSetting` = '%s'",Buff);
	mysql_function_query(connects, query, false, "", "");
}
stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = INVALID_PLAYER_ID;
	dis = 99999.99;
	foreach(Player,x)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00) dis = dis2,player = x;
			}
		}
	}
	return player;
}

stock EmptyMessage(const string[])
{
    new num, size = strlen(string);

	for(new i=0; i<size; i++)
	{
		switch(string[i])
		{
			case ' ', '\t', '\r', '\n': num++;
		}
	}

	if(num == size) return 1;

	return 0;
}

stock PayDay()
{
    GetBizz();
	FracBank[0][fGrove] += TotalGzG*300;
	FracBank[0][fBallas] += TotalGzB*300;
	FracBank[0][fVagos] += TotalGzV*300;
	FracBank[0][fAztek] += TotalGzA*300;
	FracBank[0][fRifa] += TotalGzR*300;
	/////////
	foreach(Player,i)
	{
		if(PlayerInfo[i][pWanted] >= 1)
		{
			PlayerInfo[i][pWanted] -=1;
			SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
		}
		if(armmatbi < 0) armmatbi = 1000;
		else if(armmatsf < 0) armmatsf = 1000;
		else if(kazna < 0) kazna = 0;
		else if(lspdmatbi < 0) lspdmatbi = 1000;
		else if(sfpdmats < 0) sfpdmats = 1000;
		else if(lvpdmats < 0) lvpdmats = 1000;
		else if(fbimats < 0) fbimats = 1000;
		else if(yakuzamats < 0) yakuzamats = 1000;
		else if(rmmats < 0) rmmats = 1000;
		else if(lcnmats < 0) lcnmats = 1000;
		else if(rifamatbi < 0) rifamatbi = 1000;
		else if(ballasmatbi < 0) ballasmatbi = 1000;
		else if(groovmatbi < 0) groovmatbi = 1000;
		else if(vagosmatbi < 0) vagosmatbi = 1000;
		else if(aztekmatbi < 0) aztekmatbi = 1000;
		new moneys = 10+random(30000);
		new moneyse = 10000+random(50000);
		switch(PlayerInfo[i][pMember])
        {
            case 1,10,21,25:{ PlayerInfo[i][pPayCheck] += 32000*PlayerInfo[i][pRank]+moneys; } // �� �������, 2� ��������� �� ���� + ��������� �����
            case 3,19:{ PlayerInfo[i][pPayCheck] += 35000*PlayerInfo[i][pRank]+moneys; } // �� �����, 1.5� ��������� �� ���� + ��������� �����
            case 2:{ PlayerInfo[i][pPayCheck] += 34000*PlayerInfo[i][pRank]+moneys; } // �� FBI, 3� ��������� �� ���� + ��������� �����
            case 7,26:{ PlayerInfo[i][pPayCheck] += 35000*PlayerInfo[i][pRank]+moneys; } // �� City Hall, 4� ��������� �� ���� + ��������� �����
            case 4,22,16:{ PlayerInfo[i][pPayCheck] += 36000*PlayerInfo[i][pRank]+moneys; } // �� ��������, 4� ��������� �� ���� + ��������� �����
            case 11:{ PlayerInfo[i][pPayCheck] += 35000*PlayerInfo[i][pRank]+moneys; } // �� ������������, 1� ��������� �� ���� + ��������� �����
            case 27,28:{ PlayerInfo[i][pPayCheck] += 33000*PlayerInfo[i][pRank]+moneys; } // �� ������, 10� ��������� �� ���� + ��������� �����
            case 12,13,15,18,17:{ PlayerInfo[i][pPayCheck] += 33000*PlayerInfo[i][pRank]+moneyse; } // gangs salary
            case 23,24:{ PlayerInfo[i][pPayCheck] += 33000*PlayerInfo[i][pRank]+moneys; } // hitman/sr salary
        }
		PlayerInfo[i][pExp] += 5;
		new checks = PlayerInfo[i][pPayCheck];
		if(PlayerInfo[i][pDonateRank] >=1) GameTextForPlayer(i, "+PayDay", 5000, 1);
		else GameTextForPlayer(i, "~w~PayDay", 5000, 1);
		//-------------------------- ������� -------------------
		if(PlayerInfo[i][pDonateRank] ==3) SendClientMessage(i, 0xeac700aa,  "{FFFFFF}BANK CHECK.");
		else SendClientMessage(i, COLOR_GRAD1, " {FFFFFF}BANK CHECK.");
		SendClientMessage(i, COLOR_GRAD1, "{FFFFFF}____________________________________");
		SendClientMessage(i, COLOR_GRAD1, "");
		SendMes(i,0xFF8C37AA," {FFFFFF}State tax: {11e922}%s", formatInt(nalog));
		PlayerInfo[i][pBank] -= nalog;
		kazna +=nalog;
		if(PlayerInfo[i][pDonateRank] ==3)
		{
			SendMes(i,0xFF8C37AA," {FFFFFF}Phone bill: {11e922}%d",PlayerInfo[i][pMobile]);
			SendClientMessage(i, 0xeac700aa, " ");
			SendMes(i,0xFF8C37AA," {FFFFFF}Salary: {11e922}%s", formatInt(checks));
			GiveBank(i, checks);
			SendMes(i,0xeac700aa," {FFFFFF}Current balance: {11e922}%s", formatInt(PlayerInfo[i][pBank]));
			PlayerInfo[i][pZakonp] += 1;
			PlayerInfo[i][pBank] += PlayerInfo[i][pMobile];
			PlayerInfo[i][pMobile] = 0;
			if(PlayerInfo[i][pDonateRank] == 3)
			{
				PlayerInfo[i][pExp]++;
				SendClientMessage(i, COLOR_LIGHTBLUE, " You have received additional EXP + Salary due to the GOLD VIP Account.");
			}
			kazna +=1000;
		}
		else
		{
			SendMes(i,0xFF8C37AA," {FFFFFF}Phone bill: {11e922}%d",PlayerInfo[i][pMobile]);
			SendClientMessage(i, COLOR_WHITE, " ");
			SendMes(i,COLOR_WHITE," Salary: {11e922}%s", formatInt(checks));
			GiveBank(i, checks);
			SendMes(i,COLOR_WHITE," Current balance: {11e922}%s", formatInt(PlayerInfo[i][pBank]));
			PlayerInfo[i][pZakonp] += 1;
			PlayerInfo[i][pBank] += PlayerInfo[i][pMobile];
			PlayerInfo[i][pMobile] = 0;
			kazna +=1000;
		}
		if(PlayerInfo[i][pAlcoInvenxua] > 0) {
			PlayerInfo[i][pDonatemoney2] += 40;
			SendClientMessage(i, COLOR_WHITE, " You received an admin salary in the amount of 40 donate points!");
		}
		if(PlayerInfo[i][pDonateRank] == 1) {
		    PlayerInfo[i][pDonatemoney2] += 15;
		    SendClientMessage(i, COLOR_WHITE, " You received a Bronze VIP reward in the amount of 15 donate points!");
		}
		else if(PlayerInfo[i][pDonateRank] == 2) {
		    PlayerInfo[i][pDonatemoney2] += 30;
		    SendClientMessage(i, COLOR_WHITE, " You received a Silver VIP reward in the amount of 30 donate points!");
		}
		else if(PlayerInfo[i][pDonateRank] == 3) {
		    PlayerInfo[i][pDonatemoney2] += 50;
		    SendClientMessage(i, COLOR_WHITE, " You received a Gold VIP reward in the amount of 50 donate points!");
		}
		if(PlayerInfo[i][pMember] > 0) {
			PlayerInfo[i][pFacPoint] += 150;
			SendClientMessage(i, COLOR_BLUE, " You received an Faction Rewards 150 Faction Points!");
		}
		if(Config[sDist]) {
			if(PlayerInfo[i][pDist] > 0) {
				PlayerInfo[i][pRub] += Config[sDistRub];
				SendMes(i, COLOR_LIGHTGREEN, " You have received a reward of %d donate rubles for playing on the server! ", Config[sDistRub]);
			}
		}
		if(PlayerInfo[i][pDonateRank] >=1) SendClientMessage(i, 0xeac700aa,"{FFFFFF}____________________________________");
		else SendClientMessage(i,COLOR_GRAD1,"{FFFFFF}____________________________________");
		if(PlayerInfo[i][punWarns] == 1) { PlayerInfo[i][punWarnstime] += 1; if(PlayerInfo[i][punWarnstime] < 10) SendMes(i,COLOR_LIGHTRED,"- [UNWARN] Automatic withdrawal of warn after %d hour (s)", 10 - PlayerInfo[i][punWarnstime]); }
		if(PlayerInfo[i][punWarns] == 1 && PlayerInfo[i][punWarnstime] >=10)
		{
			if(PlayerInfo[i][pWarns] == 1) PlayerInfo[i][punWarnstime] = 0, PlayerInfo[i][punWarns] = 0, PlayerInfo[i][pWarns] -= 1;
			else if(PlayerInfo[i][pWarns] > 1) PlayerInfo[i][punWarnstime] = 0, PlayerInfo[i][punWarns] = 1, PlayerInfo[i][pWarns] -= 1;
			SendClientMessage(i,COLOR_LIGHTRED, "- [UNWARN] One warning has been removed from you!");
		}
		if(GetPVarInt(i, "GetBizz") == 2 && GetPlayerBizz(i) == 1)
		{
  			SendMes(i, COLOR_LIGHTRED, "Your business {ffffff}%s{FF6347} was closed due to: lack of products or lack of license",BizzInfo[GetPVarInt(i, "PlayerBizz")][bName],BizzInfo[GetPVarInt(i, "PlayerBizz")][bLockTime]);
   			SendClientMessage(i, COLOR_LIGHTRED, "If after expiration {ffffff}12 {FF6347}hours the business will be closed, it will be sold to the state");
	    	DeletePVar(i, "GetBizz");
		}
		else if(GetPVarInt(i, "GetBizz") == 3 && GetPlayerBizz(i) == 1)
		{
  			SendMes(i, COLOR_LIGHTRED, "Your business {ffffff}%s{FF6347} closed already {ffffff}%i {FF6347}hour(s)",BizzInfo[GetPVarInt(i, "PlayerBizz")][bName],BizzInfo[GetPVarInt(i, "PlayerBizz")][bLockTime]);
	    	SendClientMessage(i, COLOR_LIGHTRED, "If after expiration {ffffff}12 {FF6347}hours the business will be closed, it will be sold to the state");
	    	DeletePVar(i, "GetBizz");
		}
		else if(GetPVarInt(i, "GetBizz") == 1)
		{
			SendClientMessage(i, COLOR_LIGHTRED,"Your business was sold to the state for tax evasion");
			SendClientMessage(i, COLOR_LIGHTRED,"Your business money has been deposited into your account");
			DeletePVar(i, "GetBizz");
		}
		seans[i] = 0;
		PlayerInfo[i][pPayCheck] = 0;
		PlayerInfo[i][pPayDayHad] += 1;
		if(PlayerInfo[i][Texts][1] > 0) PlayerInfo[i][Texts][1] --;
		VipNews[i] = 0;
		new exp = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		if(exp >= expamount)
		{
			PlayerInfo[i][pLevel] += 1;
			PlayerInfo[i][pExp] = 0;
			SendClientMessage(i,COLOR_RED,"Your in-game lvl has increased.");
		}
	}
	format(stringer1,sizeof(stringer1),"{C2A2DA}State treasury: {FFD700}%s\n{C2A2DA}State tax: {FFD700}%s\n{C2A2DA}Donate money enter '/putkazna'", formatInt(kazna), formatInt(nalog));
	Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
	ggtime = 0;
	for(new i =0;i<sizeof(FrakCD1);i++) FrakCD1[i] = 0;
    new hour, minute, second;
	gettime(hour, minute, second);
	if(!minute && !second)
	{
		switch(hour)
		{
			case 0,6,10,15,18:
			{
				if(!StartPaintBall)
				{
					TimerPaintBall = REGISTER_PAINTBALL;
    				StartPaintBall = 1;
    				switch(random(3))
					{
						case 0: SendClientMessageToAll(COLOR_YELLOW3,"Paintball starts in 5 minutes (map: Classic battle). Everyone who wants to come to the place of registration"), typePB = 0;
						case 1: SendClientMessageToAll(COLOR_YELLOW3,"Paintball starts in 5 minutes (map: Mixed fog). Everyone who wants to come to the place of registration"), typePB = 1;
						case 2: SendClientMessageToAll(COLOR_YELLOW3,"Paintball starts in 5 minutes (map: de_dust_2x2). Everyone who wants to come to the place of registration"), typePB = 2;
					}
    			}
			}
			case 2,8,12,17,22:
			{
				if(!RaceStarting[2])
				{
					RaceStarting[2] = 3;
	    			RaceStarting[0] = 300;
					switch(random(4))
					{
		    			case 0: SendClientMessageToAll(COLOR_YELLOW3,"Racing starts in 5 minutes (map: Wolking Street Race). Anyone wishing to come to the registration point"), typeRace = 0;
		    			case 1: SendClientMessageToAll(COLOR_YELLOW3,"Racing starts in 5 minutes (map: Las-Venturas / San-Fierro Race). Anyone wishing to come to the registration point"), typeRace = 1;
		    			case 2: SendClientMessageToAll(COLOR_YELLOW3,"Racing starts in 5 minutes (map: Las-Venturas / San-Fierro Race). Anyone wishing to come to the registration point"), typeRace = 1;
		    			case 3: SendClientMessageToAll(COLOR_YELLOW3,"Racing starts in 5 minutes (map: Wolking Street Race). Anyone wishing to come to the registration point"), typeRace = 0;
		    			default: SendClientMessageToAll(COLOR_YELLOW3,"Racing starts in 5 minutes (map: Las-Venturas / San-Fierro Race). Anyone wishing to come to the registration point"), typeRace = 1;
					}
				}
			}
			case 4,14,20:
			{
				if(!BaseStarting[1])
				{
					BaseStarting[1] = 3;
					BaseStarting[0] = 300;
					SendClientMessageToAll(COLOR_YELLOW3,"The BASE jumping competition starts in 5 minutes. Anyone wishing to come to the registration point");
				}
			}
		}
	}
	return true;
}
publics: SendJobMessage(job, color, string[])
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i)) { if(PlayerInfo[i][pJob] == job) SendClientMessage(i, color, string); }
	}
}
/*public OnPlayerCommandText(playerid, cmdtext[])
{
	return 1;
}*/
public OnPlayerCommandText(playerid, cmdtext[])
{
	return 0;
}

stock GetWeaponSpriteSlotID(weaponid)
{
	switch(weaponid)
	{
	    case 22:return 0;
	    case 23:return 1;
	    case 24:return 2;
	    case 25:return 3;
	    case 27:return 4;
	    case 28:return 5;
	    case 29:return 6;
	    case 30:return 7;
	    case 31:return 8;
	    case 32:return 9;
	    case 33:return 10;
	    case 35:return 11;
	    case 36:return 12;
	}
	return -1;
}
stock ChangePlayerWeaponPrint(playerid, weaponid, chooseid)
{
    RemovePlayerAttachedObject(playerid,7);
    switch(weaponid)
    {
        case 22: SetPlayerAttachedObject(playerid, 7, 346, 6, -0.004999, -0.003999, -0.006000, 0.000000, 0.000000, -1.800000, 1.007000, 1.337999, 1.069000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 23: SetPlayerAttachedObject(playerid, 7, 347, 6, -0.003999, -0.001999, -0.003999, 0.000000, 0.299999, -0.999999, 1.000000, 1.188000, 1.063000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 24: SetPlayerAttachedObject(playerid, 7, 348, 6, -0.006999, -0.004000, 0.002000, -1.600000, -0.200000, 0.400000, 1.019999, 1.146999, 1.027000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 25: SetPlayerAttachedObject(playerid, 7, 349, 6, 0.000000, -0.008999, -0.004000, 0.000000, 1.099999, 1.499999, 1.000000, 1.222000, 1.088000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 27: SetPlayerAttachedObject(playerid, 7, 351, 6, 0.003000, -0.014000, -0.003000, 0.000000, 0.000000, 2.199999, 1.000000, 1.371000, 1.023000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 28: SetPlayerAttachedObject(playerid, 7, 352, 6, -0.002000, -0.008000, -0.001999, -0.300000, 0.000000, 1.199999, 1.019999, 1.245000, 1.043000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 29: SetPlayerAttachedObject(playerid, 7, 353, 6, 0.000000, -0.009000, -0.009000, 0.000000, 0.099999, 2.100000, 1.000000, 1.290001, 1.053000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 30: SetPlayerAttachedObject(playerid, 7, 355, 6, 0.000000, -0.011000, 0.000000, 0.000000, 0.000000, 2.100000, 1.009000, 1.424000, 1.013000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 31: SetPlayerAttachedObject(playerid, 7, 356, 6, -0.002000, -0.005999, 0.001000, 0.000000, 0.899999, 1.699999, 0.997999, 1.318999, 1.088001, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 32: SetPlayerAttachedObject(playerid, 7, 372, 6, -0.003000, -0.009000, -0.001999, 0.000000, 0.400000, 0.800000, 1.015000, 1.232000, 1.055000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 33: SetPlayerAttachedObject(playerid, 7, 357, 6, 0.000000, -0.015000, -0.001999, 0.000000, 1.200000, 2.199999, 1.000000, 1.286001, 1.096001, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 35: SetPlayerAttachedObject(playerid, 7, 359, 6, 0.001999, -0.007000, -0.009000, 0.000000, -0.100000, 0.000000, 0.989999, 1.213001, 1.084001, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        case 36: SetPlayerAttachedObject(playerid, 7, 360, 6, 0.001000, -0.004999, -0.008000, 0.000000, 0.000000, 0.000000, 1.000000, 1.140000, 1.055000, _weapon_colors[chooseid], _weapon_colors[chooseid]);
        default:
		{
		    DeletePVar(playerid,"_weapon_sprite_use");
	 		return 1;
		}
    }
    SendClientMessage(playerid,_weapon_colors[chooseid],"ChangePlayerWeaponPrint");
    SetPVarInt(playerid,"_weapon_sprite_use",true);
    return 1;
}
stock ProxDetector(playerid, Float:max_range, color, string[], Float:max_ratio = 1.6)
{
    new
        Float:pos_x,
        Float:pos_y,
        Float:pos_z,
        Float:range,
        Float:range_ratio,
        Float:range_with_ratio,
        clr_r, clr_g, clr_b,
        Float:color_r, Float:color_g, Float:color_b;

    if (!GetPlayerPos(playerid, pos_x, pos_y, pos_z)) {
        return 0;
    }

    color_r = float(color >> 24 & 0xFF);
    color_g = float(color >> 16 & 0xFF);
    color_b = float(color >> 8 & 0xFF);
    range_with_ratio = max_range * max_ratio;

    foreach (new i : Player) {
        if(!BigEar[i]) {
			if (!IsPlayerStreamedIn(playerid, i)) {
                continue;
            }

            range = GetPlayerDistanceFromPoint(i, pos_x, pos_y, pos_z);
            if (range > max_range) {
                continue;
            }

            range_ratio = (range_with_ratio - range) / range_with_ratio;
            clr_r = floatround(range_ratio * color_r);
            clr_g = floatround(range_ratio * color_g);
            clr_b = floatround(range_ratio * color_b);

            SendClientMessage(i, (clr_b << 8) | (clr_g << 16) | (clr_r << 24), string);
        }
        else SendClientMessage(i, color, string);
    }

    if(!BigEar[playerid]) SendClientMessage(playerid, color, string);
    return 1;
}
stock ProxDetectorS(Float:radi, playerid, targetid)
{
    if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return false;
    if(GetPlayerState(targetid) == PLAYER_STATE_SPECTATING && gSpecID[targetid] != INVALID_PLAYER_ID) return false;
    new Float:p[3];
    GetPlayerPos(targetid, p[0], p[1], p[2]);
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2])) return false;
	return true;
}
public OnPlayerText(playerid, text[])
{
    if(!gPlayerLogged[playerid]) return false;
    if(PlayerInfo[playerid][pMuted] == 1)
    {
        format(stringer1, sizeof(stringer1), "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
        SendClientMessage(playerid, COLOR_LIGHTRED, stringer1);
		SetPlayerChatBubble(playerid,"Player Muted...",0xDD90FFFF,30.0,10000);
        return false;
    }
    if(gag[playerid] == 1) { SendClientMessage(playerid, COLOR_LIGHTRED, "Vas klup, don�t you lose speak!"); return false; }
	if(EmptyMessage(text)) return false;
	if(IsAIP(text))
	{
	    new string[144];
		format(string, sizeof(string), "[Suspicion on ad] %s[%i]: %s", PlayerInfo[playerid][pNames], playerid, text);
		SendAdminMessage(COLOR_ORANGE, string);
		ReplaceText(text);
		return 0;
	}
	if(gPlayerLogged[playerid] == 1 || PlayerInfo[playerid][pAlcoInvenxua] == 0)
	{
		if(GetPVarInt(playerid,"AntiFlood") > gettime()){ SendClientMessage(playerid, 0xFFD5BBAA, "{ffff00}Don't {32db23}flood!"); return false; }
		SetPVarInt(playerid,"AntiFlood",gettime() + ANTI_FLOODS);
	}
	if(TalkingLivels[playerid] == 1)
	{
		format(stringer1, sizeof(stringer1), "< LS News > [Tel.] %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, text);
		SendClientMessageToAll(0x0073b7AA, stringer1);
		return false;
	}
	if(TalkingLivels[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMember] == 16) format(stringer1, sizeof(stringer1), "< LS News > Video %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, text);
		else format(stringer1, sizeof(stringer1), "< LS News > Weight %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, text);
		SendClientMessageToAll(0x0073b7AA, stringer1);
		return false;
	}
	if(Mobile[playerid] != -1)
	{
		format(stringer1, 144, "[Telephone] %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, text);
		ProxDetector(playerid, 20.0, COLOR_FADE1, stringer1);
		if(Mobile[Mobile[playerid]] == playerid) SendClientMessage(Mobile[playerid], COLOR_YELLOW,stringer1);
		return false;
	}
	if(PEfir[playerid] != 255 && (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16 || Pefir[playerid] == 2))
	{
		format(stringer1, sizeof(stringer1), "< LS News > %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, text);
		SendClientMessageToAll(0x0073b7AA, stringer1);
		return false;
	}
	if(strcmp(text, "q", true) == 0 && (IsAGang(playerid) || ISAMAFIA(playerid) || PlayerInfo[playerid][pAlcoInvenxua]))
	{
        if(!PlayerInfo[playerid][pAlcoInvenxua]) format(stringer1,sizeof(stringer1), "showed(a) %s %s", !IsAGang(playerid) ? ("setting") : ("Raspal'tsovku"), GetPlayerFracName[PlayerInfo[playerid][pMember]]);
        else format(stringer1,sizeof(stringer1), "Show (a) Distribution of Admins Team");
		SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
		if(!PlayerInfo[playerid][pAlcoInvenxua]) format(stringer1, sizeof(stringer1), "%s showed(a) %s %s",PlayerInfo[playerid][pNames], !IsAGang(playerid) ? ("setting") : ("Raspal'tsovku"), GetPlayerFracName[PlayerInfo[playerid][pMember]]);
		else format(stringer1, sizeof(stringer1), "%s Show(a) Distribution of Admins Team", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		if(PlayerCuffed[playerid] == 0 && AntiSbiv[playerid] < gettime())
		{
		    if(IsAGang(playerid) || PlayerInfo[playerid][pAlcoInvenxua])  FIXES_ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
		    else if(ISAMAFIA(playerid)) FIXES_ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0,1);
	    }
	    return false;
	}
/*	if(strcmp(text, "��", true) == 0 || strcmp(text, "�", true) == 0 || strcmp(text, "�� ���", true) == 0|| strcmp(text, "�����", true) == 0 || strcmp(text, "�����", true) == 0 || strcmp(text, "���", true) == 0)
	{
		SetPlayerChatBubble(playerid,"�����������",COLOR_PURPLE,30.0,10000);
		if(PlayerCuffed[playerid] == 0 && AntiSbiv[playerid] < gettime()) {     FIXES_ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1); }
		return false;
	}
	else if(strcmp(text, "���", true) == 0 || strcmp(text, "�����", true) == 0 || strcmp(text, "����", true) == 0 || strcmp(text, "����", true) == 0 )
	{
		SetPlayerChatBubble(playerid, "Facepalm", COLOR_PURPLE, 30.0, 10000);
		if(PlayerCuffed[playerid] == 0 && AntiSbiv[playerid] < gettime()) {     FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1); }
		return false;
	}
	else if(strcmp(text, "*102#", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "==[ ��������� ������ ] ==");
		format(stringer1, sizeof(stringer1), "- ������ %d Money",PlayerInfo[playerid][pMobile]);
		SendClientMessage(playerid, COLOR_WHITE, stringer1);
		SendClientMessage(playerid, COLOR_WHITE, "- ��������� ������ ����� � ����� ���������");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "==[ ��������� ������ ] ==");
		format(stringer1, sizeof(stringer1), "%s ������ ���������", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 5.0, COLOR_PURPLE, stringer1);
		return false;
	}*/
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, "XD", true) == 0 || strcmp(text, ":D", true) == 0 )
	{
		format(stringer1, sizeof(stringer1), "%s Laugh", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid, "Laugh", COLOR_PURPLE, 30.0, 10000);
		return false;
	}
/*	else if(strcmp(text, "hello", true) == 0)
	{
		format(stringer1, sizeof(stringer1), "%s ����� �����", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid,"����� �����",COLOR_PURPLE,30.0,10000);
		return false;
	}*/
	else if(strcmp(text, "xDD", true) == 0 || strcmp(text, "xdd", true) == 0 || strcmp(text, "XDD", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
		format(stringer1, sizeof(stringer1), "%s Die of laughter", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid,"Die of laughter",COLOR_PURPLE,30.0,10000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(PlayerCuffed[playerid] == 0 && AntiSbiv[playerid] < gettime()) {     FIXES_ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1,1); clearanim[playerid] = 4; }
		}
		return false;
	}
	else if(strcmp(text, ":)", true) == 0 || strcmp(text, ")", true) == 0)
	{
		format(stringer1, sizeof(stringer1), "%s Feeling happy", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid,"Happy",COLOR_PURPLE,30.0,10000);
		return false;
	}
/*	else if(strcmp(text, ":D", true) == 0)
	{
		format(stringer1, sizeof(stringer1), "%s ������� �� ���� �����", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid,"������� �� ���� �����",COLOR_PURPLE,30.0,10000);
		return false;
	}*/
	else if(strcmp(text, ":(", true) == 0 || strcmp(text, "(", true) == 0)
	{
		format(stringer1, sizeof(stringer1), "%s Feeling sad", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		SetPlayerChatBubble(playerid,"Sad",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(realchat)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && robjewelstime[playerid] == 0 && PlayerTied[playerid] == 0 && PlayerCuffedTime[playerid] == 0 && GetPVarInt(playerid,"Animation") == 0 && AntiSbiv[playerid] < gettime())
		{
			if(PlayerInfo[playerid][Settings][4] == 0) FIXES_ApplyAnimation(playerid,"ped",Talk[PlayerInfo[playerid][Settings][4]],4.1,1,1,1,1,1,1);
	        else if(PlayerInfo[playerid][Settings][4] != 0) FIXES_ApplyAnimation(playerid,"GANGS",Talk[PlayerInfo[playerid][Settings][4]],4.1,1,1,1,1,1,1);
			clearanim[playerid] = 3;
		}
		//format(stringer1, sizeof(stringer1), "- %s[%d]:{FFFFFF} %s", PlayerInfo[playerid][pNames],playerid, text);
		if(strlen(PlayerInfo[playerid][pAccent]) < 2) format(stringer1, sizeof(stringer1), "- %s {%s}(%s)[%d]", text, colorchat(playerid, 1), PlayerInfo[playerid][pNames], playerid);
		else format(stringer1, sizeof(stringer1), "- %s {%s}| %s | (%s)[%d]", text, colorchat(playerid, 1), PlayerInfo[playerid][pAccent], PlayerInfo[playerid][pNames], playerid);
		SetPlayerChatBubble(playerid, text, 0x6ab1ffaa, 20.0, 10000);
		ProxDetector(playerid, 20.0, COLOR_FADE1, stringer1);
		return false;
	}
	if(realchat)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && robbankstime[playerid] == 0 && PlayerTied[playerid] == 0 && PlayerCuffedTime[playerid] == 0 && GetPVarInt(playerid,"Animation") == 0 && AntiSbiv[playerid] < gettime())
		{
			if(PlayerInfo[playerid][Settings][4] == 0) FIXES_ApplyAnimation(playerid,"ped",Talk[PlayerInfo[playerid][Settings][4]],4.1,1,1,1,1,1,1);
	        else if(PlayerInfo[playerid][Settings][4] != 0) FIXES_ApplyAnimation(playerid,"GANGS",Talk[PlayerInfo[playerid][Settings][4]],4.1,1,1,1,1,1,1);
			clearanim[playerid] = 3;
		}
		//format(stringer1, sizeof(stringer1), "- %s[%d]:{FFFFFF} %s", PlayerInfo[playerid][pNames],playerid, text);
		if(strlen(PlayerInfo[playerid][pAccent]) < 2) format(stringer1, sizeof(stringer1), "- %s {%s}(%s)[%d]", text, colorchat(playerid, 1), PlayerInfo[playerid][pNames], playerid);
		else format(stringer1, sizeof(stringer1), "- %s {%s}| %s | (%s)[%d]", text, colorchat(playerid, 1), PlayerInfo[playerid][pAccent], PlayerInfo[playerid][pNames], playerid);
		SetPlayerChatBubble(playerid, text, 0x6ab1ffaa, 20.0, 10000);
		ProxDetector(playerid, 20.0, COLOR_FADE1, stringer1);
		return false;
	}
	return false;
}

forward CheckPromocode(playerid, code[]);
public CheckPromocode(playerid, code[]) {
	new rows, fields;
    cache_get_data(rows, fields);
	if(rows) {
		new string[144], query[144], idcode, rub, use, admin, had;
		idcode = cache_get_field_content_int(0, "ID");
		rub = cache_get_field_content_int(0, "Value");
		use = cache_get_field_content_int(0, "Use");
		admin = cache_get_field_content_int(0, "aAdmin");
		had = cache_get_field_content_int(0, "pHad");
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0 && admin < 1) return SendClientMessage(playerid, -1, "Administrators are prohibited from using this promo code!");
		if(PlayerInfo[playerid][pPayDayHad] < had) return SendClientMessage(playerid, -1, "Play more hours on the server to activate this promo code!");
		PlayerInfo[playerid][pRub] += rub, use--;
		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
		format(query, sizeof(query), "INSERT INTO `used_promocodes` (`Name`, `Promocode`) VALUES ('%s', '%s')", PlayerInfo[playerid][pNames], code);
		mysql_function_query(connects, query, false, "", "");
		if(use <= 0) format(query, sizeof(query), "DELETE FROM `promocodes` WHERE `ID` = '%d' LIMIT 1", idcode);
		else format(query, sizeof(query), "UPDATE `promocodes` SET `Use` = '%d' WHERE `ID` = '%d' LIMIT 1", use, idcode);
		format(string, sizeof(string), "You have successfully used the promo code and received %d donate rubles!", rub);
		mysql_function_query(connects, query, false, "", "");
		SendClientMessage(playerid, -1, string);
	} else SendClientMessage(playerid, -1, "Unfortunately, the promo code does not exist or has already been used!");
	return true;
}

public OnPlayerUpdate(playerid)
{
	new updatetotal[50];
	format(updatetotal,50,"~w~TOTAL: ~b~%d", total[playerid]);
	TextDrawSetString(work5, updatetotal);
	new updatemoney[50];
	format(updatemoney,50,"~w~MONEY: ~g~%d$", total[playerid]*MUSOR);
	TextDrawSetString(work6, updatemoney);
	
	new vid = GetPlayerVehicleID(playerid);
	new anim = GetPlayerAnimationIndex(playerid);
    if(GetPlayerCameraMode(playerid) == 53)
	{
    	new Float:coord[3];
    	GetPlayerCameraPos(playerid,coord[0],coord[1],coord[2]);
    	if( coord[0] < -50000.0 || coord[0] > 50000.0 || coord[1] < -50000.0 || coord[1] > 50000.0 || coord[2] < -50000.0 || coord[2] > 50000.0 )
    	{
        	Kick(playerid);
        	return false;
    	}
	}
    if(vid > 0 && CheckVehicle[playerid] < gettime() && GetPlayerVehicleID(playerid) != VehicleID[playerid])
    {
        Kick(playerid);
        return 0;
    }
	if(GetPVarInt(playerid,"AFK_Time") >= 3)
	{
		new string[144];
		format(string, sizeof(string), "{FFFF00}You were in afk for: {328fed}%d {FF0000}second.", GetPVarInt(playerid,"AFK_Time"));
		SendClientMessage(playerid, COLOR_GREEN, string);
		SetPVarInt(playerid, "AFK_Time", 0);
	}
	SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(!IsAPlane(vid) && !IsABoat(vid) && !IsANoSpeed(vid) && !GetPVarInt(playerid,"AutoShop")) UpdateSpeedometr(playerid, 0);
	}
	new target = GetPlayerTargetPlayer(playerid);
	if(target != INVALID_PLAYER_ID)
	{
		new Float:Armourrr;
		GetPlayerArmour(target, Armourrr);
		format(stringer1, sizeof(stringer1), "~w~%d", floatround(Armourrr, floatround_round));
		PlayerTextDrawSetString(playerid, Target6[playerid], stringer1);
		PlayerTextDrawShow(playerid, Target6[playerid]);
		new Float:health;
		GetPlayerHealth(target,health);
		format(stringer1, sizeof(stringer1), "~w~%d", floatround(health, floatround_round));
		PlayerTextDrawSetString(playerid, Target4[playerid], stringer1);
		PlayerTextDrawShow(playerid, Target4[playerid]);
		format(stringer1, sizeof(stringer1), "~w~%s ~g~(%i)", PlayerInfo[target][pNames], target);
		PlayerTextDrawSetString(playerid, AimNameDraw[playerid], stringer1);
		PlayerTextDrawShow(playerid, AimNameDraw[playerid]);
		PlayerTextDrawShow(playerid, Target1);
		PlayerTextDrawShow(playerid, Target2);
		PlayerTextDrawShow(playerid, Target3);
		PlayerTextDrawShow(playerid, Target5);
	}
	else deltarget(playerid);
	new Float:xw, Float:yw, Float:zw;
    GetPlayerVelocity(playerid,xw,yw,zw);
	if((anim >= 1136 && anim <= 1138 || anim >= 504 && anim <= 505 || anim >= 494 && anim <= 495 || anim >= 482 && anim <= 484 || anim >= 472 && anim <= 474 || anim >= 17 && anim <= 19 && !IsACop(playerid) || anim >= 1545 && anim <= 1547 || anim == 1141 || anim == 1140 || anim == 500 || anim == 478 || anim == 489 || anim == 27) && IsAGreenZone(playerid) && !IsPlayerInAnyVehicle(playerid))
	{
   		FIXES_ApplyAnimation(playerid, "ped", "HANDSCOWER",4.1,0,1,1,0,0);
	}
	if(IsAGreenZone(playerid) && !(GetPlayerWeapon(playerid) >= 0 && GetPlayerWeapon(playerid) <= 1) && GetPlayerWeapon(playerid) != 43 && GetPlayerWeapon(playerid) != 14 && !IsACop(playerid) && !ISAMAFIA(playerid)) SetPlayerArmedWeapon(playerid,0);
    if(GetPlayerNearestDiceTable(playerid) != -1 && DiceTable[playerid] == -1 && CroupierTable[playerid] == -1)
	{
	    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
		{
			GameTextForPlayer(playerid, "~g~PRESS ENTER", 1250, 6);
		}
	}
	else if(GetPlayerNearestRouleTable(playerid) != -1 && RouleTable[playerid] == -1 && CroupierTable[playerid] == -1)
	{
	    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
		{
	    	GameTextForPlayer(playerid, "~g~PRESS ENTER", 1250, 6);
		}
	}
	else if(GetPlayerNearestBlackJackTable(playerid) != -1 && BlackJackTable[playerid] == -1 && CroupierTable[playerid] == -1)
	{
	    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
		{
	    	GameTextForPlayer(playerid, "~g~PRESS ENTER", 1250, 6);
		}
	}
 	else if(RouleTable[playerid] != -1 && ChooseBet[playerid] == 0)
	{
     	new keyss, ud, lr;
	    GetPlayerKeys(playerid, keyss, ud, lr);
		if(ud == KEY_UP)
		{
			RouleVertikal[playerid]++;
			if(RouleHorizont[playerid] == 0)
			{
			    RouleVertikal[playerid]--;
			    return true;
			}
			else if(RouleHorizont[playerid] == 24)
			{
			    switch(RouleVertikal[playerid]-1)
			    {
			        case 2:
					{
    	    			RouleVertikal[playerid] = 4;
					}
			        case 4:
			        {
						RouleVertikal[playerid] = 6;
			        }
			        case 6:
			        {
			            RouleVertikal[playerid]--;
			            return true;
			        }
			    }
			}
			else if(RouleVertikal[playerid] == 1)
			{
			    switch(RouleHorizont[playerid])
			    {
			        case 2..6:
           			{
			            RouleHorizont[playerid] = 4;
			        }
			        case  10..14:
			        {
			            RouleHorizont[playerid] = 12;
			        }
			        case  18..22:
			        {
			            RouleHorizont[playerid] = 20;
			        }
			    }
			}
			else if(RouleVertikal[playerid] > 6)
			{
			    RouleVertikal[playerid] = 6;
			    return true;
			}
			switch(Casino[playerid])
    		{
		        case 1:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 2.0);
		        }
		        case 2:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 2.0);
		        }
			}
		}
	    else if(ud == KEY_DOWN)
		{
		    RouleVertikal[playerid]--;
		    if(RouleHorizont[playerid] == 0)
			{
			    RouleVertikal[playerid]++;
			    return true;
			}
			else if(RouleHorizont[playerid] == 24)
			{
			    switch(RouleVertikal[playerid]+1)
			    {
			        case 2:
					{
					    RouleVertikal[playerid]++;
					    return true;
					}
			        case 4:
			        {
						RouleVertikal[playerid] = 2;
			        }
           			case 6:
			        {
			            RouleVertikal[playerid] = 4;
			        }
			    }
			}
		    else if(RouleVertikal[playerid] == 1)
			{
			    switch(RouleHorizont[playerid])
			    {
			        case 1..8:
			        {
			            RouleHorizont[playerid] = 4;
			        }
			        case  9..16:
			        {
			            RouleHorizont[playerid] = 12;
			        }
			        case  17..24:
			        {
			            RouleHorizont[playerid] = 20;
			        }
			    }
			}
			else if(RouleVertikal[playerid] == 0)
			{
			    switch(RouleHorizont[playerid])
			    {
			        case 4:
			        {
			            RouleHorizont[playerid] = 2;
			        }
			        case 12:
			        {
			            RouleHorizont[playerid] = 10;
			        }
			        case 20:
			        {
			            RouleHorizont[playerid] = 18;
			        }
			    }
			}
			else if(RouleVertikal[playerid] < 0)
		    {
          		RouleVertikal[playerid] = 0;
          		return true;
		    }
			switch(Casino[playerid])
    		{
		        case 1:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 2.0);
		        }
		        case 2:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 2.0);
		        }
			}
		}
		if(lr == KEY_LEFT)
		{
		    RouleHorizont[playerid]--;
	        if(RouleVertikal[playerid] == 1)
	        {
	            switch(RouleHorizont[playerid]+1)
	            {
	                case 4:
	                {
	                    RouleHorizont[playerid]++;
			            return true;
	                }
	                case 12:
	                {
	                    RouleHorizont[playerid] = 4;
	                }
	                case 20:
	                {
	                    RouleHorizont[playerid] = 12;
	                }
	            }
	        }
			else if(RouleVertikal[playerid] == 0)
			{
			    switch(RouleHorizont[playerid]+1)
			    {
			        case 2:
       				{
			            RouleHorizont[playerid]++;
			            return true;
			        }
			        case 6:
			        {
			            RouleHorizont[playerid] = 2;
			        }
			        case 10:
			        {
			            RouleHorizont[playerid] = 6;
			        }
			        case 14:
			        {
			            RouleHorizont[playerid] = 10;
			        }
			        case 18:
			        {
			            RouleHorizont[playerid] = 14;
			        }
			        case 22:
			        {
			            RouleHorizont[playerid] = 18;
			        }
			    }
			}
			else if(RouleHorizont[playerid] == 0)
			{
			    RouleVertikal[playerid] = 4;
			}
			else if(RouleHorizont[playerid] < 0)
			{
			    RouleHorizont[playerid] = 0;
			    return true;
			}
            switch(Casino[playerid])
    		{
		        case 1:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 2.0);
		        }
		        case 2:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 2.0);
		        }
			}
		}
		else if(lr == KEY_RIGHT)
		{
		    RouleHorizont[playerid]++;
	        if(RouleVertikal[playerid] == 1)
	        {
	            switch(RouleHorizont[playerid]-1)
	            {
                 	case 4:
	                {
	                    RouleHorizont[playerid] = 12;
	                }
	                case 12:
	                {
	                    RouleHorizont[playerid] = 20;
	                }
	                case 20:
	                {
	                    RouleHorizont[playerid]--;
			            return true;
	                }
	            }
	        }
	        else if(RouleVertikal[playerid] == 0)
	        {
				switch(RouleHorizont[playerid]-1)
				{
        			case 2:
				    {
				        RouleHorizont[playerid] = 6;
				    }
				    case 6:
				    {
				        RouleHorizont[playerid] = 10;
				    }
				    case 10:
				    {
				        RouleHorizont[playerid] = 14;
				    }
				    case 14:
				    {
				        RouleHorizont[playerid] = 18;
				    }
				    case 18:
				    {
				        RouleHorizont[playerid] = 22;
				    }
				    case 22:
				    {
				        RouleHorizont[playerid]--;
			            return true;
				    }
				}
	        }
			else if(RouleHorizont[playerid] == 24)
			{
			    switch(RouleVertikal[playerid])
			    {
			        case 2,3:
			        {
			            RouleVertikal[playerid] = 2;
			        }
			        case 4,5:
			        {
			            RouleVertikal[playerid] = 4;
			        }
			        case 6:
			        {
			            RouleVertikal[playerid] = 6;
			        }
				}
			}
			else if(RouleHorizont[playerid] > 24)
			{
			    RouleHorizont[playerid]--;
			    return true;
			}
			switch(Casino[playerid])
    		{
		        case 1:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 2.0);
		        }
		        case 2:
		        {
		            MoveObject(RouleChip[playerid], RouleTables[RouleTable[playerid]][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[RouleTable[playerid]][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 2.0);
		        }
			}
		}
	}
	if(GetPVarInt(playerid,"ColorFire"))
	{
	    if(GetPlayerWeapon(playerid) == 41)
	    {
	        if(GetPVarInt(playerid,"GZLogoID"))
	        {
	            if(IsPlayerInRangeOfPoint(playerid,2.0,GZLogo[GetPVarInt(playerid,"GZLogoID")-1][0],GZLogo[GetPVarInt(playerid,"GZLogoID")-1][1],GZLogo[GetPVarInt(playerid,"GZLogoID")-1][2]))
				{
				    new Float:angle;
				    GetPlayerFacingAngle(playerid, angle);
				    if(GZLogo[GetPVarInt(playerid,"GZLogoID")-1][4]-30 < angle < GZLogo[GetPVarInt(playerid,"GZLogoID")-1][4]+30)
				    {
						new Float:ammo = GetPVarInt(playerid,"ColorFire") - GetPlayerAmmo(playerid);
						SetPVarInt(playerid,"ColorFire",GetPlayerAmmo(playerid));
						new i = GetPVarInt(playerid,"GZLogoID")-1;
                        if(!GZLogoInfo[i][gOwner][1])
                        {
				    		if(GZLogoInfo[i][gOwner][0] == PlayerInfo[playerid][pMember]) return true;
                            if(GZLogoInfo[i][gFinish][0] < ammo) ammo = GZLogoInfo[i][gFinish][0];
							GZLogoInfo[i][gFinish][0] -= ammo;
							new string[11];
				            format(string, 11, "~g~%.1f%", GZLogoInfo[i][gFinish][0]);
				            GameTextForPlayer(playerid, string, 500, 3);
				            if(!GZLogoInfo[i][gFinish][0])
				            {
				                switch(GZLogoInfo[i][gOwner][1])
				                {
				                    case 15: TotalGraf[0]--;
				                    case 12: TotalGraf[1]--;
				                    case 18: TotalGraf[2]--;
				                    case 17: TotalGraf[3]--;
				                    case 13: TotalGraf[4]--;
				                }
								GZLogoInfo[i][gOwner][1] = PlayerInfo[playerid][pMember];
        						GZLogoInfo[i][gID][1] = CreateDynamicObject(19353,GZLogo[i][0]+(0.1 * floatsin(-GZLogo[i][3]+90, degrees)),GZLogo[i][1]+(0.1 * floatcos(-GZLogo[i][3]+90, degrees)),GZLogo[i][2],0.000,0.000,GZLogo[i][3]);
								switch(GZLogoInfo[i][gOwner][1])
								{
									case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++;
									case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
									case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++;
									case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++;
									case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++;
								}
								GZLogoInfo[i][gFinish][1] = 1000;
								skladband();
								SaveGZLogo(i);
				            }
			            }
			            else
                        {
				    		if(GZLogoInfo[i][gOwner][1] == PlayerInfo[playerid][pMember]) return true;
                            if(GZLogoInfo[i][gFinish][1] < ammo) ammo = GZLogoInfo[i][gFinish][1];
							GZLogoInfo[i][gFinish][1] -= ammo;
							new string[11];
				            format(string, 11, "~g~%.1f%", GZLogoInfo[i][gFinish][1]);
				            GameTextForPlayer(playerid, string, 500, 3);
				            if(!GZLogoInfo[i][gFinish][1])
							{
							    DestroyDynamicObject(GZLogoInfo[i][gID][0]);
							    DestroyDynamicObject(GZLogoInfo[i][gID][1]);
           						switch(GZLogoInfo[i][gOwner][0])
				                {
				                    case 15: TotalGraf[0]--;
				                    case 12: TotalGraf[1]--;
				                    case 18: TotalGraf[2]--;
				                    case 17: TotalGraf[3]--;
				                    case 13: TotalGraf[4]--;
				                }
								GZLogoInfo[i][gOwner][0] = GZLogoInfo[i][gOwner][1];
        						switch(GZLogoInfo[i][gOwner][1])
				                {
				                    case 15: TotalGraf[0]--;
				                    case 12: TotalGraf[1]--;
				                    case 18: TotalGraf[2]--;
				                    case 17: TotalGraf[3]--;
				                    case 13: TotalGraf[4]--;
				                }
								GZLogoInfo[i][gOwner][1] = PlayerInfo[playerid][pMember];
								GZLogoInfo[i][gID][0] = CreateDynamicObject(19353,GZLogo[i][0],GZLogo[i][1],GZLogo[i][2],0.000,0.000,GZLogo[i][3]);
								switch(GZLogoInfo[i][gOwner][0])
								{
									case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++;
									case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
									case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++;
									case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++;
									case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++;
								}
								GZLogoInfo[i][gFinish][0] = 1000;
        						GZLogoInfo[i][gID][1] = CreateDynamicObject(19353,GZLogo[i][0]+(0.1 * floatsin(-GZLogo[i][3]+90, degrees)),GZLogo[i][1]+(0.1 * floatcos(-GZLogo[i][3]+90, degrees)),GZLogo[i][2],0.000,0.000,GZLogo[i][3]);
								switch(GZLogoInfo[i][gOwner][1])
								{
									case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++;
									case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
									case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++;
									case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++;
									case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++;
  								}
								GZLogoInfo[i][gFinish][1] = 1000;
								skladband();
								SaveGZLogo(i);
							}
			            }
				    }
	            }
            }
	    	else DeletePVar(playerid,"GZLogoID"), DeletePVar(playerid,"ColorFire");
	    }
	    else DeletePVar(playerid,"ColorFire");
	}
	if(PlayerInfo[playerid][pArmBodyUse] == 1)
	{
		if(GetTickCount() - armedbody_pTick[playerid] > 113)
		{
			new
				weaponid[13],weaponammo[13],pArmedWeapon;
			pArmedWeapon = GetPlayerWeapon(playerid);
			GetPlayerWeaponData(playerid,1,weaponid[1],weaponammo[1]);
			GetPlayerWeaponData(playerid,2,weaponid[2],weaponammo[2]);
			GetPlayerWeaponData(playerid,4,weaponid[4],weaponammo[4]);
			GetPlayerWeaponData(playerid,5,weaponid[5],weaponammo[5]);
			GetPlayerWeaponData(playerid,7,weaponid[7],weaponammo[7]);
			if(weaponid[1] && weaponammo[1] > 0)
			{
				if(pArmedWeapon != weaponid[1])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,6))
					{
						SetPlayerAttachedObject(playerid,0,GetWeaponModel(weaponid[1]),1, 0.199999, -0.139999, 0.030000, 0.500007, -115.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,6))
					{
						RemovePlayerAttachedObject(playerid,6);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,6))
			{
				RemovePlayerAttachedObject(playerid,6);
			}
			if(weaponid[2] && weaponammo[2] > 0)
			{
				if(pArmedWeapon != weaponid[2])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,7))
					{
						SetPlayerAttachedObject(playerid,7,GetWeaponModel(weaponid[2]),8, -0.079999, -0.039999, 0.109999, -90.100006, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,7))
					{
						RemovePlayerAttachedObject(playerid,7);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,7))
			{
				RemovePlayerAttachedObject(playerid,7);
			}
			if(weaponid[4] && weaponammo[4] > 0)
			{
				if(pArmedWeapon != weaponid[4])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,8))
					{
						SetPlayerAttachedObject(playerid,8,GetWeaponModel(weaponid[4]),7, 0.000000, -0.100000, -0.080000, -95.000000, -10.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,8))
					{
						RemovePlayerAttachedObject(playerid,8);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,8))
			{
				RemovePlayerAttachedObject(playerid,8);
			}
			if(weaponid[5] && weaponammo[5] > 0)
			{
				if(pArmedWeapon != weaponid[5])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,9))
					{
						SetPlayerAttachedObject(playerid,9,GetWeaponModel(weaponid[5]),1, 0.200000, -0.119999, -0.059999, 0.000000, 206.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						RemovePlayerAttachedObject(playerid,5);
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,9))
					{
						RemovePlayerAttachedObject(playerid,9);
						CheckItem(playerid);
						for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,9))
			{
				RemovePlayerAttachedObject(playerid,9);
			}
			if(weaponid[7] && weaponammo[7] > 0)
			{
				if(pArmedWeapon != weaponid[7])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,10))
					{
						SetPlayerAttachedObject(playerid,10,GetWeaponModel(weaponid[7]),1,-0.100000, 0.000000, -0.100000, 84.399932, 112.000000, 10.000000, 1.099999, 1.000000, 1.000000);
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,10))
					{
						RemovePlayerAttachedObject(playerid,10);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,10))
			{
				RemovePlayerAttachedObject(playerid,10);
			}
			armedbody_pTick[playerid] = GetTickCount();
		}
		return true;
	}
	return true;
}
/*forward top_ghetto(playerid);
public top_ghetto(playerid) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
		new dialog[500], str[200];
		dialog = "Place\tNick\tKills\n";
		for(new i = 0; i < rows; i++) {
			new NameK[MAX_PLAYER_NAME], kills;
			cache_get_field_content(i, "Name", NameK, connects, MAX_PLAYER_NAME);
			kills = cache_get_field_content_int(i, "pKInCapt", connects);
			if(kills < 1) return SendClientMessage(playerid, -1, "The top ghetto has not yet been determined, rather take part in the wars for territories to get to the top!");
			format(str, sizeof(str), "%d.\t%s\t%d\n",i + 1, NameK, kills);
			strcat(dialog, str);
		}
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_TABLIST_HEADERS, "Top 5 ghetto players", dialog, "Close", "");
	}
	return true;
}*/
forward top_ghetto(playerid);

public top_ghetto(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);

    if (rows > 0) {
        new dialog[500], str[200];
        dialog = "Place\tNick\tKills\n";

        for (new i = 0; i < rows; i++) {
            new NameK[MAX_PLAYER_NAME], kills;
            cache_get_field_content(i, "Name", NameK, connects, MAX_PLAYER_NAME);
            kills = cache_get_field_content_int(i, "pKInCapt", connects);
            format(str, sizeof(str), "%d.\t%s\t%d\n", i + 1, NameK, kills);
            strcat(dialog, str);
        }
        ShowPlayerDialog(playerid, 228, DIALOG_STYLE_TABLIST_HEADERS, "Top 5 ghetto players", dialog, "Close", "");
    } else {
        SendClientMessage(playerid, -1, "No data available to display.");
    }

    return true;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys == 128 || newkeys == 16)
    {
        if(GetPlayerCameraMode(playerid) == 184) return KickEx(playerid);
    }
	if(newkeys & KEY_YES)
	{
		if(PlayerInfo[playerid][pTargetAction] > 0) {
			new idpl = PlayerInfo[playerid][pTargetPlayer];
			switch(PlayerInfo[playerid][pTargetAction]) {
				case 1: {
					if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Cannot be used in a car");
					if(!ProxDetectorS(2.0, playerid, idpl)) return true;
					new Float:angle;
					GetPlayerFacingAngle(playerid, angle);
					SetPlayerFacingAngle(idpl, angle + 180);
					format(stringer1, sizeof(stringer1), "%s shake hands with %s",PlayerInfo[playerid][pNames],PlayerInfo[idpl][pNames]);
					ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
					if(PlayerCuffed[playerid] == 0) { FIXES_ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1); }
					if(PlayerCuffed[idpl] == 0) { FIXES_ApplyAnimation(idpl, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1); }
				}
				case 2: {
					if(!ProxDetectorS(8.0, playerid, idpl)) return SendClientMessage(playerid, COLOR_RED, "The man is too far away!");
					new shltext[16];
					if(PlayerInfo[idpl][pGunLic]) { shltext = "Yes"; } else { shltext = "No"; }
					SendClientMessage(playerid,COLOR_GREY, "-----------===[ PASSPORT ]===----------");
					SendMes(playerid, COLOR_YELLOW2, "Name: %s ",PlayerInfo[idpl][pNames]);
					SendMes(playerid, COLOR_YELLOW2, "Age: %d Phone: %d",PlayerInfo[idpl][pLevel],PlayerInfo[idpl][pPnumber]);
					if(PlayerInfo[playerid][pFacePass] == 0)//��������� �������
					{
						SendMes(playerid, COLOR_YELLOW2, "Fraction: %s",GetPlayerFracName[PlayerInfo[idpl][pMember]]);
						SendMes(playerid, COLOR_YELLOW2, "Job: %s",GetPlayerJobName(PlayerInfo[idpl][pJob]));
						SendMes(playerid, COLOR_YELLOW2, "Weapons permit: %s",shltext);
						SendMes(playerid, COLOR_YELLOW2, "Crimes: %d",PlayerInfo[idpl][pKills]);
						SendMes(playerid, COLOR_YELLOW2, "Law-abiding: %d",PlayerInfo[idpl][pZakonp]);
						SendMes(playerid, COLOR_YELLOW2, "Military ID: %s", PlayerInfo[idpl][pVoenBill] ? ("{a38b52}Served") : ("{AA3333}Didn't serve"));
						if(PlayerInfo[idpl][pWanted] > 0) SendClientMessage(playerid, COLOR_REDD, "Attention! This is a wanted man!");
					}
					else
					{
						if(PlayerInfo[idpl][pFacePass] == 1) SendClientMessage(playerid, COLOR_YELLOW2, "Faction: Citizen");
						else if(PlayerInfo[idpl][pFacePass] == 2) SendClientMessage(playerid, COLOR_YELLOW2, "Faction: FBI");
						else if(PlayerInfo[idpl][pFacePass] == 3) SendClientMessage(playerid, COLOR_YELLOW2, "Faction: S.W.A.T");
						else if(PlayerInfo[idpl][pFacePass] == 4) SendClientMessage(playerid, COLOR_YELLOW2, "Faction: Administration of the President");
						SendClientMessage(playerid, COLOR_YELLOW2, "Job: Unemployed");
						SendClientMessage(playerid, COLOR_YELLOW2, "Weapon permit: Yes");
						SendMes(playerid, COLOR_YELLOW2, "Crimes: %d",PlayerInfo[idpl][pKills]);
						SendMes(playerid, COLOR_YELLOW2, "Law-abiding: %d",PlayerInfo[idpl][pZakonp]);
						SendClientMessage(playerid, COLOR_YELLOW2, "Military ID: {a38b52}Served");
					}
					SendClientMessage(playerid,COLOR_GREY, "=============================");
					format(stringer1,sizeof(stringer1), "%s showed my passport to %s", PlayerInfo[idpl][pNames], PlayerInfo[playerid][pNames]);
					SetPlayerChatBubble(idpl,stringer1,COLOR_PURPLE,30.0,10000);
					format(stringer1, sizeof(stringer1), "%s showed his passport", PlayerInfo[idpl][pNames]);
					ProxDetector(idpl, 10.0, COLOR_PURPLE, stringer1);
				}
				case 3: {
					if(!ProxDetectorS(8.0, playerid, idpl)) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
					new text1[20],text4[20],text5[20],text6[20],text7[20];
					if(PlayerInfo[idpl][pVodPrava]) { text1 = "Yes"; } else { text1 = "No"; }
					if(PlayerInfo[idpl][pFlyLic]) { text4 = "Yes"; } else { text4 = "No"; }
					if(PlayerInfo[idpl][pBoatLic]) { text5 = "Yes"; } else { text5 = "No"; }
					if(PlayerInfo[idpl][pFishLic]) { text6 = "Yes"; } else { text6 = "No"; }
					if(PlayerInfo[idpl][pGunLic]) { text7 = "Yes"; } else { text7 = "No"; }
					SendMes(playerid, 0xC0E1EEFF, "-------======[ LICENSES %s ]======-------",PlayerInfo[idpl][pNames]);
					SendMes(playerid, 0xC0E1EEFF, "Driver license: %s",text1);
					SendMes(playerid, 0xC0E1EEFF, "Air transport license: %s",text4);
					SendMes(playerid, 0xC0E1EEFF, "Water transport license: %s",text5);
					SendMes(playerid, 0xC0E1EEFF, "Fishing license: %s",text6);
					SendMes(playerid, 0xC0E1EEFF, "Weapon license: %s",text7);
					SendClientMessage(playerid,0x0AA8DAFF,"===============================");
					format(stringer1,sizeof(stringer1), "%s took out my licenses and showed them to %s",PlayerInfo[idpl][pNames],PlayerInfo[playerid][pNames]);
					ProxDetector(idpl, 30.0, COLOR_PURPLE, stringer1);
					format(stringer1,sizeof(stringer1), "showed my licenses to %s",PlayerInfo[playerid][pNames]);
					SetPlayerChatBubble(idpl,stringer1,COLOR_PURPLE,30.0,10000);

				}
				case 4: {
					if(!ProxDetectorS(8.0, playerid, idpl)) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
					format(stringer, sizeof(stringer), "{FFFFFF}SDPistol:{32CD32}.................{FFFFFF}%d percent.\nDesertEagle:{32CD32}..............{FFFFFF}%d percent.\nShotGun:{32CD32}..................{FFFFFF}%d percent.\nMP5:{32CD32}......................{FFFFFF}%d percent.\nAK47:{32CD32}.....................{FFFFFF}%d percent.\nM4:{32CD32}.......................{FFFFFF}%d percent.",
					PlayerInfo[idpl][pSDPistol],PlayerInfo[idpl][pDesertEagle],PlayerInfo[idpl][pShotGun],PlayerInfo[idpl][pMP5],PlayerInfo[idpl][pAK47],PlayerInfo[idpl][pM4]);
					format(stringer1, 90, "Skills %s",PlayerInfo[idpl][pNames]);
					ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,stringer1,stringer,"Exit","");
					format(stringer1, 90, "%s shows off his weapon skills %s",PlayerInfo[idpl][pNames],PlayerInfo[playerid][pNames]);
					ProxDetector(idpl, 25.0, COLOR_PURPLE, stringer1);
				}
			}
			PlayerInfo[playerid][pTargetAction] = 0;
			PlayerInfo[playerid][pTargetPlayer] = -1;
			PlayerInfo[idpl][pSelectPlayer] = -1;
			return true;
		}
  		if(GetPVarInt(playerid, "ProverkaDice"))
		{
			if(GetPVarInt(playerid, "KostiName") < 999)
			{
				if(!IsPlayerInRangeOfPoint(playerid,30.0,1127.0945,-1.5882,1000.6797)) return SendClientMessage(playerid, COLOR_WHITE, "You must be in a casino!");
				new dice = random(12)+1;
				new dice1 = random(12)+1;
				new string[144];
				format(string, 144, "%s and %s rolled the dice. Result: {CC9900}%i:%i",PlayerInfo[GetPVarInt(playerid, "KostiName")][pNames],PlayerInfo[playerid][pNames],dice,dice1);
				//ProxDetector(5.0, playerid, string, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				ProxDetector(playerid, 30.0, 0xDD90FFFF, string);
				if(dice > dice1)
				{
				    Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid, "KostiMoney"));
				    Hook_GivePlayerMoney(GetPVarInt(playerid, "KostiName"), GetPVarInt(playerid, "KostiMoney"));
					SendClientMessage(GetPVarInt(playerid, "KostiName"), COLOR_GREEN, "Congratulations, you have won!");
					if(PlayerInfo[playerid][pQuest10] == 0)
     				{
                        PlayerInfo[playerid][pQuest10] = 1;
         				UpdatePlayerData(playerid, "pQuest10", PlayerInfo[playerid][pQuest10]);
         			}
					SendClientMessage(playerid, 0xFF6600AA, "Unfortunately, you lost!");
					format(string, SMALL_SIZE, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(GetPVarInt(playerid, "KostiName"), string, 3000, 1);
					format(string, SMALL_SIZE, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(playerid, string, 3000, 1);
					format(string,SMALL_SIZE, "Dropped out: %i",dice1);
					SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
					format(string,SMALL_SIZE, "Dropped out: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),string,TEAM_GROVE_COLOR,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",3000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
					dicetime = gettime() + 10;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					SetPVarInt(playerid, "KostiMoney",0);
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
				if(dice < dice1)
				{
    				Hook_GivePlayerMoney(GetPVarInt(playerid, "KostiName"), -GetPVarInt(playerid, "KostiMoney"));
				    Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "KostiMoney"));
					SendClientMessage(playerid, COLOR_GREEN, "Congratulations, you have won!");
					if(PlayerInfo[playerid][pQuest10] == 0)
     				{
                        PlayerInfo[playerid][pQuest10] = 1;
         				UpdatePlayerData(playerid, "pQuest10", PlayerInfo[playerid][pQuest10]);
         			}
					SendClientMessage(GetPVarInt(playerid, "KostiName"), 0xFF6600AA, "Unfortunately, you lost!");
					format(string, SMALL_SIZE, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(playerid, string, 3000, 1);
					format(string, SMALL_SIZE, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(GetPVarInt(playerid, "KostiName"), string, 3000, 1);
					format(string,SMALL_SIZE, "Dropped out: %i",dice1);
					SetPlayerChatBubble(playerid,string,TEAM_GROVE_COLOR,30.0,10000);
					format(string,SMALL_SIZE, "Dropped out: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),string,COLOR_ORANGE,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",3000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
					dicetime = gettime() + 10;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					DeletePVar(playerid, "KostiMoney");
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
				if(dice == dice1)
				{
					SendClientMessage(playerid, COLOR_ORANGE, "The game ended in a draw!");
					SendClientMessage(GetPVarInt(playerid, "KostiName"), COLOR_ORANGE, "The game ended in a draw!");
					if(PlayerInfo[playerid][pQuest10] == 0)
     				{
                        PlayerInfo[playerid][pQuest10] = 1;
         				UpdatePlayerData(playerid, "pQuest10", PlayerInfo[playerid][pQuest10]);
         			}
					format(string,SMALL_SIZE, "Dropped out: %i",dice1);
					SetPlayerChatBubble(playerid,string,COLOR_LIGHTBLUE,30.0,10000);
					format(string,SMALL_SIZE, "Dropped out: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),string,COLOR_LIGHTBLUE,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",3000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
					dicetime = gettime() + 5;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					DeletePVar(playerid, "KostiMoney");
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
			}
		}
	}
	if((newkeys & KEY_AIM) && (newkeys & KEY_WALK)) {
		if(PlayerInfo[playerid][pSelectPlayer] > -1) return SendClientMessage(playerid, COLOR_GREY, "You are already interacting with the player!");
		foreach(Player, i) {
			if(GetDistanceBetweenPlayers(playerid,i) < 3.0 && playerid != i && PlayerInfo[i][pTargetPlayer] < 0) {
				new string[144];
				format(string, sizeof(string), "{FFD700}Action with the player: %s", PlayerInfo[i][pNames]);
				SetPVarInt(playerid, "IdMn", i);
				PlayerInfo[playerid][pSelectPlayer] = i;
				PlayerInfo[i][pTargetPlayer] = playerid;
				ShowPlayerDialog(playerid, 7983, DIALOG_STYLE_LIST, string, "[1] Say hello\n[2] Show passport\n[3] Show licenses\n[4] Show an extract from the shooting range", "Select", "Cancle");
				return true;
			}
		}
	}
    if(GetPlayerWeapon(playerid) == 41 && IsAGang(playerid))
	{
	    if(PRESSED(KEY_FIRE))
		{
		    for(new i;i<sizeof(GZLogo);i++)
		    {
	            if(IsPlayerInRangeOfPoint(playerid,4.0,GZLogo[i][0],GZLogo[i][1],GZLogo[i][2]))
				{
					SetPVarInt(playerid,"ColorFire",GetPlayerAmmo(playerid));
					SetPVarInt(playerid,"GZLogoID",i+1);
					break;
				}
			}
		}
	    if(RELEASED(KEY_FIRE)) DeletePVar(playerid,"ColorFire"), DeletePVar(playerid,"GZLogoID");
	}
    if(newkeys == 8 && GetPVarInt(playerid, "Selfie") > 0) return NextSelfie(playerid);
    if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
    && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && AntiSbiv[playerid] < gettime()) {
		if(PlayerInfo[playerid][Settings][3] != 0) SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk",200,0,"d",playerid));
	}
    if(newkeys == 16)
    {
        if(GetPVarInt(playerid, "rentrc") == 1)
    	{
			ShowPlayerDialog(playerid, 1939, DIALOG_STYLE_MSGBOX, "{ffffb3}StopRent The Vehicle", "{ffffff}R u sure want to stop renting the vehicle??", "Yes", "Cancle");
		}
        if(GetPVarInt(playerid,"Animation") == 1)
    	{
    		ClearAnimations(playerid);
   	 		SetPVarInt(playerid,"Animation",0);
		}
		if(IsAFoods(playerid)) return ClearAnimations(playerid, true);
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
    }
	if(newkeys == 1024)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(IsABankomat(playerid))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
				FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "{FFD700}ATM", "[1]{ffffff} Withdraw cash\n[2]{ffffff} Balance\n[3]{ffffff} House Tax Pay\n[4]{ffffff} Top up your phone account\n[5] {ffffff}Top up your business account", "Select", "Close");
				return true;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,2,2130.2817,1626.2802,993.6882))
		{
			SetPPos(playerid,1483.8741,-1721.8362,7.3411);
			SetPlayerVirtualWorldEx(playerid,0);
			SetPlayerInteriorEx(playerid,0);
			SetPlayerFacingAngle(playerid, 168.2497);
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,1172.1096,1357.7673,10.9219))
		{
			if(PlayerInfo[playerid][pNarcoLomka] > 2000) return SendClientMessage(playerid,0xFF0000AA,"You are a drug addict!\nConsult your doctor!");
			else if(PlayerInfo[playerid][pNarcoLomka] <= 2000) return SendClientMessage(playerid,COLOR_WHITE,"Congratulations! No drug addiction detected!");
		}
		else if(GetPlayerVirtualWorld(playerid) > 40)
		{
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
		    	if(IsPlayerInRangeOfPoint(playerid,  3.0, 2548.0430,-1548.7075,2023.5859) && GetPlayerVirtualWorld(playerid) == h+50)
				{
					SetPlayerInteriorEx(playerid,0);
					SetPlayerVirtualWorldEx(playerid,0);
					SetPPos(playerid,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
					SetPVarInt(playerid, "ExitHouse",1);
					return true;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]) && GetPlayerVirtualWorld(playerid) == h+50)
				{
					return ShowPlayerDialog(playerid,70,DIALOG_STYLE_MSGBOX, "{FFD300}Exit:","{FFFFFF}Select the place where you want to Go out:", "Street", "Garage");
				}
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK  || (newkeys & KEY_SUBMISSION  && newkeys & KEY_SECONDARY_ATTACK ))
	{
		if(udar[playerid] >= 500)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Lesson is over, continue start a new lesson with the trainer");
			FIXES_ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
			format(stringer1,sizeof(stringer1), "Tired");
			SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && gSpecID[playerid] != INVALID_PLAYER_ID)
	{
    	if(newkeys & KEY_ANALOG_LEFT)
    	{
            if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, 0xFFD5BBAA, "Don't flood!");
	        SetPVarInt(playerid,"AntiFlood", gettime() + 3);
            new maxplayers = GetPlayerPoolSize();
			for(new ids = gSpecID[playerid]-1, bool:secondloop; ids >= 0; ids--)
			{
			    if(ids <= 0 && !secondloop)
				{
				    secondloop = true, ids = maxplayers;
					continue;
				}
				if(!gPlayerLogged[ids]) continue;
				else if(PlayerInfo[ids][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua] || FD(playerid)) continue;
				switch(GetPlayerState(ids))
				{
				    case 1..3: {}
					default: continue;
				}
				gSpecID[playerid] = ids;
				StartRecon(playerid, ids);
				UpdateRecon(playerid, ids);
				break;
			}
        }
        else if(newkeys & KEY_ANALOG_RIGHT)
        {
            if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, 0xFFD5BBAA, "Don't flood!");
	        SetPVarInt(playerid,"AntiFlood", gettime() + 3);
            new maxplayers = GetPlayerPoolSize();
			for(new ids = gSpecID[playerid]+1, bool:secondloop; ids < maxplayers; ids++)
			{
			    if(ids == maxplayers && !secondloop)
				{
				    secondloop = true, ids = 0;
					continue;
				}
				if(!gPlayerLogged[ids]) continue;
				else if(PlayerInfo[ids][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua] || FD(playerid)) continue;
				switch(GetPlayerState(ids))
				{
				    case 1..3: {}
					default: continue;
				}
				gSpecID[playerid] = ids;
				StartRecon(playerid, ids);
				UpdateRecon(playerid, ids);
				break;
			}
        }
    }
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pOffBH] < 1) {
				if(times[playerid] == true) SetTimerEx("AntiBH",1000,false,"i",playerid);
			}
		}
	}
	/************************************************************************************/
	if(newkeys == KEY_CROUCH)
	{
	    if(IsPlayerInRangeOfPoint(playerid,  10.0, 2522.0203,-1543.2173,2023.5754) && GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pPhousekey]+50 && GetPlayerState(playerid) == 2)
     	{
			SetVehicleEE(caridhouse[playerid],HouseInfo[PlayerInfo[playerid][pPhousekey]][hCarx], HouseInfo[PlayerInfo[playerid][pPhousekey]][hCary], HouseInfo[PlayerInfo[playerid][pPhousekey]][hCarz]);
			SetVehicleZAngleEx(caridhouse[playerid], HouseInfo[PlayerInfo[playerid][pPhousekey]][hCarc]);
			SetCameraBehindPlayer(playerid);
			LinkVehicleToInterior(caridhouse[playerid],0);
			SetPlayerInteriorEx(playerid,0);
			SetPlayerVirtualWorldEx(playerid,0);
			SetVehicleVirtualWorld(caridhouse[playerid], 0);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, -2528.4910, 507.5064, -11.1088) && PlayerInfo[playerid][pMember] == 2 && GetPlayerState(playerid) == 2)
		{
	    	SetVehicleEE(GetPlayerVehicleID(playerid), -2443.2319, 522.4879, 29.6709);
	        SetVehicleZAngleEx(GetPlayerVehicleID(playerid), 179.7420);
	        SetCameraBehindPlayer(playerid);
	        return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, -2438.5713, 521.9441, 29.6710) && PlayerInfo[playerid][pMember] == 2 && GetPlayerState(playerid) == 2)
		{
	        SetVehicleEE(GetPlayerVehicleID(playerid), -2529.2104, 501.5463, -11.1091);
	        SetVehicleZAngleEx(GetPlayerVehicleID(playerid), 270.1569);
	        SetCameraBehindPlayer(playerid);
	        return 1;
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 10.0,769.93927002,-1384.85180664,14.39731598))
		{
		    if(IsACop(playerid))
		    {
		        if(SwatDoor[0][playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"{BBBBBB}The gate is already open.");
				MoveObject(gatevorota,769.93927002,-1384.85180664,14.39731598, 3.0);
				SwatDoor[0][playerid] = 10;
				SendClientMessage(playerid,COLOR_WHITE,"{BBBBBB}The gate will close within 10 seconds!");
				return true;
			}
			SendClientMessage(playerid,COLOR_WHITE,"{BBBBBB} You don't have a pass!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0,774.42980957,-1330.08459473,12.70648003))
		{
		    if(IsACop(playerid))
		    {
		        if(SwatDoor[1][playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"{BBBBBB}The gate is already open.");
				MoveObject(gatevorota2,774.42980957,-1330.08459473,12.70648003, 3.0);
				SwatDoor[1][playerid] = 10;
				SendClientMessage(playerid,0x6ab1ffaa,"The gate will close within 10 seconds!");
				return true;
			}
			SendClientMessage(playerid,COLOR_WHITE,"{BBBBBB} You don't have a pass!");
		}
		else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, -1786.7338, 1209.0753, 25.1250))
			{
			    if(!IsPlayerInVehicle(playerid, caridhouse[playerid])) return SendClientMessage(playerid, COLOR_SILVER, "You must be driving your car");
			    if(BizzInfo[85][bProduct] < 5 || strcmp(BizzInfo[85][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Business doesn't have enough products / Business doesn't have an owner!");
			    TuneShop[playerid] = 85;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1649.3892, 2200.3521, 10.8203))
			{
	            if(!IsPlayerInVehicle(playerid, caridhouse[playerid])) return SendClientMessage(playerid, COLOR_SILVER, "You must be driving your car");
	            if(BizzInfo[86][bProduct] < 5 || strcmp(BizzInfo[86][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Business doesn't have enough products / Business doesn't have an owner!");
                TuneShop[playerid] = 86;
			}
			if(TuneShop[playerid] != 0)
			{
				if(!IsAPlane(caridhouse[playerid]) && !IsABoat(caridhouse[playerid]) && !IsANoSpeed(caridhouse[playerid]))
				{
					for(new i = 0; i < 18; i++) PlayerTextDrawHide(playerid, td_speed[playerid][i]);
				}
				else return SendClientMessage(playerid, COLOR_SILVER, "The auto repair shop cannot accept your vehicle.."), TuneShop[playerid] = 0;
				SetVehicleEE(caridhouse[playerid], 615.0964, -1.1192, 1000.6573);
				SetVehicleZAngleEx(caridhouse[playerid], 90.1937);
				LinkVehicleToInterior(caridhouse[playerid], 1);
				SetPlayerInteriorEx(playerid, 1);
				new virt = playerid + 100;
				SetVehicleVirtualWorld(caridhouse[playerid], virt);
				SetPlayerVirtualWorldEx(playerid, virt);
				return ShowTuneDialog(playerid);
	        }
	        new barrierid = IsObjectBarrier(playerid);
		    if(barrierid != -1) CheckBarrier(playerid,barrierid);
    	}
	}
    switch(oldkeys)
	{
	    case 8:
	    {
	        if(RouleTable[playerid] != -1 && ChooseBet[playerid] == 0)
	        {
				if(StartRoule[RouleTable[playerid]] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait for the current game to end");
				{
				    new message[128], limit[2];
				    switch(RouleTable[playerid])
			    	{
			        	case 0,4,9: limit[0] = 5000000, limit[1] = 10000000;
			        	case 1,5,8: limit[0] = 5000000, limit[1] = 10000000;
			        	case 2,6,11: limit[0] = 1000000, limit[1] = 5000000;
			        	case 3,7,10: limit[0] = 500000, limit[1] = 1000000;
			    	}
			    	format(message, sizeof(message), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount %d Money, maximum - %d Money", limit[0], limit[1]);
	            	ShowPlayerDialog(playerid, D_ROULE, DIALOG_STYLE_INPUT, "������", message, "Next", "Cancle");
				}
			}
	    }
	    case 16:
	    {
			if(GetPlayerNearestDiceTable(playerid) != -1 && DiceTable[playerid] == -1 && CroupierTable[playerid] == -1)
			{
			    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
				{
					if(!OnPlayerEnterDiceTable(playerid, GetPlayerNearestDiceTable(playerid))) return SendClientMessage(playerid, COLOR_SILVER, "There is no free space at the table");
				}
			}
			else if(RouleTable[playerid] != -1)
			{
			    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
				{
                    if(ChooseBet[playerid] == 1)
				    {
       	                ShowPlayerDialog(playerid, D_ROULE+1, DIALOG_STYLE_MSGBOX, "Confirm exit", "Your bet is at stake\nDo you really want to Go out?", "Yes", "No");
				    }
				    else
				    {
				        ShowPlayerDialog(playerid, D_ROULE+2, DIALOG_STYLE_MSGBOX, "Confirm exit", "Are you sure you want to end the game?", "Yes", "No");
				    }
				}
			}
   			else if(GetPlayerNearestRouleTable(playerid) != -1 && RouleTable[playerid] == -1 && CroupierTable[playerid] == -1)
			{
			    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
				{
				    if(!OnPlayerEnterRouleTable(playerid, GetPlayerNearestRouleTable(playerid))) return SendClientMessage(playerid, COLOR_SILVER, "There is no free space at the table");
				}
			}
			else if(GetPlayerNearestBlackJackTable(playerid) != -1 && BlackJackTable[playerid] == -1 && CroupierTable[playerid] == -1)
			{
			    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
				{
                	if(!OnPlayerEnterBlackJackTable(playerid, GetPlayerNearestBlackJackTable(playerid))) return SendClientMessage(playerid, COLOR_SILVER, "There is no free space at the table");
				}
			}
			else if(CroupierTable[playerid] != -1)
			{
			    if(GetPlayerVirtualWorld(playerid) == VW_DRAGONS || GetPlayerVirtualWorld(playerid) == VW_CALIGULAS)
				{
   			        if(CroupierGame[playerid] == 2)
		            {
                        OnPlayerExitRouleTable(playerid, CroupierTable[playerid]);
		            }
			    }
			}
		}
	}
	//----------------------------------- [ ������ ]----------------------------------------
	if(newkeys & KEY_HANDBRAKE  && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0,768.5205,-2.8860,1000.7214))
		{
			if(PlayerInfo[playerid][pBoxSkill] >= 5000) return	 SendClientMessage(playerid, COLOR_GRAD1, "Do you already know this style of art?");
			if(PlayerInfo[playerid][pBoxstyle] == 1)
			{
				if(PlayerInfo[playerid][pBoxSkill] >= 2500)
				{
					if(PlayerInfo[playerid][pBoxSkill] == 2500) SendClientMessage(playerid, COLOR_GREEN, "Your style technique skill has increased");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
					PlayerInfo[playerid][pBoxSkill] += 1;
					udar[playerid] +=2;
					format(stringer1, sizeof(stringer1), "+ %d / 5000 BOX", PlayerInfo[playerid][pBoxSkill]);
					GameTextForPlayer(playerid, stringer1, 20, 1);
					return true;
				}
				PlayerInfo[playerid][pBoxSkill] += 1;
				udar[playerid] +=2;
				format(stringer1, sizeof(stringer1), "~w~+ %d / 5000 BOX", PlayerInfo[playerid][pBoxSkill]);
				GameTextForPlayer(playerid, stringer1, 20, 1);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "The trainer did not give you Boxing classes");
				FIXES_ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0,761.1723,11.3122,1001.1639))
		{
			if(PlayerInfo[playerid][pKickboxSkill] >= 5000) return SendClientMessage(playerid, COLOR_GRAD1, "Do you already know this style of art?");
			if(PlayerInfo[playerid][pKickstyle] == 1)
			{
				if(PlayerInfo[playerid][pKickboxSkill] >= 2500)
				{
					if(PlayerInfo[playerid][pKickboxSkill] == 2500) SendClientMessage(playerid, COLOR_GREEN, "Your style technique skill has increased");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
					PlayerInfo[playerid][pKickboxSkill] += 1;
					udar[playerid] +=2;
					format(stringer1, sizeof(stringer1), "+ %d / 5000 KICKBOX", PlayerInfo[playerid][pKickboxSkill]);
					GameTextForPlayer(playerid, stringer1, 20, 1);
					return true;
				}
				PlayerInfo[playerid][pKickboxSkill] += 1;
				udar[playerid] +=2;
				format(stringer1, sizeof(stringer1), "~w~+ %d / 5000 KICKBOX", PlayerInfo[playerid][pKickboxSkill]);
				GameTextForPlayer(playerid, stringer1, 20, 1);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "The trainer did not conduct Kick Boxing classes with you");
				FIXES_ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0,769.8723,14.4393,1000.6978))
		{
			if(PlayerInfo[playerid][pKongfuSkill] >= 5000) return SendClientMessage(playerid, COLOR_GRAD1, "Do you already know this style of art?");
			if(PlayerInfo[playerid][pKstyle] == 1 )
			{
				if(PlayerInfo[playerid][pKongfuSkill] >= 2500)
				{
					if(PlayerInfo[playerid][pKongfuSkill] == 2500) SendClientMessage(playerid, COLOR_GREEN, "Your style technique skill has increased");
					PlayerInfo[playerid][pKongfuSkill] += 1;
					udar[playerid] +=2;
					format(stringer1, sizeof(stringer1), "+ %d / 5000 KONG FU", PlayerInfo[playerid][pKongfuSkill]);
					GameTextForPlayer(playerid, stringer1, 20, 1);
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					return true;
				}
				PlayerInfo[playerid][pKongfuSkill] += 1;
				udar[playerid] +=2;
				format(stringer1, sizeof(stringer1), "~w~+ %d / 5000 KONG FU", PlayerInfo[playerid][pKongfuSkill]);
				GameTextForPlayer(playerid, stringer1, 20, 1);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "The trainer did not conduct Kong Fu classes with you");
				FIXES_ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
	}
	else if (newkeys == KEY_SUBMISSION) callcmd::engggg(playerid, "");
	else if(newkeys == KEY_NO)
	{
    	if(PlayerInfo[playerid][pTargetAction] > 0) {
			new string[144], ms[40];
			switch(PlayerInfo[playerid][pTargetAction]) {
				case 1: ms = "say hello to you";
				case 2: ms = "view your passport";
				case 3: ms = "view your licenses";
				case 4: ms = "view your statement shooting range";
			}
			format(string, sizeof(string), "%s refused %s!", PlayerInfo[playerid][pNames], ms);
			SendClientMessage(PlayerInfo[playerid][pTargetPlayer], COLOR_RED, string);
			PlayerInfo[playerid][pTargetAction] = 0;
			PlayerInfo[PlayerInfo[playerid][pTargetPlayer]][pSelectPlayer] = -1;
			PlayerInfo[playerid][pTargetPlayer] = -1;
			SendClientMessage(playerid, COLOR_WHITE, "You refused the offer!");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0,344.5555,407.9677,1022.8019)) return ShowPlayerDialog(playerid,3321,DIALOG_STYLE_LIST, "Petya: Hello, can I help you with something?","Good afternoon, where can I get honey from you. card?\nWhy are you a fraer, tired of living?\nWhy? What is this for you, you bastard\nYou have 5 seconds to write me honey. card\nNo - no, nothing ", "Say", "Cancle");
    	if(IsPlayerInRangeOfPoint(playerid, 3.0,332.3312,1123.1025,1083.8903)) return ShowPlayerDialog(playerid,3326,DIALOG_STYLE_LIST, "Jessica: Kid, you have 10 seconds","Yo baby, do you know why I'm here\nYou need some crap?\nI just got it wrong..", "Say", "Cancle");
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
    {
		if(!IsAPlane(GetPlayerVehicleID(playerid)) && !IsABoat(GetPlayerVehicleID(playerid)) && IsRotators(GetVehicleModel(GetPlayerVehicleID(playerid))))
        {
        	new vid = GetPlayerVehicleID(playerid);
            if(newkeys & ( KEY_LOOK_LEFT ) && newkeys & ( KEY_LOOK_RIGHT ))
            {
            	if(Indicators_xqz[vid][2]) DestroyDynamicObject(Indicators_xqz[vid][2]), DestroyDynamicObject(Indicators_xqz[vid][3]), Indicators_xqz[vid][2] = 0;
                if(Indicators_xqz[vid][0]) DestroyDynamicObject(Indicators_xqz[vid][0]), DestroyDynamicObject(Indicators_xqz[vid][1]), Indicators_xqz[vid][0] = 0;
                else if(!Indicators_xqz[vid][2]) SetVehicleIndicator(vid,1,1);
                return 1;
			}
            if(newkeys & KEY_LOOK_RIGHT)
            {
 				if(Indicators_xqz[vid][0]) DestroyDynamicObject(Indicators_xqz[vid][0]), DestroyDynamicObject(Indicators_xqz[vid][1]),Indicators_xqz[vid][0]=0;
                else if(Indicators_xqz[vid][2]) DestroyDynamicObject(Indicators_xqz[vid][2]), DestroyDynamicObject(Indicators_xqz[vid][3]),Indicators_xqz[vid][2]=0;
                else SetVehicleIndicator(vid,0,1);
			}
            if(newkeys & KEY_LOOK_LEFT)
            {
            	if(Indicators_xqz[vid][2]) DestroyDynamicObject(Indicators_xqz[vid][2]), DestroyDynamicObject(Indicators_xqz[vid][3]),Indicators_xqz[vid][2]=0;
                else if(Indicators_xqz[vid][0]) DestroyDynamicObject(Indicators_xqz[vid][0]), DestroyDynamicObject(Indicators_xqz[vid][1]),Indicators_xqz[vid][0]=0;
                else SetVehicleIndicator(vid,1,0);
			}
		}
    }
	//----------------------------------------------[ ����� ]-------------------------
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "ProverkaDice") == 1)
		{
			if(GetPVarInt(playerid, "KostiName") < 999)
			{
				SetPVarInt(playerid, "KostiName",999);
				DeletePVar(playerid, "KostiMoney");
				DeletePVar(playerid, "ProverkaDice");
				SendClientMessage(playerid, -1,"- You refused the offer");
				SendClientMessage(GetPVarInt(playerid, "KostiName"),-1,"- The player refused the offer");
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(IsAGang(playerid))
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_RED,"We dropped the box!");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				return true;
			}
		}
	}
	if(newkeys == KEY_FIRE)
	{
		if(IsAGang(playerid))
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_RED,"We dropped the box!");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				return true;
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(newkeys == 1)
		{
			new carid = GetPlayerVehicleID(playerid);
			GetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,boot,objective);
			PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
			if(light == 0)
			{
				SetVehicleParamsEx(carid,engine,true,alarm,doorss,bonnet,boot,objective);
				//PlayerTextDrawColor(playerid, Speedometr[23][playerid], 8388863);
			}
			else
			{
				SetVehicleParamsEx(carid,engine,false,alarm,doorss,bonnet,boot,objective);
				//PlayerTextDrawColor(playerid, Speedometr[23][playerid], -16776961);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK  || (newkeys & KEY_SUBMISSION  && newkeys & KEY_SECONDARY_ATTACK ))
	{
		if(IsAGang(playerid))
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_RED,"We dropped the box!");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				return true;
			}
		}
	}
	if(TheifRobID[playerid] != INVALID_PLAYER_ID)
	{
 		if(ProxDetectorS(2.0, playerid, TheifRobID[playerid]))
   		{
			if(!TheifTime[playerid])
			{
				if(TheifKey[playerid] != 0)
				{
					if(PRESSED(TheifKey[playerid]))
					{
						TheifCount[playerid] ++;
						ShowPlayerActionText(playerid, "~g~Succes!");
 						ShowPlayerActionBand(playerid, TheifCount[playerid], 8);
						if(TheifCount[playerid] >= 8)
						{
						    TheifTime[playerid] = 0;
						    TheifKey[playerid] = 0;
						    TheifCount[playerid] = 0;
							TheifMoney[playerid] = PlayerInfo[TheifRobID[playerid]][pCash]/15;
							GiveMoney(playerid, TheifMoney[playerid]);
							PlayerInfo[TheifRobID[playerid]][pCash] -= TheifMoney[playerid];
							format(stringer1, sizeof(stringer1), "%s just robbed you of $%d! Kill the thief to take the money!", PlayerInfo[playerid][pNames], TheifMoney[playerid]);
							SendClientMessage(TheifRobID[playerid], COLOR_RED, stringer1);
							format(stringer1, sizeof(stringer1), "You robbed player %s of $%d. Now run so as not to lose money!", PlayerInfo[TheifRobID[playerid]][pNames], TheifMoney[playerid]);
							SendClientMessage(playerid, COLOR_RED, stringer1);
							TogglePlayerControllable(playerid, true);
							HidePlayerActionText(playerid);
 							HidePlayerActionBand(playerid);
							ClearAnimations(playerid);
						}
						else TheifTime[playerid] = 2;
					}
					else
					{
						TheifTime[playerid] = 2;
						ShowPlayerActionText(playerid, "~r~Fail!");
					}
				}
			}
		}
		else
		{
  			CheckRobPlayer(playerid);
	    	TogglePlayerControllable(playerid, true);
		}
	}
	else if(TheftCarID[playerid] != 0)
	{
		new carid = TheftCarID[playerid];
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(carid, X, Y, Z);
		if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
		{
			if(!TheftTime[playerid])
			{
				if(TheftKey[playerid] != 0 && PRESSED(TheftKey[playerid]))
				{
					TheftCount[playerid] ++;
					ShowPlayerActionText(playerid, "~g~Succes!");
	    			ShowPlayerActionBand(playerid, TheftCount[playerid], 10);
				    if(TheftCount[playerid] >= 10)
					{
						TheftTime[playerid] = 2;
						FIXES_ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1, 0, 1, 1, 1, 0, 1);
					}
					else
					{
						TheftTime[playerid] = 3;
						FIXES_ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1, 0, 1, 1, 1, 0, 1);

						TheftTime[playerid] = 3;
						FIXES_ApplyAnimation(playerid,"ROB_JEWEL","CAT_Safe_Rob",4.1, 0, 1, 1, 1, 0, 1);
					}
				}
				else
				{
					if(!RELEASED(TheftKey[playerid]))
				    {
						TheftKey[playerid] = 0;
						TheftTime[playerid] = 0;
						TheftCount[playerid] = 0;
						TheftCarID[playerid] = 0;
						TogglePlayerControllable(playerid, true);
						HidePlayerActionText(playerid);
	    				HidePlayerActionBand(playerid);
					}
				}
				new rand1 = random(10),rand2 = random(10);
				if(rand1 == rand2)
				{
					PlayerInfo[playerid][pOtmbI4ka] --;
					SendClientMessage(playerid,COLOR_GREY,"You broke the master key");
					TheftKey[playerid] = 0;
					TheftTime[playerid] = 0;
					TheftCount[playerid] = 0;
					TheftCarID[playerid] = 0;
					TogglePlayerControllable(playerid, true);
					HidePlayerActionText(playerid);
	    			HidePlayerActionBand(playerid);
				}
			}
		}
	}
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
    if(VEHICLE[vehicleid][vLock]) SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	else SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
    GetVehiclePos(vehicleid, VEHICLE[vehicleid - 1][ v_X ], VEHICLE [ vehicleid - 1 ][ v_Y ], VEHICLE [ vehicleid - 1 ][ v_Z ]);
    GetVehicleZAngle(vehicleid, VEHICLE[vehicleid - 1][ v_A ]);
	return true;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)//���� ����
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pMember]== 11)
	{
		if(GetPVarInt(playerid,"DutyAsh") == 0) return SendClientMessage(playerid,COLOR_GRAD1, "You need to start your working day at a driving school");
		if(!ProxDetectorS(10.0, playerid, clickedplayerid)) return SendClientMessage(playerid, COLOR_GREY, "The player must be near you.");
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Issuance of licenses:", "- Driver's license\n- Flying license\n- Fishing license\n- Water transport license\n- Weapons license\n- Start lesson\n- Complete lesson\n- License for business\n- Car number", "Ok", "Cancle");
		ChosenPlayer[playerid] = clickedplayerid;
	}
	return true;
}
forward OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart);
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart)
{
	if(playerid == INVALID_PLAYER_ID || issuerid == INVALID_PLAYER_ID) return true;
	if(IsAGreenZone(playerid) || IsAGreenZone(issuerid))
	{
		FIXES_ApplyAnimation(issuerid, "ped", "HANDSCOWER",4.1,0,1,1,0,0);
	    SetPVarInt(issuerid,"AntiDM",1);
	    return 0;
	}
	else if(StartPaintBall == 2 && TeamPain[playerid] != 0 && TeamPain[issuerid] != 0 && TeamPain[playerid] == TeamPain[issuerid]) return 0;
	else if(PlayerInfo[playerid][pAlcoInvenxua] && PlayerInfo[playerid][pGM]) return 0;
    else if(IsACop(issuerid) && Tazer[issuerid] == 0 && !PlayerCuffed[playerid] && weapon == 3)
	{
		if(IsACop(playerid) || IsAArm(playerid) || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 7 || IsPlayerInAnyVehicle(issuerid)) return 1;
		format(stringer1, sizeof(stringer1), "Police officer %s stunned %s with a baton", PlayerInfo[issuerid][pNames], PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	    TogglePlayerControllable(playerid, 0);
	    FIXES_ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
		PlayerCuffed[playerid] = 1; PlayerCuffedTime[playerid] = 15;  Tazer[issuerid] = 1; TazerTime[issuerid] = 15;
	}
	return true;
}
stock GiveMoney(playerid, amount)
{
	if(PlayerInfo[playerid][pCash] + amount < PlayerInfo[playerid][pCash]) PlayerInfo[playerid][pCash] = 2100000000;
	else PlayerInfo[playerid][pCash] += amount, GivePlayerMoney(playerid, amount);
	return true;
}
stock GiveBank(playerid, amount)
{
	if(PlayerInfo[playerid][pBank] + amount < PlayerInfo[playerid][pBank]) PlayerInfo[playerid][pBank] = 2100000000;
	else PlayerInfo[playerid][pBank] += amount;
	return true;
}
stock VodPrava(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
stock Megaphone(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 425,427,433,470,490,497,500,523,528,548,563,596,597,598,599,601: return true;
	}
	return false;
}
stock LoadVehicles()//������ �������
{
    // ������:
	for(new i = 0; i < sizeof(ArendInfo); i ++)
	{
	    ArendInfo[i][aID] = AddStaticVehicleExEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000, 0);
	}
	// ������
	medicsls[0] = AddStaticVehicleExEx(416,1177.7286,-1308.6345,14.0039,268.8546,1,3,300,0);
	AddStaticVehicleExEx(416,1177.5555,-1338.8463,14.0562,269.5035,1,3,300,0);
//	AddStaticVehicleExEx(416,1182.8982,-1331.6943,13.7297,357.6944,1,3,300,0);
	AddStaticVehicleExEx(487,1160.3800049,-1353.6130371,26.8600006,270.0000000,1,3,300,0); //Maverick
//	medicsls[1] = AddStaticVehicleExEx(416,1182.8666,-1315.7095,13.7217,180.2888,1,3,300,0);
	// ��������
//	carcaligula[0] = AddStaticVehicleExEx(409,2161.4004000,1679.9004000,10.7000000,357.4950000,1,1,300,0); //Stretch
//	AddStaticVehicleExEx(565,2159.2998000,1670.7002000,10.5000000,338.0000000,1,0,300,0); //Flash
//	AddStaticVehicleExEx(565,2160.4004000,1689.0996000,10.5000000,15.9960000,1,0,300,0); //Flash
//	AddStaticVehicleExEx(400,2156.2002000,1664.7002000,11.0000000,325.9970000,1,0,300,0); //Landstalker
//	carcaligula[1] = AddStaticVehicleExEx(400,2156.9004000,1695.9004000,11.0000000,31.9980000,1,0,300,0); //Landstalker
	// 4 �������
/*	cardrakon[0] = AddStaticVehicleExEx(409,2007.0000000,973.7002000,10.6000000,313.9950000,1,1,300,0); //Stretch
	AddStaticVehicleExEx(565,2002.2002000,965.7998000,10.5000000,349.9970000,1,0,300,0); //Flash
	AddStaticVehicleExEx(565,2014.9004000,978.0996100,10.5000000,277.9930000,1,0,300,0); //Flash
	AddStaticVehicleExEx(400,2022.5000000,978.7002000,11.0000000,270.0000000,1,0,300,0); //Landstalker
	cardrakon[1] = AddStaticVehicleExEx(400,2001.5000000,959.5000000,11.0000000,0.0000000,1,0,300,0); //Landstalker*/
	// ����
	sfpdcar[0] = AddStaticVehicleExEx(597, -1572.8986, 742.6428, -5.5355, 90.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1572.8986, 738.6428, -5.5355, 90.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1572.8986, 734.6428, -5.5355, 90.0000,1,79,300,1); // sfpdcar
 	AddStaticVehicleExEx(597, -1572.8986, 730.6428, -5.5355, 90.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1572.8986, 726.5028, -5.5355, 90.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1572.8986, 722.5708, -5.5355, 90.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1572.8986, 718.2868, -5.5355, 90.0000,1,79,300,1); // sfpdcar
 	AddStaticVehicleExEx(597, -1579.9634, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1584.0024, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1588.0934, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1592.1324, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1596.0125, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(597, -1600.3164, 749.6013, -5.5355, 180.0000,1,79,300,1); // sfpdcar
	AddStaticVehicleExEx(523,-1632.8319, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(523,-1628.9219, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(523,-1624.6208, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(523,-1620.7108, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(523,-1616.8008, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(523,-1612.4998, 693.9442, -5.7421, 180.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(528,-1639.7885, 670.1018, -5.1330, -90.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(528,-1639.7885, 674.1968, -5.1330, -90.0000,0,1,300,1); // ????
	AddStaticVehicleExEx(528,-1639.5917, 666.0528, -5.4797, -90.0000,53,53,300,1); // ????
	AddStaticVehicleExEx(497, -1680.9290, 704.8461, 30.7351, 127.0000,79,1,300,1); // ????
	AddStaticVehicleExEx(601, -1622.965, 653.932, -5.450, 90.0000,1,79,300,1); // sfpdcar
	sfpdcar[1] = AddStaticVehicleExEx(427,-1638.7850,653.7558,-5.1094,271.5658,1,79,300,1); // SFPD Enforcer 0
	// ��
	ruscar[0] = AddStaticVehicleExEx(580,964.5038,1707.7654,8.4717,270.1920,0,0,600,0); //
	AddStaticVehicleExEx(580,956.1552,1707.7443,8.4642,270.0861,0,0,600,0); //
	AddStaticVehicleExEx(409,950.5296,1716.1368,8.4151,180.2047,0,0,600,0); //
	AddStaticVehicleExEx(487,955.2507,1754.7340,8.8090,227.3316,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6653,1742.5369,8.6459,89.9983,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6631,1738.1848,8.6445,89.9981,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6636,1733.8856,8.6452,89.9983,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6652,1729.5123,8.6482,89.9982,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6371,1725.3397,8.6656,90.2309,0,0,600,0); //
	AddStaticVehicleExEx(579,983.6531,1721.2339,8.6647,89.9953,0,0,600,0); //
	ruscar[1] = AddStaticVehicleExEx(579,983.6689,1746.4585,8.6421,89.9979,0,0,600,0); //
	// ���
	lcncar[0] =	AddStaticVehicleExEx(445,1477.7389,718.0078,10.6538,104.1924,0,0,600,0); //
	AddStaticVehicleExEx(409,1488.6670,719.5148,10.6790,88.6081,0,0,600,0); //
	AddStaticVehicleExEx(445,1499.1523,718.1288,10.6402,76.7363,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,743.1207,10.6295,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,746.2971,10.6421,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,749.4462,10.6418,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,752.6494,10.6421,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,755.9149,10.6496,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,759.0656,10.6428,270.0000,0,0,600,0); //
	AddStaticVehicleExEx(445,1413.6324,762.2507,10.6625,270.0000,0,0,600,0); //
	lcncar[1] = AddStaticVehicleExEx(487,1430.9792,788.0112,10.9864,179.1455,0,0,600,0); //
	// �����
	taxicar[0] = AddStaticVehicleExEx(420,-1976.30004883,173.69999695,27.50000000,89.99450684,6,6,300,0);
	AddStaticVehicleExEx(420,-1976.69995117,179.10000610,27.50000000,89.99450684,6,6,300,0);
	AddStaticVehicleExEx(420,1063.50000000,-1763.90002441,13.19999981,270.00000000,6,6,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.59997559,-1775.69995117,13.19999981,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.59997559,-1769.69995117,13.19999981,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.59997559,-1758.00000000,13.30000019,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.59997559,-1752.00000000,13.30000019,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.59997559,-1746.09997559,13.30000019,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(420,1063.50000000,-1740.19995117,13.30000019,270.00000000,6,1,300,0); //Taxi
	AddStaticVehicleExEx(438,1099.09997559,-1775.69995117,13.50000000,90.00000000,6,1,300,0); //Cabbie
	AddStaticVehicleExEx(438,1099.00000000,-1769.69995117,13.50000000,90.00000000,6,1,300,0); //Cabbie
	AddStaticVehicleExEx(438,1098.90002441,-1763.80004883,13.60000038,90.00000000,6,1,300,0); //Cabbie
	AddStaticVehicleExEx(438,1098.80004883,-1757.80004883,13.60000038,90.00000000,6,1,300,0); //Cabbie
	AddStaticVehicleExEx(438,1098.69995117,-1752.00000000,13.60000038,90.00000000,6,1,300,0); //Cabbie
	AddStaticVehicleExEx(420,-1993.90002441,209.10000610,27.50000000,137.99987793,6,1,300,0);
	AddStaticVehicleExEx(420,-1989.59997559,207.80000305,27.50000000,137.99926758,6,6,300,0);
	AddStaticVehicleExEx(420,-1985.30004883,206.19999695,27.50000000,137.99926758,6,6,300,0);
	AddStaticVehicleExEx(420,-1976.80004883,202.10000610,27.29999924,89.99914551,6,6,300,0);
	AddStaticVehicleExEx(420,-1977.09997559,197.80000305,27.50000000,89.99450684,6,6,300,0);
	AddStaticVehicleExEx(420,-1976.90002441,193.50000000,27.50000000,89.99450684,6,6,300,0);
	AddStaticVehicleExEx(420,-1976.80004883,189.00000000,27.50000000,89.99450684,6,6,300,0);
	taxicar[1] = AddStaticVehicleExEx(420,-1976.90002441,184.19999695,27.50000000,89.99450684,6,6,300,0);
	// �������� ��������
	hotdogcar[0] = AddStaticVehicleExEx(588,1131.5999800,-1696.9000200,13.6000000,0.0000000,34,34,300,0);
	AddStaticVehicleExEx(588,1136.6999500,-1696.9000200,13.8000000,0.0000000,34,34,300,0);
    AddStaticVehicleExEx(588,1133.5000000,-1673.3000500,13.7000000,270.0000000,34,34,300,0);
   	hotdogcar[1] = AddStaticVehicleExEx(588,1133.5000000,-1681.0000000,13.7000000,270.0000000,34,34,300,0);
	// Hitman
	hitcar[0] = AddStaticVehicleExEx(560, -2493.19, 2413.15, 16.2538, 30.1083, 0, 0,300,0);
	AddStaticVehicleExEx(560, -2490.25, 2408.05, 15.9821, 29.9891, 0, 0,300,0);
	AddStaticVehicleExEx(579, -2487.28, 2402.94, 15.9063, 29.0027, 0, 0,300,0);
	AddStaticVehicleExEx(579, -2484.14, 2397.4, 15.3029, 29.0406, 0, 0,300,0);
	AddStaticVehicleExEx(421, -2481.03, 2391.9, 14.4171, 29.5878, 0, 0,300,0);
	AddStaticVehicleExEx(421, -2477.72, 2386.24, 13.155, 30.6007, 0, 0,300,0);
	AddStaticVehicleExEx(596, -2486.6, 2378.83, 12.599, 30.7872, 1, 79,300,0);
	AddStaticVehicleExEx(597, -2489.62, 2383.91, 13.8168, 30.849, 1, 79,300,0);
	AddStaticVehicleExEx(598, -2493.32, 2390.22, 14.8791, 30.0713, 0, 1,300,0);
	AddStaticVehicleExEx(490, -2496.94, 2396.63, 16.0028, 29.4222, 0, 0,300,0);
	AddStaticVehicleExEx(522, -2468.59, 2375.82, 9.9817, 122.357, 0, 0,300,0);
	AddStaticVehicleExEx(522, -2467.94, 2374.6, 9.6672, 120.933, 0, 0,300,0);
	AddStaticVehicleExEx(522, -2467.01, 2373.25, 9.2911, 118.719, 0, 0,300,0);
	AddStaticVehicleExEx(522, -2466.31, 2372.02, 8.9607, 119.788, 0, 0,300,0);
	AddStaticVehicleExEx(522, -2465.63, 2370.72, 8.6498, 116.016, 0, 0,300,0);
	AddStaticVehicleExEx(473, -2412.8, 2319.2, 0, 270.314, 0, 0,300,0);
	AddStaticVehicleExEx(473, -2412.8, 2314.8, 0, 267.749, 0, 0,300,0);
	AddStaticVehicleExEx(473, -2412.8, 2310.3, 0, 270.31, 0, 0,300,0);
	AddStaticVehicleExEx(482, -2488.97, 2422.6, 16.5915, 107.732, 0, 0,300,0);
	AddStaticVehicleExEx(482, -2483.06, 2424.51, 16.3172, 108.307, 0, 0,300,0);
	AddStaticVehicleExEx(497, -2456.54, 2417.94, 15.8587, 9.9166, 0, 0,300,0);
	hitcar[1] = AddStaticVehicleExEx(497, -2459.96, 2398.06, 15.4472, 22.2403, 0, 0,300,0);
	// Administration of the President
	ministrcar[0] = AddStaticVehicleExEx(421,952.9020,-933.3951,42.4942,181.1911,0,0,300,0); //
	AddStaticVehicleExEx(421,972.9459,-939.5786,41.1289,83.6187,0,0,300,0); //
	AddStaticVehicleExEx(421,973.8324,-932.8835,41.9925,89.4191,0,0,300,0); //
	AddStaticVehicleExEx(409,959.6945,-898.7432,45.4927,183.0751,0,0,300,0); //
	ministrcar[1] = AddStaticVehicleExEx(487,969.1160,-919.3798,45.4927,181.3037,0,0,300,0); //
	// ������
	streetcar[0] = AddStaticVehicleExEx(541,1325.45007324,1278.74499512,10.52031231,0.00000000,6,0,100,0); //Bullet
	AddStaticVehicleExEx(541,1328.84472656,1278.77734375,10.52031231,0.00000000,6,0,100,0); //Bullet
	AddStaticVehicleExEx(541,1322.25524902,1278.72937012,10.52031231,0.00000000,6,0,100,0); //Bullet
	AddStaticVehicleExEx(494,1319.06445312,1279.58300781,10.79031277,0.00000000,3,0,100,0); //Hotring
	AddStaticVehicleExEx(494,1315.81445312,1279.54980469,10.79031277,0.00000000,3,0,100,0); //Hotring
	AddStaticVehicleExEx(411,1312.61535645,1278.75488281,10.62031269,0.00000000,7,7,100,0); //Infernus
	AddStaticVehicleExEx(411,1309.43933105,1278.77087402,10.62031269,0.00000000,7,7,100,0); //Infernus
	AddStaticVehicleExEx(411,1306.27087402,1278.78625488,10.62031269,0.00000000,7,7,100,0); //Infernus
	AddStaticVehicleExEx(415,1282.23937988,1287.77734375,10.66983414,270.00000000,51,51,100,0); //Cheetah
	AddStaticVehicleExEx(415,1282.21057129,1290.88830566,10.66983414,270.00000000,51,51,100,0); //Cheetah
	AddStaticVehicleExEx(415,1282.20983887,1294.15795898,10.66983414,270.00000000,51,51,100,0); //Cheetah
	AddStaticVehicleExEx(477,1282.49475098,1297.38830566,10.67031288,270.00000000,65,65,100,0); //ZR-350
	AddStaticVehicleExEx(477,1282.53881836,1300.63891602,10.67031288,270.00000000,65,65,100,0); //ZR-350
	AddStaticVehicleExEx(477,1282.58056641,1303.88842773,10.67031288,270.00000000,65,65,100,0); //ZR-350
	AddStaticVehicleExEx(562,1281.35266113,1316.24597168,10.57386208,270.00000000,86,86,100,0); //Elegy
	AddStaticVehicleExEx(562,1281.32897949,1319.53356934,10.57386208,270.00000000,86,86,100,0); //Elegy
	AddStaticVehicleExEx(562,1281.30603027,1322.46984863,10.57386208,270.00000000,86,86,100,0); //Elegy
	AddStaticVehicleExEx(506,1281.19140625,1334.00134277,10.61242580,270.00000000,3,3,100,0); //Super GT
	AddStaticVehicleExEx(506,1281.46875000,1327.28417969,10.61242580,270.00000000,3,3,100,0); //Super GT
	AddStaticVehicleExEx(506,1281.31103516,1330.74353027,10.61242580,270.00000000,3,3,100,0); //Super GT
	streetcar[1] = AddStaticVehicleExEx(494,1290.88220215,1273.95214844,10.79031277,270.00000000,0,6,100,0); //Hotring
	// ����
	lvpdcar[0] = AddStaticVehicleExEx(598,2268.9678,2443.6958,10.5668,359.5409,0,1,300,1); //
	AddStaticVehicleExEx(598,2273.5706,2443.7290,10.5665,0.6987,0,1,300,1); //
	AddStaticVehicleExEx(598,2277.9482,2443.7490,10.5654,359.8027,0,1,300,1); //
	AddStaticVehicleExEx(598,2282.1309,2443.7957,10.5660,359.7104,0,1,300,1); //
	AddStaticVehicleExEx(598,2282.5002,2476.4595,10.5663,181.3129,0,1,300,1); //
	AddStaticVehicleExEx(598,2277.6665,2476.5178,10.5670,180.8092,0,1,300,1); //
	AddStaticVehicleExEx(598,2273.6030,2476.5684,10.5669,180.3357,0,1,300,1); //
 	AddStaticVehicleExEx(598,2268.8853,2476.6331,10.5663,179.7468,0,1,300,1); //
	AddStaticVehicleExEx(598,2269.2004,2459.8330,10.5683,0.1298,0,1,300,1); //
	AddStaticVehicleExEx(598,2273.3623,2459.5422,10.5661,178.7547,0,1,300,1); //
	AddStaticVehicleExEx(598,2278.0513,2459.7075,10.5667,359.0662,0,1,300,1); //
	AddStaticVehicleExEx(598,2281.9307,2459.4504,10.5672,180.7914,0,1,300,1); //
	AddStaticVehicleExEx(599,2290.6970,2443.7861,11.0110,1.2899,0,1,300,1); //
	AddStaticVehicleExEx(599,2260.5859,2476.3032,11.0123,180.0692,0,1,300,1); //
	AddStaticVehicleExEx(497,2348.60009766,2466.10009766,38.90000153,0.00000000,-1,1,300,1); //Police Maverick
	AddStaticVehicleExEx(497,2336.89990234,2466.10009766,38.90000153,0.00000000,-1,1,300,1);
	AddStaticVehicleExEx(598,2290.30004883,2421.39990234,10.69999981,268.00000000,-1,1,300,1);
	AddStaticVehicleExEx(598,2297.50000000,2421.30004883,10.69999981,267.99499512,-1,1,300,1);
	AddStaticVehicleExEx(598,2274.89990234,2421.50000000,10.69999981,268.00000000,-1,1,300,1);
	AddStaticVehicleExEx(598,2282.30004883,2421.50000000,10.69999981,267.99499512,-1,1,300,1);
	AddStaticVehicleExEx(598,2305.69995117,2421.00000000,10.69999981,267.99499512,-1,1,300,1);
	lvpdcar[1] = AddStaticVehicleExEx(427,2290.9106,2477.1133,10.9520,180.0082,1,1,60000,1); // Enforcer LVPD
	// ������� ��
	lsnewscar[0] = AddStaticVehicleExEx(582,1668.2490,-1699.8988,15.6692,113.6156,1,2,300,0); // LS NEWS VAN 0
	AddStaticVehicleExEx(582,1668.3706,-1705.5723,15.6659,113.6156,1,2,300,0); // LS NEWS VAN 1
	AddStaticVehicleExEx(582,1668.7556,-1711.6621,15.6669,113.6156,1,2,300,0); // LS NEWS VAN 2
	AddStaticVehicleExEx(582,1668.5909,-1718.2150,15.6650,113.6156,1,2,300,0); // LS NEWS VAN 3
	AddStaticVehicleExEx(582,1667.6899,-1694.3616,15.6655,113.6156,1,2,300,0); // LS NEWS VAN 4
	lsnewscar[1] = AddStaticVehicleExEx(488,1654.4967,-1636.5563,83.9791,0.5793,1,2,300,0); //  // �� ���� ����
	// City Hall
	govcar[0] =	AddStaticVehicleExEx(421,1407.2889404,-1774.0419922,13.5469999,50.0000,1,1,300,0); // Goverment Washingtone
	AddStaticVehicleExEx(421,1407.2889404,-1779.0040283,13.5469999,50.0000,1,1,300,0); // Goverment Washingtone
	AddStaticVehicleExEx(421,1407.2889404,-1784.0839844,13.5469999,50.0000,1,1,300,0); // Goverment Washingtone
	AddStaticVehicleExEx(409,1406.4749756,-1808.2929688,13.4720001,90.0000,1,1,300,0); // Goverment Limo
	govcar[1] =	AddStaticVehicleExEx(487,1422.098,-1791.768,33.695,0.0000,1,1,300,0); // Maverick
	// ���������
	mehanik[0] = AddStaticVehicleExEx(525,1649.8070,-1107.4197,23.7879,270.4307,3,3,300,0);
	AddStaticVehicleExEx(525,1649.5594,-1097.9303,23.7825,271.0184,3,3,300,0); // �������1
	AddStaticVehicleExEx(525,1649.5481,-1088.9520,23.7802,271.2585,3,3,300,0); // �������2
	AddStaticVehicleExEx(525,1649.4701,-1080.2677,23.7859,269.8732,3,3,300,0); // �������3
	AddStaticVehicleExEx(525,1630.1318,-1107.5986,23.7810,90.0636,3,3,300,0); // �������4
	AddStaticVehicleExEx(525,1629.4932,-1098.3491,23.7889,91.1477,3,3,300,0); // �������5
	AddStaticVehicleExEx(525,1629.3313,-1089.4033,23.7905,89.8329,3,3,300,0); // �������6
	AddStaticVehicleExEx(525,-70.9419,-1156.6366,1.6491,106.9529,0,3,300,0); // �������1
	AddStaticVehicleExEx(525,-75.4985,-1153.8265,1.5561,106.9529,0,3,300,0); // �������2
	AddStaticVehicleExEx(525,-79.4743,-1152.0967,2.1477,106.9529,0,3,300,0); // �������3
	AddStaticVehicleExEx(525,-81.0021,-1197.2158,2.0621,13.2738,0,3,300,0); // �������4
	AddStaticVehicleExEx(525,-85.3324,-1197.1295,2.1304,13.2739,0,3,300,0); // �������5
	mehanik[1] = AddStaticVehicleExEx(525,-89.2924,-1196.4034,2.1066,13.2739,0,3,300,0); // �������6
	// ���������:
	liccar[0] = AddStaticVehicleExEx(426,-2093.7451,-84.7866,34.9072,180.1719,79,79,300,0);
	AddStaticVehicleExEx(426,-2085.1897,-84.5558,34.9636,180.2919,79,79,300,0);
	AddStaticVehicleExEx(426,-2081.2437,-84.3829,34.9646,180.1252,79,79,300,0);
	AddStaticVehicleExEx(426,-2076.9175,-84.3522,34.9647,180.1982,79,79,300,0);
	AddStaticVehicleExEx(426,-2089.3032,-84.5302,34.9083,181.2357,79,79,300,0);// ������
	AddStaticVehicleExEx(426,-2077.3838,-98.5273,34.9071,359.8672,79,79,300,0); // liccar
	AddStaticVehicleExEx(426,-2081.4502,-98.5179,35.1366,359.8672,79,79,300,0); // licca1
	AddStaticVehicleExEx(426,-2084.8586,-98.5100,35.1366,359.8672,79,79,300,0); // licca2
	AddStaticVehicleExEx(426,-2088.7642,-98.5010,35.8296,359.8672,79,79,300,0); // licca3
	AddStaticVehicleExEx(426,-2093.6814,-98.4791,34.8978,359.8516,79,79,300,0); // licca4
	liccar[1] = AddStaticVehicleExEx(487,-2028.3884,-111.6844,39.4441,356.9951,79,79, 300,0); // lic mav
	// ������
	yakcar[0] = AddStaticVehicleExEx(550,1472.8889,2762.8508,10.5952,181.8833,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(409,1472.6630,2772.8391,10.5980,180.6813,0,0,600,0); //�������
	AddStaticVehicleExEx(550,1472.5605,2782.8152,10.5942,181.1568,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(487,1469.1836,2815.1477,10.9654,271.1967,0,0,600,0); //��������
	AddStaticVehicleExEx(550,1460.7052,2840.3477,10.6757,180.0000,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(550,1465.3212,2840.3479,10.6757,179.9999,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(550,1470.1836,2840.3354,10.6715,179.9998,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(550,1475.0186,2840.3379,10.6757,179.9998,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(550,1479.8295,2840.3311,10.6740,179.9158,0,0,600,0); //Sunrise
	AddStaticVehicleExEx(550,1484.5872,2840.3420,10.6802,179.9998,0,0,600,0); //Sunrise
	yakcar[1] = AddStaticVehicleExEx(550,1489.3992,2840.3389,10.6810,179.9998,0,0,600,0); //Sunrise
	// ����
	sapdpatrul[0] = AddStaticVehicleExEx(596,1570.2423, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1574.3743, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1578.5063, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1583.4403, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1587.3743, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1591.4403, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(596,1595.3743, -1710.9011, 5.5755, 0.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1704.2853, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1700.2853, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1696.1414, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1691.9293, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1688.0693, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(525,1601.9561, -1683.9293, 5.5755, 90.0000,1,79, 300,1); // lspd copcar
	AddStaticVehicleExEx(427,1545.3458, -1659.0269, 5.8542, 90.0000,1,79, 300,1); // lspd enfoncer
	AddStaticVehicleExEx(427,1545.3458, -1655.0269, 5.8542, 90.0000,1,79, 300,1); // lspd enfoncer
	AddStaticVehicleExEx(427,1545.3458, -1651.2369, 5.8542, 90.0000,1,79, 300,1); // lspd enfoncer
	AddStaticVehicleExEx(596,1572.02441406,-1605.98730469,13.20281219,159.99938965,1,79,300,1); //Police Car (LSPD)
	AddStaticVehicleExEx(596,1587.17089844,-1606.42187500,13.20281219,159.99938965,1,79,300,1); //Police Car (LSPD)
	AddStaticVehicleExEx(596,1575.66821289,-1606.22583008,13.20281219,159.99938965,1,79,300,1); //Police Car (LSPD)
	AddStaticVehicleExEx(596,1579.50097656,-1606.26953125,13.20281219,159.99938965,1,79,300,1); //Police Car (LSPD)
	AddStaticVehicleExEx(596,1583.29980469,-1606.45605469,13.20281219,159.99938965,1,79,300,1); //Police Car (LSPD)
	AddStaticVehicleExEx(596,1536.01879883,-1676.16955566,13.20281219,0.00000000,1,79,300,1); //Police Car (LSPD)
	sapdpatrul[1] = AddStaticVehicleExEx(596,1536.00012207,-1668.41052246,13.20281219,0.00000000,1,79,300,1); //Police Car (LSPD)
	// ���� 2
//	sapdcar[0] = AddStaticVehicleExEx(601,1534.7269, -1644.3800, 4.8840, 180.0000,-1,-1, 300,1); // lspd tank
//	AddStaticVehicleExEx(601,1526.4313, -1644.7328, 6.0031, 180.0000,-1,-1, 300,1); // lspd ????
//	AddStaticVehicleExEx(601,1530.5684, -1644.7328, 6.0031, 180.0000,-1,-1, 300,1); // lspd ????
	AddStaticVehicleExEx(523,1547.27758789,-1674.60498047,5.45539999,121.53100586,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.42431641,-1676.89062500,5.45539999,118.10577393,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.27758789,-1672.40002441,5.45539999,121.53076172,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.27758789,-1670.20007324,5.45539999,121.53076172,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.27758789,-1668.00000000,5.45539999,121.53076172,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.42431641,-1679.00000000,5.45539999,118.10302734,1,79, 300,1); //HPV1000
	AddStaticVehicleExEx(523,1547.42431641,-1681.09997559,5.45539999,118.10302734,1,79, 300,1); //HPV1000
//	AddStaticVehicleExEx(497,1555.352,-1610.253,13.561,90.000,79,1,600,1); // lspd mav
//	sapdcar[1] = AddStaticVehicleExEx(427,1538.1487,-1644.9996,6.0336,180.0003,1,79, 600,1); // LSPD Enforcer 0
	// FBI
	fbicar[0] = AddStaticVehicleExEx(522, 1256.8807, -2008.8435, 59.0683, 184.8542, 13, 0,300,1);
	AddStaticVehicleExEx(522, 1258.6415, -2008.7692, 59.0078, 179.5507, 13, 0,300,1);
	AddStaticVehicleExEx(522, 1260.3204, -2008.6925, 58.9788, 184.2616, 13, 0,300,1);
	AddStaticVehicleExEx(522, 1262.1420, -2008.6835, 58.9087, 186.4234, 13, 0,300,1);
	AddStaticVehicleExEx(522, 1263.8981, -2008.6013, 58.8453, 182.2808, 13, 0,300,1);
	AddStaticVehicleExEx(522, 1265.6758, -2008.5894, 58.8220, 182.3909, 13, 0,300,1);
	AddStaticVehicleExEx(490, 1277.5713, -2035.4459, 59.1234, 87.5363, 0, 0,300,1);
	AddStaticVehicleExEx(490, 1277.5427, -2031.3483, 59.1064, 86.9157, 0, 0,300,1);
	AddStaticVehicleExEx(560, 1277.4988, -2045.3340, 58.5645, 89.8841, 0, 0,300,1);
	AddStaticVehicleExEx(560, 1277.5308, -2042.1553, 58.5501, 88.4443, 0, 0,300,1);
	AddStaticVehicleExEx(560, 1277.6093, -2039.2559, 58.5392, 88.4427, 0, 0,300,1);
	AddStaticVehicleExEx(596, 1277.7581, -2027.4237, 58.6450, 87.4033, 13, 0,300,1);
	AddStaticVehicleExEx(596, 1277.8873, -2024.4502, 58.6729, 87.5779, 13, 0,300,1);
	AddStaticVehicleExEx(597, 1277.5305, -2020.7776, 58.8743, 87.1715, 13, 0,300,1);
	AddStaticVehicleExEx(597, 1277.6027, -2017.0331, 58.8381, 86.1040, 13, 0,300,1);
	AddStaticVehicleExEx(599, 1277.3958, -2012.7484, 59.1181, 89.0156, 0, 13,300,1);
	AddStaticVehicleExEx(599, 1277.1777, -2008.7932, 59.1183, 88.1608, 0, 13,300,1);
	AddStaticVehicleExEx(427, 1245.8091, -2043.7754, 59.9639 ,268.1372, 0, 13,300,1);
	AddStaticVehicleExEx(427, 1245.7152, -2031.1934, 59.9668, 269.8283, 0, 13,300,1);
	AddStaticVehicleExEx(601, 1245.1686, -2026.3286, 59.6094, 269.4115, 0, 0,300,1);
	AddStaticVehicleExEx(601, 1245.3947, -2021.2815, 59.6399, 269.7902, 0, 0,300,1);
	AddStaticVehicleExEx(428, 1245.2571, -2017.4517, 59.9722, 267.2237, 13, 0,300,1);
	AddStaticVehicleExEx(428, 1245.4238, -2013.6359, 59.9571, 267.6549, 13, 0,300,1);
	AddStaticVehicleExEx(541, 1245.8470, -2009.5842, 59.5453, 267.0079, 13, 0,300,1);
	AddStaticVehicleExEx(563, 1117.5026, -2053.3879, 75.2294, 0.8493, 13, 0,300,1);
	fbicar[1] = AddStaticVehicleExEx(497, 1116.7003, -2021.1200, 74.6172, 354.2918, 13, 0,300,1);
	// ������������
	comptruck[0] = AddStaticVehicleExEx(552, -982.31, -623.079, 31.7046, 90.2368, 0, 0,300,0); // �����������
	AddStaticVehicleExEx(552, -982.375, -628.224, 31.7042, 89.8182, 0, 0,300,0); // �����������
	AddStaticVehicleExEx(552, -982.351, -633.313, 31.7044, 89.7796, 0, 0,300,0); // �����������
	AddStaticVehicleExEx(552, -982.316, -638.441, 31.7016, 89.7175, 0, 0,300,0); // �����������
	AddStaticVehicleExEx(552, -982.386, -648.599, 31.7027, 89.6625, 0, 0,300,0); // �����������
	AddStaticVehicleExEx(552, -982.357, -653.68, 31.7054, 90.3432, 0, 0,300,0); // �����������
	comptruck[1] = AddStaticVehicleExEx(552, -982.312, -643.452, 31.7077, 89.4123, 0, 0,300,0); // �����������
	// ���������
	benzovoz[0] = AddStaticVehicleExEx(440, 0.312869, -377.019, 5.5619, 0.459719, 0, 0,300,0); // ����
	AddStaticVehicleExEx(440, -3.04772, -376.957, 5.54522, 359.089, 0, 0,300,0); // ����1
	AddStaticVehicleExEx(440, -6.37233, -376.922, 5.54325, 359.893, 0, 0,300,0); // ����2
	AddStaticVehicleExEx(440, -9.80064, -376.879, 5.54584, 359.914, 0, 0,300,0); // ����3
	AddStaticVehicleExEx(440, -13.003, -376.903, 5.55514, 0.522669, 0, 0,300,0); // ����4
	AddStaticVehicleExEx(440, -16.4086, -376.81, 5.55267, 0.131227, 0, 0,300,0); // ����5
	AddStaticVehicleExEx(440, -19.8046, -376.798, 5.54816, 359.328, 0, 0,300,0); // ����6
	benzovoz[1] = AddStaticVehicleExEx(440, -23.0289, -376.717, 5.54501, 0.265424, 0, 0,300,0); // ����9
	// ����
	swatcar[0] = AddStaticVehicleExEx(497,749.01049805,-1371.80798340,25.95721054,0.00000000,-0,-0,300,1); //Police Maverick
	AddStaticVehicleExEx(497,734.79241943,-1371.77954102,25.95721054,0.00000000,-0,-0,300,1); //Police Maverick
	AddStaticVehicleExEx(528,735.72802734,-1343.90905762,13.70476341,181.50000000,-1,-1,300,1); //FBI Truck
	AddStaticVehicleExEx(528,743.72546387,-1343.86645508,13.70481873,181.25000000,-1,-1,300,1); //FBI Truck
	AddStaticVehicleExEx(601,782.92102051,-1365.42724609,13.45438480,90.00000000,-1,-1,300,1); //S.W.A.T. Van
	AddStaticVehicleExEx(523,768.04852295,-1331.91015625,13.20647049,178.00000000,-1,-1,300,1); //HPV1000
	AddStaticVehicleExEx(523,764.93457031,-1332.05273438,13.20615578,177.99499512,-1,-1,300,1); //HPV1000
	AddStaticVehicleExEx(523,766.48339844,-1331.96875000,13.20634079,177.99499512,-1,-1,300,1); //HPV1000
	AddStaticVehicleExEx(523,769.85382080,-1331.96789551,13.20634460,177.99499512,-1,-1,300,1); //HPV1000
	AddStaticVehicleExEx(601,782.88269043,-1370.64843750,13.46912956,90.00000000,-1,-1,300,1); //S.W.A.T. Van
	AddStaticVehicleExEx(601,782.82324219,-1375.83825684,13.52569866,90.00000000,-1,-1,300,1); //S.W.A.T. Van
	AddStaticVehicleExEx(490,751.11737061,-1344.67834473,13.83373165,180.00000000,-0,-0,300,1); //FBI Rancher
	AddStaticVehicleExEx(490,759.18963623,-1344.44042969,13.83373165,180.00000000,-0,-0,300,1); //FBI Rancher
	swatcar[1] = AddStaticVehicleExEx(427,781.9567,-1358.9736,13.6695,90.00000000,4,4,60000,1); //Enforcer
	// ���
	armycar[0] = AddStaticVehicleExEx(470, -1351.3, 478.409, 7.4058, 179.587, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1355.26, 478.4, 7.441, 177.523, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1359.18, 478.27, 7.3899, 180.609, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1362.98, 478.366, 7.434, 180, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1366.87, 478.415, 7.4337, 179.994, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1370.9, 478.378, 7.4092, 179.995, 16, 16,300,0);
	AddStaticVehicleExEx(431, -1303.59, 443.634, 7.2654, 0, 44, 44,300,0);
	AddStaticVehicleExEx(432, -1294, 439.715, 7.0892, 2, 43, 0,300,0);
	AddStaticVehicleExEx(432, -1287.47, 439.808, 7.0897, 2.0006, 43, 0,300,0);
	AddStaticVehicleExEx(432, -1280.95, 439.9, 7.0897, 2.0007, 43, 0,300,0);
	AddStaticVehicleExEx(548, -1305.87, 494.556, 19.9305, 327.435, 0, 0,300,0);
	AddStaticVehicleExEx(497, -1288.41, 492.279, 18.4258, 319.93, 114, 114,300,0);
	AddStaticVehicleExEx(497, -1277.44, 492.255, 18.4252, 319.997, 114, 114,300,0);
	AddStaticVehicleExEx(497, -1266.41, 492.275, 18.4243, 319.927, 114, 114,300,0);
	AddStaticVehicleExEx(425, -1457.39, 493.734, 18.8195, 270.216, 0, 0,300,0);
	AddStaticVehicleExEx(425, -1457.13, 509.485, 18.8046, 268.159, 0, 0,300,0);
	AddStaticVehicleExEx(520, -1426.92, 507.386, 18.886, 270.386, 0, 0,300,0);
	AddStaticVehicleExEx(520, -1417.39, 495.899, 18.8893, 312.627, 0, 0,300,0);
	AddStaticVehicleExEx(520, -1413.8, 515.417, 18.8992, 232.848, 0, 0,300,0);
	AddStaticVehicleExEx(430, -1438.74, 504.776, -0.2617, 89.9149, 16, 16,300,0);
	AddStaticVehicleExEx(473, -1443.33, 491.944, -0.1154, 90.3802, 16, 16,300,0);
	AddStaticVehicleExEx(473, -1448.9, 492.135, -0.178599, 89.3944, 16, 16,300,0);
	AddStaticVehicleExEx(472, -1448.28, 424.964, -0.0458, 0.678399, 16, 16,300,0);
	AddStaticVehicleExEx(472, -1447.67, 389.818, -0.006699, 0.5184, 16, 16,300,0);
	AddStaticVehicleExEx(473, -1448.79, 351.527, -0.377099, 359.523, 16, 16,300,0);
	AddStaticVehicleExEx(473, -1448.5, 358.22, -0.260399, 357.278, 16, 16,300,0);
	AddStaticVehicleExEx(470, -1537.65, 372.864, 7.4461, 90.7372, 0, 0,300,0);
	AddStaticVehicleExEx(470, -1537.54, 377.494, 7.4442, 89.609, 0, 0,300,0);
	AddStaticVehicleExEx(470, -1537.44, 381.797, 7.4417, 88.1335, 0, 0,300,0);
	AddStaticVehicleExEx(470, -1537.29, 385.815, 7.4343, 88.907, 0, 0,300,0);
	AddStaticVehicleExEx(497, -1525.98, 531.299, 12.0608, 90.2964, 16, 16,300,0);
	AddStaticVehicleExEx(497, -1525.95, 541.419, 12.0986, 89.8048, 16, 16,300,0);
	armycar[1] = AddStaticVehicleExEx(473, -1454.37, 492.138, -0.144999, 90.2315, 16, 16,300,0);
	// �������� (�����):
	alkofuraballas = AddStaticVehicleExEx(414,2004.5378,-1119.4108,26.5297,90.6121,85,85,1800,0); //Sanchez
    alkofuragrove = AddStaticVehicleExEx(414,2473.5464,-1696.6670,13.6108,358.8647,86,86,1800,0); //Sanchez
	alkofuraactek = AddStaticVehicleExEx(414,1698.8512,-2096.0337,13.6628,180.00,2,1,1800,0); //Sanchez
	alkofuravagos = AddStaticVehicleExEx(414,2730.3511,-1149.9268,69.6719,0.8357,6,1,1800,0); //Sanchez
	alkofurarifa = AddStaticVehicleExEx(414,2173.4631,-1810.4408,13.5816,270.00,12,12,1800,0); //Sanchez
	// ������
	matsfuraactek = AddStaticVehicleExEx(482,1668.1003,-2115.3198,13.6635,269.9154,2,1,1800,0); //Burrito
	coronoscar[0] = AddStaticVehicleExEx(468,1693.7133,-2106.5117,13.2558,217.7382,2,1,300,0); //
	AddStaticVehicleExEx(567,1688.0653,-2106.5273,13.4164,215.1891,2,1,300,0); //
	AddStaticVehicleExEx(567,1683.1951,-2106.7749,13.3470,216.2891,2,1,300,0); //
	AddStaticVehicleExEx(534,1682.9250,-2119.3757,13.4348,318.7427,2,1,300,0); //
	AddStaticVehicleExEx(534,1688.2859,-2119.6433,13.4331,322.8873,2,1,300,0); //
	AddStaticVehicleExEx(468,1693.8523,-2119.4265,13.2578,327.7149,2,1,300,0); //
	coronoscar[1] = AddStaticVehicleExEx(478,1729.4000244,-2118.0000000,13.6000004,270.0000000,2,1,300,0); //Walton
	// �����:
	matsfuravagos = AddStaticVehicleExEx(482,2732.8728,-1184.7451,69.4310,1.6441,6,1,300,0); //3����
	vagoscar[0] = AddStaticVehicleExEx(467,2732.7446,-1171.4069,69.0797,359.9201,84,6,300,0); // Vagos 1
	AddStaticVehicleExEx(468,2730.2651,-1159.2579,69.2878,0.5959,84,6,300,0); // Vagos 2
	AddStaticVehicleExEx(474,2743.0115,-1166.4310,69.1442,359.3382,6,6,300,0); // Vagos 31
	AddStaticVehicleExEx(474,2742.7534,-1183.9269,69.0805,359.3219,6,6,300,0); // Vagos 41
	AddStaticVehicleExEx(474,2728.0164,-1184.3075,69.0818,0.8023,6,6,300,0); // Vagos 51
	vagoscar[1] = AddStaticVehicleExEx(478,2727.8184,-1171.4126,69.1016,0.1639,6,6,600,0); //Walton
	// ����:
	matsfuragrove = AddStaticVehicleExEx(482,2505.2205,-1694.3320,13.6723,358.9510,86,86,300,0); //3����
	grovecar[0] = AddStaticVehicleExEx(600,2486.7856,-1680.8467,12.9853,333.5294,86,86,300,0);
	AddStaticVehicleExEx(600,2491.6892,-1680.8110,12.9905,334.3155,86,86,300,0);
	AddStaticVehicleExEx(492,2496.9253,-1680.3582,13.1278,335.2479,86,86,300,0);
	AddStaticVehicleExEx(492,2502.0142,-1679.2673,13.1104,331.8155,86,86,300,0);
	AddStaticVehicleExEx(466,2501.7458,-1655.4292,13.0974,56.2400,86,86,300,0);
	AddStaticVehicleExEx(466,2507.2712,-1663.0812,13.1530,24.3497,86,86,300,0);
	AddStaticVehicleExEx(468,2471.9756,-1653.3414,13.1145,88.9228,86,86,300,0); // Picador 2
	grovecar[1] = AddStaticVehicleExEx(478,2479.1999512,-1653.5999756,13.5000000,90.0000000,86,86,300,0); //Walton
	// ����
	matsfurarifa = AddStaticVehicleExEx(482,2190.0703,-1786.9778,13.5810,357.1073,12,12,300,0); //3����
	rifacar[0] = AddStaticVehicleExEx(518,2166.0854,-1790.7902,13.1526,215.7027,12,12,300,0); //
	AddStaticVehicleExEx(468,2160.0552,-1791.0371,13.1508,221.4843,12,12,300,0); //
	AddStaticVehicleExEx(529,2189.7837,-1808.5233,13.0785,44.9829,12,12,300,0); //
	AddStaticVehicleExEx(529,2189.8193,-1802.9926,13.0815,47.4747,12,12,300,0); //
	AddStaticVehicleExEx(529,2190.1396,-1797.8752,13.0266,50.6045,12,12,300,0);
	rifacar[1] = AddStaticVehicleExEx(478,2180.0000000,-1779.5999756,13.6000004,0.0000000,12,12,300,0); //Walton
	// ������
	matsfuraballas = AddStaticVehicleExEx(482,1990.2653,-1119.9766,26.5673,268.0733,85,85,300,0); //3����
	ballascar[0] = AddStaticVehicleExEx(516,2012.8879,-1141.8719,24.9122,269.9742,85,85,300,0); //
	AddStaticVehicleExEx(516,2020.4314,-1141.8734,24.6983,269.9693,85,85,300,0); //
	AddStaticVehicleExEx(468,2008.0710,-1129.2385,25.1360,269.1874,85,85,300,0); //
	AddStaticVehicleExEx(517,1994.0737,-1129.0228,25.5182,269.0978,85,85,300,0); //
	AddStaticVehicleExEx(566,1985.4716,-1128.8547,25.7320,268.1328,85,85,300,0); //
	AddStaticVehicleExEx(566,1984.6554,-1141.7437,25.6136,268.7867,85,85,300,0); //
	ballascar[1] = AddStaticVehicleExEx(478,1999.2874,-1141.9879,25.3020,269.2423,85,85,300,0); //Walton
	// ���� 51
	armcar[0] = AddStaticVehicleExEx(470,291.6765,1856.2783,17.6678,306.9763,43,0,300,0); //
	AddStaticVehicleExEx(470,291.5853,1850.1703,17.6674,309.7868,43,0,300,0); //
	AddStaticVehicleExEx(470,291.5353,1862.1675,17.6759,302.1415,43,0,300,0); //
	AddStaticVehicleExEx(432,277.2724,2030.6893,17.6550,268.4021,0,0,300,0); // ����
	AddStaticVehicleExEx(432,276.9091,2017.6702,18.0319,268.4021,0,0,300,0); // ����2
	AddStaticVehicleExEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,300,0); // �����
	AddStaticVehicleExEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,300,0); // �����
	AddStaticVehicleExEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,300,0); // �����
	AddStaticVehicleExEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,300,0); // �����
	AddStaticVehicleExEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,300,0); // �����
	AddStaticVehicleExEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,300,0); // �����
	AddStaticVehicleExEx(497,232.6579,2016.1161,25.9395,180.7441,44,44,300,0); // ������� ����
	AddStaticVehicleExEx(497,247.7541,2016.3547,25.8869,188.0249,44,44,300,0); // ������� ����2
	AddStaticVehicleExEx(470,274.4993,2000.2352,17.6675,270.6052,43,0,300,0); //
	AddStaticVehicleExEx(470,274.5747,1977.9242,17.6768,272.9560,43,0,300,0); //
	AddStaticVehicleExEx(425,287.2229,1927.3916,18.2054,234.3114,43,0,300,0); //
	AddStaticVehicleExEx(520,301.3592,2052.5264,18.3638,180.5396,0,0,300,0); //
	AddStaticVehicleExEx(520,314.0055,2052.5469,18.3638,176.5419,0,0,300,0); //
	armcar[1] = AddStaticVehicleExEx(431,343.1131,1990.7627,17.7473,90.000,77,77,300,0); //Autobuss
	// ��������
	matscar[0] = AddStaticVehicleExEx(433,275.6767,1961.1750,18.0159,272.5789,43,0,300,0); //
	AddStaticVehicleExEx(433,276.3317,1955.3665,18.0159,273.6414,43,0,300,0); //
	AddStaticVehicleExEx(433,276.7726,1949.7548,18.0093,271.6631,43,0,300,0); //
	AddStaticVehicleExEx(433,274.4944,1995.3737,18.1196,272.5592,43,0,300,0); //
	AddStaticVehicleExEx(433,274.4941,1991.1019,18.1319,272.4530,43,0,300,0); //
	AddStaticVehicleExEx(433,274.4941,1986.8715,18.0147,272.7024,43,0,300,0); //
	matscar[1] = AddStaticVehicleExEx(433,274.4940,1982.7965,18.0179,273.9871,43,0,300,0);
	// ����������
	incos[0] = AddStaticVehicleExEx(428,1361.6652,-1635.2184,13.5076,272.1388,4,75,60,0); // ������1
	AddStaticVehicleExEx(428,1361.7642,-1642.9727,13.5084,273.5148,4,75,60,0); // ������2
	AddStaticVehicleExEx(428,1361.7140,-1650.7054,13.5074,272.9565,4,75,60,0); // ������3
	incos[1] = AddStaticVehicleExEx(428,1361.6759,-1658.6383,13.5077,272.2585,4,75,60,0); // ������4
	// ������ ��� �����
	derby[0] = AddStaticVehicleExEx(495,-1414.0229492,1058.5529785,1039.0419922,180.0000000,-1,-1,60,0); //Sandking
	derby[1] = AddStaticVehicleExEx(494,-1388.4510498,1058.5529785,1038.4189453,180.0000000,-1,-1,60,0); //Hotring
	derby[2] = AddStaticVehicleExEx(502,-1398.2089844,1058.5529785,1038.4399414,180.0000000,-1,-1,60,0); //Hotring Racer A
	derby[3] = AddStaticVehicleExEx(503,-1393.2399902,1058.5529785,1038.4229736,180.0000000,-1,-1,60,0); //Hotring Racer B
	derby[4] = AddStaticVehicleExEx(504,-1437.1500244,1058.5529785,1038.5100098,180.0000000,-1,-1,60,0); //Bloodring Banger
	derby[5] = AddStaticVehicleExEx(556,-1408.4260254,1058.5529785,1038.5510254,180.0000000,-1,-1,60,0); //Monster A
	derby[6] = AddStaticVehicleExEx(557,-1423.1820068,1058.5529785,1038.5510254,180.0000000,-1,-1,60,0); //Monster B
	derby[7] = AddStaticVehicleExEx(504,-1432.4239502,1058.5529785,1038.4659424,180.0000000,-1,-1,60,0); //Bloodring Banger
	derby[8] = AddStaticVehicleExEx(504,-1427.9210205,1058.5529785,1038.4599609,180.0000000,-1,-1,60,0); //Bloodring Banger
	derby[9] = AddStaticVehicleExEx(557,-1418.5329590,1058.5529785,1038.5510254,180.0000000,-1,-1,60,0); //Monster B
	derby[10] = AddStaticVehicleExEx(556,-1403.3769531,1058.5529785,1038.5510254,180.0000000,-1,-1,60,0); //Monster A
	for(new i=0; i<11; i++) LinkVehicleToInterior(derby[i], 15), SetVehicleVirtualWorld(derby[i], 1);
	// ������ �� ��
	AddStaticVehicleExEx(462,-2020.8462,-90.1184,34.9213,159.0164,252,252,60,0); // License
	AddStaticVehicleExEx(462,-2022.5684,-90.0082,34.9226,161.6525,252,252,60,0); // License
	AddStaticVehicleExEx(462,-2025.9767,-89.8600,34.9237,156.5267,252,252,60,0); // License
	AddStaticVehicleExEx(462,-2024.1243,-89.9715,34.9227,163.0753,252,252,60,0); // License
	AddStaticVehicleExEx(462,-2029.3910,-90.0002,34.9205,158.7377,252,252,60,0); // License
	AddStaticVehicleExEx(462,-2027.5295,-89.8887,34.9048,155.6873,252,252,60,0); // License
/*	// Spawn Vehicles - Faggio
	AddStaticVehicleExEx(462,1693.4154,-2239.4675,13.1369,181.2219,3,3,60,0); // sp1
	AddStaticVehicleExEx(462,1697.2645,-2239.4172,13.1383,184.9279,3,3,60,0); // sp2
	AddStaticVehicleExEx(462,1695.4370,-2239.4792,13.1396,181.3041,3,3,60,0); // sp3
	AddStaticVehicleExEx(462,1680.7012,-2239.3909,13.1453,178.0323,3,3,60,0); // sp4
	AddStaticVehicleExEx(462,1677.0220,-2239.4443,13.1517,182.4502,3,3,60,0); // sp5
	AddStaticVehicleExEx(462,1678.7834,-2239.5515,13.1416,183.3057,3,3,60,0); // sp68*/
	//
	FaggioBikes[23] = AddStaticVehicleExEx(462,1212.7724609,-1317.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[24] = AddStaticVehicleExEx(462,1212.7724609,-1316.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[25] = AddStaticVehicleExEx(462,1212.7724609,-1315.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[26] = AddStaticVehicleExEx(462,1212.7724609,-1322.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[27] = AddStaticVehicleExEx(462,1212.7724609,-1321.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[28] = AddStaticVehicleExEx(462,1212.7724609,-1320.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[29] = AddStaticVehicleExEx(462,1212.7724609,-1319.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[30] = AddStaticVehicleExEx(462,1212.7724609,-1325.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[31] = AddStaticVehicleExEx(462,1212.7724609,-1324.0537109,13.2410650,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[32] = AddStaticVehicleExEx(462,1212.7724609,-1323.0537109,13.2410650,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[33] = AddStaticVehicleExEx(462,1212.7724609,-1329.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[34] = AddStaticVehicleExEx(462,1212.7724609,-1328.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[35] = AddStaticVehicleExEx(462,1212.7724609,-1327.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[36] = AddStaticVehicleExEx(462,1212.7724609,-1326.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[37] = AddStaticVehicleExEx(462,1212.7724609,-1333.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[38] = AddStaticVehicleExEx(462,1212.7724609,-1332.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio
	FaggioBikes[39] = AddStaticVehicleExEx(462,1212.7724609,-1331.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio!
	FaggioBikes[40] = AddStaticVehicleExEx(462,1212.7724609,-1330.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio!
	FaggioBikes[41] = AddStaticVehicleExEx(462,1212.7724609,-1336.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio!
	FaggioBikes[42] = AddStaticVehicleExEx(462,1212.7724609,-1335.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio!
	FaggioBikes[43] = AddStaticVehicleExEx(462,1212.7724609,-1334.0537109,13.2259998,90.0000000,252,252,60,0); //Faggio!
	FaggioBikes[44] = AddStaticVehicleExEx(462,1212.7828,-1318.0350,13.1568,90.0000000,252,252,60,0); //Faggio!
	// �����
	AddStaticVehicleExEx(481,1863.8000500,-1394.0999800,13.1000000,270.0000000,93,126,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1395.0999800,13.1000000,270.0000000,165,169,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1396.0000000,13.1000000,270.0000000,165,169,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1396.9000200,13.1000000,270.0000000,165,169,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1397.9000200,13.1000000,270.0000000,245,245,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1398.8000500,13.1000000,270.0000000,165,169,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1399.6999500,13.1000000,270.0000000,215,142,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1400.5999800,13.1000000,270.0000000,215,142,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1401.5000000,13.1000000,270.0000000,165,169,300,0); //BMX
    AddStaticVehicleExEx(481,1863.8000500,-1402.4000200,13.1000000,270.0000000,215,142,300,0); //BMX
    AddStaticVehicleExEx(509,1863.8000500,-1403.3000500,13.1000000,270.0000000,145,115,300,0); //Bike
    AddStaticVehicleExEx(509,1863.8000500,-1404.1999500,13.1000000,270.0000000,22,34,300,0); //Bike
    AddStaticVehicleExEx(509,1863.8000500,-1405.0999800,13.1000000,270.0000000,76,117,300,0); //Bike
    AddStaticVehicleExEx(509,1863.8000500,-1406.0000000,13.1000000,270.0000000,63,62,300,0); //Bike
    AddStaticVehicleExEx(510,1863.8000500,-1406.9000200,13.1000000,270.0000000,61,74,300,0); //Mountain Bike
    AddStaticVehicleExEx(510,1863.8000500,-1407.9000200,13.1000000,270.0000000,134,68,300,0); //Mountain Bike
    AddStaticVehicleExEx(510,1863.8000500,-1408.9000200,13.1000000,270.0000000,42,119,300,0); //Mountain Bike
    AddStaticVehicleExEx(510,1863.8000500,-1410.0000000,13.1000000,270.0000000,109,122,300,0); //Mountain Bike
	// ������ �� �������
	AddStaticVehicleExEx(462, 2440.2329, -1466.5663, 23.5000, 130.0000, 252,252,60,0); //Faggio LS
	AddStaticVehicleExEx(462, 2440.3354, -1468.7161, 23.5000, 130.0000, 252,252,60,0); //Faggio LS
	AddStaticVehicleExEx(462, 2440.4050, -1470.6809, 23.5000, 130.0000, 252,252,60,0); //Faggio LS
	return true;
}
public OnVehicleMod(playerid,vehicleid,componentid) {
	RemoveVehicleComponent(vehicleid, componentid);
    return 0;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(paintjobid > 2 || GetPlayerInterior(playerid) == 0)
	{
		ChangeVehiclePaintjob( vehicleid, 3 );
		SetVehicleToRespawn(vehicleid);
		KickEx(playerid);
		return true;
	}
	return true;
}
stock skladband() {
	new faasst = FracBank[0][fBallasn]; new aast = FracBank[0][fAztekn]; new vast = FracBank[0][fVagosn];
	new gast = FracBank[0][fGroven]; new fast = FracBank[0][fRifan];
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {42aaff}%i\n\n\n{82079f}Gang safe\n{82079f}Ballas Gang\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 Kg\n{ffffff}First aid kits:{e8c814} %d from 10000 �\n{FFFFFF}Gang safe: %s",TotalGzB,TotalGraf[1],formatInt(FracBank[0][fBallas]),ballasmatbi,faasst,FracBank[0][fLock][1] ? ("{FF0000}Closed") : ("{00CC00}Open")); UpdateDynamic3DTextLabelText(SkladB,  Cvet_4, stringer);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {42aaff}%i\n\n\n{f4a416}Gang safe\n{f4a416}Los Santos Vagos\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 Kg\n{ffffff}First aid kits:{e8c814} %d from 10000 �\n{FFFFFF}Gang safe: %s",TotalGzV,TotalGraf[4],formatInt(FracBank[0][fVagos]),vagosmatbi,vast,FracBank[0][fLock][2] ? ("{FF0000}Closed") : ("{00CC00}Open")); UpdateDynamic3DTextLabelText(SkladV,  Cvet_4, stringer);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {42aaff}%i\n\n\n{4de412}Gang safe\n{4de412}The Groove Street\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 Kg\n{ffffff}First aid kits:{e8c814} %d from 10000 �\n{FFFFFF}Gang safe: %s",TotalGzG,TotalGraf[0],formatInt(FracBank[0][fGrove]),groovmatbi,gast,FracBank[0][fLock][0] ? ("{FF0000}Closed") : ("{00CC00}Open")); UpdateDynamic3DTextLabelText(SkladG,  Cvet_4, stringer);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {42aaff}%i\n\n\n{12b4ea}Gang safe\n{12b4ea}Rifa Gang\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 Kg\n{ffffff}First aid kits:{e8c814} %d from 10000 �\n{FFFFFF}Gang safe: %s",TotalGzR,TotalGraf[2],formatInt(FracBank[0][fRifa]),rifamatbi,fast,FracBank[0][fLock][4] ? ("{FF0000}Closed") : ("{00CC00}Open")); UpdateDynamic3DTextLabelText(SkladR,  Cvet_4, stringer);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {42aaff}%i\n\n\n{0cdbf2}Gang safe\n{0cdbf2}Varios Los Aztecas\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 Kg\n{ffffff}First aid kits:{e8c814} %d from 10000 �\n{FFFFFF}Gang safe: %s",TotalGzA,TotalGraf[3],formatInt(FracBank[0][fAztek]),aztekmatbi,aast,FracBank[0][fLock][3] ? ("{FF0000}Closed") : ("{00CC00}Open")); UpdateDynamic3DTextLabelText(SkladA,  Cvet_4, stringer);
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
//========================================================[ ����� �������]===================================================================//
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrak])
	{
	case 12: zx = 0xd200ff99;
	case 13: zx = 0xcfbe0899;
	case 15: zx = 0x06b50699;
	case 17: zx = 0x03c3b899;
	case 18: zx = 0x007fffAA;
	default: zx = 0xFEFEFEAA;
	}
	return zx;
}
stock GetGangColor(g)
{
	new zx;
	switch(g)
	{
		case 5: zx = 0xDDA701FF;
		case 6: zx = 0xFF0000AA;
		case 14: zx = 0xB4B5B7AA;
		case 15: zx = 0x06b50699;
		case 17: zx = 0x03c3b899;
		case 12: zx = 0xd200ff99;
		case 18: zx = 0x2c65f895;
		default: zx = 0xcfbe0899;
	}
	return zx;
}
//=====================================================================================================================================//
stock GetNearestVehicle(playerid)
{
    new Float:X,Float:Y,Float:Z;
	foreach(new x : valid_vehicles) {
	    GetVehiclePos(x,X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 6.0, X, Y, Z)) return x;
	}
	return -1;
}
stock IsPlayerInBandOnline(bandid)
{
	new np;
	foreach (new i : Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pMember] == bandid || PlayerInfo[i][pLeader] == bandid)
		{
			np++;
		}
	}
	return np;
}
stock GetPlayerJobName(jobnumber)
{
	new string[25];
	switch(jobnumber)
	{
	    case 1: format(string,sizeof(string),"Thief");
	    case 2: format(string,sizeof(string),"Mechanic");
	    case 3: format(string,sizeof(string),"Hot Dog Vendor");
	    case 4: format(string,sizeof(string),"Taxi driver");
	    case 5: format(string,sizeof(string),"Grocery delivery man");
	    case 6: format(string,sizeof(string),"Trainer");
	    case 7: format(string,sizeof(string),"Unknown");
		case 8: format(string,sizeof(string),"Collector");
		case 9: format(string,sizeof(string),"Unknown");
		case 10: format(string,sizeof(string),"Garbage truck");
		case 13: format(string,sizeof(string),"Car theft");
		case 14: format(string,sizeof(string),"Boxer");
		case 15: format(string,sizeof(string),"Local DJ");
		default: format(string,sizeof(string),"Unemployed");
	}
	return string;
}
stock Menu()
{
    HouseShaw = CreateMenu ( "House", 1, 10.0, 130.0, 100.0, 80.0);
	AddMenuItem(HouseShaw, 0, "Next>>");
	AddMenuItem(HouseShaw, 0, "<<Previous");
	AddMenuItem(HouseShaw, 0, "Exit");

    ChoseSkin = CreateMenu("SKINS", 1, 50.0, 160.0, 90.0);
	AddMenuItem(ChoseSkin,0,"<>~y~ NEXT");
	AddMenuItem(ChoseSkin,0,"<>~g~ SELECT");

	ReconPanel = CreateMenu("_", 1, 10.0, 140.0, 65.0, 85.0);
	AddMenuItem(ReconPanel, 0, "UPDATE");
	AddMenuItem(ReconPanel, 0, "GMTEST");
	AddMenuItem(ReconPanel, 0, "SLAP");
	AddMenuItem(ReconPanel, 0, "MUTE");
	AddMenuItem(ReconPanel, 0, "JAIL");
	AddMenuItem(ReconPanel, 0, "OFF");
	return true;
}
stock SpeedVehicle(vehicleid) {
    new Float:x, Float:y, Float:z;
    GetVehicleVelocity(vehicleid, x, y, z);
    return floatround(floatsqroot(x*x+y*y)*100);
}
stock SpeedVehiclee(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 213.3;
	return floatround(ST[3]);
}
forward CreatingBreak(playerid);
public CreatingBreak(playerid)
{
	new
		Float: x, Float: y, Float: z, Float: angle;

	GetPlayerPos(playerid, x, y, z);

	GetPlayerFacingAngle(playerid, angle);

	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid);

	switch(GetPVarInt(playerid, "BreakID"))
	{
	    case 1: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(1237, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 2: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(1427, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-0.62,   0, 0.00000, 0.00000));
	    case 3: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(8407, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-0.09,   0, 0.00000, 0.00000));
	    case 4: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(1424, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-0.77,   0, 0.00000, 0.00000));
	    case 5: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(981, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 6: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(2773, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-0.93,   0, 0.00000, 0.00000));
	    case 7: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19425, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 8: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19575, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 9: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(18880, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	   // case 10: break_[playerid] = CreateDynamicObject(19981, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000), ShowPlayerDialog(playerid, 1994, DIALOG_STYLE_INPUT, "{FFFF00}��������� �������", "{ffffff}Enter �����, ������� ������ ���������� �� �������\n\n- ����������� �������� ���� � ���� {------} ��� ������ �������� ������\n- ������������ ����� ����� ������ 50 ��������\n\n", "Ready", "Cancle");
	    //case 11: break_[playerid] = CreateDynamicObject(19980, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000), ShowPlayerDialog(playerid, 1995, DIALOG_STYLE_INPUT, "{FFFF00}��������� �������", "{ffffff}Enter �����, ������� ������ ���������� �� �������\n\n- ����������� �������� ���� � ���� {------} ��� ������ �������� ������\n- ������������ ����� ����� ������ 50 ��������\n\n", "Ready", "Cancle");
	    case 10: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19956, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 11: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19955, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 12: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19950, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 13: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19949, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 14: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19948, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 15: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19957, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 16: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19967, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 17: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19966, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 18: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19979, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 19: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19978, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 20: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19976, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	    case 21: SetPVarInt(playerid, "rb_obkect", _:CreateDynamicObject(19974, x+(1.0*floatsin(-angle+5.0, degrees)), (y+(1.0*floatcos(-angle+5.0, degrees))), z-1,   0, 0.00000, 0.00000));
	}
	static const fmt_str[] = "%i";
	new string[sizeof(fmt_str) + (-2 + 5)];
	format(string, sizeof(string), fmt_str, playerid);
	blocktext[playerid] = Create3DTextLabel(string, 0x008080FF, x, y, z, 40.0, 0 );
	SetPVarInt(playerid,"rbinfo",1);
	return Streamer_Update(playerid);
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new house = PlayerInfo[playerid][pPhousekey]; new Float: carhp;
	GetVehicleHealth(vehicleid, carhp);
	foreach(Player,i)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[i])
		{
			if(carhp > 700 && carhp < 1000) { HouseInfo[house][hVehSost] -= 0,PlayerInfo[playerid][pProz] -= 0; return true; }
			else if(carhp > 500 && carhp < 700) { HouseInfo[house][hVehSost] -= 1,PlayerInfo[playerid][pProz] -= 1; return true; }
			else if(carhp > 200 && carhp < 500) { if(PlayerInfo[playerid][pProz] > 0) HouseInfo[house][hVehSost] -= 2; PlayerInfo[playerid][pProz] -= 2; return true; }
		}
	}
	return true;
}
stock IsPlayerFake(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new IPSSS[16];
	GetPlayerIp(playerid, IPSSS, sizeof IPSSS);
	if(!strcmp("195.133.144.36", IPSSS) || !strcmp("194.87.101.31", IPSSS) || !strcmp("82.140.224.245", IPSSS) || !strcmp("195.133.144.36", IPSSS) || !strcmp("176.32.37.2", IPSSS)) return true;
	return false;
}
stock Slot(w)
{
	switch(w)
	{
	    case 0,1: return 0;
	    case 2..9: return 1;
	    case 22..24: return 2;
	    case 25..27: return 3;
	    case 28,29,32: return 4;
	    case 30,31: return 5;
	    case 33,34: return 6;
	    case 35..38: return 7;
	    case 16..18,39: return 8;
	    case 41..43: return 9;
	    case 10..15: return 10;
	    case 44..46: return 11;
	    case 40: return 12;
	}
	return -1;
}
stock GiveWeapon(p, w, a)
{
    SetPVarInt(p, "GunCheck", 5);
    switch(w)
    {
        case 0..15,40,44..46: return PlayerInfo[p][Weapon][Slot(w)] = w, PlayerInfo[p][Ammo][Slot(w)] = 1, GivePlayerWeapon(p, w, a);
        case 39:
        {
            PlayerInfo[p][Ammo][Slot(w)] += a;
            PlayerInfo[p][Weapon][Slot(40)] = 40;
        }
        default: PlayerInfo[p][Ammo][Slot(w)] += a;
    }
    PlayerInfo[p][Weapon][Slot(w)] = w;
    GivePlayerWeapon(p, w, a);
    return true;
}
stock CheckWeapon(p)
{
    new w, a;
    if(GetPlayerWeapon(p) != PlayerInfo[p][Weapon][Slot(GetPlayerWeapon(p))] && GetPlayerWeapon(p) != 0 && GetPlayerWeapon(p) != 46) return JailCheat(p, 8);
    switch(GetPlayerWeapon(p))
    {
        case 0..15,40,44..46: return true;
    }
    GetPlayerWeaponData(p, Slot(GetPlayerWeapon(p)), w, a);
    if(PlayerInfo[p][Ammo][Slot(w)]+9 < a) return JailCheat(p, 9);
    else if(w == 43) PlayerInfo[p][Ammo][Slot(w)] = a;
    return true;
}
stock ResetWeapons(p)
{
    SetPVarInt(p, "GunCheck", 5);
    for (new i = 0; i < 13; i++) PlayerInfo[p][Weapon][i] = 0,PlayerInfo[p][Ammo][i] = 0;
    ResetPlayerWeapons(p);
    return true;
}
stock SetPlayerWeaponss(playerid)
{
    if(PlayerInfo[playerid][pJailed] != 0) return true;
    SetPVarInt(playerid, "GunCheck", 5);
	for(new i = 0; i < 13; i++)
	{
	    if(PlayerInfo[playerid][Weapon][i] > 0 && PlayerInfo[playerid][Ammo][i] > 0) GiveWeapon(playerid,PlayerInfo[playerid][Weapon][i],PlayerInfo[playerid][Ammo][i]);
	}
	return true;
}
stock CheatKick(playerid,number)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return true;
	if(GetPVarInt(playerid,"CheatKick") > 0) return true;
	SetPVarInt(playerid,"CheatKick",1);
	format(stringer1, sizeof(stringer1), "{FF6600}Cheating detected (Event ID: #%d)", number); //
	SendClientMessage(playerid, COLOR_LIGHTRED, stringer1);
	SendClientMessage(playerid, COLOR_LIGHTRED, "{FF6600}If an ERROR occurs, write to the free server group {FFFF00}("PAGE_VK_FREE")");
	SendClientMessage(playerid, COLOR_LIGHTRED, "{FF6600}Note: The following factors can lead to false anti-cheat detections:");
	SendClientMessage(playerid, COLOR_LIGHTRED, "{FF6600}High ping, weak internet connection, server problems, real cheats");
	format(stringer1, sizeof(stringer1), "Adminstrator %s[%d] was kicked for using cheats (code #%d)", PlayerInfo[playerid][pNames],playerid,number);
	SendAdminMessage(COLOR_GREY,stringer1);
	if(number == 8 || number == 9 || number == 10) for (new i = 0; i < 13; i++) PlayerInfo[playerid][Weapon][i] = 0,PlayerInfo[playerid][Ammo][i] = 0;
	return KickEx(playerid);
}
stock SetPlayerHealthAC(playerid, Float:Health)
{
	PlayerHealth[playerid] = Health;
	SetPlayerHealth(playerid, Health);
	return true;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(!(-20000.0 <= z <= 20000.0)) return 0;
    else if((hittype == BULLET_HIT_TYPE_NONE) && weaponid != WEAPON_SNIPER && GetPlayerDistanceFromPoint(playerid, fX, fY, fZ) > 300.0 && (fX != 0.0 && fY != 0.0 && fZ != 0.0)) return 0;
    else if(!IsFirearmWeapon(weaponid)) {
        Kick(playerid);
	    return 0;
	}
	else if (!(BULLET_HIT_TYPE_NONE <= hittype <= BULLET_HIT_TYPE_PLAYER_OBJECT)) {
		return 0;
	}
    else if(-10000 < fX > 10000 || -10000 < fY > 10000 || -10000 < fZ > 10000) {
		Kick(playerid);
		return 0;
	}
	else if ((hittype == BULLET_HIT_TYPE_PLAYER && !IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidObject(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) {
		return 0;
	}
	else if(hittype == BULLET_HIT_TYPE_PLAYER && fX == 0.000000 && fY == 0.000000 && fZ == 0.500000) return 0; // �������
    PlayerInfo[playerid][Ammo][Slot(weaponid)] --;
	if(GetPVarInt(hitid, "AFK_Time") >= 3) return false;
    if(PlayerInfo[playerid][Ammo][Slot(weaponid)] > GetPlayerAmmo(playerid)) PlayerInfo[playerid][Ammo][Slot(weaponid)] = GetPlayerAmmo(playerid);
    else if(PlayerInfo[playerid][Ammo][Slot(weaponid)]+9 < GetPlayerAmmo(playerid) && PlayerInfo[playerid][pAlcoInvenxua] == 0 && !GetPVarInt(playerid, "GunCheck")) return AddCheater(playerid, 2), 0;
	return 1;
}
stock MainMenuPl(playerid)
{
	new expamount = PlayerInfo[playerid][pLevel]+1*levelexp;
	format(stringer1, sizeof(stringer1),"{42aaff}Server Menu",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],expamount);
	return ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, stringer1, "{328fed}[1] {FFFFFF}Statistics\n{328fed}[2] {FFFFFF}Server Commands\n{328fed}[3] {FFFFFF}Settings\n{328fed}[4] {FFFFFF}Report\n{328fed}[5] {FFFFFF}Safety\n{328fed}[6] {FFFFFF}VIP Games Panel\n{328fed}[7] {FFFFFF}Accessories\n{328fed}[8] {FFFFFF}Promocode\n{328fed}[9] {FFFFFF}Quests\n{328fed}[10] {FFFFFF}Donate (Additional capacities)\n{328fed}[11] {FFFFFF}Donate Rub\n{328fed}[12] {FFFFFF}Suits", "Select", "Cancle"); //
}
public AntiBH(playerid)
{
	if(PlayerCuffed[playerid] == 0 && AntiSbiv[playerid] < gettime()) FIXES_ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
	times[playerid] = false;
	SetTimerEx("AntiBH1",1500,false,"i",playerid);
	return true;
}
public AntiBH1(playerid) times[playerid] = true;
stock SearchingHit(playerid)
{
    new d, string[2024];
    format(string, sizeof(string), "{FFFF00}Select and enter victim number\n\n{FFFFFF}");
	foreach(Player,i)
	{
        if(PlayerInfo[i][pHeadValue] > 0 && ContractInfo[i][cHitman] == INVALID_PLAYER_ID)
        {
            d++;
	        format(stringer, sizeof(stringer), "[%d] - ����� : %d ~ [%s (%s Money)]\n",d,i,PlayerInfo[i][pNames],formatInt(PlayerInfo[i][pHeadValue])), strcat(string, stringer);
			if(d >= 40) break;
        }
	}
	if(d == 0) return ShowPlayerDialog(playerid,228,DIALOG_STYLE_MSGBOX,"Available contracts","No contracts available","Ok","");
	ShowPlayerDialog(playerid,5230,DIALOG_STYLE_INPUT,"Available contracts",string,"Select","Back");
	return true;
}
publics: OnLoadGzCallback()
{
	new time = GetTickCount();
	new r, f;
	cache_get_data(r, f);
	new idx;
	for(idx = 1; idx <= r; idx++)
	{
		GZInfo[idx][id] = cache_get_row_int(idx-1, 0, connects);
		GZInfo[idx][gCoords][0] = cache_get_row_float(idx-1, 1, connects);
		GZInfo[idx][gCoords][1] = cache_get_row_float(idx-1, 2, connects);
		GZInfo[idx][gCoords][2] = cache_get_row_float(idx-1, 3, connects);
		GZInfo[idx][gCoords][3] = cache_get_row_float(idx-1, 4, connects);
		GZInfo[idx][gFrak] = cache_get_row_int(idx-1, 5, connects);
		TOTALGZ++;
		GZInfo[idx][id] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
		ZoneOnBattle[idx] = 0;
		GZSafeTime[idx] = 0;
		if(idx == 47)
		{
    		format(stringer1, sizeof (stringer1),  "Den\nUnder control:\n %s\nDrug price: %d",GetPlayerFracName[GZInfo[47][gFrak]],pricelist);
    		PritonLable = CreateDynamic3DTextLabel(stringer1, COLOR_GREEN, 2166.0068, -1671.3362, 15.0734, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
    	}
		if(GZInfo[idx][gFrak] == 18) TotalGzR++;
		else if(GZInfo[idx][gFrak] == 17) TotalGzA++;
		else if(GZInfo[idx][gFrak] == 15) TotalGzG++;
		else if(GZInfo[idx][gFrak] == 13) TotalGzV++;
		else if(GZInfo[idx][gFrak] == 12) TotalGzB++;
	}
	printf("[Loading gang zones]: Loaded - %d spent %d (ms)", TOTALGZ, GetTickCount() - time);
	return 1;
}
publics: LoadGZLogo()
{
	new f,d;
	cache_get_data(f,d);
    if(!f) return printf("GangZone Logo - �� ���������!");
    new time = GetTickCount();
	for(new i = 0; i < f; i++)
	{
	    GZLogoInfo[i][gOwner][0] = cache_get_field_content_int(i, "owner_1", connects);
	    GZLogoInfo[i][gOwner][1] = cache_get_field_content_int(i, "owner_2", connects);
	    GZLogoInfo[i][gID][0] = CreateDynamicObject(19353,GZLogo[i][0],GZLogo[i][1],GZLogo[i][2],0.000,0.000,GZLogo[i][3]);
	    GZLogoInfo[i][g3D] = CreateDynamic3DTextLabel("Click:{FF6F00}Paintwork\n{FFFFFF}To start painting graffiti!", 0xFFFFFFFF, GZLogo[i][0],GZLogo[i][1],GZLogo[i][2], 15.0);
	    GZLogoInfo[i][gIcon] = CreateDynamicMapIcon(GZLogo[i][0],GZLogo[i][1],GZLogo[i][2], 56, COLOR_YELLOW, -1, -1, -1, 100);
	    switch(GZLogoInfo[i][gOwner][0])
	    {
			case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++;
			case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
			case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++;
			case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++;
			case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][0], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++;
		}
  		GZLogoInfo[i][gFinish][0] = 1000;
        if(GZLogoInfo[i][gOwner][1])
        {
    		GZLogoInfo[i][gID][1] = CreateDynamicObject(19353,GZLogo[i][0]+(0.5 * floatsin(-GZLogo[i][3], degrees)),GZLogo[i][1]+(0.5 * floatcos(-GZLogo[i][3], degrees)),GZLogo[i][2],0.000,0.000,GZLogo[i][3]);
		   	switch(GZLogoInfo[i][gOwner][1])
		    {
				case 15: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1490, "tags2_lalae", "Grove Street", 0), TotalGraf[0]++;
				case 12: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
				case 18: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1526, "tags_larifa", "Rifa Gang", 0), TotalGraf[2]++;
				case 17: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1531, "tags_laazteca", "Varios Los Aztecas", 0), TotalGraf[3]++;
				case 13: SetDynamicObjectMaterial(GZLogoInfo[i][gID][1], 0, 1530, "tags_lavagos", "Los Santos Vagos", 0), TotalGraf[4]++;
			}
	        GZLogoInfo[i][gFinish][1] = 1000;
    	}
	}
	printf("[��������]: GZLogoInfo | ���������: %d | Time: %d (ms)", f, GetTickCount()-time);
    return true;
}
stock ResetPick()
{
    foreach(new i:Player) PlayerInfo[i][pIzol] = 0;
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET pIzol = '0'");
	mysql_function_query(connects, mysql_query_, false, "", "");
	Pick = 0;
	DestroyDynamicObject(golos[0]);
	DestroyDynamicObject(golos[1]);
	DestroyDynamicObject(golos[2]);
	DestroyDynamicObject(golos[3]);
	DestroyPickup(Pickup1[0]);
	DestroyPickup(Pickup1[1]);
	DestroyPickup(Pickup1[2]);
	DestroyPickup(mapa);
	DestroyDynamic3DTextLabel(vibor[0]);
	DestroyDynamic3DTextLabel(vibor[1]);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_PICK" SET pick ='0', Name='None, None, None, None, None, None, None', times='0,0,0,0,0,0,0'");
	mysql_function_query(connects, mysql_query_, false, "", "");
	for(new i = 0; i < 7; i++) { strmid(PickName[i],"None",0,strlen("None"),MAX_PLAYER_NAME); PickTime[i] = 0; }
	return true;
}
stock GetPick(playerid, type)
{
	new full;
	stringer[0] = 0;
	for(new i = 0; i < 7; i++) {
		if(strcmp(PickName[i],"None",false)) {
			if(!type) format(stringer, sizeof(stringer), "%s%s\n", stringer, PickName[i]);
			else format(stringer, sizeof(stringer), "%s%s - %d\n", stringer, PickName[i], PickTime[i]);
			full++;
		}
	}
	if(full == 0) ShowPlayerDialog(playerid, 0, 0, "Elections", "No candidates", "Close", "");
	else if(!type) ShowPlayerDialog(playerid, 8923, DIALOG_STYLE_LIST, "Elections", stringer, "Accept", "Cancle");
	else ShowPlayerDialog(playerid, 0, 0, "Elections", stringer, "Close", "");
	return true;
}
publics: LoadPick()
{
    new time = GetTickCount();
    new r, f, vresult[11];
    cache_get_data(r, f);
    if(r)
	{
		cache_get_row(0, 0, PickNames);
		cache_get_row(0, 2, PickTimes, connects, 32);
		cache_get_field_content(0, "pick", vresult); Pick = strval(vresult);
	}
	sscanf(PickNames, "p<,>s[32]s[32]s[32]s[32]s[32]s[32]s[32]",PickName[0],PickName[1], PickName[2], PickName[3], PickName[4], PickName[5], PickName[6]);
	sscanf(PickTimes, "p<,>a<i>[7]",PickTime);
	printf("[Loaded selections]: <->. Spent: <%i ms>.",GetTickCount()-time);
	if(Pick == 1)
	{
		vibor[1] = CreateDynamic3DTextLabel("{66CC00}Polling station",-1,1460.6282,-1792.1531,2995.6550,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
		golos[0] = CreateDynamicObject(3861, 358.13, 195.62, 1014.24,   0.00, 0.00, 0.00);
		golos[1] = CreateDynamicObject(2420, 340.12, 191.84, 1013.18,   0.00, 0.00, 93.16);
		golos[2] = CreateDynamicObject(2420, 340.05, 193.43, 1013.17,   0.00, 0.00, 92.45);
		golos[3] = CreateDynamicObject(2420, 339.99, 195.15, 1013.17,   0.00, 0.00, 92.45);
		Pickup1[0] = CreatePickupAC(1239,23,1463.6630,-1793.8279,2995.6477, 1);
		Pickup1[1] = CreatePickupAC(1239,23,1459.3619,-1793.9551,2995.6477, 1);
		Pickup1[2] = CreatePickupAC(1239,23,1458.0259,-1793.1298,2995.6477, 1);
		mapa = CreatePickupAC(1239,23,1460.6693,-1792.1498,2995.6550, 1);
	}
	return true;
}
publics: family_loading ( )
{
    new rows, fields, temp [ 32 ];
    cache_get_data ( rows, fields ) ;
    family_count = rows;
    if ( rows )
    {
        for ( new f = 1; f <= rows ; f++ )
        {
            family_info [ f ][ f_id ] = cache_get_field_content_int (f-1, "fam_id");
            cache_get_field_content (f-1, "fam_name", temp ) , sscanf ( temp, "s[32]", family_info [ f ] [ f_name ] ) ;
            cache_get_field_content (f-1, "fam_creator", temp ) , sscanf ( temp, "s[32]", family_info [ f ] [ f_creator ] ) ;
            cache_get_field_content (f-1, "fam_data", temp ) , sscanf ( temp, "s[32]", family_info [ f ] [ f_creating_data ] ) ;
            family_info [ f ][ f_chat_color ] = cache_get_field_content_int (f-1, "fam_chat_color" );
            family_info [ f ][ f_members_amount ] = cache_get_field_content_int (f-1, "fam_members_amount" );
            family_info [ f ][ f_nationality ] = cache_get_field_content_int (f-1, "fam_nationality" );
         }
    }
    else return print ( "[Family System] No families found in the database!" ) ;
    return 1;
}
stock SaveGZ(idx)
{
	format(mysql_query_, sizeof(mysql_query_), "UPDATE "TABLE_GANGZONE" SET ginfo1 = '%f', ginfo2 = '%f', ginfo3 = '%f', ginfo4 = '%f', fraction = %i WHERE id = %i",
	GZInfo[idx][gCoords][0], GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3],GZInfo[idx][gFrak], idx);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return true;
}
stock SaveGZLogo(i)
{
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE `gzlogo` SET `owner_1` = '%i',`owner_2` = '%i' WHERE `id` = '%d'", GZLogoInfo[i][gOwner][0], GZLogoInfo[i][gOwner][1], i+1);
    mysql_function_query(connects, mysql_query_, false, "", "");
	return true;
}
stock SetOtherInt(stolb[], znach)
{
	mysql_format(connects, mysql_query_,sizeof(mysql_query_), "UPDATE "TABLE_OTHER" SET `%s` = '%d'", stolb, znach);
	mysql_function_query(connects, mysql_query_, false, "", "");
}
stock Hook_GivePlayerMoney(playerid, amount, type = 0)
{
	if(amount != PlayerInfo[playerid][pCash]) PlayerInfo[playerid][pCash] += amount;
    if(type == 0)
    {
		new strvals[30];
	    if(amount >= 0) format(strvals,sizeof(strvals),"~w~+%d~g~$",amount);
	    else if(amount < 0) format(strvals,sizeof(strvals),"~w~%d~g~$",amount);
	    GameTextForPlayer(playerid, strvals, 1000, 1);
    }
//	if(GivePlayerMoney(playerid, amount)) return CallRemoteFunction("ac_GivePlayerMoney", "id", playerid, amount);
	return 0;
}
publics: OnLoadOtherCallback()
{
	new rows, fields, vresult[32];
	cache_get_data(rows, fields);
	cache_get_field_content(0, "FracBank[0][fLsnews]", vresult); FracBank[0][fLsnews] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fBallas]", vresult); FracBank[0][fBallas] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fVagos]", vresult); FracBank[0][fVagos] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fGrove]", vresult); FracBank[0][fGrove] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fAztek]", vresult); FracBank[0][fAztek] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fRifa]", vresult); FracBank[0][fRifa] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fAmmo]", vresult); FracBank[0][fAmmo] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fBallasn]", vresult); FracBank[0][fBallasn] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fVagosn]", vresult); FracBank[0][fVagosn] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fGroven]", vresult); FracBank[0][fGroven] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fAztekn]", vresult); FracBank[0][fAztekn] = strval(vresult);
	cache_get_field_content(0, "FracBank[0][fRifan]", vresult); FracBank[0][fRifan] = strval(vresult);
	cache_get_field_content(0, "MafiaBank[0][nLcn]", vresult); MafiaBank[0][nLcn] = strval(vresult);
	cache_get_field_content(0, "MafiaBank[0][nYakuza]", vresult); MafiaBank[0][nYakuza] = strval(vresult);
	cache_get_field_content(0, "MafiaBank[0][nRm]", vresult); MafiaBank[0][nRm] = strval(vresult);
	cache_get_field_content(0, "FracAlko[0][aAztec]", vresult); FracAlko[0][aAztec] = strval(vresult);
	cache_get_field_content(0, "FracAlko[0][aGrove]", vresult); FracAlko[0][aGrove] = strval(vresult);
	cache_get_field_content(0, "FracAlko[0][aBallas]", vresult); FracAlko[0][aBallas] = strval(vresult);
	cache_get_field_content(0, "FracAlko[0][aRifa]", vresult); FracAlko[0][aRifa] = strval(vresult);
	cache_get_field_content(0, "FracAlko[0][aVagos]", vresult); FracAlko[0][aVagos] = strval(vresult);
	cache_get_field_content(0, "armmatbi", vresult); armmatbi = strval(vresult);
	cache_get_field_content(0, "armmatsf", vresult); armmatsf = strval(vresult);
	cache_get_field_content(0, "rifamatbi", vresult); rifamatbi = strval(vresult);
	cache_get_field_content(0, "ballasmatbi", vresult); ballasmatbi = strval(vresult);
	cache_get_field_content(0, "aztekmatbi", vresult); aztekmatbi = strval(vresult);
	cache_get_field_content(0, "vagosmatbi", vresult); vagosmatbi = strval(vresult);
	cache_get_field_content(0, "groovmatbi", vresult); groovmatbi = strval(vresult);
	cache_get_field_content(0, "lspdmatbi", vresult); lspdmatbi = strval(vresult);
	cache_get_field_content(0, "fbimats", vresult); fbimats = strval(vresult);
	cache_get_field_content(0, "yakuzamats", vresult); yakuzamats = strval(vresult);
	cache_get_field_content(0, "rmmats", vresult); rmmats = strval(vresult);
	cache_get_field_content(0, "lcnmats", vresult); lcnmats = strval(vresult);
	cache_get_field_content(0, "sfpdmats", vresult); sfpdmats = strval(vresult);
	cache_get_field_content(0, "lvpdmats", vresult); lvpdmats = strval(vresult);
	cache_get_field_content(0, "sklads", vresult, connects, 32); sscanf(vresult, "p<,>a<i>[5]",FracBank[0][fLock]);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {28f66a}%i\n\n\n{82079f}Gang safe\n{82079f}Ballas Gang\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 KG\n{ffffff}First aid kits:{e8c814} %d from 10000 G\n{FFFFFF}Gang safe: %s",TotalGzB,TotalGraf[1],formatInt(FracBank[0][fBallas]),ballasmatbi,FracBank[0][fBallasn],FracBank[0][fLock][1] ? ("{FF0000}Closed") : ("{00CC00}Open"));
	SkladB = CreateDynamic3DTextLabel(stringer,Cvet_4,-58.0202,1366.2246,1080.2109,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,34,-1,-1,100.0);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {28f66a}%i\n\n\n{f4a416}Gang safe\n{f4a416}Los Santos Vagos\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 KG\n{ffffff}First aid kits:{e8c814} %d from 10000 G\n{FFFFFF}Gang safe: %s",TotalGzV,TotalGraf[4],formatInt(FracBank[0][fVagos]),vagosmatbi,FracBank[0][fVagosn],FracBank[0][fLock][2] ? ("{FF0000}Closed") : ("{00CC00}Open"));
	SkladV = CreateDynamic3DTextLabel(stringer,Cvet_4,300.5920,307.3983,1003.5391,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,75,-1,-1,100.0);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {28f66a}%i\n\n\n{4de412}Gang safe\n{4de412}The Groove Street\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 KG\n{ffffff}First aid kits:{e8c814} %d from 10000 G\n{FFFFFF}Gang safe: %s",TotalGzG,TotalGraf[0],formatInt(FracBank[0][fGrove]),groovmatbi,FracBank[0][fGroven],FracBank[0][fLock][0] ? ("{FF0000}Closed") : ("{00CC00}Open"));
	SkladG = CreateDynamic3DTextLabel(stringer,Cvet_4,2492.4380,-1708.5669,1018.3368,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,-1,-1,100.0);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {28f66a}%i\n\n\n{12b4ea}Gang safe\n{12b4ea}Rifa Gang\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 KG\n{ffffff}First aid kits:{e8c814} %d from 10000 G\n{FFFFFF}Gang safe: %s",TotalGzR,TotalGraf[2],formatInt(FracBank[0][fRifa]),rifamatbi,FracBank[0][fRifan],FracBank[0][fLock][4] ? ("{FF0000}Closed") : ("{00CC00}Open"));
	SkladR = CreateDynamic3DTextLabel(stringer,Cvet_4,-219.9122,1407.0699,27.7656,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,63,-1,-1,100.0);
	format(stringer,sizeof(stringer),"{FFFFFF}Number of territories: {28f66a}%i\n\n\n{0cdbf2}Gang safe\n{0cdbf2}Varios Los Aztecas\n\n\n{FFFFFF}Graffiti painted over: {e8c814}%i\n{ffffff}Money:{e8c814} %s from 10.000.000$\n{ffffff}Materials:{e8c814} %d from 300000 KG\n{ffffff}First aid kits:{e8c814} %d from 10000 G\n{FFFFFF}Gang safe: %s",TotalGzA,TotalGraf[3],formatInt(FracBank[0][fAztek]),aztekmatbi,FracBank[0][fAztekn],FracBank[0][fLock][3] ? ("{FF0000}Closed") : ("{00CC00}Open"));
	SkladA = CreateDynamic3DTextLabel(stringer,Cvet_4,-46.0471,1398.3119,1084.4297,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,36,-1,-1,100.0);
	return true;
}
stock SaveOther()
{
	new query[1600];
	query = "UPDATE `"TABLE_OTHER"` SET ";
	acc_int_strcat(query, sizeof(query), "FracBank[0][fLsnews]", FracBank[0][fLsnews]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fBallas]", FracBank[0][fBallas]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fVagos]", FracBank[0][fVagos]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fGrove]", FracBank[0][fGrove]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fAztek]", FracBank[0][fAztek]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fRifa]", FracBank[0][fRifa]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fAmmo]", FracBank[0][fAmmo]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fBallasn]", FracBank[0][fBallasn]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fVagosn]", FracBank[0][fVagosn]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fGroven]", FracBank[0][fGroven]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fAztekn]", FracBank[0][fAztekn]);
	acc_int_strcat(query, sizeof(query), "FracBank[0][fRifan]", FracBank[0][fAmmo]);
	acc_int_strcat(query, sizeof(query), "MafiaBank[0][nLcn]", MafiaBank[0][nLcn]);
	acc_int_strcat(query, sizeof(query), "MafiaBank[0][nYakuza]", MafiaBank[0][nYakuza]);
	acc_int_strcat(query, sizeof(query), "MafiaBank[0][nRm]", MafiaBank[0][nRm]);
	acc_int_strcat(query, sizeof(query), "FracAlko[0][aAztec]", FracAlko[0][aAztec]);
	acc_int_strcat(query, sizeof(query), "FracAlko[0][aGrove]", FracAlko[0][aGrove]);
	acc_int_strcat(query, sizeof(query), "FracAlko[0][aBallas]", FracAlko[0][aBallas]);
	acc_int_strcat(query, sizeof(query), "FracAlko[0][aRifa]", FracAlko[0][aRifa]);
	acc_int_strcat(query, sizeof(query), "FracAlko[0][aVagos]", FracAlko[0][aVagos]);
	acc_int_strcat(query, sizeof(query), "armmatbi",armmatbi);
	acc_int_strcat(query, sizeof(query), "armmatsf",armmatsf);
	acc_int_strcat(query, sizeof(query), "rifamatbi",rifamatbi);
	acc_int_strcat(query, sizeof(query), "ballasmatbi",ballasmatbi);
	acc_int_strcat(query, sizeof(query), "aztekmatbi",aztekmatbi);
	acc_int_strcat(query, sizeof(query), "vagosmatbi",vagosmatbi);
	acc_int_strcat(query, sizeof(query), "groovmatbi",groovmatbi);
	acc_int_strcat(query, sizeof(query), "lspdmatbi",lspdmatbi);
	acc_int_strcat(query, sizeof(query), "fbimats",fbimats);
	acc_int_strcat(query, sizeof(query), "yakuzamats",yakuzamats);
	acc_int_strcat(query, sizeof(query), "rmmats",rmmats);
	acc_int_strcat(query, sizeof(query), "lcnmats",lcnmats);
	acc_int_strcat(query, sizeof(query), "sfpdmats",sfpdmats);
	acc_int_strcat(query, sizeof(query), "lvpdmats",lvpdmats);
	strdel(query, strlen(query)-1, strlen(query));
	mysql_function_query(connects, query, false, "", "");
}
publics: OnLoadMeriaCallback()
{
	new rows, fields, vresult[11];
	cache_get_data(rows, fields);
	cache_get_field_content(0, "Kazna", vresult); kazna = strval(vresult);
	cache_get_field_content(0, "Nalog", vresult); nalog = strval(vresult);
	new texts[150];
	format(texts,sizeof(texts),"{C2A2DA}State Treasury: {FFD700}%s\n{C2A2DA}State Tax: {FFD700}%s\n{C2A2DA}Donate money enter '/putkazna'", formatInt(kazna), formatInt(nalog));
	kaznameria = Create3DTextLabel(texts,0xC2A2DAFF,1482.2699,-1802.7987,2995.6277,20.0,1,1);
	return true;
}
stock SaveMeria()
{
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_MERIA"` SET `Kazna` = '%d', `Nalog` = '%d'",kazna, nalog);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return 1;
}
stock SetPlayerSkills(playerid)
{
	if(PlayerInfo[playerid][pSDPistol] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 0);
	if(PlayerInfo[playerid][pDesertEagle] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 0);
	if(PlayerInfo[playerid][pShotGun] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 0);
	if(PlayerInfo[playerid][pMP5] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
	if(PlayerInfo[playerid][pAK47] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 0);
	if(PlayerInfo[playerid][pM4] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 0);
	return true;
}
stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		Shot[playerid]++;
		switch(GetPlayerWeapon(playerid))
		{
		case 24: if(Shot[playerid] >= 25 && PlayerInfo[playerid][pDesertEagle] < 100) PlayerInfo[playerid][pDesertEagle]++, Shot[playerid] = 0;
		case 23: if(Shot[playerid] >= 25 && PlayerInfo[playerid][pSDPistol] < 100) PlayerInfo[playerid][pSDPistol]++, Shot[playerid] = 0;
		case 25: if(Shot[playerid] >= 50 && PlayerInfo[playerid][pShotGun] < 100) PlayerInfo[playerid][pShotGun]++, Shot[playerid] = 0;
		case 29: if(Shot[playerid] >= 50 && PlayerInfo[playerid][pMP5] < 100) PlayerInfo[playerid][pMP5]++, Shot[playerid] = 0;
		case 30: if(Shot[playerid] >= 50 && PlayerInfo[playerid][pAK47] < 100) PlayerInfo[playerid][pAK47]++, Shot[playerid] = 0;
		case 31: if(Shot[playerid] >= 50 && PlayerInfo[playerid][pM4] < 100) PlayerInfo[playerid][pM4]++, Shot[playerid] = 0;
		}
	}
	return true;
}
stock GetPlayerID(string[])
{
	foreach(Player,i) if(strcmp(PlayerInfo[i][pNames], string, true, strlen(string)) == 0) return i;
	return INVALID_PLAYER_ID;
}
stock SCMAH(color, string[])
{
	foreach(Player,i)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pAlcoInvenxua] > 0 || PlayerInfo[i][pHelper] > 0) SendClientMessage(i, color, string);
	}
	return true;
}
stock SendAdminMessage(color, string[]) {
	foreach(new i : Admin) SendClientMessage(i, color, string);
	return true;
}
/*stock SendHelperMessage(color, string[])
{
	foreach(Player,i)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pHelper] > 0) SendClientMessage(i, color, string);
	}
	return true;
}*/
stock SendVipMessage(color, string[])
{
    foreach(Player,i)
    {
        if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
        if(PlayerInfo[i][pDonateRank] > 0) SendClientMessage(i, color, string);
    }
    return true;
}
stock SendHelperMessage(color, string[])
{
    foreach(Player,i)
    {
        if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
        if(PlayerInfo[i][pHelper] > 0) SendClientMessage(i, color, string);
    }
    return true;
}
stock SendFamilyMessage(family, color, string[])
{
	foreach(Player,i)
	{
		if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if((PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family) && PlayerInfo[i][Settings][5] < 1) SendClientMessage(i, color, string);
	}
	return true;
}
stock SendTeamMessage(color, string[])
{
	foreach(Player,i)
	{
		if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		switch(PlayerInfo[i][pMember])
		{
			case 1,2,3,4, 7, 10, 11, 19, 21, 25,26:
			{
				if(PlayerInfo[i][pOdet] == 0) continue;
				if(PlayerInfo[i][Settings][5] > 0) continue;
				SendClientMessage(i,color,string);
			}
		}
	}
	return true;
}

stock SendRadioMessage(member, color, string[])
{
	foreach(Player,i)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		{
	        switch(PlayerInfo[i][pMember])
		    {
			    case 1,2,3,4, 7, 10, 11, 19, 21, 25,26:
			    {
				    if(PlayerInfo[i][pOdet] == 0) continue;
					if(PlayerInfo[i][Settings][5] > 0) continue;
				    SendClientMessage(i,color,string);
			    }
			    default: SendClientMessage(i, color, string);
		    }
		}
	}
	return true;
}
stock RaceChat(color, string[])
{
	foreach(new i : RacersList)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(GetPVarInt(i, "PlayerInRace") != 0) SendClientMessage(i, color, string);
	}
}
stock SendAdminMessageToAll(color,const message[],ids = -1) {
	foreach(new i : Player) {
		if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][Settings][1] == 0 || ids == i || PlayerInfo[i][pAlcoInvenxua] > 0) SendClientMessage(i,color,message);
	}
	return true;
}
stock IsAnyPlayerInVehicle(vehicleid,seat)
{
	foreach(Player, i)
	{
		if (IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) return true;
	}
	return false;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
    SetPPos(playerid,fX,fY,fZ); SendClientMessage(playerid,COLOR_GREY,"You have successfully teleported");
    SetPlayerInteriorEx(playerid,0); SetPlayerVirtualWorldEx(playerid,0);
    return true;
}
stock KickEx(playerid) return SetTimerEx("PlayerKick",100,false,"d", playerid);

publics: OnPlayerCheckDonations(playerid, name[]) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
		new string[2000], data[32];
		string = "{FFFFFF}Date and time\t\t{FFFFFF}Amount";
		for(new i = 0; i < rows; i++) {
			cache_get_field_content(i, "dateComplete", data, connects, 32);
			format(string, sizeof(string), "%s\n{66e506}%s\t{66e506}%d rubles", string, data, cache_get_field_content_int(i, "sum"));
		}
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{f6d90b}Top-up history", string, "Close", "");
	} else {
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{5ae911}ERROR", "{FFFFFF}You have not replenished your account yet.\n{FFFFFF}You can top up your account on our website - {5ae911}"PAGE_SITE" {FFFFFF}in the {3399FF}\"Donation section\"", "Ok", "");
	}
	return true;
}

publics: OnPlayerCheckName(playerid, inputtext[])
{
    new stext[128], rows, fields;
    cache_get_data(rows, fields);
	if(rows) return SendClientMessage(playerid, -1, "ERROR: this nickname is occupied by another player");
    else
    {
		if(GetPVarInt(playerid, "ChangeAdminName"))
		{
			new s2text[132];
			DeletePVar(playerid, "ChangeAdminName");
			format(s2text, sizeof(s2text), "UPDATE `used_promocodes` SET `Name` = '%s' WHERE `Name` = '%s'", inputtext, PlayerInfo[playerid][pNames]), mysql_function_query(connects, s2text, false, "", "");
			format(s2text, sizeof(s2text), "%s Changed name to %s", PlayerInfo[playerid][pNames], inputtext); SendClientMessageToAll(0x99cc00AA,s2text);
			format(s2text, sizeof(s2text), "UPDATE `accounts` SET `Name` = '%s' WHERE `pID` = '%d'", inputtext, PlayerInfo[playerid][pID]), mysql_function_query(connects, s2text, false, "", "");
			SetPlayerName(playerid, inputtext), GetPlayerName(playerid, PlayerInfo[playerid][pNames], 32);
			mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `setname` ( `account`, `old_nick`, `new_nick`, `date` ) VALUES ( '%d', '%s', '%e', '%d')", PlayerInfo[playerid][pID], PlayerInfo[playerid][pNames], inputtext, gettime());
			mysql_function_query(connects, mysql_query_, false, "", "" );
			ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFA200}Name changed successfully","{FFFFFF}Do not forget to change the name in the SA-MP client window \nWe recommend that you close the game right now and do it.", "Ok", "");
			new housekey = PlayerInfo[playerid][pPhousekey];
			PlayerInfo[playerid][pRub] -= 49;
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
			if (housekey != 255)
			{
				strmid(HouseInfo[housekey][hOwner], stext, 0, strlen(stext), 255);
				SaveHouse(housekey);
			}
			if(GetPlayerBizz(playerid))
			{
				new i = GetPVarInt(playerid, "PlayerBizz");
				strmid(BizzInfo[i][bOwner],stext,0,strlen(stext),MAX_PLAYER_NAME);
				SaveBizz(i);
				UpdateBizz(i);
			}
			if(PlayerInfo[playerid][pFamily])
			{
				new query[256];
				format(query, sizeof(query), "UPDATE `family_system` SET `fam_creator` = '%s' WHERE `fam_id` = %d", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pFamily]);
				mysql_function_query(connects, query, false, "", "");
			}
			return true;
		}
	}
	return true;
}

publics: PlayerKick(playerid)
{
	printf("> Player %s was kicked from the server. [ID: %d][IP: %s]",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pIP]);
	Kick(playerid);
	return true;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    if(passenger_seat)
    {
		if(vel_x == 0.000000 && vel_y == 0.000000 && vel_z == 400.000000) return 0;
        new Float:x, Float:y, Float:z;
        GetVehiclePos(vehicleid,x,y,z);
        if(GetFloatDifference(x,VEHICLE [vehicleid-1][v_X]) > 10.0 || GetFloatDifference(y,VEHICLE [vehicleid-1][v_Y]) > 10.0)
        {
            VEHICLE[vehicleid-1][v_X] = x;
            VEHICLE[vehicleid-1][v_X] = y;
            VEHICLE[vehicleid-1][v_Z] = z;
            if(checkveh[vehicleid] < gettime())
            {
                SetPVarInt(playerid,"Car_Shot_Warning",GetPVarInt(playerid,"Car_Shot_Warning") + 1);
                if(GetPVarInt(playerid,"Car_Shot_Warning") == 4) AddCheater(playerid, 2);
            }
        }
    }
	if(new_x > 3000.0 && new_y == 0.0 && new_z > 3000.0)
	{
		KickEx(playerid);
		return 0;
	}
    return true;
}
public OnTrailerUpdate(playerid, vehicleid)
{
    return 1;
}
publics: OnPlayerCheckNames(playerid, inputtext[])
{
    new stext[128], rows, fields;
    cache_get_data(rows, fields);
	if(rows) return SendClientMessage(playerid, -1, "ERROR: this nickname is taken by another player");
    else
    {
		new s2text[132];
		DeletePVar(playerid, "ChangeName");
		format(s2text, sizeof(s2text), "UPDATE `used_promocodes` SET `Name` = '%s' WHERE `Name` = '%s'", inputtext, PlayerInfo[playerid][pNames]), mysql_function_query(connects, s2text, false, "", "");
		format(s2text, sizeof(s2text), "%s changed name to %s (VIA DONATE)", PlayerInfo[playerid][pNames], inputtext); SendClientMessageToAll(0x99cc00AA,s2text);
		format(s2text, sizeof(s2text), "UPDATE `accounts` SET `Name` = '%s' WHERE `pID` = '%d'", inputtext, PlayerInfo[playerid][pID]), mysql_function_query(connects, s2text, false, "", "");
		SetPlayerName(playerid, inputtext), GetPlayerName(playerid, PlayerInfo[playerid][pNames], 32);
		mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `setname` ( `account`, `old_nick`, `new_nick`, `date` ) VALUES ( '%d', '%s', '%e', '%d')", PlayerInfo[playerid][pID], PlayerInfo[playerid][pNames], inputtext, gettime());
		mysql_function_query(connects, mysql_query_, false, "", "" );
		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFA200}The name has been successfully changed","{FFFFFF}Don't forget to change the name in the SA-MP client window\nWe recommend minimizing the game right now and doing this.", "Ok", "");
		new housekey = PlayerInfo[playerid][pPhousekey];
		PlayerInfo[playerid][pRub] -= 0;
		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
		if (housekey != 255)
		{
			strmid(HouseInfo[housekey][hOwner], stext, 0, strlen(stext), 255);
			SaveHouse(housekey);
		}
		if(GetPlayerBizz(playerid))
		{
			new i = GetPVarInt(playerid, "PlayerBizz");
			strmid(BizzInfo[i][bOwner],stext,0,strlen(stext),MAX_PLAYER_NAME);
			SaveBizz(i);
			UpdateBizz(i);
		}
		if(PlayerInfo[playerid][pFamily])
		{
			new query[256];
			format(query, sizeof(query), "UPDATE `family_system` SET `fam_creator` = '%s' WHERE `fam_id` = %d", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pFamily]);
			mysql_function_query(connects, query, false, "", "");
		}
	}
	return true;
}
stock RemoveFromVehicle(playerid)
{
    RemovePlayerFromVehicle(playerid);
	minigun[playerid] += 4;
	return true;
}
publics: DiceOff()
{
	foreach(new i: Player)
	{
		if(!GetPVarInt(i, "OpustitRuki")) continue;
		DeletePVar(i, "OpustitRuki");
		if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
		ClearAnimations(i);
	}
}
stock acc_int_strcat(query[], len, name[], number)
{
    new string[100];
	format(string, sizeof(string), "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}
stock acc_float_strcat(query[], len, name[], Float:number)
{
    new string[100];
	format(string, sizeof(string), "`%s` = '%f',", name, number);
	strcat(query, string, len);
	return true;
}
stock acc_str_strcat(query[], len, name[], str[])
{
    new string[100];
	format(string, sizeof(string), "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}
publics: freezeplayer(playerid)
{
	TogglePlayerControllable(playerid,1);
}
publics: GETHP(playerid)
{
	new string[128];
	GetPlayerHealth(playerid,GMHP[playerid][1]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GMHP[playerid][1] >= 100.0) format(string, sizeof(string), "{ff0000}[ERROR 003/ANTI-GM]: {bbbbbb}%s[%i] uses gm/cleo scripts..", PlayerInfo[playerid][pNames],playerid), SendAdminMessage(-1,string);
		else format(string, sizeof(string), "{34c924}[ANTI-GM] {bbbbbb}%s[%i] does not use gm/cleo scripts.", PlayerInfo[playerid][pNames],playerid), SendAdminMessage(-1,string), SetPlayerHealthAC(playerid, GMHP[playerid][0]), SetPlayerArmour(playerid, GMARMOUR[playerid][0]);
	}
	else
	{
		if(VEHHP[playerid][1] >= 10000.0) format(string, sizeof(string), "{ff0000}[ERROR 004/ANTI-GM]: {bbbbbb}%s[%i] uses gm/cleo scripts.", PlayerInfo[playerid][pNames],playerid), SendAdminMessage(COLOR_LIGHTRED,string), setVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
		else format(string, sizeof(string), "{34c924}[ANTI-GM] {bbbbbb}%s[%i] does not use gm/cleo scripts.", PlayerInfo[playerid][pNames],playerid), SendAdminMessage(COLOR_LIGHTRED,string), setVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
	}
}
public OnVehicleSpawn(vehicleid)
{
    GetVehiclePos(vehicleid, VEHICLE [ vehicleid-1 ][ v_X ], VEHICLE [ vehicleid-1 ][ v_Y ], VEHICLE [ vehicleid-1 ][ v_Z ]);
    GetVehicleZAngle(vehicleid, VEHICLE [ vehicleid-1 ][ v_A ]);
    Fuell[vehicleid] = 50.0;
    VEHICLE[vehicleid][vHealth] = 1000.0;
    VEHICLE[vehicleid][vLock] = 0;
    if(vehicleid >= derby[0] && vehicleid <= derby[10]) return LinkVehicleToInterior(vehicleid, 15), SetVehicleVirtualWorld(vehicleid, 1);
	foreach(Player,i)
	{
		if(vehicleid == caridhouse[i])
		{
            LinkVehicleToInterior(caridhouse[i], 1);
		    SetVehicleVirtualWorld(caridhouse[i], PlayerInfo[i][pPhousekey]+50);
			AddTune(i, GetPVarInt(i,"CarNomer"));
			break;
		}
	}
	if(Indicators_xqz[vehicleid][2]) DestroyDynamicObject(Indicators_xqz[vehicleid][2]), DestroyDynamicObject(Indicators_xqz[vehicleid][3]),Indicators_xqz[vehicleid][2]=0;
    if(Indicators_xqz[vehicleid][0]) DestroyDynamicObject(Indicators_xqz[vehicleid][0]), DestroyDynamicObject(Indicators_xqz[vehicleid][1]),Indicators_xqz[vehicleid][0]=0;
	return true;
}
publics: OnPlayerCheckPassword(playerid, pass[], name[]) {
	new salt[12], newpass[65], string[80];
	cache_get_field_content(0, "salt", salt, connects, 11);
	SHA256_PassHash(pass, salt, newpass, 65);
	format(stringer1, sizeof(stringer1), "UPDATE `accounts` SET `password` = '%s' WHERE `Name` = '%s'", newpass, name);
	mysql_function_query(connects, stringer1, false, "", "");
	format(string, sizeof(string), "New account password %s %s", pass, name);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return true;
}
/*publics: OnPlayerRegCheck(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new string[256], ping;
		cache_get_field_content(0, "password", PlayerInfo[playerid][pPassword], connects, 65);
		cache_get_field_content(0, "salt", PlayerInfo[playerid][pSalt], connects, 11);
		ping = GetPlayerPing(playerid);
		format(string, sizeof(string), "{FFFFFF}Welcome to the server {3399FF}"NAME_SERVER" Role Play{FFFFFF}\nYour nickname is registered.\n\nLogin � {00ff00}%s{FFFFFF}\nPing � {00ff00}%d{FFFFFF}\n\nEnter the password for your account in the field below", PlayerInfo[playerid][pNames], (ping == 65535) ? 53 : ping);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{0099CC}Login", string, "Join", "Cancle");
	}
	else
	{
		PlayerRegMode[playerid] = 2;
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{FFFF00}Account registration {FFFFFF}| AP-RP", "{FFFFFF}Welcome to the server � {3399FF}"NAME_SERVER" Role Play{FFFFFF}\nThis account {00ff00}free {FFFFFF}for registration\n\nEnter the password for your account\nIt will be requested every time you log into the server.\n\n\t{FF0000}Important:\n\t{FFFFFF}� Password length from 6 to 15 characters\n\t� The password can consist of Russian and Latin characters\n\t� Password is case sensitive", "Next", "");
	}
	PreloadAllAnims(playerid);
	ClearAnimations(playerid);
	return true;
}*/
publics: OnPlayerRegCheck(playerid)
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
    {
        new string[256];
        cache_get_field_content(0, "password", PlayerInfo[playerid][pPassword], connects, 65);
        cache_get_field_content(0, "salt", PlayerInfo[playerid][pSalt], connects, 11);
        format(string, sizeof(string), "{FFFFFF}That username is registered, please enter your password below.\n\n{32a84e}Username: {ffffff}%s \n\n{32a84e}Password:", PlayerInfo[playerid][pNames]);
        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{32a84e}Login", string, "Join", "Cancle");
    }
    else
    {
        PlayerRegMode[playerid] = 2;
        ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Account registration | EL-RP", "Welcome to the server � {3399FF}New York RolePlay{FFFFFF}\nEnter the password for your account\nIt will be requested every time you log into the server.\n\n\t{32a84e}Important:\n\t{FFFFFF}� Password length from 6 to 15 characters\n\t� The password can consist of English characters\n\t� Password is case sensitive", "Next", "");
    }
    PreloadAllAnims(playerid);
    ClearAnimations(playerid);
    return true;
}
stock OnPlayerUpdateRL(playerid)
{
    new query[2348],string[128];
	if(gPlayerLogged[playerid] == 1 && IsPlayerConnected(playerid))
	{
	    if(saveplayer[playerid] != 0) return true;
	    saveplayer[playerid] = 5;
		query = "UPDATE `"TABLE_ACCOUNT"` SET ";
		acc_int_strcat(query, sizeof(query), "pLevel", PlayerInfo[playerid][pLevel]);
		acc_int_strcat(query, sizeof(query), "pPhousekey", PlayerInfo[playerid][pPhousekey]);
		acc_float_strcat(query, sizeof(query), "pFuelcar", PlayerInfo[playerid][pFuelcar]);
		acc_int_strcat(query, sizeof(query), "pHeadValue", PlayerInfo[playerid][pHeadValue]);
		acc_int_strcat(query, sizeof(query), "pContract", PlayerInfo[playerid][pContract]);
		acc_int_strcat(query, sizeof(query), "pCar", PlayerInfo[playerid][pCar]);
		acc_int_strcat(query, sizeof(query), "pCar2", PlayerInfo[playerid][pCar2]);
		acc_int_strcat(query, sizeof(query), "pHelper", PlayerInfo[playerid][pHelper]);
		acc_int_strcat(query, sizeof(query), "pDonatemoney2", PlayerInfo[playerid][pDonatemoney2]);
		acc_int_strcat(query, sizeof(query), "pDonateRank", PlayerInfo[playerid][pDonateRank]);
		acc_int_strcat(query, sizeof(query), "pMuted", PlayerInfo[playerid][pMuted]);
		acc_int_strcat(query, sizeof(query), "pExp", PlayerInfo[playerid][pExp]);
		acc_int_strcat(query, sizeof(query), "pCash", PlayerInfo[playerid][pCash]);
		acc_int_strcat(query, sizeof(query), "pKills", PlayerInfo[playerid][pKills]);
		acc_int_strcat(query, sizeof(query), "pJailed", PlayerInfo[playerid][pJailed]);
		acc_int_strcat(query, sizeof(query), "pKills", PlayerInfo[playerid][pKills]);
		acc_int_strcat(query, sizeof(query), "pJailTime", PlayerInfo[playerid][pJailTime]);
		acc_int_strcat(query, sizeof(query), "pMats", PlayerInfo[playerid][pMats]);
		acc_int_strcat(query, sizeof(query), "pHeal", PlayerInfo[playerid][pHeal]);
		acc_int_strcat(query, sizeof(query), "pLeader", PlayerInfo[playerid][pLeader]);
		acc_int_strcat(query, sizeof(query), "pMember", PlayerInfo[playerid][pMember]);
		acc_int_strcat(query, sizeof(query), "pRank", PlayerInfo[playerid][pRank]);
		acc_int_strcat(query, sizeof(query), "pJob", PlayerInfo[playerid][pJob]);
		acc_int_strcat(query, sizeof(query), "pVodPrava", PlayerInfo[playerid][pVodPrava]);
		acc_int_strcat(query, sizeof(query), "pFlyLic", PlayerInfo[playerid][pFlyLic]);
		acc_int_strcat(query, sizeof(query), "pBoatLic", PlayerInfo[playerid][pBoatLic]);
		acc_int_strcat(query, sizeof(query), "pFishLic", PlayerInfo[playerid][pFishLic]);
		acc_int_strcat(query, sizeof(query), "pGunLic", PlayerInfo[playerid][pGunLic]);
		acc_int_strcat(query, sizeof(query), "pSDPistol", PlayerInfo[playerid][pSDPistol]);
		acc_int_strcat(query, sizeof(query), "pDesertEagle", PlayerInfo[playerid][pDesertEagle]);
		acc_int_strcat(query, sizeof(query), "pShotGun", PlayerInfo[playerid][pShotGun]);
		acc_int_strcat(query, sizeof(query), "pMP5", PlayerInfo[playerid][pMP5]);
		acc_int_strcat(query, sizeof(query), "pAK47", PlayerInfo[playerid][pAK47]);
		acc_int_strcat(query, sizeof(query), "pM4", PlayerInfo[playerid][pM4]);
		acc_int_strcat(query, sizeof(query), "pChar", PlayerInfo[playerid][pChar]);
		acc_int_strcat(query, sizeof(query), "pModel", PlayerInfo[playerid][pModel]);
		acc_int_strcat(query, sizeof(query), "pPnumber", PlayerInfo[playerid][pPnumber]);
		acc_int_strcat(query, sizeof(query), "pPayDayHad", PlayerInfo[playerid][pPayDayHad]);
		acc_int_strcat(query, sizeof(query), "pWarns", PlayerInfo[playerid][pWarns]);
		acc_int_strcat(query, sizeof(query), "punWarns", PlayerInfo[playerid][punWarns]);
		acc_int_strcat(query, sizeof(query), "punWarnstime", PlayerInfo[playerid][punWarnstime]);
		acc_int_strcat(query, sizeof(query), "pFuel", PlayerInfo[playerid][pFuel]);
		acc_int_strcat(query, sizeof(query), "pRobTime", PlayerInfo[playerid][pRobTime]);
		acc_int_strcat(query, sizeof(query), "pReportTime", PlayerInfo[playerid][pReportTime]);
		acc_int_strcat(query, sizeof(query), "pVerevka", PlayerInfo[playerid][pVerevka]);
		acc_int_strcat(query, sizeof(query), "pOtmbI4ka", PlayerInfo[playerid][pOtmbI4ka]);
		acc_int_strcat(query, sizeof(query), "pAutoTime", PlayerInfo[playerid][pAutoTime]);
		acc_int_strcat(query, sizeof(query), "pAutoSkill", PlayerInfo[playerid][pAutoSkill]);
		acc_int_strcat(query, sizeof(query), "pMarried", PlayerInfo[playerid][pMarried]);
		acc_int_strcat(query, sizeof(query), "pMuteTime", PlayerInfo[playerid][pMuteTime]);
		acc_int_strcat(query, sizeof(query), "pMobile", PlayerInfo[playerid][pMobile]);
		acc_int_strcat(query, sizeof(query), "pBank", PlayerInfo[playerid][pBank]);
		acc_int_strcat(query, sizeof(query), "pBoxSkill", PlayerInfo[playerid][pBoxSkill]);
		acc_int_strcat(query, sizeof(query), "pKongfuSkill", PlayerInfo[playerid][pKongfuSkill]);
		acc_int_strcat(query, sizeof(query), "pKickboxSkill", PlayerInfo[playerid][pKickboxSkill]);
		acc_int_strcat(query, sizeof(query), "pFightSkill", PlayerInfo[playerid][pFightSkill]);
		acc_int_strcat(query, sizeof(query), "pFightSkil", PlayerInfo[playerid][pFightSkil]);
		acc_int_strcat(query, sizeof(query), "pFightTime", PlayerInfo[playerid][pFightTime]);
		acc_int_strcat(query, sizeof(query), "pHospital", PlayerInfo[playerid][pHospital]);
		acc_int_strcat(query, sizeof(query), "pIzol", PlayerInfo[playerid][pIzol]);
		acc_int_strcat(query, sizeof(query), "pZakonp", PlayerInfo[playerid][pZakonp]);
		acc_int_strcat(query, sizeof(query), "pNarcoLomka", PlayerInfo[playerid][pNarcoLomka]);
        acc_int_strcat(query, sizeof(query), "pProz", PlayerInfo[playerid][pProz]);
		acc_int_strcat(query, sizeof(query), "pMestoJail", PlayerInfo[playerid][pMestoJail]);
		acc_int_strcat(query, sizeof(query), "pWanted", PlayerInfo[playerid][pWanted]);
		acc_int_strcat(query, sizeof(query), "pHousecash", PlayerInfo[playerid][pHousecash]);
		acc_int_strcat(query, sizeof(query), "pRub", PlayerInfo[playerid][pRub]);
		acc_int_strcat(query, sizeof(query), "pFacPoint", PlayerInfo[playerid][pFacPoint]);
		acc_int_strcat(query, sizeof(query), "pGold", PlayerInfo[playerid][pGold]);
		if(PlayerInfo[playerid][pSaveWeapon] == 1)
		{
			format(PlayerInfo[playerid][pWeapons],64,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PlayerInfo[playerid][Weapon][0], PlayerInfo[playerid][Weapon][1], PlayerInfo[playerid][Weapon][2], PlayerInfo[playerid][Weapon][3],
			PlayerInfo[playerid][Weapon][4], PlayerInfo[playerid][Weapon][5], PlayerInfo[playerid][Weapon][6], PlayerInfo[playerid][Weapon][7], PlayerInfo[playerid][Weapon][8], PlayerInfo[playerid][Weapon][9], PlayerInfo[playerid][Weapon][10],
			PlayerInfo[playerid][Weapon][11], PlayerInfo[playerid][Weapon][12]);
			format(PlayerInfo[playerid][Ammos],64,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PlayerInfo[playerid][Ammo][0], PlayerInfo[playerid][Ammo][1], PlayerInfo[playerid][Ammo][2], PlayerInfo[playerid][Ammo][3],
			PlayerInfo[playerid][Ammo][4], PlayerInfo[playerid][Ammo][5], PlayerInfo[playerid][Ammo][6], PlayerInfo[playerid][Ammo][7], PlayerInfo[playerid][Ammo][8], PlayerInfo[playerid][Ammo][9], PlayerInfo[playerid][Ammo][10],
			PlayerInfo[playerid][Ammo][11], PlayerInfo[playerid][Ammo][12]);
			acc_str_strcat(query, sizeof(query), "Weapons", PlayerInfo[playerid][pWeapons]);
			acc_str_strcat(query, sizeof(query), "Ammos", PlayerInfo[playerid][Ammos]);
		}
		format(PlayerInfo[playerid][pTexts],16,"%i, %i, %i",PlayerInfo[playerid][Texts][0],PlayerInfo[playerid][Texts][1],PlayerInfo[playerid][Texts][2]);
		acc_int_strcat(query, sizeof(query), "day_online", PlayerInfo[playerid][pDayOnline]);
		acc_int_strcat(query, sizeof(query), "pDayAfk", PlayerInfo[playerid][pDayAfk]);
		acc_str_strcat(query, sizeof(query), "Texts", PlayerInfo[playerid][pTexts]);
		acc_int_strcat(query, sizeof(query), "SkinHome1", PlayerInfo[playerid][pSkinhome][0]);
		acc_int_strcat(query, sizeof(query), "SkinHome2", PlayerInfo[playerid][pSkinhome][1]);
		acc_int_strcat(query, sizeof(query), "SkinHome3", PlayerInfo[playerid][pSkinhome][2]);
		acc_int_strcat(query, sizeof(query), "pHomez", PlayerInfo[playerid][pHomez]);
		acc_int_strcat(query, sizeof(query), "satiety", PlayerInfo[playerid][pSatiety]);
		acc_int_strcat(query, sizeof(query), "pHotvet", PlayerInfo[playerid][pHotvet]);
		acc_int_strcat(query, sizeof(query), "family", PlayerInfo[playerid][pFamily]);
		//
		acc_int_strcat(query, sizeof(query), "pcWarn", PlayerInfo[playerid][pcWarn]);
		acc_int_strcat(query, sizeof(query), "pcBan", PlayerInfo[playerid][pcBan]);
  //
		acc_int_strcat(query, sizeof(query), "pRepAdm", PlayerInfo[playerid][pRepAdm]);
		acc_int_strcat(query, sizeof(query), "pKickAdm", PlayerInfo[playerid][pKickAdm]);
		acc_int_strcat(query, sizeof(query), "pWarnAdm", PlayerInfo[playerid][pWarnAdm]);
		acc_int_strcat(query, sizeof(query), "pBanAdm", PlayerInfo[playerid][pBanAdm]);
		acc_int_strcat(query, sizeof(query), "pMuteAdm", PlayerInfo[playerid][pMuteAdm]);
		acc_int_strcat(query, sizeof(query), "pJailAdm", PlayerInfo[playerid][pJailAdm]);
		acc_int_strcat(query, sizeof(query), "pUsedJail", PlayerInfo[playerid][pUsedJail]);
		new drugs[128];
		for(new i = 0; i < 7; i++) format(drugs, sizeof drugs, "%s%d ", drugs, PlayerInfo[playerid][p_drugs][i]);
		acc_str_strcat(query, sizeof(query), "drugs", drugs);
		strdel(query, strlen(query)-1, strlen(query));//������� �������
		format(string,sizeof(string)," WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
		strcat(query, string);
		mysql_function_query(connects, query, false, "", "");
	}
	return true;
}
publics: Logs(playerid, type, page)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "No history found.");
	enum LOG_DATE
	{
		number,
		act,
		summa,
		trasfer_number,
		nick[24],
		logdate[32]
	}
	new Crazy[1][LOG_DATE], string[1500];
	if(type == 1) {
		for(new i; i < rows; i++)
    	{
    		Crazy[0][number] = cache_get_field_content_int(i, "number", connects);
    		Crazy[0][act] = cache_get_field_content_int(i, "act", connects);
    		Crazy[0][summa] = cache_get_field_content_int(i, "summa", connects);
    		Crazy[0][trasfer_number] = cache_get_field_content_int(i, "trasfer_number", connects);
        	cache_get_field_content(i, "nick", Crazy[0][nick], connects, 24);
        	cache_get_field_content(i, "date", Crazy[0][logdate], connects, 32);
        	if(Crazy[0][act] == 0) format(stringer1, sizeof(stringer1), "{FF0000}[%s]{FFFFFF} On account credited %s Money\n", Crazy[0][logdate],formatInt(Crazy[0][summa]));
        	else if(Crazy[0][act] == 1) format(stringer1, sizeof(stringer1), "{FF0000}[%s]{FFFFFF} Account withdrawn %s Money\n", Crazy[0][logdate],formatInt(Crazy[0][summa]));
        	else if(Crazy[0][act] == 2 && Crazy[0][number] == PlayerInfo[playerid][pID]) format(stringer1, sizeof(stringer1), "{FF0000}[%s]{FFFFFF} Transferred to main account (name %s) %s Money\n", Crazy[0][logdate],Crazy[0][nick],formatInt(Crazy[0][summa]));
        	else if(Crazy[0][act] == 2) format(stringer1, sizeof(stringer1), "{FF0000}[%s]{FFFFFF} To the account %d (named %s) translated %s Money\n", Crazy[0][logdate],Crazy[0][trasfer_number],Crazy[0][nick],formatInt(Crazy[0][summa]));
        	strcat(string, stringer1);
    	}
    	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Operations history", string, "Accept", "");
	}
	else if(type == 2) {
		for(new i; i < rows; i++)
    	{
        	cache_get_field_content(i, "ip", Crazy[0][nick], connects, 32);
        	cache_get_field_content(i, "date", Crazy[0][logdate], connects, 32);
        	Crazy[0][act] = cache_get_field_content_int(i, "status", connects);
  			format(stringer1, sizeof(stringer1), "{FFFFFF}%d. date: %s | IP: %s - %s\n", i+1, Crazy[0][logdate], Crazy[0][nick], Crazy[0][act] ? ("{09B000}Successfully{FFFFFF}") : ("{FF0000}Unsuccessful{FFFFFF}"));
        	strcat(string, stringer1);
		}
    	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Information about entering captcha", string, "Accept", "");
	}
	else if(type == 3) {
	    format(stringer1, sizeof(stringer1),"{FFFFFF}#\t{FFFFFF}Nickname\t{FFFFFF}Last login\t{FFFFFF}Status\n{FF6F00}>>\n<<\n"), strcat(string,stringer1);
		for(new i; i < rows; i++)
    	{
        	cache_get_field_content(i, "Name", Crazy[0][nick], connects, 32);
        	cache_get_field_content(i, "pGetonDate", Crazy[0][logdate], connects, 32);
        	Crazy[0][act] = cache_get_field_content_int(i, "pOnline", connects);
        	format(stringer1,sizeof(stringer1), "%d.\t%s\t{FF6F00}%s{FFFFFF}\t{FF6F00}%s{FFFFFF}\n",i+1,Crazy[0][nick],Crazy[0][logdate],Crazy[0][act] != 1001 ? ("{09B000}Online{FFFFFF}") : ("{FF0000}OFFline{FFFFFF}")), strcat(string,stringer1);
		}
		SetPVarInt(playerid, #page_str, page);
		format(stringer1, sizeof(stringer1), "{FF6F00}Players with the same IP (page #%d)", page);
    	return ShowPlayerDialog(playerid, 793, DIALOG_STYLE_TABLIST_HEADERS, stringer1, string, "Accept", "Cancle");
	}
	else if(type == 4) {
	    format(stringer1, sizeof(stringer1),"{FFFFFF}Nick\t{FFFFFF}Level\t{FFFFFF}Answers\t{FFFFFF}Status\n"), strcat(string,stringer1);
	    foreach (new i : Player)
	    {
		    if(PlayerInfo[i][pHelper] == 0) continue;
		    format(stringer1,sizeof(stringer1), "%s\t%d\t%d\t{09B000}Online\n",PlayerInfo[i][pNames],PlayerInfo[i][pHelper],PlayerInfo[i][pHotvet]), strcat(string,stringer1);
		}
		for(new i; i < rows; i++)
    	{
        	cache_get_field_content(i, "Name", Crazy[0][nick], connects, 32);
        	Crazy[0][summa] = cache_get_field_content_int(i, "pHelper", connects);
        	Crazy[0][number] = cache_get_field_content_int(i, "pHotvet", connects);
        	format(stringer1,sizeof(stringer1), "%s\t%d\t%d\t{FF0000}OFFline\n",Crazy[0][nick],Crazy[0][summa],Crazy[0][number]), strcat(string,stringer1);
		}
    	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_TABLIST_HEADERS, "{FF6F00}Helper statistics", string, "Accept", "Cancle");
	}
	else if(type == 5) {
		new time[6];
	    format(stringer1, sizeof(stringer1),"{FFFFFF}#\t{FFFFFF}From\t{FFFFFF}To\t{FFFFFF}Time\n"), strcat(string,stringer1);
		for(new i; i < rows; i++)
    	{
        	cache_get_field_content(i, "old_nick", Crazy[0][nick], connects, 24);
        	cache_get_field_content(i, "new_nick", Crazy[0][logdate], connects, 24);
        	Crazy[0][act] = cache_get_field_content_int(i, "date", connects);
        	gmtime(Crazy[0][act], time[0], time[1], time[2], time[3], time[4], time[5]);
        	format(stringer1,sizeof(stringer1), "%d.\t%s\t{FF6F00}%s{FFFFFF}\t%02d.%02d.%04d � %02d:%02d:%02d{FFFFFF}\n",i+1,Crazy[0][nick],Crazy[0][logdate], time[2], time[1], time[0], time[3]+3, time[4], time[5]), strcat(string,stringer1);
		}
    	return ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_TABLIST_HEADERS, "{FF6F00}History of changed nicknames", string, "Accept", "Cancle");
	}
	return true;
}
publics: OffWarn(playerid, tmp[], reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in the database.",tmp);
	new ids = cache_get_field_content_int(0, "pID", connects),
		warns = cache_get_field_content_int(0, "pWarns", connects) + 1
	;
	if(ids == 1 || ids == 3) return DelAdmin(playerid, 0);
	else if(warns < 3)
	{
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pWarns` = '%d', `pLeader` = '0', `pMember` = '0', `pRank` = '0', `punWarns` = '1', `punWarnstime` = '0' WHERE `pID` = '%d'", warns, ids);
		mysql_function_query(connects, mysql_query_, false, "", "");
		format(stringer1, sizeof(stringer1), "Adminstrator %s brewed %s from offline (%d / 3). Reason: %s",PlayerInfo[playerid][pNames], tmp, warns, reason);
		SendAdminMessage(COLOR_GREY,stringer1);
		format(stringer1, sizeof(stringer1), "issued a warning (%d / 3), with a reason: %s", warns, reason);
		Admin_Log(playerid, stringer1, tmp, gettime());
	}
	else {
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pWarns` = '0', `punWarns` = '0', `punWarnstime` = '0' WHERE `pID` = '%d'", ids);
		mysql_function_query(connects, mysql_query_, false, "", "");
		mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_BANLOG"` WHERE `name` = '%e'", tmp);
		mysql_function_query(connects, mysql_query_, true, "OffBan", "dsdsd",playerid, tmp, 2, reason, 0);
	}
	return true;
}
publics: CheckNumber(playerid, nubmer)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) {
		SendMes(playerid, COLOR_GREY, "-even, number %d does not exist.", nubmer);
		return ShowPlayerDialog(playerid,3253,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}�enter the account number to which\nyou want to transfer funds:","Next","Back");
	}
	SetPVarInt(playerid, "_banknumber", nubmer);
	cache_get_field_content(0, "owner", _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")], connects, 20);
	_INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = cache_get_field_content_int(0, "balance", connects);
	return ShowPlayerDialog(playerid,3254,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF} Enter the amount of money you want to transfer to the account you entered:","Next","Back");
}
publics: OnLeaderPanel(playerid, page)
{
	new rows, fields;
    cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid,-1,"� {AC0000}[ERROR] {ffffff}Information employee information not found.");
	page_identifier[playerid][0] = 0, page_number[playerid] = 0;
	enum LP_DATE
	{
		name[20],
		ids,
		rank,
		last_vhod[32]
	}
	new OFFLP[1][LP_DATE], string[1500];
	format(stringer1, sizeof(stringer1),"{FFFFFF}FirstName_LastName\t{FFFFFF}Rank\t{FFFFFF}Last entrance\n{FF6F00}Go to next page\nGo to the previous page\n"), strcat(string,stringer1);
	for(new i; i < rows; i++)
	{
		cache_get_field_content(i, "Name", OFFLP[0][name], connects, 20);
		OFFLP[0][ids] = cache_get_field_content_int(i, "pID", connects);
		OFFLP[0][rank] = cache_get_field_content_int(i, "pRank", connects);
		cache_get_field_content(i, "pGetonDate", OFFLP[0][last_vhod], connects, 32);
		page_identifier[playerid][page_number[playerid]] = OFFLP[0][ids], page_number[playerid]++;
		format(stringer1,sizeof(stringer1), "%d. %s\t[{FF6F00}%s (%d){FFFFFF}]\t[{FF6F00}%s{FFFFFF}]\n",i+1,OFFLP[0][name],fRankName[PlayerInfo[playerid][pMember]-1][OFFLP[0][rank]-1],OFFLP[0][rank],OFFLP[0][last_vhod]), strcat(string,stringer1);
	}
	SetPVarInt(playerid, #page_str, page);
	format(stringer1, sizeof(stringer1), "{FF6F00}List of OFFline players page #%d", page);
	return ShowPlayerDialog(playerid, 758, DIALOG_STYLE_TABLIST_HEADERS, stringer1, string, "Accept", "Cancle");
}
publics: OFFStats(playerid)
{
	new rows, fields;
    cache_get_data(rows, fields);
	if(!rows) return 1;
	new lastvhod[32], nicks [20];
	new rank = cache_get_field_content_int(0, "pRank", connects);
	new vigs = cache_get_field_content_int(0, "vigs", connects);
	if(!rank) return 1;
	cache_get_field_content(0, "Name", nicks, connects, 20);
	cache_get_field_content(0, "pGetonDate", lastvhod, connects, 32);
	format(stringer, sizeof(stringer), "{FFFFFF}FirstName_LastName: {FF6F00}%s\n{FFFFFF}Rank: {FF6F00}%s (%d)\n{FFFFFF}Reprimands: {FF6F00}%d / 3\n{FFFFFF}Was online: {FF6F00}%s{FFFFFF}\n- Fire\n- To raise\n- Downgrade\n- Give a reprimand\n- Remove the reprimand", nicks, fRankName[PlayerInfo[playerid][pMember]-1][rank-1], rank, vigs, lastvhod);
	return ShowPlayerDialog(playerid, 759, DIALOG_STYLE_LIST, "{FF6F00}Player Information", stringer, "Select", "Cancle");
}
publics: OFFLP_DATA(playerid, ids, act)
{
	new rows, fields;
    cache_get_data(rows, fields);
	if(!rows) return 1;
	new nicks[20];
	new rank = cache_get_field_content_int(0, "pRank", connects);
	new vigs = cache_get_field_content_int(0, "vigs", connects);
	cache_get_field_content(0, "Name", nicks, connects, 20);
	if(IsPlayerConnected(GetPlayerID(nicks))) return SendClientMessage(playerid,-1,"This player is online.");
	if(act == 4) {
        SendMes(playerid, -1, "You fired a player %s.",nicks);
		mysql_format(connects, mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0' WHERE `pID` = '%d'", ids);
	}
    else if(act == 5) {
        switch(PlayerInfo[playerid][pMember])
        {
   		    case 1,10,3,19,21: if(rank >= 14) return SendClientMessage(playerid, COLOR_GREY, "Rank cannot be higher [14] Action cancelled..");
            case 2,26,4,5,6,11,12,13,14,15,17,18,22,24,25,7: if(rank >= 9) return SendClientMessage(playerid, COLOR_GREY, "Rank cannot be higher [9] Action cancelled.");
            case 27,28: if(rank >= 4) return SendClientMessage(playerid, COLOR_GREY, "Rank cannot be greater than [4] Action canceled.");
            case 16: if(rank >= 12) return SendClientMessage(playerid, COLOR_GREY, "Rank cannot be greater than [12] Action canceled.");
            case 23: if(rank >= 11) return SendClientMessage(playerid, COLOR_GREY, "Rank cannot be greater than [11] Action canceled.");
        }
        SendMes(playerid, -1, "Promoted %s to rank %d.",nicks, rank+1);
		mysql_format(connects, mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pRank` = '%d' WHERE `pID` = '%d'", rank+1,ids);
	}
	else if(act == 6) {
		if(rank == 1) return SendClientMessage(playerid, COLOR_GREY, "The player has the first rank. Impossible to downgrade.");
        SendMes(playerid, -1, "You have demoted player %s to rank %d.",nicks, rank-1);
		mysql_format(connects, mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pRank` = '%d' WHERE `pID` = '%d'", rank-1,ids);
	}
	else if(act == 7) {
		vigs ++;
		if(vigs >= 3) {
            SendMes(playerid, -1, "You fired player %s (3/3).",nicks);
			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pLeader` = '0', `pRank` = '0', `odet` = '0' , `vigs` = '0' WHERE `pID` = '%d'", ids);
        }
		else {
            SendMes(playerid, -1, "You reprimanded player %s (%d/3).",nicks, vigs);
			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'", vigs,ids);
		}
	}
	else if(act == 8) {
		if(vigs == 0) return SendClientMessage(playerid, COLOR_GREY, "The player has no reprimands.");
        SendMes(playerid, -1, "You have removed a player's reprimand %s (%d/3).",nicks, vigs-1);
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'", vigs-1,ids);
	}
	mysql_tquery(connects, mysql_query_, "", "");
	return 1;
}
publics: OnFracRankLoad()
{
	new rows, fields, fraction, load_data[20];
	cache_get_data(rows, fields, connects);
	if(!rows) return print("Ranks not loaded.");
	for(new r = 0; r < rows; r++)
	{
	    fraction = cache_get_row_int(r,0);
	    for(new i = 1; i < 16; i++) {
		    cache_get_row(r,i,fRankName[fraction][i-1],connects,40);
	    }
	    cache_get_row(r,16,load_data,connects,20);
	    sscanf(load_data,"p<,>iiii",gFractionRank[fraction][0],gFractionRank[fraction][1],gFractionRank[fraction][2],gFractionRank[fraction][3]);
	}
	printf ("[Organization Ranks] Loaded: %d factions", rows);
	return 1;
}
publics: Delete(playerid,tmp[])
{
    new rows, fields, null = 0;
    cache_get_data(rows, fields);
    if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in the Database.",tmp);
    new ids = GetPlayerID(tmp);
    if(IsPlayerConnected(ids))
	{
        SendClientMessage(ids, COLOR_LIGHTRED,"Your account has been deleted for violating the server rules!");
        KickEx(ids);
    }
    for(new i = 1; i <= TOTALBIZZ;i++) if(!strcmp(BizzInfo[i][bOwner],tmp,false) && strcmp(BizzInfo[i][bOwner],"None",true) != 0) null = i;
    if(null != 0) ClearBizz(null);
    mysql_format(connects, mysql_query_,sizeof(mysql_query_),"DELETE FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e'",tmp);
    mysql_function_query(connects, mysql_query_, false, "", "");
    format(stringer1, sizeof(stringer1), "Adminstrator %s deleted account %s.",PlayerInfo[playerid][pNames], tmp);
    SendAdminMessage(COLOR_LIGHTRED, stringer1);
    Admin_Log(playerid, "deleted account", tmp, gettime());
    return true;
}
publics: UnBan(playerid, tmp[], type)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) {
		if(GetPVarInt(playerid, "BuyUnBan")) {DeletePVar(playerid, "BuyUnBan");}
		return SendClientMessage(playerid, COLOR_WHITE,"Player / IP address has not been blocked!");
	}
    if(!type) mysql_format(connects, mysql_query_, sizeof(mysql_query_), "DELETE FROM `"TABLE_BANLOG"` WHERE `name` = '%e'",tmp);
    else format(mysql_query_, sizeof(mysql_query_), "DELETE FROM `baniplog` WHERE `ip` = '%s'",tmp);
    mysql_function_query(connects, mysql_query_, false, "","");
	if(GetPVarInt(playerid, "BuyUnBan")) {
		DeletePVar(playerid, "BuyUnBan");
		PlayerInfo[playerid][pRub] -= 500;
		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
		return SendClientMessage(playerid, -1, "You have successfully bought an unbanned account!");
	}
	format(mysql_query_, sizeof(mysql_query_), "Adminstrator %s unlocked %s %s.",PlayerInfo[playerid][pNames], (!type) ? ("player:") : ("IP address:"),tmp);
	SendAdminMessage(COLOR_LIGHTRED,mysql_query_);
	Admin_Log(playerid, "unbanned", tmp, gettime());
	return true;
}
publics:BuyCmdCallback(playerid, CMD_i)
{
	if(PlayerInfo[playerid][pRub] < CMD_price[CMD_i]) return SendClientMessage(playerid,COLOR_GREY, "You don�t have enough rubles, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
	new CMDaccess[CMD_NUM + 1];
	new query[144];
	cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
	if(CMDaccess[CMD_i] == '1') return SendClientMessage(playerid,-1, "You already have this command!");
	CMDaccess[CMD_i] = '1';
	PlayerInfo[playerid][aiCMDaccess][CMD_i] = '1';
	new fstring[144];
	format(fstring, sizeof fstring, "You have successfully purchased the %s team for %i rubles.", CMD_names[CMD_i], (CMD_i != 4) ? CMD_price[CMD_i] : 399);
	SendClientMessage(playerid,-1,fstring);
	PlayerInfo[playerid][pRub] -= CMD_price[CMD_i];
	UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
	mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `CMDaccess` = '%s' WHERE `Name` = '%e'", CMDaccess, PlayerInfo[playerid][pNames]);
	mysql_function_query(connects, query, false, "", "");
	return true;
}
publics: Givedonate(playerid, tmp[], donate)
{
	new rows, fields, money[20];
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in database.",tmp);
	if(donate > 5000 || donate < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 0 and more than 5000");
	new ids = GetPlayerID(tmp);
	if(IsPlayerConnected(ids))
	{
	    PlayerInfo[ids][pDonatemoney2] += donate;
        format(stringer1, sizeof(stringer1),"Adminstrator: %s gave you %d donation points, now you have %d donation points.", PlayerInfo[playerid][pNames],donate,PlayerInfo[ids][pDonatemoney2]);
	    SendClientMessage(ids, COLOR_WHITE,stringer1);
    }
	cache_get_field_content(0, "pDonatemoney2", money);
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pDonatemoney2` = '%d' WHERE `Name` = '%e'",strval(money)+donate,tmp);
	mysql_function_query(connects, mysql_query_, false, "", "");
	SendMes(playerid, COLOR_WHITE, "Player %s has received a %d donation of points. His new balance: %d donation of points.", tmp, donate, strval(money)+donate);
	format(stringer1, sizeof(stringer1), "gave %d donation points",donate);
	Admin_Log(playerid, stringer1, tmp, gettime());
	return true;
}
publics: is_cmd_allow(playerid, CMD_id) {
	if (PlayerInfo[playerid][pAlcoInvenxua] < 1) return false;
	return (PlayerInfo[playerid][aiCMDaccess][CMD_id] == '1');
}
publics: setcmd_SQL_callback(playerid, Namets[], CMD_i, CMD_allow) {
	if (cache_get_row_count() < 1) return SendClientMessage(playerid, -1, "{ffffff}The player's name is not included in the");
	new CMDaccess[CMD_NUM + 1];
	new string[256];
	cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
	new CMDaccess_i_new = CMD_allow ? '1' : '0';
	new changed = CMDaccess[CMD_i] != CMDaccess_i_new;
	if(changed)
	{
		CMDaccess[CMD_i] = CMDaccess_i_new;
		mysql_format(connects, string, sizeof(string), "UPDATE `accounts` SET `CMDaccess` = '%s' WHERE `Name` = '%s'", CMDaccess, Namets);
		mysql_function_query(connects, string, false, "", "");

		foreach(new i: Player)
		{
			if(!IsPlayerConnected(i) || !PlayerInfo[i][pAlcoInvenxua]) continue;
			if(strcmp(PlayerInfo[i][pNames], Namets, true) != 0) continue;
			PlayerInfo[i][aiCMDaccess][CMD_i] = CMD_allow ? '1' : '0';
			if(CMD_allow) format(string, sizeof(string), "You were given a command %s.", CMD_names[CMD_i]);
			else format(string, sizeof(string), "Your team was taken away from you %s.", CMD_names[CMD_i]);
	        SendClientMessage(i, -1, string);
			break;
		}
	}
	if (changed)
	{
		if (CMD_allow) format(string, sizeof(string), "� {FFC800}You issued a command to %s player %s.", CMD_names[CMD_i], Namets);
		else format(string, sizeof(string), "� {FFC800}You took command %s from player %s.", CMD_names[CMD_i], Namets);
	}
	else
	{
		if (CMD_allow) format(string, sizeof(string), "� {FFC800}The %s command is already available to the player %s.", CMD_names[CMD_i], Namets);
		else format(string, sizeof(string), "� {FFC800}The command %s is no longer available to player %s.", CMD_names[CMD_i], Namets);
	}
	SendClientMessage(playerid, -1, string);
	return 1;
}
publics: SetVig_Date(playerid, tmp[], reason[], type)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in database.",tmp);
	new admin = cache_get_field_content_int(0, "pAlcoInvenxua", connects);
	new leader = cache_get_field_content_int(0, "pLeader", connects);
	new vigs = cache_get_field_content_int(0, "vigs", connects);
	if(!admin && !leader) return SendClientMessage(playerid,COLOR_WHITE,"The specified player is not an Adminstrator / Leader");
	if(admin && PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(admin > PlayerInfo[playerid][pAlcoInvenxua]) return true;
	if(admin == 13 && !FD(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You do not have the right to reprimand the Founder..");
	if(type == 1)
	{
		if(vigs <= 0) return SendClientMessage(playerid,COLOR_WHITE,"No reprimands.");
	    vigs --;
		if(leader && !admin)
		{
		    format(stringer1, sizeof(stringer1), "Adminstrator %s removed the warn to the leader of the faction %s: %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[leader], tmp, vigs, reason);
  		    SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		    format(stringer1, sizeof(stringer1), "removed the warn to the leader of the faction %s (%d/3) because of: %s", GetPlayerFracName[leader], vigs, reason);
  		    Admin_Log(playerid, stringer1, tmp, gettime());
    	    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `Name` = '%s'",vigs, tmp);
		    mysql_function_query(connects, mysql_query_, false, "", "");
        }
		else if(admin)
		{
		    format(stringer1, sizeof(stringer1), "Adminstrator %s warn Adminstrator %s a warn (%d/3). Reason: %s", PlayerInfo[playerid][pNames], tmp, vigs, reason);
		    SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		    format(stringer1, sizeof(stringer1), "removed the warn (%d/3), because of: %s", vigs, reason);
  		    Admin_Log(playerid, stringer1, tmp, gettime());
  		    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `Name` = '%s'", vigs, tmp);
		    mysql_function_query(connects, mysql_query_, false, "", "");
        }
	}
	else if(type == 2)
	{
		vigs ++;
		if(vigs >= 3)
		{
			if(leader && !admin)
			{
				format(stringer1, sizeof(stringer1), "Adminstrator %s removed the faction leader %s: %s (3/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[leader], tmp, reason);
  		    	SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		    	format(stringer1, sizeof(stringer1), "removed the leaders of the %s faction for a reason (3/3): %s", GetPlayerFracName[leader], reason);
  		    	Admin_Log(playerid, stringer1, tmp, gettime());
    	    	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pLeader` = '0', `pRank` = '0', `odet` = '0' , `vigs` = '0' WHERE `Name` = '%s'", tmp);
		    	mysql_function_query(connects, mysql_query_, false, "", "");
			}
			else if(admin)
			{
				format(stringer1, sizeof(stringer1), "Adminstrator %s took from %s Adminstrator rights (3/3). Reason: %s", PlayerInfo[playerid][pNames], tmp, reason);
  		    	SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		    	format(stringer1, sizeof(stringer1), "removed the rights of Adminstrator (3/3), because of: %s", reason);
  		    	Admin_Log(playerid, stringer1, tmp, gettime());
  		    	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '0', `vigs` = '0' WHERE `Name` = '%s'",tmp);
		    	mysql_function_query(connects, mysql_query_, false, "", "");
			}
		}
		else
		{
	    	if(leader && !admin)
			{
		    	format(stringer1, sizeof(stringer1), "Adminstrator %s warned the faction leader %s: %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[leader], tmp,vigs, reason);
  		    	SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		    	format(stringer1, sizeof(stringer1), "warned the faction leader %s (%d/3) because of: %s", GetPlayerFracName[leader],vigs, reason);
  		    	Admin_Log(playerid, stringer1, tmp, gettime());
    	    	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `Name` = '%s'",vigs, tmp);
		    	mysql_function_query(connects, mysql_query_, false, "", "");
        	}
			else if(admin)
			{
		    	format(stringer1, sizeof(stringer1), "Adminstrator %s issued to the %s Adminstrator Warning (%d/3). Reason: %s", PlayerInfo[playerid][pNames], tmp, vigs, reason);
  		    	SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		    	format(stringer1, sizeof(stringer1), "warned (%d/3), because of: %s", vigs, reason);
  		    	Admin_Log(playerid, stringer1, tmp, gettime());
  		    	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `Name` = '%s'",vigs,tmp);
		    	mysql_function_query(connects, mysql_query_, false, "", "");
        	}
		}
	}
	return true;
}
publics: OffAdmin(playerid,tmp[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s was not found in the database.",tmp);
	mysql_format(connects,mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '0', `vigs` = '0' WHERE `Name` = '%e'", tmp);
	mysql_function_query(connects, mysql_query_, false, "", "");
	SendMes(playerid, COLOR_GREY, "Account %s has been removed from the post of Adminstrator", tmp);
	return true;
}
publics: GetOffStats(playerid,tmp[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in database.",tmp);
	new str[144],string[256],mem[64];
	format(str,sizeof(str),"Name:  [%s]\n",tmp); strcat(string,str);
	cache_get_field_content(0, "pID",mem); format(str,sizeof(str),"Account number: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pLeader",mem); format(str,sizeof(str),"Leader: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pMember",mem); format(str,sizeof(str),"Organization: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pRank",mem); format(str,sizeof(str),"Rank: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pGetonDate",mem); format(str,sizeof(str),"Last Login: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pIpReg",mem); format(str,sizeof(str),"Reg. IP: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "pGetonIP",mem); format(str,sizeof(str),"Posd. IP: [%s]\n",mem); strcat(string,str);
	cache_get_field_content(0, "day_online",mem); format(str,sizeof(str),"Minute online: [%s]\n",mem); strcat(string,str);
	ShowPlayerDialog(playerid,1932,DIALOG_STYLE_MSGBOX,"Offline statistics",string,"�close","");
	return true;
}
publics: OffHelper(playerid,tmp[],helperlvl)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s not found in database.",tmp);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pHelper` = '%d' WHERE `Name` = '%s'", helperlvl,tmp);
	mysql_function_query(connects, mysql_query_, false, "", "");
	if(helperlvl != 0) SendMes(playerid, COLOR_GREY, "You have set level %d to the helper %s.", helperlvl,tmp);
	else SendMes(playerid, COLOR_GREY, "You removed the helper %s.", tmp);
	return true;
}
publics: OffLeader(playerid,tmp[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendMes(playerid, COLOR_GREY, "Account %s was not found in the database.",tmp);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pLeader` = '0', `pMember` = '0', `pRank` = '0', `vigs` = '0' WHERE `Name` = '%s'", tmp);
	mysql_function_query(connects, mysql_query_, false, "", "");
	format(stringer1, 100, "Adminstrator %s took the lead off %s offline.",PlayerInfo[playerid][pNames],tmp);
	SendAdminMessage(COLOR_GREY,stringer1);
	Admin_Log(playerid, "removed from the post of leader", tmp, gettime());
	return true;
}
publics: OnPlayerCheckPhone(playerid, number)
{
    new rows, fields;
    cache_get_data(rows, fields);
	if(rows)
	{
	    ShowPlayerDialog(playerid,3421,1,"change SIM card number","{ffffff}�enter a new six-digit phone number","Buy","Cancle");
		SendClientMessage(playerid, -1, "ERROR: this number is occupied by another player");
	}
    else
    {
        PlayerInfo[playerid][pPnumber] = number;
        PlayerInfo[playerid][pDonatemoney2] -= 70;
        GameTextForPlayer(playerid, "~r~-70 Donate ~g~Thanks!", 5000, 1);
        format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pPnumber` = '%d' WHERE `pID` = '%d'", number, PlayerInfo[playerid][pID]);
	    mysql_function_query(connects, mysql_query_, false, "", "");
        format(stringer1,sizeof(stringer1),"Your new phone number: {FFFFFF}%d.",PlayerInfo[playerid][pPnumber]);
        SendClientMessage(playerid,COLOR_GREY,stringer1);
    }
    return true;
}
publics: OffBan(playerid, tmp[], days, reason[], type)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) return SendClientMessage(playerid, COLOR_WHITE, "The player/IP address is already blocked!");
	if(!type)
	{
    	ServerBan(playerid, tmp, days, reason);
    	new ids = GetPlayerID(tmp);
    	if(ids != INVALID_PLAYER_ID) {
        	SendMes(ids, COLOR_LIGHTRED, "Adminstrator %s blocked your account for %d days. reason: %s", PlayerInfo[playerid][pNames], days, reason);
			PlayerInfo[ids][pLeader] = 0, PlayerInfo[ids][pMember] = 0, PlayerInfo[ids][pJob] = 0, PlayerInfo[ids][pRank] = 0, PlayerInfo[ids][pOdet] = 0;
        	KickEx(ids);
    	}
	}
	else ServerBan(playerid, tmp, days, reason, 1);
	new query[400];
	format(query, sizeof(query), "UPDATE `accounts` SET `pMember` = '0', `pLeader` = '0', `pRank` = '0', `odet` = '0', `pJob` = '0', `vigs` = '0' WHERE `Name` = '%s'", tmp);
	mysql_function_query(connects, query, false, "", "");
   	format(stringer1, sizeof(stringer1), "Adminstrator %s blocked %s %s for %d days. Reason: %s",PlayerInfo[playerid][pNames], (!type) ? ("player:") : ("IP address:"), tmp, days, reason);
   	SendAdminMessage(COLOR_LIGHTRED,stringer1);
	return true;
}
publics: LoginCallback(playerid)
{
	new maximum[78];
    cache_get_field_content(0, "pID", maximum),             PlayerInfo[playerid][pID] = strval(maximum);
	cache_get_field_content(0, "pLevel", maximum),			PlayerInfo[playerid][pLevel] = strval(maximum);
	cache_get_field_content(0, "pPhousekey", maximum),		PlayerInfo[playerid][pPhousekey] = strval(maximum);
	cache_get_field_content(0, "pAlcoInvenxua", maximum),	PlayerInfo[playerid][pAlcoInvenxua] = strval(maximum);
	cache_get_field_content(0, "pFuelcar", maximum), 		PlayerInfo[playerid][pFuelcar] = strval(maximum);
	cache_get_field_content(0, "pHeadValue", maximum), 		PlayerInfo[playerid][pHeadValue] = strval(maximum);
	cache_get_field_content(0, "pContract", maximum), 		PlayerInfo[playerid][pContract] = strval(maximum);
	cache_get_field_content(0, "pCar", maximum), 			PlayerInfo[playerid][pCar] = strval(maximum);
	cache_get_field_content(0, "pCar2", maximum), 			PlayerInfo[playerid][pCar2] = strval(maximum);
	cache_get_field_content(0, "pHelper", maximum),			PlayerInfo[playerid][pHelper] = strval(maximum);
	cache_get_field_content(0, "pDonatemoney2", maximum), 	PlayerInfo[playerid][pDonatemoney2] = strval(maximum);
	cache_get_field_content(0, "pDonateRank", maximum), 	PlayerInfo[playerid][pDonateRank] = strval(maximum);
	cache_get_field_content(0, "pSex", maximum), 			PlayerInfo[playerid][pSex] = strval(maximum);
	cache_get_field_content(0, "pMuted", maximum), 			PlayerInfo[playerid][pMuted] = strval(maximum);
	cache_get_field_content(0, "pExp", maximum), 			PlayerInfo[playerid][pExp] = strval(maximum);
	cache_get_field_content(0, "pCash", maximum), 			PlayerInfo[playerid][pCash] = strval(maximum);
	cache_get_field_content(0, "pKills", maximum), 			PlayerInfo[playerid][pKills] = strval(maximum);
	cache_get_field_content(0, "pJailed", maximum), 		PlayerInfo[playerid][pJailed] = strval(maximum);
	cache_get_field_content(0, "pJailTime", maximum), 		PlayerInfo[playerid][pJailTime] = strval(maximum);
	cache_get_field_content(0, "pMats", maximum), 			PlayerInfo[playerid][pMats] = strval(maximum);
	cache_get_field_content(0, "pHeal", maximum), 			PlayerInfo[playerid][pHeal] = strval(maximum);
	cache_get_field_content(0, "pLeader", maximum), 		PlayerInfo[playerid][pLeader] = strval(maximum);
	cache_get_field_content(0, "pMember", maximum), 		PlayerInfo[playerid][pMember] = strval(maximum);
	cache_get_field_content(0, "pRank", maximum), 			PlayerInfo[playerid][pRank] = strval(maximum);
	cache_get_field_content(0, "pJob", maximum), 			PlayerInfo[playerid][pJob] = strval(maximum);
	cache_get_field_content(0, "pVodPrava", maximum), 		PlayerInfo[playerid][pVodPrava] = strval(maximum);
	cache_get_field_content(0, "pFlyLic", maximum), 		PlayerInfo[playerid][pFlyLic] = strval(maximum);
	cache_get_field_content(0, "pBoatLic", maximum), 		PlayerInfo[playerid][pBoatLic] = strval(maximum);
	cache_get_field_content(0, "pFishLic", maximum), 		PlayerInfo[playerid][pFishLic] = strval(maximum);
	cache_get_field_content(0, "pGunLic", maximum), 		PlayerInfo[playerid][pGunLic] = strval(maximum);
	cache_get_field_content(0, "pSDPistol", maximum), 		PlayerInfo[playerid][pSDPistol] = strval(maximum);
	cache_get_field_content(0, "pDesertEagle", maximum), 	PlayerInfo[playerid][pDesertEagle] = strval(maximum);
	cache_get_field_content(0, "pShotGun", maximum), 		PlayerInfo[playerid][pShotGun] = strval(maximum);
	cache_get_field_content(0, "pMP5", maximum), 			PlayerInfo[playerid][pMP5] = strval(maximum);
	cache_get_field_content(0, "pAK47", maximum), 			PlayerInfo[playerid][pAK47] = strval(maximum);
	cache_get_field_content(0, "pM4", maximum), 			PlayerInfo[playerid][pM4] = strval(maximum);
	cache_get_field_content(0, "pChar", maximum), 			PlayerInfo[playerid][pChar] = strval(maximum);
	cache_get_field_content(0, "pModel", maximum), 			PlayerInfo[playerid][pModel] = strval(maximum);
	cache_get_field_content(0, "pPnumber", maximum), 		PlayerInfo[playerid][pPnumber] = strval(maximum);
	cache_get_field_content(0, "pPayDayHad", maximum), 		PlayerInfo[playerid][pPayDayHad] = strval(maximum);
	cache_get_field_content(0, "pWarns", maximum), 			PlayerInfo[playerid][pWarns] = strval(maximum);
	cache_get_field_content(0, "punWarns", maximum), 		PlayerInfo[playerid][punWarns] = strval(maximum);
	cache_get_field_content(0, "punWarnstime", maximum), 	PlayerInfo[playerid][punWarnstime] = strval(maximum);
	cache_get_field_content(0, "pFuel", maximum), 			PlayerInfo[playerid][pFuel] = strval(maximum);
	cache_get_field_content(0, "pRobTime", maximum), 		PlayerInfo[playerid][pRobTime] = strval(maximum);
	cache_get_field_content(0, "pReportTime", maximum), 	PlayerInfo[playerid][pReportTime] = strval(maximum);
	cache_get_field_content(0, "pVerevka", maximum), 		PlayerInfo[playerid][pVerevka] = strval(maximum);
	cache_get_field_content(0, "pOtmbI4ka", maximum), 		PlayerInfo[playerid][pOtmbI4ka] = strval(maximum);
	cache_get_field_content(0, "pAutoTime", maximum), 		PlayerInfo[playerid][pAutoTime] = strval(maximum);
	cache_get_field_content(0, "pAutoSkill", maximum), 		PlayerInfo[playerid][pAutoSkill] = strval(maximum);
	cache_get_field_content(0, "pMarried", maximum), 		PlayerInfo[playerid][pMarried] = strval(maximum);
	cache_get_field_content(0, "pMuteTime", maximum), 		PlayerInfo[playerid][pMuteTime] = strval(maximum);
	cache_get_field_content(0, "pMobile", maximum), 		PlayerInfo[playerid][pMobile] = strval(maximum);
	cache_get_field_content(0, "pBank", maximum), 			PlayerInfo[playerid][pBank] = strval(maximum);
	cache_get_field_content(0, "pBoxSkill", maximum), 		PlayerInfo[playerid][pBoxSkill] = strval(maximum);
	cache_get_field_content(0, "pKongfuSkill", maximum), 	PlayerInfo[playerid][pKongfuSkill] = strval(maximum);
	cache_get_field_content(0, "pKickboxSkill", maximum), 	PlayerInfo[playerid][pKickboxSkill] = strval(maximum);
	cache_get_field_content(0, "pFightSkill", maximum), 	PlayerInfo[playerid][pFightSkill] = strval(maximum);
	cache_get_field_content(0, "pFightSkil", maximum), 		PlayerInfo[playerid][pFightSkil] = strval(maximum);
	cache_get_field_content(0, "pFightTime", maximum), 		PlayerInfo[playerid][pFightTime] = strval(maximum);
	cache_get_field_content(0, "pHospital", maximum), 		PlayerInfo[playerid][pHospital] = strval(maximum);
	cache_get_field_content(0, "pIzol", maximum), 			PlayerInfo[playerid][pIzol] = strval(maximum);
	PlayerInfo[playerid][pDostup] = cache_get_field_content_int(0, "pDostup", connects);
	cache_get_field_content(0, "pZakonp", maximum), 		PlayerInfo[playerid][pZakonp] = strval(maximum);
	cache_get_field_content(0, "pNarcoLomka", maximum), 	PlayerInfo[playerid][pNarcoLomka] = strval(maximum);
	cache_get_field_content(0, "pProz", maximum), 			PlayerInfo[playerid][pProz] = strval(maximum);
	cache_get_field_content(0, "pMestoJail", maximum), 		PlayerInfo[playerid][pMestoJail] = strval(maximum);
	cache_get_field_content(0, "pWanted", maximum), 		PlayerInfo[playerid][pWanted] = strval(maximum);
	cache_get_field_content(0, "pHousecash", maximum), 		PlayerInfo[playerid][pHousecash] = strval(maximum);
	cache_get_field_content(0, "pNumbercar", maximum),		strmid(PlayerInfo[playerid][pNumbercar], maximum, 0, strlen(maximum), 64);
	cache_get_field_content(0, "pIpReg", maximum),			strmid(PlayerInfo[playerid][pIpReg], maximum, 0, strlen(maximum), 64);
	cache_get_field_content(0, "pSaveWeapon", maximum), 	PlayerInfo[playerid][pSaveWeapon] = strval(maximum);
	if(PlayerInfo[playerid][pSaveWeapon] == 1)
	{
		cache_get_field_content(0, "Weapons",PlayerInfo[playerid][pWeapons],connects,64), sscanf(PlayerInfo[playerid][pWeapons], "p<,>a<i>[13]",PlayerInfo[playerid][Weapon]);
		cache_get_field_content(0, "Ammos",PlayerInfo[playerid][Ammos],connects,64), sscanf(PlayerInfo[playerid][Ammos], "p<,>a<i>[13]",PlayerInfo[playerid][Ammo]);
	}
	cache_get_field_content(0, "day_online", maximum),		 PlayerInfo[playerid][pDayOnline] = strval(maximum);
	cache_get_field_content(0, "pDayAfk", maximum),		 PlayerInfo[playerid][pDayAfk] = strval(maximum);
    cache_get_field_content(0, "pOnlineYes", maximum),		 PlayerInfo[playerid][pOnlineYes] = strval(maximum);
	cache_get_field_content(0, "pAfkYes", maximum),		 PlayerInfo[playerid][pAfkYes] = strval(maximum);
	cache_get_field_content(0, "Texts",PlayerInfo[playerid][pTexts],connects,16), sscanf(PlayerInfo[playerid][pTexts], "p<,>a<i>[3]",PlayerInfo[playerid][Texts]);
    cache_get_field_content(0, "SkinHome1", maximum), 		 PlayerInfo[playerid][pSkinhome][0] = strval(maximum);
    cache_get_field_content(0, "SkinHome2", maximum), 		 PlayerInfo[playerid][pSkinhome][1] = strval(maximum);
    cache_get_field_content(0, "SkinHome3", maximum), 		 PlayerInfo[playerid][pSkinhome][2] = strval(maximum);
    cache_get_field_content(0, "pHomez", maximum),		     PlayerInfo[playerid][pHomez] = strval(maximum);
    cache_get_field_content(0, "satiety", maximum),		     PlayerInfo[playerid][pSatiety] = strval(maximum);
    cache_get_field_content(0, "keyip",PlayerInfo[playerid][pKeyIp],connects,16);
    cache_get_field_content(0, "pHotvet", maximum),			 PlayerInfo[playerid][pHotvet] = strval(maximum);
    cache_get_field_content(0, "family", maximum),			 PlayerInfo[playerid][pFamily] = strval(maximum);
	cache_get_field_content(0, "pRub", maximum),			 PlayerInfo[playerid][pRub] = strval(maximum);
	cache_get_field_content(0, "pFacPoint", maximum),			 PlayerInfo[playerid][pFacPoint] = strval(maximum);
	cache_get_field_content(0, "pGold", maximum),			 PlayerInfo[playerid][pGold] = strval(maximum);
    cache_get_field_content(0, "pAccent",PlayerInfo[playerid][pAccent],connects,32);
	PlayerInfo[playerid][pCheckIp] = cache_get_field_content_int(0,"checkip");
    cache_get_field_content(0, "pGetonIP",PlayerInfo[playerid][pGetonIP],connects,16);
    cache_get_field_content(0, "pGetonDate",PlayerInfo[playerid][pGetondate],connects,16);
    cache_get_field_content(0, "settings", maximum), sscanf(maximum, "p<,>a<i>[7]",PlayerInfo[playerid][Settings]);
    cache_get_field_content(0, "odet", maximum),			 PlayerInfo[playerid][pOdet] = strval(maximum);
    cache_get_field_content(0,"one_tuneveh", maximum, connects, 74), sscanf(maximum, "p<,>a<i>[15]",cTune[playerid][0]);
    cache_get_field_content(0,"two_tuneveh", maximum, connects, 74), sscanf(maximum, "p<,>a<i>[15]",cTune[playerid][1]);
    cache_get_field_content(0,"one_vehcolor", maximum, connects, 11), sscanf(maximum, "p<,>a<i>[2]",cColor[playerid][0]);
    cache_get_field_content(0,"two_vehcolor", maximum, connects, 11), sscanf(maximum, "p<,>a<i>[2]",cColor[playerid][1]);
    cache_get_field_content(0, "voenbill", maximum),			 PlayerInfo[playerid][pVoenBill] = strval(maximum);
    cache_get_field_content(0, "medcard", maximum),			 PlayerInfo[playerid][pMedCard] = strval(maximum);
    cache_get_field_content(0,  "drugs", maximum, connects, 64), sscanf(maximum, "a<i>[7]", PlayerInfo[playerid][p_drugs]);
    cache_get_field_content(0,"acessories",PlayerInfo[playerid][pSlotItems], connects, 64), sscanf(PlayerInfo[playerid][pSlotItems], "p<,>a<i>[6]",PlayerInfo[playerid][pSlotItem]);
    cache_get_field_content(0, "vigs", maximum),			 PlayerInfo[playerid][pVigs] = strval(maximum);
	cache_get_field_content(0, "CMDaccess", PlayerInfo[playerid][aiCMDaccess], connects, CMD_NUM+1);
	cache_get_field_content(0, "pPrefix",maximum,connects,32), strmid(PlayerInfo[playerid][pPrefix], maximum, 0, strlen(maximum), 32);
	cache_get_field_content(0, "pInv", maximum),			 PlayerInfo[playerid][pInv] = strval(maximum);
	cache_get_field_content(0, "pBlNick", maximum),			 PlayerInfo[playerid][pBlNick] = strval(maximum);
	cache_get_field_content(0, "pcWarn", maximum),			 PlayerInfo[playerid][pcWarn] = strval(maximum);
	cache_get_field_content(0, "pcBan", maximum),			 PlayerInfo[playerid][pcBan] = strval(maximum);
	//==============================================[QUEST]=================================================
	cache_get_field_content(0, "pQuest1", maximum),			 PlayerInfo[playerid][pQuest1] = strval(maximum);
	cache_get_field_content(0, "pQuest2", maximum),			 PlayerInfo[playerid][pQuest2] = strval(maximum);
	cache_get_field_content(0, "pQuest3", maximum),			 PlayerInfo[playerid][pQuest3] = strval(maximum);
	cache_get_field_content(0, "pQuest4", maximum),			 PlayerInfo[playerid][pQuest4] = strval(maximum);
	cache_get_field_content(0, "pQuest5", maximum),			 PlayerInfo[playerid][pQuest5] = strval(maximum);
    cache_get_field_content(0, "pQuest6", maximum),			 PlayerInfo[playerid][pQuest6] = strval(maximum);
    cache_get_field_content(0, "pQuest7", maximum),			 PlayerInfo[playerid][pQuest7] = strval(maximum);
    cache_get_field_content(0, "pQuest8", maximum),			 PlayerInfo[playerid][pQuest8] = strval(maximum);
    cache_get_field_content(0, "pQuest9", maximum),			 PlayerInfo[playerid][pQuest9] = strval(maximum);
    cache_get_field_content(0, "pQuest10", maximum),		 PlayerInfo[playerid][pQuest10] = strval(maximum);
    cache_get_field_content(0, "pQuest11", maximum),		 PlayerInfo[playerid][pQuest11] = strval(maximum);

   	cache_get_field_content(0, "pQuest1Done", maximum),			 PlayerInfo[playerid][pQuest1Done] = strval(maximum);
	cache_get_field_content(0, "pQuest2Done", maximum),			 PlayerInfo[playerid][pQuest2Done] = strval(maximum);
	cache_get_field_content(0, "pQuest3Done", maximum),			 PlayerInfo[playerid][pQuest3Done] = strval(maximum);
	cache_get_field_content(0, "pQuest4Done", maximum),			 PlayerInfo[playerid][pQuest4Done] = strval(maximum);
	cache_get_field_content(0, "pQuest5Done", maximum),			 PlayerInfo[playerid][pQuest5Done] = strval(maximum);
    cache_get_field_content(0, "pQuest6Done", maximum),			 PlayerInfo[playerid][pQuest6Done] = strval(maximum);
    cache_get_field_content(0, "pQuest7Done", maximum),			 PlayerInfo[playerid][pQuest7Done] = strval(maximum);
    cache_get_field_content(0, "pQuest8Done", maximum),			 PlayerInfo[playerid][pQuest8Done] = strval(maximum);
    cache_get_field_content(0, "pQuest9Done", maximum),			 PlayerInfo[playerid][pQuest9Done] = strval(maximum);
    cache_get_field_content(0, "pQuest10Done", maximum),		 PlayerInfo[playerid][pQuest10Done] = strval(maximum);
    cache_get_field_content(0, "pQuest11Done", maximum),		 PlayerInfo[playerid][pQuest11Done] = strval(maximum);
	//=======================================================================================================
	cache_get_field_content(0, "pArmBody", maximum),		 PlayerInfo[playerid][pArmBody] = strval(maximum);
 	cache_get_field_content(0, "pArmBodyUse", maximum),		 PlayerInfo[playerid][pArmBodyUse] = strval(maximum);
	cache_get_field_content(0, "pFull", maximum),		 	 PlayerInfo[playerid][pFull] = strval(maximum);

	PlayerInfo[playerid][pRepAdm] = cache_get_field_content_int(0, "pRepAdm", connects);
	PlayerInfo[playerid][pKickAdm] = cache_get_field_content_int(0, "pKickAdm", connects);
	PlayerInfo[playerid][pWarnAdm] = cache_get_field_content_int(0, "pWarnAdm", connects);
	PlayerInfo[playerid][pBanAdm] = cache_get_field_content_int(0, "pBanAdm", connects);
	PlayerInfo[playerid][pMuteAdm] = cache_get_field_content_int(0, "pMuteAdm", connects);
	PlayerInfo[playerid][pJailAdm] = cache_get_field_content_int(0, "pJailAdm", connects);
	PlayerInfo[playerid][pDedMoroz] = cache_get_field_content_int(0, "pDedMoroz", connects);
	PlayerInfo[playerid][pNinja] = cache_get_field_content_int(0, "pNinja", connects);
	PlayerInfo[playerid][pIznas] = cache_get_field_content_int(0, "pIznas", connects);
	PlayerInfo[playerid][pMinet] = cache_get_field_content_int(0, "pMinet", connects);
	PlayerInfo[playerid][pAge] = cache_get_field_content_int(0,"age");
    PlayerInfo[playerid][pNational] = cache_get_field_content_int(0,"national");
	PlayerInfo[playerid][pOffBH] = cache_get_field_content_int(0,"pOffBH");
	PlayerInfo[playerid][pKInCapt] = cache_get_field_content_int(0,"pKInCapt");
	PlayerInfo[playerid][pUsedJail] = cache_get_field_content_int(0,"pUsedJail");
	if(PlayerInfo[playerid][pCash] <= 0) PlayerInfo[playerid][pCash] = 0;
	if(PlayerInfo[playerid][pProz] <= 0) PlayerInfo[playerid][pProz] = 0;

	if(PlayerInfo[playerid][pPhousekey] != 255)
	{
		if(strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) { }
		else PlayerInfo[playerid][pPhousekey] = 255;
	}
	format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_BANLOG"` WHERE `name` = '%s'", PlayerInfo[playerid][pNames]);
	mysql_function_query(connects, mysql_query_, true, "Checkban", "ds", playerid, PlayerInfo[playerid][pNames]);
    return 1;
}

stock AddCheater(playerid, type)
{
	if(IsPlayerFake(playerid)) return false;
	if(PlayerInfo[playerid][pAlcoInvenxua] > 0 || FD(playerid)) return false;
    for(new i;i<10;i++)
    {
       if(CheatInfo[i][cheatid1] == playerid) return false;
	   if(CheatInfo1[i][cheatid1] == playerid) return false;
    }

	switch(type)
	{

	}
    return 1;
}
stock GoServer(playerid)
{
	new string[144];
    if(gPlayerLogged[playerid] == 0 && PlayerInfo[playerid][pCheckIp] && strcmp(PlayerInfo[playerid][pIP], PlayerInfo[playerid][pGetonIP],false) != 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "To complete the Login stage, you need to be verified.");
        SendClientMessage(playerid, COLOR_WHITE, "To do this, click on the numbers that you indicated in the security code.");
		return Capcha(playerid);
	}
 	for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, hello_server[i]);
	SetTimerEx("hello_server_off", 5000, false, "d", playerid);
	if(PlayerInfo[playerid][pHelper] > 0) SendMes(playerid,COLOR_WHITE,"Logged in as a helper, level %d.",PlayerInfo[playerid][pHelper]);
	if(PlayerInfo[playerid][pFamily]) family_info [ PlayerInfo[playerid][pFamily] ] [ f_online ]++;
	if(PlayerInfo[playerid][pPhousekey] != 255 && caridhouse[playerid] == INVALID_VEHICLE_ID)
	{
		new house = PlayerInfo[playerid][pPhousekey];
		caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][0][0], cColor[playerid][0][1],7200, 0);
		VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
		VEHICLE[caridhouse[playerid]][vLock] = 1;
		//if(PlayerInfo[playerid][pCar2] == 542 && PlayerInfo[playerid][pClover] == 1) SupremeCar(caridhouse[playerid]);
		LinkVehicleToInterior(caridhouse[playerid], 1);
		SetVehicleVirtualWorld(caridhouse[playerid], house + 50);
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
		AddTune(playerid, 0);
		SetPVarInt(playerid, "CarNomer", 0);
	}
	PEfir[playerid] = 255;
	Pefir[playerid] = 999;
	PlayerBigEarsConnect{playerid} = true;
	if(BizzWarsNumberZone != -1) GangZoneShowForAll(GangZoneBizzWar[BizzWarsNumberZone], 0xB2B2B2AA), GangZoneFlashForAll(GangZoneBizzWar[BizzWarsNumberZone],COLOR_RED);
	GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);
	if(PlayerInfo[playerid][Texts][0])
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"Your business was sold to the state for tax evasion"),
		SendClientMessage(playerid,COLOR_LIGHTRED,"The money has been deposited into your bank account!");
		PlayerInfo[playerid][Texts][0] = 0;
	}
/*	if(PlayerInfo[playerid][pDonateRank] > 0)
	{
		SendClientMessage(playerid, 0xeac700aa,"Hello VIP player!");
       	for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, hello_server[i]);
    	SetTimerEx("hello_server_off", 5000, false, "d", playerid);
	}*/
	if(!PlayerInfo[playerid][pCheckIp])
	{
		format(string, sizeof(string), "{FFFFFF}[Security] Your software protection is not enabled. {FF0000}IP {FFFFFF}address! {FFFF00}Enter /mm > [5] Settings");
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[Security] Protection by IP address will protect your account from hacking!");
		SendClientMessage(playerid, COLOR_GREEN, string);
	}
	if(PlayerInfo[playerid][pDedUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
 		SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
 		SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
 		SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
 		SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
 		SetPlayerSkin(playerid,189);
	}
	if(PlayerInfo[playerid][pNinjaUse] == 1)
	{
		SetPlayerAttachedObject(playerid, 8, 339, 1, 0.3649, -0.1169, 0.0919, 0.0000, -123.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerAttachedObject(playerid, 9, 339, 1, 0.3029, -0.1289, -0.1920, 0.6999, -69.7000, 0.2000, 1.0000, 1.0000, 1.0000, 0, 0);
		SetPlayerSkin(playerid,203);
	}
	gPlayerLogged[playerid] = 1;
	SpawnPlayerEx(playerid);
    SetPlayerWeaponss(playerid);
	SetPlayerSkills(playerid);
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	mysql_format(connects, mysql_query_, sizeof(mysql_query_),"SELECT * FROM `"TABLE_BANK"` WHERE `account` = '%i'", PlayerInfo[playerid][pID]);
    mysql_function_query(connects, mysql_query_, true, "CheckBanks", "i", playerid);
    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pOnline` = '%i', `pGetonIP` = '%s' WHERE `pID` = '%d'",playerid,PlayerInfo[playerid][pIP],PlayerInfo[playerid][pID]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return true;
}
stock IsIpFound(const string[])
{
	if(strfind(string, ""PAGE_SITE"", false) != -1 || strfind(string, ""PAGE_SITE"", false) != -1) return false;
	if(strlen(string) > 90) return false;
	if(!reklamka) reklamka= regex_build("(((\\w+):\\/\\/)|(www\\.|\\,|))+(([\\w\\.\\,_-]{2,}(\\s+|\\S+|)(\\s|\\.|\\,|[^0-9])(?i)(biz|info|name|net|org|bg|by|white|kg|kz|ua|Ukr|com|Paz|ru))|(([\\d]{1,3}(\\b))(\\s+|\\S+|)(\\.|\\,|\\s|[^0-9])(\\s+|\\S+|)[\\d]{1,3}(\\s+|\\S+|)(\\.|\\,|\\s|[^0-9])(\\s+|\\S+|)[\\d]{1,3}(\\s+|\\S+|)(\\.|\\,|\\s|[^0-9])(\\s+|\\S+|)[\\d]{1,3}))(((\\s+|\\S+|)(\\:|\\;|\\s)(\\s+|\\S+|)[\\d\\s]{2,}(\\b))|\\b)(\\/[\\w\\&amp\\;\\%_\\.\\/\\-\\~\\-]*)?");
	return regex_search_exid(string, reklamka);
}
stock ShowAdvertList(playerid)
{
	new adlist[900];
	new data[3][30],index;
	format(data[0],30,"[{a38b52}Checked out{FFFFFF}]");
	format(data[1],30,"[{FFFF00}Checked{FFFFFF}]");
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(!gAdvert[i][adBusy]) format(adlist,sizeof(adlist),"%s%d. -\n",adlist,i+1);
		else
		{
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(adlist,sizeof(adlist),"%s%d. %s %s\n",adlist,i+1,gAdvert[i][adSender],data[index]);
		}
	}
	ShowPlayerDialog(playerid,11518,2,"ads",adlist,"OK","Cancle");
	return 1;
}
public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
	printf("ERROR � mysql:ID %d | ERROR: %s | Function: %s | Request: %s |", errorid, error, callback, query);
	return true;
}
public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
		foreach(new i: Player)
		{
			if(!strcmp(ip, PlayerInfo[i][pIP], true))
			{
				printf("%s tried to log into RCON using a password %s", PlayerInfo[i][pIP], password);
				return Kick(i);
			}
		}
	}
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(areaid >= HouseInfo[0][hSquare] && areaid <= HouseInfo[1999][hSquare]) SetPVarInt(playerid, "ExitHouse",0);
    else if(areaid >= PaynSpray[0] && areaid <= PaynSpray[MAX_PAYNSPRAY-1]) SetPVarInt(playerid,"playerUsePaynSpray",0);
    else if(areaid == door_fbi_area)
	{
//	    MoveDynamicObject(door_fbi[0],582.632,1270.599,1079.325,0.5,0.0000,0.0000,0.0000);
//	    MoveDynamicObject(door_fbi[1],584.113,1270.589,1079.325,0.5,0.0000,0.0000,0.0000);
	}
	else if(areaid == spike_areas[playerid] || areaid == AreaBase) {}
	else {
		foreach(new i: Player)
		{
			if(areaid == GetPVarInt(i, "BBArea"))
			{
				StopStream(playerid);
				SendClientMessage(playerid, -1, "You have left the tape recorder area");
    			break;
			}
		}
	}
	return true;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
   	if(areaid >= HouseInfo[0][hSquare] && areaid <= HouseInfo[1999][hSquare])
   	{
   	    if(GetPVarInt(playerid, "ExitHouse")) return true;
   	    new h = areaid-1;
   	    if(h == 255) return true;
		new stringhouse[300];
		if(HouseInfo[h][hOwned] == 1)
		{
			new ttextt[32], ids = GetPlayerID(HouseInfo[h][hOwner]);
			if(IsPlayerConnected(ids)) { ttextt = "43dc10"; }
			else if(!IsPlayerConnected(ids)) { ttextt = "d62f16"; }
			new tstext[10], takings, rooms, zone[64];
			GetPlayer2DZone(playerid, zone, sizeof(zone));
			switch(HouseInfo[h][hKlass])
			{
				case 1:	{
					tstext = "D";
					rooms = 4;
				}
				case 2: {
					tstext = "C";
					rooms = 3;
				}
				case 3: {
					tstext = "B";
					rooms = 5;
				}
				case 4: {
					tstext = "A";
					rooms = 3;
				}
				case 5: {
					tstext = "S";
					rooms = 3;
				}
				default: {
					tstext = "Nope";
					rooms = 1;
				}
			}
			switch(HouseInfo[h][hKlass]) {
				case 0: takings = 300;
				case 1: takings = 600;
				case 2: takings = 900;
				case 3: takings = 1200;
				case 4: takings = 1500;
				case 5: takings = 1800;
			}//b - 5, a - 3, nope - 1, d - 4, c - 3, s - 3
			format(stringhouse, sizeof(stringhouse), "{FFFFFF}Owner:\t\t\t{%s}%s{ffffff}\n\nClass:\t\t\t\t%s\nStreet:\t\t\t\t%s, # %d\nNumber of rooms:\t\t%d\nPrice:\t\t\t%d$\nDaily rent:\t%d$\nHouse Tax Pay:\t\t%d$",ttextt,HouseInfo[h][hOwner],tstext,zone,h,rooms,HouseInfo[h][hValue],takings,HouseInfo[h][hTakings]);
			ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"{FFCC00}The house is busy",stringhouse,"Join","Cancle");
			return true;
		}
		else
		{
			if(PlayerInfo[playerid][pCash] < HouseInfo[h][hValue])
			{
				GameTextForPlayer(playerid,"~r~No Money",5000,1);
				return true;
			}
			new tstext[10], takings, rooms, zone[64];
			GetPlayer2DZone(playerid, zone, sizeof(zone));
			switch(HouseInfo[h][hKlass])
			{
				case 1:	{
					tstext = "D";
					rooms = 4;
				}
				case 2: {
					tstext = "C";
					rooms = 3;
				}
				case 3: {
					tstext = "B";
					rooms = 5;
				}
				case 4: {
					tstext = "A";
					rooms = 3;
				}
				case 5: {
					tstext = "S";
					rooms = 3;
				}
				default: {
					tstext = "Nope";
					rooms = 1;
				}
			}
			switch(HouseInfo[h][hKlass]) {
				case 0: takings = 300;
				case 1: takings = 600;
				case 2: takings = 900;
				case 3: takings = 1200;
				case 4: takings = 1500;
				case 5: takings = 1800;
			}
			format(stringhouse, sizeof(stringhouse), "{FFFFFF}Price:\t\t\t%s\n{FFFFFF}Class:\t\t\t\t%s\n{FFFFFF}Street:\t\t\t\t%s, # %d\n{FFFFFF}Number of rooms:\t\t%d\n{FFFFFF}Daily rent:\t%d$\n{FFFFFF}House Tax Pay:\t\t%d$",formatInt(HouseInfo[h][hValue]),tstext,zone,h,rooms,takings,HouseInfo[h][hTakings]);
			ShowPlayerDialog(playerid,10026,DIALOG_STYLE_MSGBOX,"{63CB00}This house is for sell",stringhouse,"Buy","Cancle");
			return true;
		}
	}
	else if(areaid >= PaynSpray[0] && areaid <= PaynSpray[MAX_PAYNSPRAY-1]) {
		SetPVarInt(playerid,"playerUsePaynSpray",1);
		return true;
	}
	else if(areaid == AreaBase && GetPVarInt(playerid, "PlayerInBase") && BaseStarting[1] == 1)
	{
	    ResetWeapons(playerid);
	    SetPPos(playerid, 2177.4709,1118.3693,12.6484);
		SetPlayerFacingAngle(playerid, 62.3957);
  		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		PlayerInfo[playerid][pRub] += 70;
		SendClientMessage(playerid, -1, "Congratulations! You completed the map! You receive: 70 Rubbles!");
		Iter_Remove(BaseList, playerid);
  		PlayersInBase{0} --;
	    DeletePVar(playerid, #BasePopitka);
	    DeletePVar(playerid, #PlayerInBase);
		if(!PlayersInBase{0})
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3,"BASE jumping is over.");
        	foreach(new s: BaseList) Iter_Remove(BaseList, s);
		    BaseStarting[1] = 0;
		}
		return true;
	}
	else if(areaid == door_fbi_area)
	{
		MoveDynamicObject(door_fbi[0],581.1919,1270.5989,1079.3249,0.5,0.0000,0.0000,0.0000);
		MoveDynamicObject(door_fbi[1],585.5532,1270.6490,1079.3249,0.5,0.0000,0.0000,0.0000);
	}
	else
    {
        new get_station[128];
        foreach(new i:Player)
        {
            if(areaid == spike_areas[i])
            {
                new panels, tires;
                GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doorss, light, tires);
                UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doorss, light, 15);
                break;
            }
            if(areaid == GetPVarInt(i, "BBArea"))
			{
				GetPVarString(i, "BBStation", get_station, 128);
				if(!isnull(get_station))
				{
					PlayStream(playerid, get_station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
					SendClientMessage(playerid, -1, "You are in the tape recorder area (if you can�t hear the music, adjust the volume settings)");
				}
				return 1;
			}
        }
    }
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(result == -1)
    {
        new str[400];
        format(str, sizeof str, " {FFFFFF}The command {328fed}/%s {FFFFFF}is not in this server, please use {328fed}/mm {FFFFFF}>> {328fed}Server Commands", cmd);
        SendClientMessage(playerid, -1, str);
        return 0;
    }
    return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	if(ServerRestart[1] || ServerRestart[2]) return false;
    if(gPlayerLogged[playerid] == 0 || !IsPlayerConnected(playerid))
    {
        SendClientMessage(playerid,-1,"You are not logged in!");
        return 0; // �������� �������, ����� �� �� �������� �������
    }
/*    if(PlayerInfo[playerid][pAlcoInvenxua] > 0 && dostup[playerid] == 0)
	{
		callcmd::alogin(playerid);
		return true;
	}*/
	else if(GetPVarInt(playerid,"AntiFlood") > gettime()){ SendClientMessage(playerid, 0xFFD5BBAA, "{ffff00}Don't {32db23}flood!"); return 0; }
	SetPVarInt(playerid,"AntiFlood",gettime() + 1);
    return 1; // ��������� ���������� �������
}
CMD:buy_market(playerid)
{
	for(new i; i < sizeof(BazarAcc); i++)
	{
        if(IsPlayerInRangeOfPoint(playerid,0.5,BazarAcc[i][BazX],BazarAcc[i][BazY],BazarAcc[i][BazZ]))
	    {
			format(stringer,sizeof(stringer),"\n\n{FFFFFF}You are about to purchase an item {32CD32}%s\n\
			{FFFFFF}Price: {32CD32}%d${CD3333}\n\
			Note! If you agree to purchase, then the accessory that is in the same cell,\n\
			will be replaced with the one you want to purchase.\n{EEAD0E}Do you agree to purchase?\n\n",BazarAcc[i][BName],BazarAcc[i][bMoney]);
		    ShowPlayerDialog(playerid, 7778, DIALOG_STYLE_MSGBOX, "{FF6F00}Purchasing an accessory", stringer, "Accept", "Cancle");
		    SetPVarInt(playerid,"MarketType",i);
		    return true;
		}
	}
	return true;
}
/*CMD:hackerjob(playerid, params[])
{
    if(GetPVarInt(playerid,"anti_hacker_job") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 15 minutes to hack the {FF0000}country's devices {FFCC00}again.");
    if(IsACop(playerid)) return SendClientMessage(playerid, -1, "{ffffff}You are a {0058f0}COP{ffffff}, you can't hack the country's devices!");
	if(HackerJob[playerid] == 1)
	{
	    SendClientMessage(playerid, 0xFF0000AA, "You're not allowed to use this command while working.");
	    return 1;
	}
	SetPlayerPos(playerid,-91.1709,-1576.5309,2.6172);
	SetPlayerInterior(playerid,0);
	SetPVarInt(playerid,"anti_hacker_job",gettime()+900);
	return 1;
}*/
CMD:hacker(playerid, params[])
{
	new h; gettime(h);
    if(IsACop(playerid)) return SendClientMessage(playerid, -1, "{ffffff}You are a {0058f0}COP{ffffff}, you can't hack the country's devices!");
	if(IsPlayerInRangeOfPoint(playerid, 2, -91.1709,-1576.5309,2.6172))
	{
        if(HackerJob[playerid] > 0)
        {
			SendClientMessage(playerid,0xFF0000AA,"You have started a Hacker Job and can't use this command.");
			return 1;
		}
		SetTimerEx("hacker_spamming", 3600000, 0, "d", playerid);
		HackerJob[playerid] = 1;
		new hname[MAX_PLAYER_NAME];
  		GetPlayerName(playerid, hname, sizeof(hname));
//        HJLimitTimer = SetTimerEx("HJTimeLimit", 300000, 0, "d", playerid);
//        return SetTimerEx("HackerSeven", 6000, 0, "d", playerid);
        HackerSetup(playerid);
        return 1;
   	}
	else
	{
		SendClientMessage(playerid, 0xFF0000AA, "You must be at work Hacker to use this command.");
	}
	return 1;
}
CMD:unban(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
//	if(PlayerInfo[playerid][pcBan] < 1 && PlayerInfo[playerid][pFull] < 1) return SendClientMessage(playerid, 0xFF6600AA, "{FFFF00}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
 	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /unban [playername]");
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_BANLOG"` WHERE `name` = '%e'", params[0]);
    mysql_function_query(connects, mysql_query_, false, "UnBan", "dsd", playerid, params[0], 0);
	return true;
}
CMD:givedonate(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	new donatenick[MAX_PLAYER_NAME], donate[11];
	if(sscanf(params, "s[24]d",donatenick, donate)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givedonate [playername] [amount]");
	if(!IsValidRpName(donatenick)) return SendClientMessage(playerid, COLOR_WHITE, "The entered value does not correspond to the structure of the nickname.");
	mysql_format(connects, mysql_query_,sizeof(mysql_query_), "SELECT `pDonatemoney2` FROM `"TABLE_ACCOUNT"` WHERE Name = '%e'", donatenick);
	mysql_function_query(connects, mysql_query_, true, "Givedonate", "dsd", playerid,donatenick,donate);
	return true;
}
CMD:giverub(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /giverub [id] [amount-rub]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "This player is not in the game!");
	PlayerInfo[params[0]][pRub] += params[1];
	UpdatePlayerData(params[0], "pRub", PlayerInfo[params[0]][pRub]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s gave out %d rub to the player %s", PlayerInfo[playerid][pNames], params[1], PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY, stringer1);
	format(stringer1, sizeof(stringer1), "gave out %d Rub", params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	return true;
}
CMD:givegold(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givegold [id] [amount-gold]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "This player is not in the game!");
	PlayerInfo[params[0]][pGold] += params[1];
	UpdatePlayerData(params[0], "pGold", PlayerInfo[params[0]][pGold]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s gave out %d Gold to the player %s", PlayerInfo[playerid][pNames], params[1], PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY, stringer1);
	format(stringer1, sizeof(stringer1), "gave out %d Gold", params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	return true;
}
CMD:giverubtoall(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 4) return true;
    if(sscanf(params, "dd", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /giverubtoall [amount-rub]");
    foreach(Player,i)
    PlayerInfo[i][pRub] += params[0];
    format(stringer1, sizeof(stringer1), "Adminstrator %s gave out %d rub to all players!", PlayerInfo[playerid][pNames], params[1]);
    SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
    format(stringer1, sizeof(stringer1), "gave out %d Rub", params[1]);
    Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
    return true;
}
CMD:givemoney(playerid, params[])
{
    if (PlayerInfo[playerid][pFull] < 1) return true;
    if(sscanf(params, "dd",params[0],params[1])) return    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givemoney [id] [money]");
    if(!IsPlayerConnected(params[0])) return true;
    PlayerInfo[params[0]][pCash] +=params[1];
    format(stringer1, sizeof(stringer1), "Adminstrator %s was given %s some Moneys [%i]", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[0]);
    SendAdminMessage(COLOR_GREY, stringer1);
    format(stringer1, sizeof(stringer1), "%s was transfered %s to %i", PlayerInfo[playerid][pNames], PlayerInfo[params[1]][pNames], params[0]);
    SendClientMessage(playerid, COLOR_LIGHTRED, stringer1);
    return true;
}
CMD:givebank(playerid, params[])
{
    if (PlayerInfo[playerid][pFull] < 1) return true;
    if(sscanf(params, "dd",params[0],params[1])) return    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givebank [id] [price]");
    if(!IsPlayerConnected(params[0])) return true;
    GiveBank(params[0], params[1]);
    format(stringer1, sizeof(stringer1), "Admin was given you %s Money", params[1]);
    SendClientMessage(params[0], COLOR_WHITE, stringer1);
    format(stringer1, sizeof(stringer1), "Your bank balance: %s Money", params[1]);
    SendClientMessage(params[0], COLOR_LIGHTRED, stringer1);
    return true;
}
CMD:offadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 1) return true;
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "Usage: /offadmin [playername]");
	if(!IsValidRpName(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not match the structure of the nickname.");
	if(!strcmp(params[0], ""AntiBan1"", true) || !strcmp(params[0], ""AntiBan2"", true) || !strcmp(params[0], ""AntiBan3"", true) || !strcmp(params[0], ""AntiBan4"", true)) return DelAdmin(playerid, 0);
	mysql_format(connects, mysql_query_,sizeof(mysql_query_), "SELECT `pID` FROM `"TABLE_ACCOUNT"` WHERE Name = '%e'", params[0]);
	mysql_function_query(connects, mysql_query_, true, "OffAdmin", "ds", playerid,params[0]);
	return true;
}
CMD:getoffstats(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getoffstats [playername]");
	if(!IsValidRpName(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the nickname structure.");
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e'", params[0]);
	mysql_function_query(connects, mysql_query_, true, "GetOffStats", "ds",playerid,params[0]);
	return true;
}
CMD:offhelper(playerid, params[]) // SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
{
	if(!is_cmd_allow(playerid, CMD_offhelper)) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	new helpernick[MAX_PLAYER_NAME], helperlvl;
	if(sscanf(params, "s[24]d",helpernick,helperlvl)) return SendClientMessage(playerid, -1, "Usage: /offhelper [playername] [�������]");
	if(!IsValidRpName(helpernick)) return SendClientMessage(playerid, COLOR_WHITE, "��������� ���� �������� �� ������������ ��������� ����.");
	if(helperlvl < 0 || helperlvl > 8) return SendClientMessage(playerid, -1, "������� ������� �� ����� ���� ���� 0 � ������ 8!");
	mysql_format(connects, mysql_query_,sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_ACCOUNT"` WHERE Name = '%e'", helpernick);
	mysql_function_query(connects, mysql_query_, true, "OffHelper", "dsd", playerid,helpernick,helperlvl);
	return true;
}
CMD:offban(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
//	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN, {FF6600}to buy what command you want.");
//	if(PlayerInfo[playerid][pcBan] < 1 && PlayerInfo[playerid][pAlcoInvenxua] < 12) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	new nicks[24];
	if(sscanf(params, "s[24]ds[100]", nicks, params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /offban [playername] [days] [reason]");
	if(!IsValidRpName(nicks)) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not match the structure of the nickname.");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
	if(!strcmp(nicks, ""AntiBan1"", true) || !strcmp(nicks, ""AntiBan2"", true) || !strcmp(nicks, ""AntiBan3"", true)) return DelAdmin(playerid, 0);
	if(params[1] > 999 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: No less than 1 and no more than 999!");
	AntiBan[playerid] += 30;
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_BANLOG"` WHERE `name` = '%e'", nicks);
	mysql_function_query(connects, mysql_query_, true, "OffBan", "dsdsd",playerid,nicks,params[1],params[2], 0);
	return true;
}
CMD:offleader(playerid, params[]) //� ��� ��� ������� � ������ �������. ��� ������� ����������� � {FF0000}/adonate
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
//  if(!is_cmd_allow(playerid, CMD_offleader)) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "Usage: /offleader [playername]");
	if(!IsValidRpName(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not match the structure of the nickname.");
	mysql_format(connects, mysql_query_,sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_ACCOUNT"` WHERE Name = '%e'", params[0]);
	mysql_function_query(connects, mysql_query_, true, "OffLeader", "ds", playerid,params[0]);
	return true;
}
CMD:findjob(playerid, params[])
{
	ShowPlayerDialog(playerid, 5655, DIALOG_STYLE_LIST, "Job Systems", "Job 1\t\tGarbage Job\nJob 2\t\tHacker Job\nJob 3\t\tRob Bank {ff0000}[Gangs-Mafias]\n{ffffff}Job 4\t\tComing Soon", "Select", "Exit");
	return true;
}
CMD:agiverank(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 12) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /agiverank [playerid] [level (1 - 15)]");
	if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Player is not a member of a faction!");
	switch(PlayerInfo[params[0]][pMember])
	{
		case 1,10,3,19,21: if(params[1] > 14 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more than 14!");
        case 2,26,4,5,6,11,12,13,14,15,17,18,22,24,25,7: if(params[1] > 9 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more than 9!");
        case 27,28: if(params[1] > 4 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more than 4!");
        case 16: if(params[1] > 12 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more than 12!");
        case 23: if(params[1] > 11 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more than 11!");
	}
	if(!IsPlayerConnected(params[0])) return true;
	format(stringer1, sizeof(stringer1), "changed rank from %d to %d (organization: %s)",PlayerInfo[params[0]][pRank],params[1],GetPlayerFracName[PlayerInfo[params[0]][pMember]]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	PlayerInfo[params[0]][pRank] = params[1];
	format(stringer1, sizeof(stringer1), "You have been promoted by Adminstrator %s",PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], COLOR_LIGHTRED, stringer1);
	format(stringer1, sizeof(stringer1), "Promoted %s to rank %i.",PlayerInfo[params[0]][pNames],params[1]);
	SendClientMessage(playerid, 0x6495EDFF, stringer1);
	return true;
}
CMD:delacc(playerid, params[])
{

	if(PlayerInfo[playerid][pFull] < 4) return true;
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /delacc [playername]");
	if(!IsValidRpName(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the nickname structure.");
	if(!strcmp(params[0], ""AntiBan1"", true) || !strcmp(params[0], ""AntiBan2"", true) || !strcmp(params[0], ""AntiBan3"", true)) return DelAdmin(playerid, 0);
	mysql_format(connects,mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e'", params[0]);
	mysql_function_query(connects, mysql_query_, true, "Delete", "ds",playerid, params[0]);
	return true;
	
}
CMD:mute(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 2 && PlayerInfo[playerid][pHelper] < 5) return true;
	if(GetPVarInt(playerid,"MuteTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"Open the game once every 10 seconds");
//    if(AntiBan[playerid] >= 60) return SendClientMessage(playerid,COLOR_GREY,"Your admin action is locked for 3 minutes."), AntiBan[playerid] = 180;
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /mute [id] [minute] [reason]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(params[1] > 60 || params[1] < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: mute time must be from 1 to 60");
	AntiBan[playerid] += 30;
	if((FD(params[0]) && !FD(playerid)) || IsIpFound(params[2])) return true;
	if(params[1] == 0)
	{
        if(!PlayerInfo[params[0]][pMuted]) return SendClientMessage(playerid, COLOR_WHITE, "Player has no mute.");
		PlayerInfo[params[0]][pMuted] = 0;
		PlayerInfo[params[0]][pMuteTime] = 0;
		format(stringer1, sizeof(stringer1), "%s %s Removed tha mute for player %s.",PlayerInfo[playerid][pAlcoInvenxua] ? ("Adminstrator") : ("Support agent"),PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
		SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
		return true;
	}
	PlayerInfo[params[0]][pMuteTime] = params[1]*60;
	PlayerInfo[params[0]][pMuted] = 1;
	PlayerInfo[playerid][pMuteAdm]++;
	format(stringer1, sizeof(stringer1), "%s %s gived a mute to %s for %i minute(s). Reason: %s",PlayerInfo[playerid][pAlcoInvenxua] ? ("Adminstrator") : ("Support agent"),PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SendAdminMessageToAll(COLOR_LIGHTRED ,stringer1,params[0]);
	format(stringer1, sizeof(stringer1), "You have muted for %i minute(s)", params[1]);
	SendClientMessage(params[0], COLOR_WHITE, stringer1);
	SetPVarInt(playerid,"MuteTime",gettime()+10);
	return true;
}
CMD:bc(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid,-1,"{FFCC00}You are not in a gang!");
	if(GetPVarInt(playerid,"anti_flood_bc") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 5 seconds to talk again in {FF0000}GHETTTO CHAT.");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid, -1, "{FFCC00}Usage: /bc [message]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendClientMessage(playerid, -1, "You have a mute!!");
	new text[100], string[144];
	strmid(text,params[0],0,100);
	new ttext[50];
	switch(PlayerInfo[playerid][pMember]) { case 12: ttext = "{8813E7}[Ballas Gang]"; case 13: ttext = "{DBD604}[Los Santos Vagos]"; case 15: ttext = "{24b012}[Grove Street]"; case 17: ttext = "{01FCFF}[Varios Los Aztecas]"; case 18: ttext = "{83BFBF}[Rifa Gang]"; }
	format(string, sizeof(string), "{FF9900}[GHETTO CHAT] %s {FFCC00}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid,text);
	MessageCriminal(0xFFFFFFFF, string, true);
	SetPVarInt(playerid,"anti_flood_bc",gettime()+5);
	return 1;
}
CMD:g(playerid, params[])
{
	if(GetPVarInt(playerid,"anti_flood_general_chat") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 30 seconds to talk again in {FF0000}GENERAL CHAT.");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid, -1, "{FFCC00}Usage: /g(c) [message]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendClientMessage(playerid, -1, "You have a mute!!");
	new text[100], string[144];
	strmid(text,params[0],0,100);
	new ttext[50];
	switch(PlayerInfo[playerid][pMember]) { case 12: ttext = "{8813E7}[Ballas Gang]"; case 13: ttext = "{DBD604}[Los Santos Vagos]"; case 15: ttext = "{24b012}[Grove Street]"; case 17: ttext = "{01FCFF}[Varios Los Aztecas]"; case 18: ttext = "{83BFBF}[Rifa Gang]"; case 3: ttext = "{a38b52}[Aircraft Army]"; case 2: ttext = "{313131}[FBI]"; case 1: ttext = "{2641FE}[LSPD]"; case 4: ttext = "{d815ed}[MCLS]"; case 5: ttext = "{DDA701}[LCN]"; case 6: ttext = "{FF0000}[Yakuza]"; case 14: ttext = "{B4B5B7}[Russian Mafia]"; case 19: ttext = "{a38b52}[Army 51]"; case 16: ttext = "{139BEC}[SA NWES]"; case 7: ttext = "{114D71}[Gov]"; case 23: ttext = "{708090}[Hitman]"; case 24: ttext = "{F45000}[Street Racers]"; case 25: ttext = "{0f0f0f}[SWAT]"; default: ttext = "{FFFFFF}[Citizen]"; }
	format(string, sizeof(string), "{8f5f57}[GENERAL CHAT] %s {FFCC00}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid,text);
	SendClientMessageToAll(0xFFFFFFFF, string);
	SetPVarInt(playerid,"anti_flood_general_chat",gettime()+30);
	return 1;
}
CMD:gc(playerid, params[])
{
	if(GetPVarInt(playerid,"anti_flood_general_chat") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 30 seconds to talk again in {FF0000}GENERAL CHAT.");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid, -1, "{FFCC00}Usage: /g(c) [message]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendClientMessage(playerid, -1, "You have a mute!!");
	new text[100], string[144];
	strmid(text,params[0],0,100);
	new ttext[50];
	switch(PlayerInfo[playerid][pMember]) { case 12: ttext = "{8813E7}[Ballas Gang]"; case 13: ttext = "{DBD604}[Los Santos Vagos]"; case 15: ttext = "{24b012}[Grove Street]"; case 17: ttext = "{01FCFF}[Varios Los Aztecas]"; case 18: ttext = "{83BFBF}[Rifa Gang]"; case 3: ttext = "{a38b52}[Aircraft Army]"; case 2: ttext = "{313131}[FBI]"; case 1: ttext = "{2641FE}[LSPD]"; case 4: ttext = "{d815ed}[MCLS]"; case 5: ttext = "{DDA701}[LCN]"; case 6: ttext = "{FF0000}[Yakuza]"; case 14: ttext = "{B4B5B7}[Russian Mafia]"; case 19: ttext = "{a38b52}[Army 51]"; case 16: ttext = "{139BEC}[SA NWES]"; case 7: ttext = "{114D71}[Gov]"; case 23: ttext = "{708090}[Hitman]"; case 24: ttext = "{F45000}[Street Racers]"; case 25: ttext = "{0f0f0f}[SWAT]"; default: ttext = "{FFFFFF}[Citizen]"; }
	format(string, sizeof(string), "{8f5f57}[GENERAL CHAT] %s {FFCC00}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid,text);
	SendClientMessageToAll(0xFFFFFFFF, string);
	SetPVarInt(playerid,"anti_flood_general_chat",gettime()+30);
	return 1;
}
CMD:generalchat(playerid, params[])
{
	if(GetPVarInt(playerid,"anti_flood_general_chat") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 30 seconds to talk again in {FF0000}GENERAL CHAT.");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid, -1, "{FFCC00}Usage: /g(eneralchat) [message]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendClientMessage(playerid, -1, "You have a mute!!");
	new text[100], string[144];
	strmid(text,params[0],0,100);
	new ttext[50];
	switch(PlayerInfo[playerid][pMember]) { case 12: ttext = "{8813E7}[Ballas Gang]"; case 13: ttext = "{DBD604}[Los Santos Vagos]"; case 15: ttext = "{24b012}[Grove Street]"; case 17: ttext = "{01FCFF}[Varios Los Aztecas]"; case 18: ttext = "{83BFBF}[Rifa Gang]"; case 3: ttext = "{a38b52}[Aircraft Army]"; case 2: ttext = "{313131}[FBI]"; case 1: ttext = "{2641FE}[LSPD]"; case 4: ttext = "{d815ed}[MCLS]"; case 5: ttext = "{DDA701}[LCN]"; case 6: ttext = "{FF0000}[Yakuza]"; case 14: ttext = "{B4B5B7}[Russian Mafia]"; case 19: ttext = "{a38b52}[Army 51]"; case 16: ttext = "{139BEC}[SA NWES]"; case 7: ttext = "{114D71}[Gov]"; case 23: ttext = "{708090}[Hitman]"; case 24: ttext = "{F45000}[Street Racers]"; case 25: ttext = "{0f0f0f}[SWAT]"; default: ttext = "{FFFFFF}[Citizen]"; }
	format(string, sizeof(string), "{8f5f57}[GENERAL CHAT] %s {FFCC00}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid,text);
	SendClientMessageToAll(0xFFFFFFFF, string);
	SetPVarInt(playerid,"anti_flood_general_chat",gettime()+30);
	return 1;
}
alias:vipchat("v");
CMD:vipchat(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: (/v)ipchat [message]");
	new ttext[50];
	switch(PlayerInfo[playerid][pDonateRank]) { case 1: ttext = "{947b33}[VIP-Bronze]"; case 2: ttext = "{8e8e8e}[VIP-Silver]"; case 3: ttext = "{e8b923}[VIP-Gold]"; }
	{
		format(stringer1, sizeof(stringer1), "%s %d {FFFFFF}%s[%d]{FFFF00}: {FFFF00}%s", ttext, PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][pNames], playerid, params[0]);
	}
	SendVipMessage(0xFFFF00FF, stringer1);
	return true;
}
CMD:rmute(playerid, params[])
{
//    if(AntiBan[playerid] >= 60) return SendClientMessage(playerid,COLOR_GREY,"[����-�������] Your admin actions are blocked for 3 minutes."), AntiBan[playerid] = 180;
    if(PlayerInfo[playerid][pAlcoInvenxua] < 2 && PlayerInfo[playerid][pHelper] < 4) return true;
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /rmute [id] [minute] [reason]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(params[1] > 60 || params[1] < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Not less than 0 and more than 60");
	AntiBan[playerid] += 30;
	if(IsIpFound(params[2])) return DelAdmin(playerid, 1);
	if(params[1] == 0)
	{
        if(!PlayerInfo[params[0]][pReportTime]) return SendClientMessage(playerid, COLOR_WHITE, "The player has no report ban.");
		PlayerInfo[params[0]][pReportTime] = 0;
		format(stringer1, sizeof(stringer1), "%s %s deleted the report mute from %s.", PlayerInfo[playerid][pAlcoInvenxua] ? ("Administrator") : ("Support Agent"),PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	    SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
		return true;
	}
	PlayerInfo[params[0]][pReportTime] = params[1]*60;
	format(stringer1, sizeof(stringer1), "%s %s gave report mute to the player %s for %i minutes. Reason: %s", PlayerInfo[playerid][pAlcoInvenxua] ? ("Administrator") : ("Support Agent"),PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
	SendMes(params[0], -1, "You were given a report ban for %i minutes", params[1]);
	return true;
}
CMD:fn(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You are muted for %d second",PlayerInfo[playerid][pMuteTime]);
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/fn [text]");
    switch(PlayerInfo[playerid][pMember])
    {
        case 0..4,7,10,19,21,25,26: return true;
    }
    format(stringer1, sizeof(stringer1), "[F] %s %s[%d]: (( %s ))", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x5677b3FF, stringer1);
    return true;
}
CMD:flock(playerid, params[])
{
       if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9)
       ShowPlayerDialog(playerid, 1405, DIALOG_STYLE_MSGBOX, "Family Safe", "Lock = Lock the family safe \nUnlock = Unlock the family safe \nChoose option!", "Unlock","Lock");
       return true;
}
CMD:rn(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You are muted for %d second",PlayerInfo[playerid][pMuteTime]);
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on-duty");
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/rn [text]");
    switch(PlayerInfo[playerid][pMember])
    {
    case 11,12,13,15,14,24,27,28:return true;
    case 17,18,0,5,6,9,16,20,23:return true;
    }
    format(stringer1, sizeof(stringer1), "[R] %s %s[%d]: (( %s ))", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
    SendRadioMessage(PlayerInfo[playerid][pMember], 0x5677b3FF, stringer1);
    return true;
}
alias:radio("r");
CMD:radio(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/r)adio [message]");
    switch(PlayerInfo[playerid][pMember])
    {
    case 11,12,13,15,14,24,27,28:return true;
    case 17,18,0,5,6,9,16,20,23:return true;
    }
    format(stringer1, sizeof(stringer1), "[R] %s %s[%d]: %s", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
    SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, stringer1);
    return true;
}
/*CMD:radio(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/r)adio [message]");
	switch(PlayerInfo[playerid][pMember])
	{
	case 11,12,13,15,14,24,27,28:return true;
	case 17,18,0,5,6,9,16,20,23:return true;
	}
	format(stringer1, sizeof(stringer1), "[R] %s %s[%d]: %s", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
	SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, stringer1);
	return true;
}*/
CMD:dice(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,30.0,1127.0945,-1.5882,1000.6797)) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}You must be in a casino!");
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, 0xffffffFF, "{ffffff}Use /dice [playerid] [bet]");
	if(params[1] < 100000 || params[1] > 5000000) return SendClientMessage(playerid, 0xffffffFF, "{ffffff}Minimum bet $100,000 maximum 5.000.000$");
	if(GetPVarInt(params[0], "ZapretDice")) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}The player is currently unable to play!");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}This player doesn't have that much money!");
	if(dicetime > gettime()) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}You are currently unable to play");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}Player is offline");
	if(!ProxDetectorS(6.0, playerid, params[0])) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}The player is not near you!");
	if(params[0] == playerid) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR] {ffffff}You have indicated your ID");
	SendMes(playerid, 0x6495EDFF, "You offered {FFFFFF}%s {6495ED} roll the dice. Bid: {FFFFFF}$%i",PlayerInfo[params[0]][pNames],params[1]);
	SendMes(params[0], 0x6495EDFF, "%s suggests throwing the dice. Bid: {FFFFFF}$%i. {6495ED}Click to confirm {a38b52}Y{6495ED}, otherwise {ff0000}N",PlayerInfo[playerid][pNames],params[1]);
	SetPVarInt(playerid, "ZapretDice",1);
	SetPVarInt(params[0], "KostiName",playerid);
	SetPVarInt(params[0], "KostiMoney",params[1]);
	SetPVarInt(params[0], "ProverkaDice",1);
	return 1;
}
alias:family("f");
CMD:family(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /f [message]");
    switch(PlayerInfo[playerid][pMember])
    {
        case 0..4,7,10,19,21,25,26: return true;
    }
    format(stringer1, sizeof(stringer1), "[F] %s %s[%d]: %s", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6495EDFF, stringer1);
    return true;
}
/*CMD:family(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /f [message]");
	switch(PlayerInfo[playerid][pMember])
	{
		case 0..4,7,10,19,21,25,26: return true;
	}
	format(stringer1, sizeof(stringer1), "[F] %s %s[%d]: %s", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
	SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6495EDFF, stringer1);
	return true;
}
CMD:departments(playerid, params[])
{
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/d)epartments [message]");
	switch(PlayerInfo[playerid][pMember])
	{
	case 12,13,15,14,24,27,28:return true;
	case 17,18,0,5,6,9,16,20,23:return true;
	}
	if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "�� �� ������������ ������ � �����������!");
	format(stringer1, sizeof(stringer1), "[%s] %s %s[%d]: %s", GetPlayerFracName[PlayerInfo[playerid][pMember]],fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
	SendTeamMessage(COLOR_ALLDEPT, stringer1);
	return true;
}*/
alias:departments("d");
CMD:departments(playerid, params[])
{
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/d)epartments [message]");
    switch(PlayerInfo[playerid][pMember])
    {
    case 12,13,15,14,24,27,28:return true;
    case 17,18,0,5,6,9,16,20,23:return true;
    }
    if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "You are not authorized to write to the deportation!");
    format(stringer1, sizeof(stringer1), "[D] %s %s[%d]: %s", fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames], playerid, params);
    SendTeamMessage(COLOR_ALLDEPT, stringer1);
    return true;
}
alias:government("gov");
CMD:government(playerid,params[])
{
    if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: You cannot speak. For starters, the mafia has to rid you of the mute..");
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(PlayerInfo[playerid][pMuted] != 0) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: You have a mute!");
	new memberrs = PlayerInfo[playerid][pMember], rankk = PlayerInfo[playerid][pRank];
	if(memberrs == 1 && rankk >= 14 || memberrs == 3 && rankk >= 14 || memberrs == 10 && rankk >= 14 || memberrs == 19 && rankk >= 14 || memberrs == 21 && rankk >= 14 || memberrs == 2 && rankk >= 9 || memberrs == 26 && rankk >= 9 || memberrs == 4 && rankk >= 9 || memberrs == 11 && rankk >= 9
	|| memberrs == 25 && rankk >= 9 || memberrs == 7 && rankk >= 9)
	{
		if(sscanf(params,"s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /gov(ernment) [Message]");
		if(GetPVarInt(playerid,"GovChat") > gettime()) return SendClientMessage(playerid, -1, "The message can be submitted once every 10 seconds.");
		SetPVarInt(playerid,"GovChat",gettime()+10);
		if(IsAIP(params[0])) {
			SendClientMessage(playerid, -1, "Advertising suspicions!");
			return false;
		}
		//SendClientMessageToAll(COLOR_WHITE, "---========== ��������������� ������� ==========---");
		format(stringer1, sizeof(stringer1),"[State News] %s[%d]: %s",PlayerInfo[playerid][pNames],playerid, params[0]);
		SendClientMessageToAll(0x4466ccff,stringer1);
	}
	else return SendClientMessage(playerid,COLOR_GREY,"This command is not available to you");
	return true;
}
alias:suspect("su");
CMD:suspect(playerid, params[])
{
	if(sscanf(params, "ds[128]", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/su)spect [id] [the crime]");
	new memberrs = PlayerInfo[playerid][pMember], rankk = PlayerInfo[playerid][pRank], lead = PlayerInfo[playerid][pLeader];
	if (memberrs == 1 && rankk >= 3 || lead == 1 || memberrs == 2 && rankk >= 3 || lead == 2 || memberrs == 10 && rankk >= 3 || lead == 10 || memberrs == 21 && rankk >= 3 || lead == 21 || memberrs == 25 && rankk >= 2 || lead == 25)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pJailed] != 0) return true;
		if(PlayerInfo[params[0]][pWanted] >= 6) return SendClientMessage(playerid, COLOR_GREY, "This player already has 6 wanted levels!");
		if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "You Cannot Issue Wanted For Goverment Worker!");
		SetPlayerExtra(params[0], playerid, 1, params[1]);
		return true;
	}
	return true;
}
CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 15.0, 268.3327,77.8972,1001.0391) || IsPlayerInRangeOfPoint(playerid, 6.0, 227.7436,114.5075,999.0156) || IsPlayerInRangeOfPoint(playerid, 6.0, 188.7124,157.6917,1003.0234)|| IsPlayerInRangeOfPoint(playerid, 6.0, 713.3285,-1337.1472,-59.6741) || IsPlayerInRangeOfPoint(playerid, 6.0, 198.3940,157.9389,1003.0234))
    {
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /arrest [time]");
		if(params[0] < 1 || params[0] > 20) return SendClientMessage(playerid, COLOR_GREY, "1 minute to 20");
		new suspect = GetClosestPlayer(playerid);
		if(!IsPlayerConnected(suspect)) return true;
		if(!ProxDetectorS(4.0, playerid, suspect)) return true;
		if(PlayerInfo[suspect][pWanted] < 1) return  SendClientMessage(playerid, COLOR_GREY, "A person must have at least one wanted level!");
		format(stringer1, sizeof(stringer1), "You have arrested %s, fine 30000 Money",PlayerInfo[suspect][pNames]);
		SendClientMessage(playerid, COLOR_WHITE, stringer1);
		PlayerInfo[suspect][pCash]-= 30000;
		GiveMoney(playerid, 5);
		GameTextForPlayer(suspect,"~r~-30000", 5000, 5);
		ResetWeapons(suspect);
		switch(PlayerInfo[playerid][pMember])
		{
		case 1,10,21,25: { format(stringer1, sizeof(stringer1), "<< Officer %s arrested %s >>",PlayerInfo[playerid][pNames],PlayerInfo[suspect][pNames]); SendClientMessageToAll(COLOR_LIGHTRED, stringer1); }
		case 2: { format(stringer1, sizeof(stringer1), "<< FBI %s Arrested %s >>",PlayerInfo[playerid][pNames],PlayerInfo[suspect][pNames]); SendClientMessageToAll(COLOR_LIGHTRED, stringer1); }
		}
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 268.3327,77.8972,1001.0391))
		{
			SetPlayerInteriorEx(suspect, 6);
			SetPPos(suspect,264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(suspect, 263.0160);
			PlayerInfo[suspect][pMestoJail] = 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 218.2263,114.9286,999.0156))
		{
			SetPlayerInteriorEx(suspect, 10);
			SetPPos(suspect,219.5400,109.9767,999.0156);
			SetPlayerFacingAngle(suspect, 1.0000);
			PlayerInfo[suspect][pMestoJail] = 2;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 198.3940,157.9389,1003.0234))
		{
			SetPlayerInteriorEx(suspect, 3);
			SetPPos(suspect,198.3642,161.8103,1003.0300);
			SetPlayerFacingAngle(suspect, 1.0000);
			PlayerInfo[suspect][pMestoJail] = 3;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 713.3285,-1337.1472,-59.6741))
		{
			SetPlayerInteriorEx(suspect, 15);
			SetPPos(suspect,713.8348,-1340.0420,-59.6741);
			SetPlayerFacingAngle(suspect, 1.0000);
			PlayerInfo[suspect][pMestoJail] = 4;
		}
		SetPlayerWantedLevel(suspect, 0);
		PlayerInfo[suspect][pJailTime] = params[0]*60;
		PlayerInfo[suspect][pWanted] = 0;
		PlayerInfo[suspect][pZakonp] -= 1;
		SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(suspect,0);
		TogglePlayerControllable(suspect, 1);
		PlayerInfo[suspect][pJailed] = 1;
		PlayerCuffed[suspect] = 0;
	}
	return true;
}
alias:megaphone("m");
CMD:megaphone(playerid, params[])
{
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/m)egaphone [text]");
	if(!Megaphone(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GRAD2, "{FF0000}x {AFAFAF}You are not in a company car!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 3,19: format(stringer1, sizeof(stringer1), "{{ Army %s: %s }}",PlayerInfo[playerid][pNames],params[0]);
	case 1,10,21,25: format(stringer1, sizeof(stringer1), "{{ Police %s: %s }}",PlayerInfo[playerid][pNames],params[0]);
	case 2: format(stringer1, sizeof(stringer1), "{{ Fbi Agent %s: %s }}",PlayerInfo[playerid][pNames],params[0]);
    default: return true;
	}
	ProxDetector(playerid, 80.0, COLOR_YELLOW, stringer1);
	return true;
}
CMD:aa(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 1) return true;
	{
		if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /aa [message]");
		new string[144];
		if(strlen(PlayerInfo[playerid][pPrefix]) > 1)
		{
			format(string, sizeof(string), "{FF0000}[%s] {FFFF00}%s[%d]{FFFFFF}: {2cdb0d}%s", PlayerInfo[playerid][pPrefix], PlayerInfo[playerid][pNames], playerid, params[0]);
		}
		else
		{
			format(string, sizeof(string), "{FF0000}[A-%d] {2cdb0d}%s[%d]{FFFFFF}: {FFFF00}%s", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pNames], playerid, params[0]);
		}
		for(new i = 0; i < 5; i++) SendAdminMessage(0xB8FF1AFF, string);
	}
	return true;
}
alias:admin("a");
CMD:admin(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: (/a)dmin [message]");
	if(strlen(PlayerInfo[playerid][pPrefix]) > 1) {
		format(stringer1, sizeof(stringer1), "{FF0000}[%s] {FFFF00}%s[%d]{FFFFFF}: {2cdb0d}%s", PlayerInfo[playerid][pPrefix], PlayerInfo[playerid][pNames], playerid, params[0]);
	} else {
		format(stringer1, sizeof(stringer1), "{FF0000}[A-%d] {FFFF00}%s[%d]{FFFFFF}: {2cdb0d}%s", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pNames], playerid, params[0]);
	}
	SendAdminMessage(0xFFFF00FF, stringer1);
	return true;
}

/*CMD:goadminka(playerid)
{
    if(PlayerInfo[playerid][pPayDayHad] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{ffff00}���������� �������� {00cc00}3 {ffff00}���� �� ������� (/mm - Statistics)!");
	if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, COLOR_GREY, "��� ��������� ������������ ������ �������. ��������� �����-����� � ������ ��������� ����� �� ����� {FFCD00}"PAGE_SITE" -> �����");
	if(Adminka < 1) return SendClientMessage(playerid, -1, "� ������ ������, ������� �� ��������!");
	ShowPlayerDialog(playerid, 6145, DIALOG_STYLE_LIST, "������� ����� ����", admtext, "Select", "Back");
	return true;
}
CMD:startgoadminka(playerid)
{
    if(PlayerInfo[playerid][pFull] < 2) return true;
	ShowPlayerDialog(playerid, 6231, DIALOG_STYLE_LIST, "{FFFFFF}/startgoadminka", "{FFFFFF}[1] ��������� ��� ����������� �������\n[2] ��������� � ������������ �����\n[3] ��������� ����� ������", "Next", "Cancle");
	return true;
}
CMD:startgorub(playerid)
{
    if(PlayerInfo[playerid][pFull] < 3) return true;
	ShowPlayerDialog(playerid, 6241, DIALOG_STYLE_LIST, "{FFFFFF}/startgorub", "{FFFFFF}[1] ����������\n[2] ��������/��������� �������\n[3] �������� ������\n[4] ��������� ������� ����� ������", "Next", "Cancle");
	return true;
}*/
CMD:hostname(playerid)
{
    if(PlayerInfo[playerid][pFull] < 4) return true;
	ShowPlayerDialog(playerid, 5912, DIALOG_STYLE_LIST, "HostName Panel", "[0] Change name\n[1] Turn on/off names\n[2] Visit all", "Next", "Cancle");
	return true;
}
alias:hchat("c");
CMD:hchat(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/c)hchat [message]");
	new arank[50];
	if(PlayerInfo[playerid][pHelper] == 1) { arank = "{a38b52}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 2) { arank = "{a38b52}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 3) { arank = "{a38b52}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 4) { arank = "{a38b52}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 5) { arank = "{a38b52}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 6) { arank = "{33CCFF}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 7) { arank = "{33CCFF}(Support Agent){FFFFFF}"; }
	else if(PlayerInfo[playerid][pHelper] == 8) { arank = "{FF0000}(The Support chef){FFFFFF}"; }
	else { arank = "(Unknown)"; }
	format(stringer1, sizeof(stringer1), "*%s %s[%d]: %s", arank, PlayerInfo[playerid][pNames], playerid, params[0]);
	SendHelperMessage(COLOR_WHITE, stringer1);
	return true;
}
CMD:helpers(playerid, params[])
{
	new b=0,ttext[50];
    SendClientMessage(playerid, COLOR_ORANGE, "Online support agents:");
	foreach (new i : Player)
	{
		if(PlayerInfo[i][pHelper] > 0)
		{
        	b++;
        	switch(PlayerInfo[i][pHelper])
		    {
            	case 1: ttext = "{F6FF00}(Support Agent){FFFFFF}";
            	case 2: ttext = "{F6FF00}(Support Agent){FFFFFF}";
                case 3: ttext = "{33CCFF}(Support Agent){FFFFFF}";
	        	case 4: ttext = "{33CCFF}(Support Agent){FFFFFF}";
	        	case 5: ttext = "{33CCFF}(Support Agent){FFFFFF}";
	        	case 6: ttext = "{33CCFF}(Support Agent){FFFFFF}";
	        	case 7: ttext = "{33CCFF}(Support Agent){FFFFFF}";
            	case 8: ttext = "{FF0000}(The Support chef){FFFFFF}";
		    }
	        format(stringer1,sizeof(stringer1),"* %s %s[%d] [{32CD32}lvl:%d{FFFFFF}]",ttext,PlayerInfo[i][pNames],i,PlayerInfo[i][pHelper]);
			if(GetPVarInt(i, "AFK_Time") > 2) format(stringer1,sizeof(stringer1), "* %s %s[%d] [{32CD32}lvl:%d{FFFFFF}] {FF0000}(AFK: %s)",ttext,PlayerInfo[i][pNames],i,PlayerInfo[i][pHelper], Convert(GetPVarInt(i,"AFK_Time")-2));
   			SendClientMessage(playerid,COLOR_GREY,stringer1);
		}
	}
	if(b > 0) SendMes(playerid,COLOR_GREY,"There are only %d helpers in the network.",b);
	else return SendClientMessage(playerid,COLOR_GREY,"There are no helpers online.");
	return true;
}
/*CMD:admins(playerid, params[])
{
    new b=0,string[1200] = "{FFFF00}{FFFF00}Nickname - Admin Level - {FFFF00}Date of last visit\n\n", strings[144];
    foreach (new i : Admin)
    {
        if(PlayerInfo[i][pAlcoInvenxua] < 0) continue;
        b++;
        format(strings, sizeof(strings), "{FFFF00}- {ffffff}Nickname:{FF0000} %s {FFFF00}- {ffffff}Admin Level:{FF0000} %d {FFFF00}- {FF0000}last visit: %s %d \n",PlayerInfo[i][pNames], PlayerInfo[i][pAlcoInvenxua], PlayerInfo[i][pGetondate]);
        strcat(string, strings);
    }
    if(b < 1) SendClientMessage(playerid,COLOR_GREY,"No adminstrators online now!");
    ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Online Admins", string, "Close", "");
    if(b < 1)  ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "All admins are offline", "Sorry there is no admins online right now \n\nOnline Admins: \t0 \t\t\t\t\t\t.", "Close", "");
	return true;
}*/
CMD:admins(playerid)
{
    // Check if the player is an administrator (pAlcoInvenxua greater than 0 or pDonateRank 1, 2, or 3)
    if(PlayerInfo[playerid][pAlcoInvenxua] > 0 || (PlayerInfo[playerid][pDonateRank] == 1 || PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3))
    {
        // Query the database to get all administrators
        mysql_function_query(connects, "SELECT * FROM `accounts` WHERE `pAlcoInvenxua` > 0", true, "Admins", "i", playerid);
    }
    else
    {
        SendClientMessage(playerid, COLOR_WHITE, "You Not Own Any VIP Pass!");
    }

    return true;
}

publics: Admins(playerid) {
    new f, d;
    cache_get_data(f, d);
    if(!f) return ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Admins", "No administrators found.", "Close", "");

    new online[64], name[24], ttextt[40], maximum[78], string[144], level;
    new fullString[4096]; // Increased string size to accommodate more data

    format(fullString, sizeof(fullString), "{FFFFFF}{FFFFFF}Nickname - Admin Level - {FFFF00}Date of last visit\n\n");

    for(new i = 0; i < f; i++)
    {
        cache_get_field_content(i, "pAlcoInvenxua", maximum);
        level = strval(maximum);
        cache_get_field_content(i, "Name", maximum);
        strmid(name, maximum, 0, strlen(maximum), 32);
        cache_get_field_content(i, "pGetonDate", maximum);
        strmid(online, maximum, 0, strlen(maximum), 32);

        if(IsPlayerConnected(GetPlayerID(name)))
        {
            ttextt = "{2cdb0d}Online";
        }
        else if(!IsPlayerConnected(GetPlayerID(name)))
        {
            ttextt = "{FF0000}Offline";
        }

        format(string, sizeof(string), "{FFFFFF} %s | %s | Date of last visit: %s | {FF0000}LVL - %d\n", name, ttextt, online, level);
        strcat(fullString, string); // Append each admin's info to the full string
    }

    // Display the full list of admins in a dialog box
    ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Admins", fullString, "Close", "");

    return true;
}
publics: Helpers(playerid) {
	new f,d;
	cache_get_data(f,d);
	if(!f) return SendClientMessage(playerid, -1, "Not found!");
	new online[64], name[24], ttextt[40], maximum[78], string[144], level;
	SendClientMessage(playerid, COLOR_ORANGE, "Offline list of helpers:");
	for(new i = 0; i < f; i++)
	{
	    cache_get_field_content(i, "pHelper", maximum), level = strval(maximum);
		cache_get_field_content(i, "Name", maximum), strmid(name, maximum, 0, strlen(maximum), 32);
		cache_get_field_content(i, "pGetonDate", maximum),	strmid(online, maximum, 0, strlen(maximum), 32);
		if(IsPlayerConnected(GetPlayerID(name))) { ttextt = "Online"; }
		else if(!IsPlayerConnected(GetPlayerID(name))) { ttextt = "Offline"; }
		format(string, sizeof(string), "%s | %s | Date of last visit: %s | LVL - %d", name,ttextt,online, level);
		SendClientMessage(playerid, -1, string);
	}
	return true;
}

CMD:ahelpers(playerid) {
	if(PlayerInfo[playerid][pAlcoInvenxua] > 10) mysql_function_query(connects, "SELECT * FROM `accounts` WHERE `pHelper` > 0", true, "Helpers", "i", playerid);
	return true;
}

forward AStats(playerid, name[]);
public AStats(playerid, name[]) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
		new string[1000], status = 0, ipg[16], ipreg[16];
		foreach(Player, i) {
			if(!IsPlayerConnected(i)) continue;
			if(!strcmp(PlayerInfo[i][pNames], name, true)) {
				format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t\t{dfb519}%s\n{FFFFFF}Administrative level:\t\t{dfb519}%d\
				\n{FFFFFF}Reprimands:\t\t\t\t{dfb519}%d of 3\n{FFFFFF}Online today:\t\t\t{dfb519}%d hour. %d minutes\n{FFFFFF}Online last night:\t\t\t{dfb519}%d hour. %d minutes\n\n\
				_______________________________________________________________________\n\n\
				{FFFFFF}Responses to the report:\t\t\t{dfb519}%d\n{FFFFFF}kicked:\t\t\t\t{dfb519}%d\n{FFFFFF}Warn:\t\t\t\t{dfb519}%d\n{FFFFFF}Banned:\t\t\t\t{dfb519}%d\n\
				{FFFFFF}Mute List:\t\t\t\t{dfb519}%d\n{FFFFFF}jailed:\t\t\t{dfb519}%d\n\n\
				_______________________________________________________________________\n\n\
				{FFFFFF}IP address:\t\t\t\t{dfb519}%s\n{FFFFFF}Registered IP:\t\t\t{dfb519}%s",
				PlayerInfo[i][pNames], PlayerInfo[i][pAlcoInvenxua], PlayerInfo[i][pVigs], PlayerInfo[i][pDayOnline] / 60, PlayerInfo[i][pDayOnline] % 60,
				PlayerInfo[i][pOnlineYes] / 60, PlayerInfo[i][pOnlineYes] % 60, PlayerInfo[i][pRepAdm], PlayerInfo[i][pKickAdm], PlayerInfo[i][pWarnAdm],
				PlayerInfo[i][pBanAdm], PlayerInfo[i][pMuteAdm], PlayerInfo[i][pJailAdm], PlayerInfo[i][pIP], PlayerInfo[i][pIpReg]);
				ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Adminstrator statistics", string, "Ready", "");
				status = 1;
				break;
			}
		}
		if(status < 1) {
			cache_get_field_content(0, "pIpReg",ipreg), cache_get_field_content(0, "pGetonIP",ipg);
			format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t\t{dfb519}%s\n{FFFFFF}Administrative level:\t\t{dfb519}%d\
			\n{FFFFFF}Reprimands:\t\t\t\t{dfb519}%d of 3\n{FFFFFF}Online today:\t\t\t{dfb519}%d hour. %d minutes\n{FFFFFF}Online last night:\t\t\t{dfb519}%d hour. %d minutes\n\n\
			_______________________________________________________________________\n\n\
			{FFFFFF}Responses to the report:\t\t\t{dfb519}%d\n{FFFFFF}kicked:\t\t\t\t{dfb519}%d\n{FFFFFF}���������:\t\t\t\t{dfb519}%d\n{FFFFFF}Banned:\t\t\t\t{dfb519}%d\n\
			{FFFFFF}mute:\t\t\t\t{dfb519}%d\n{FFFFFF}jailed:\t\t\t{dfb519}%d\n\n\
			_______________________________________________________________________\n\n\
			{FFFFFF}IP address:\t\t\t\t{dfb519}%s\n{FFFFFF}Registered IP:\t\t\t{dfb519}%s",
			name, cache_get_field_content_int(0, "pAlcoInvenxua", connects), cache_get_field_content_int(0, "vigs", connects), cache_get_field_content_int(0, "day_online", connects) / 60, cache_get_field_content_int(0, "day_online", connects) % 60,
			cache_get_field_content_int(0, "pOnlineYes", connects) / 60, cache_get_field_content_int(0, "pOnlineYes", connects) % 60, cache_get_field_content_int(0, "pRepAdm", connects), cache_get_field_content_int(0, "pKickAdm", connects), cache_get_field_content_int(0, "pWarnAdm", connects),
			cache_get_field_content_int(0, "pBanAdm", connects),cache_get_field_content_int(0, "pMuteAdm", connects), cache_get_field_content_int(0, "pJailAdm", connects), ipg, ipreg);
			ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Adminstrator statistics", string, "Ready", "");
		}
	} else SendClientMessage(playerid, -1, "This player is not registered on the server!");
	return true;
}

CMD:astats(playerid, params[]) {
	if(PlayerInfo[playerid][pAlcoInvenxua] < 1) return true;
	new name[24];
	if(FD(playerid)) {
		if(sscanf(params, "S[24]", name)) return SendClientMessage(playerid, -1, "Usage: /astats [playername]");
		if(!strlen(name) || !strcmp(PlayerInfo[playerid][pNames], name, true)) {
			new string[1000];
			format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t\t{dfb519}%s\n{FFFFFF}Administrative level:\t\t{dfb519}%d\
			\n{FFFFFF}Reprimands:\t\t\t\t{dfb519}%d of 3\n{FFFFFF}Online today:\t\t\t{dfb519}%d hour. %d minute\n{FFFFFF}Online last night:\t\t\t{dfb519}%d hour. %d minute\n\n\
			_______________________________________________________________________\n\n\
			{FFFFFF}Responses to the report:\t\t\t{dfb519}%d\n{FFFFFF}kicked:\t\t\t\t{dfb519}%d\n{FFFFFF}warn:\t\t\t\t{dfb519}%d\n{FFFFFF}Banned:\t\t\t\t{dfb519}%d\n\
			{FFFFFF}mute list:\t\t\t\t{dfb519}%d\n{FFFFFF}jailed:\t\t\t{dfb519}%d\n\n\
			_______________________________________________________________________\n\n\
			{FFFFFF}IP address:\t\t\t\t{dfb519}%s\n{FFFFFF}Registered IP:\t\t\t{dfb519}%s",
			PlayerInfo[playerid][pNames], PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pVigs], PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60,
			PlayerInfo[playerid][pOnlineYes] / 60, PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pRepAdm], PlayerInfo[playerid][pKickAdm], PlayerInfo[playerid][pWarnAdm],
			PlayerInfo[playerid][pBanAdm], PlayerInfo[playerid][pMuteAdm], PlayerInfo[playerid][pJailAdm], PlayerInfo[playerid][pIP], PlayerInfo[playerid][pIpReg]);
			ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Adminstrator statistics", string, "Ready", "");
		} else {
			new string[144];
			format(string, sizeof(string), "SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
			mysql_function_query(connects, string, true, "AStats", "ds", playerid, name);
		}
	} else {
		new string[1000];
		format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t\t{dfb519}%s\n{FFFFFF}Administrative level:\t\t{dfb519}%d\
		\n{FFFFFF}Reprimands:\t\t\t\t{dfb519}%d of 3\n{FFFFFF}Online today:\t\t\t{dfb519}%d hour. %d minute\n{FFFFFF}Online last night:\t\t\t{dfb519}%d hour. %d minute\n\n\
		_______________________________________________________________________\n\n\
		{FFFFFF}Responses to the report:\t\t\t{dfb519}%d\n{FFFFFF}kicked:\t\t\t\t{dfb519}%d\n{FFFFFF}warn:\t\t\t\t{dfb519}%d\n{FFFFFF}Banned:\t\t\t\t{dfb519}%d\n\
		{FFFFFF}mute list:\t\t\t\t{dfb519}%d\n{FFFFFF}jailed:\t\t\t{dfb519}%d\n\n\
		_______________________________________________________________________\n\n\
		{FFFFFF}IP address:\t\t\t\t{dfb519}%s\n{FFFFFF}Registered IP:\t\t\t{dfb519}%s",
		PlayerInfo[playerid][pNames], PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pVigs], PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60,
		PlayerInfo[playerid][pOnlineYes] / 60, PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pRepAdm], PlayerInfo[playerid][pKickAdm], PlayerInfo[playerid][pWarnAdm],
		PlayerInfo[playerid][pBanAdm], PlayerInfo[playerid][pMuteAdm], PlayerInfo[playerid][pJailAdm], PlayerInfo[playerid][pIP], PlayerInfo[playerid][pIpReg]);
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "Adminstrator statistics", string, "Ready", "");
	}
	return true;
}

CMD:aad(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]",params[0])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /aad [Message]");
//	if(IsIpFound(params[0])) return DelAdmin(playerid, 1);
	if(!strcmp(PlayerInfo[playerid][pNames], ""AntiBan1"") || !strcmp(PlayerInfo[playerid][pNames], ""AntiBan2""))
	{
		format(stringer1, sizeof(stringer1), "The originator %s: %s", PlayerInfo[playerid][pNames], params[0]);
	}
	else
	{
		format(stringer1, sizeof(stringer1), "Adminstrator %s: %s", PlayerInfo[playerid][pNames], params[0]);
	}
	SendClientMessageToAll(0xFFCD00ff,stringer1);
	return true;
}
CMD:n(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You are muted for: %d sec(a)",PlayerInfo[playerid][pMuteTime]);
    if(sscanf(params, "s[128]",params[0])) return    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /n [message]");
    if(IsAIP(params[0])) {
        SendClientMessage(playerid, -1, "Do not flood please");
        return false;
    }
    format(stringer1, sizeof(stringer1), "%s: (( %s ))", PlayerInfo[playerid][pNames], params[0]);
    ProxDetector(playerid, 20.0, 0xF5DEB3AA, stringer1);
    return true;
}
alias:wisper("w");
CMD:wisper(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]",params[0])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /w [Message]");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Predictions about the reclamation!");
		return false;
	}
	format(stringer1,sizeof(stringer1), "{BDB76B}%s whispering: %s", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(playerid, 1.2, COLOR_WHITE, stringer1);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,1.2,10000);
	return true;
}
stock colorchat(playerid, type) {
	new color[10];
	switch(type) {
		case 1: {
			switch(PlayerInfo[playerid][pMember]) {
				case 0:	color = "FFFFFF";
				case 1: color = "2641FE";
				case 2: color = "313131";
				case 3: color = "a38b52";
				case 4: color = "d815ed";
				case 5: color = "DDA701";
				case 6: color = "FF0000";
				case 7: color = "114D71";
				case 8: color = "B313E7";
				case 10: color = "2641FE";
				case 11: color = "139BEC";
				case 12: color = "8813E7";
				case 13: color = "DBD604";
				case 14: color = "B4B5B7";
				case 15: color = "24b012";
				case 16: color = "40848B";
				case 17: color = "01FCFF";
				case 18: color = "83BFBF";
				case 19: color = "a38b52";
				case 21: color = "2641FE";
				case 23: color = "708090";
				case 24: color = "F45000";
				case 25: color = "0f0f0f";
				case 26: color = "708090";
				case 27,28: color = "FF0000";
			}
		}
		case 2: {
			switch(playerid) {
				case 0:	color = "FFFFFF";
				case 1: color = "2641FE";
				case 2: color = "313131";
				case 3: color = "a38b52";
				case 4: color = "d815ed";
				case 5: color = "DDA701";
				case 6: color = "FF0000";
				case 7: color = "114D71";
				case 8: color = "B313E7";
				case 10: color = "2641FE";
				case 11: color = "139BEC";
				case 12: color = "8813E7";
				case 13: color = "DBD604";
				case 14: color = "B4B5B7";
				case 15: color = "24b012";
				case 16: color = "40848B";
				case 17: color = "01FCFF";
				case 18: color = "83BFBF";
				case 19: color = "a38b52";
				case 21: color = "2641FE";
				case 23: color = "708090";
				case 24: color = "F45000";
				case 25: color = "0f0f0f";
				case 26: color = "708090";
				case 27,28: color = "FF0000";
			}
		}
 	}
	return color;
}
alias:ooc("o");
CMD:ooc(playerid, params[])
{
//    if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
//	if(noooc[1] > 0 && PlayerInfo[playerid][pAlcoInvenxua] < 9) return SendClientMessage(playerid, 0xFFD5BBAA, "Don't flood!");
	if(noooc[0] == 0 && PlayerInfo[playerid][pAlcoInvenxua] < 9) return SendClientMessage(playerid, COLOR_GREY,"General chat disabled!");
	else if(PlayerInfo[playerid][pAlcoInvenxua] && noooc[0] > 0) { }
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: (/o)oc [message]");
//	if(IsIpFound(params[0]) || strfind(params[0], "simple", true) != -1) return DelAdmin(playerid, 1);
	if(PlayerInfo[playerid][pMember] < 1 && PlayerInfo[playerid][pLeader] < 1)
	{
		format(stringer1, sizeof(stringer1), "<< %s[%d]: {E0FFFF}%s >>", PlayerInfo[playerid][pNames], playerid, params[0]);
	}
	else
	{
		format(stringer1, sizeof(stringer1), "<< {%s}%s[%d]: {E0FFFF}%s >>", colorchat(playerid, 1), PlayerInfo[playerid][pNames], playerid, params[0]);
	}
	SendClientMessageToAll(COLOR_OOC,stringer1);
//	if(PlayerInfo[playerid][pAlcoInvenxua] <= 0) noooc[1] = noooc[0];
//	AntiBan[playerid] += 20;
	return true;
}
CMD:noooc(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 2) return true;
	if(noooc[0] != 0)
	{
	    noooc[0] = 0, SendClientMessageToAll(COLOR_WHITE, "General chat disabled by Administrator!");
	    format(stringer1, sizeof(stringer1), "Administrator %s has disabled general chat.",PlayerInfo[playerid][pNames]), SendAdminMessage(COLOR_GREY,stringer1);
	    return true;
	}
	if(sscanf(params, "d", params[0]) || params[0] <= 0) return	SendClientMessage(playerid, COLOR_WHITE,"Usage: /noooc [anti-flood time]");
	noooc[0] = params[0], SendClientMessageToAll(COLOR_WHITE, "General chat enabled by Administrator!");
	format(stringer1, sizeof(stringer1), "Administrator %s has enabled general chat.",PlayerInfo[playerid][pNames]), SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
alias:clearchat("cc");
CMD:clearchat(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
    for(new i = 0; i < 99; i ++) SendClientMessageToAll( -1, "");
	format(stringer1, sizeof(stringer1), "{FF0000}IP:{FFFF00}103.179.45.98:5265]\n{32e322}[Adminstrator %s cleared the chat]\n{0084ff}[Emergency Clear Flood/Suspious AD]",PlayerInfo[playerid][pNames]);
	SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
	return true;
}
CMD:sethelper(playerid, params[])
{
    if(!is_cmd_allow(playerid, CMD_sethelper)) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sethelper [playerid] [level(1-8)]");
	if(params[1] < 0 || params[1] > 8) return SendClientMessage(playerid, COLOR_WHITE, "[ERROR] You cannot give less than 0 and more than 8 helper levels.");
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pHelper] = params[1];
	PlayerInfo[params[0]][pHotvet] = 0;
	UpdatePlayerData(playerid, "pHelper", PlayerInfo[playerid][pHelper]);
	UpdatePlayerData(playerid, "pHotvet", PlayerInfo[playerid][pHotvet]);
	format(stringer1, sizeof(stringer1), "You have been promoted/demoted to the rank of %i helper. Adminstrator %s",params[1],PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, stringer1);
	format(stringer1, sizeof(stringer1), "You promoted/demoted %s to %i helper level.",PlayerInfo[params[0]][pNames],params[1]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, stringer1);
	return true;
}

forward CheckDonate(playerid);
public CheckDonate(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
		new string[1000], str[200], rub, NameD[24];
		string = "Name Number of rubles\n";
		for(new i = 0; i < rows; i++) {
			rub = cache_get_field_content_int(i, "pRub", connects);
			if(rub < 1000) continue;
			cache_get_field_content(i, "Name", NameD, connects, MAX_PLAYER_NAME);
			format(str, sizeof(str), "%s\t%d\n", NameD, rub);
			strcat(string, str);
		}
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_TABLIST_HEADERS, "Donators", string, "Close", "");
	}
	return true;
}

CMD:checkdonate(playerid) {
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(FD(playerid)) mysql_function_query(connects, "SELECT `Name`, `pRub` FROM `accounts` ORDER BY `pRub`", true, "CheckDonate", "d", playerid);
	return true;
}

CMD:capture(playerid, params[])
{
	if(IsAGang(playerid))
	{
	    new h; gettime(h);
	    if(h < 1 || h > 23 ) return SendClientMessage(playerid, COLOR_GREY, "You can use the command only from 1:00 to 0:00");
		if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid,COLOR_GREY,"Function available from rank 7 and above!");
		new faction = PlayerInfo[playerid][pMember];
		//new GangName[5] = {15, 17, 12, 18, 13};
		if(!IsInAllowed(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Your gang is already taking part in the capture of zones!");
		if(PlayerInfo[playerid][pMember] == 15 && b_Ghetto{0}) return SendClientMessage(playerid, COLOR_GREY, "The administration has forbidden your gang to fight for territories ");
		if(PlayerInfo[playerid][pMember] == 17 && b_Ghetto{1}) return SendClientMessage(playerid, COLOR_GREY, "The administration has forbidden your gang to fight for territories ");
		if(PlayerInfo[playerid][pMember] == 12 && b_Ghetto{2}) return SendClientMessage(playerid, COLOR_GREY, "The administration has forbidden your gang to fight for territories ");
		if(PlayerInfo[playerid][pMember] == 18 && b_Ghetto{3}) return SendClientMessage(playerid, COLOR_GREY, "The administration has forbidden your gang to fight for territories ");
		if(PlayerInfo[playerid][pMember] == 13 && b_Ghetto{4}) return SendClientMessage(playerid, COLOR_GREY, "The administration has forbidden your gang to fight for territories ");
		if(FrakCD[faction] > 0) return SendClientMessage(playerid, COLOR_GREY, "You can capture a zone once an hour!");
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Can't be used in a car");
				{
					if(GZInfo[i][gFrak] == faction) return SendClientMessage(playerid, COLOR_GREY, "You cannot take over your gang's zone!");
					if(IsCapture == 1) return SendClientMessage(playerid, COLOR_GREY, "One of the zones is already being captured. Wait for the end!");
					switch(GZInfo[i][id]) {
						case 55, 69, 102, 113, 120: return SendClientMessage(playerid,COLOR_GREY,"The territory is fixed to the gang spawn!");
					}
					switch(GZInfo[i][gFrak])
					{
						case 15: if(b_Ghetto{0}) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}ERROR > {ffffff}This gang is frozen!");
						case 13: if(b_Ghetto{4}) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}ERROR > {ffffff}This gang is frozen!");
						case 12: if(b_Ghetto{2}) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}ERROR > {ffffff}This gang is frozen!");
						case 18: if(b_Ghetto{3}) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}ERROR > {ffffff}This gang is frozen!");
						case 17: if(b_Ghetto{1}) return SendClientMessage(playerid,COLOR_WHITE,"� {AC0000}ERROR > {ffffff}This gang is frozen!");
					}
					if(IsPlayerInBandOnline(faction) < 0) return SendClientMessage(playerid,COLOR_GREY, "There are few online players in your gang!");
					if(IsPlayerInBandOnline(GZInfo[i][gFrak]) < 1) return format(stringer1,128,"At the gang \"%s\" few players!", GetPlayerFracName[GZInfo[i][gFrak]]), SendClientMessage(playerid,0x6495EDFF, stringer1);
					format(stringer1,112," %s (%s) instigated the takeover of the %s gang.",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]],GetPlayerFracName[GZInfo[i][gFrak]]);
					SendAdminMessage(COLOR_GREY,stringer1);
					SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_ORANGE,stringer1);
			        SendFamilyMessage(GZInfo[i][gFrak],COLOR_ORANGE,stringer1);
					GZSafeTime[i] = 1100;
					FrakCD[faction]  = 3600;
					GZInfo[i][gNapad] = faction;
					GangZoneFlashForAll(GZInfo[i][id],GetGangColor(GZInfo[i][gNapad]));
					ZoneOnBattle[i] = 0;
					IsCapture = 1;
					GangInfo[faction][capture] = 1;
					GangInfo[GZInfo[i][gFrak]][capture] = 1;
					GangInfo[GZInfo[i][gFrak]][captureid] = faction;
					GangInfo[faction][captureid] = faction;
					GangInfo[faction][gangnumber] = 1;
					GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
					IDzone = GZInfo[i][id];
					Timer[7] = gettime()+1;
				}
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:gzcolor(playerid, params[])
{
	if(!is_cmd_allow(playerid, CMD_gzcolor) && PlayerInfo[playerid][pAlcoInvenxua] < 11) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /gzcolor [ID-faction]");
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
		    if(GZInfo[i][gFrak] == 18) TotalGzR--;
			else if(GZInfo[i][gFrak] == 17) TotalGzA--;
			else if(GZInfo[i][gFrak] == 15) TotalGzG--;
			else if(GZInfo[i][gFrak] == 13) TotalGzV--;
			else if(GZInfo[i][gFrak] == 12) TotalGzB--;
			GZInfo[i][gFrak] = params[0];
			if(GZInfo[i][gFrak] == 18) TotalGzR++;
			else if(GZInfo[i][gFrak] == 17) TotalGzA++;
			else if(GZInfo[i][gFrak] == 15) TotalGzG++;
			else if(GZInfo[i][gFrak] == 13) TotalGzV++;
			else if(GZInfo[i][gFrak] == 12) TotalGzB++;
			GangZoneStopFlashForAll(GZInfo[i][id]);
			GangZoneHideForAll(GZInfo[i][id]);
			GangZoneShowForAll(GZInfo[i][id],GetGangZoneColor(i));
			SaveGZ(i);
			if(i == 47)
			{
				format(stringer1, sizeof (stringer1),  "Stash\n Under control:\n %s\nDrug price: %d",GetPlayerFracName[GZInfo[47][gFrak]],pricelist);
    			UpdateDynamic3DTextLabelText(PritonLable,COLOR_GREEN,stringer1);
    		}
    		skladband();
			break;
		}
	}
	return 1;
}
CMD:kick(playerid, params[])
{
	if(GetPVarInt(playerid,"KickTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You must wait to 10 secnonds to kick a player again");
	if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return true; //{FF6600}�� ����� �������� �������, ��������� ������� ���� �������������. ������� ������� � {FFFFFF}/adonate, {FF6600}����� ����� ���������� ������
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}Your account has been reprimanded and some commands have been blocked. Remove the reprimand � {FFFFFF}/adonate, {FF6600}to unblock commands");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your adm action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /kick [id] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0])) return 1;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be kicked!");
	if((FD(params[0]) && !FD(playerid)) || IsIpFound(params[1])) return true;
	format(stringer1, sizeof(stringer1), "Adminstrator %s kicked %s. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
	SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
	AntiBan[playerid] += 30, PlayerInfo[playerid][pKickAdm]++;
	SendClientMessage(params[0], COLOR_LIGHTRED, "you were disconnected from the server for breaking the server rules.");
	SendClientMessage(params[0], COLOR_LIGHTRED, "Please don�t break it anymore, Have a good game!");
	format(stringer1, sizeof(stringer1), "kicked with a reason: %s", params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	KickEx(params[0]);
	SetPVarInt(playerid,"KickTime",gettime()+10);
	return true;
}
CMD:skick(playerid, params[])
{
	if(GetPVarInt(playerid,"KickTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You can kick a player once every 10 seconds");
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}Your account has been reprimanded and some commands have been blocked. Remove the reprimand � {FFFFFF}/adonate, {FF6600}to unblock commands");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /skick [id] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be kicked!");
	if(FD(params[0]) || IsIpFound(params[1])) return DelAdmin(playerid, 1);
	format(stringer1, sizeof(stringer1), "Adminstrator %s nodded quietly %s. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
    SendAdminMessage(COLOR_GREY,stringer1);
	AntiBan[playerid] += 30;
	PlayerInfo[playerid][pKickAdm]++;
	format(stringer1, sizeof(stringer1), "kicked, with a reason: %s", params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	KickEx(params[0]);
	SetPVarInt(playerid,"KickTime",gettime()+10);
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
//	if(PlayerInfo[playerid][pcWarn] < 1) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /unwarn [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pWarns] <= 0) {SendClientMessage(playerid, COLOR_RED, "This player is don't have any warns"); return true;}
	PlayerInfo[params[0]][pWarns] = 0;
	PlayerInfo[params[0]][punWarnstime] = 0;
	PlayerInfo[params[0]][punWarns] = 0;
	format(stringer1, sizeof(stringer1), "Adminstrator %s Removed the warn for player %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
	SendClientMessage(params[0], COLOR_GREEN,"Your warn has been deleted");
	Admin_Log(playerid, "removed all warnings", PlayerInfo[params[0]][pNames], gettime());
	return true;
}
CMD:warn(playerid, params[])
{
	if(GetPVarInt(playerid,"WarnTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You can warn a player again after 10 minutes");
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
//	if(PlayerInfo[playerid][pcWarn] == 0) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY," Your admin action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /warn [id] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0])) return 1;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator can't be warned!");
	if(FD(params[0]) || IsIpFound(params[2])) return DelAdmin(playerid, 1);
	PlayerInfo[params[0]][pWarns] += 1;
	AntiBan[playerid] += 30;
	PlayerInfo[playerid][pWarnAdm]++;
	if(PlayerInfo[params[0]][pWarns] >= 3)
	{
	   	PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pJob] = 0;
		PlayerInfo[params[0]][punWarns] = 0;
		PlayerInfo[params[0]][punWarnstime] = 0;
		format(stringer1, sizeof(stringer1), "[WARN] Adminstrator %s warned the player %s for 2 days. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
		SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
		format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP],PlayerInfo[params[0]][pIpReg]);
		SendAdminMessage(COLOR_WHITE,stringer1);
		SendClientMessage(params[0], COLOR_LIGHTRED, "You have been breaking the server rules, Hope you don't try it again and have a good time!,");
//	    SendClientMessage(params[0], COLOR_LIGHTRED, "������� ������� F8 (������ ������), ����� ������� TAB + F8 � �������� ������ � ������ �� - "PAGE_FORUM"");
	    ServerBan(playerid, PlayerInfo[params[0]][pNames], 2, params[1]);
	    KickEx(params[0]);
		return true;
	}
	format(stringer1, sizeof(stringer1), "Adminstrator %s issued a warning %s [%d/3]. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pWarns],params[1]);
	SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
//	SendClientMessage(params[0], COLOR_YELLOW, "���� �� �� �������� � ����������, �������� ��������, ����� F8, ����� Tab+F8 � ������� ������ � ������ �� - "PAGE_FORUM"");
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][pJob] = 0;
	PlayerInfo[params[0]][punWarns] = 1;
	PlayerInfo[params[0]][punWarnstime] = 0;
	format(stringer1, sizeof(stringer1), "You have been warned, Reason: %s", params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	KickEx(params[0]);
	SetPVarInt(playerid,"WarnTime",gettime()+10);
	return true;
}
CMD:ahelp(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua])
	{
		format(stringer,sizeof(stringer),"-Level 1\n-Level 2\n-Level 3\n-Level 4\n-Level 5\n-Level 6\n-Level 7\n-Level 8\n-Level 9\n-Level 10\n-Level 11\n-Level 12\n-Level 13");
		ShowPlayerDialog(playerid,20011,DIALOG_STYLE_LIST,"Adminstrator Commands {FFD700}"NAME_SERVER" Role Play:",stringer,"Select","Cancle");
//	    SendClientMessage(playerid, 0xB8860BFF, "[UPDATE] ����� ������� ��� Adminstrator�� 8 ������ /afly");
//		SendClientMessage(playerid, 0xB8860BFF, "[UPDATE] ����� ��������� ��� Adminstrator�� (�����������: /tp)");
//		SendClientMessage(playerid, 0xB8860BFF, "[UPDATE] ������� ������ ���� � �����-��������, �� ������ (/adonate)");
	}
	return true;
}
CMD:multiakk(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] <= 13) return true;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i)) continue;
		for(new i2=0;i2<MAX_PLAYERS;i2++)
		{
			if(!IsPlayerConnected(i2)) continue;
			if(i2 == i) continue;
			if(!strcmp(PlayerIp[i], PlayerIp[i2]) && !IsPlayerFake(i))
			{
				format(stringer, 128, "%s[%i]: %s", PlayerInfo[i][pNames], i,PlayerIp[i]);
				SendClientMessage(playerid, -1, stringer);

				break;
			}
		}
	}
	return true;
}
/*CMD:ban(playerid, params[])
{
	if(GetPVarInt(playerid,"BanTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You need to wait 10 seconds to ban a player again");
	if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return true; //{FFFF00}� ��� ��� ������� � ������ �������. ��� ������� ����������� � {FF0000}/adonate
	if(PlayerInfo[playerid][pcBan] == 0 && PlayerInfo[playerid][pFull] < 1) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN, {FF6600}to buy what command you want");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your admin action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ban [id] [days] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0]) && !FD(playerid)) return SendClientMessage(playerid,-1,"The bar has been ordered!");
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "The administrator has not been overridden!");
	if((FD(params[0]) && !FD(playerid)) || IsIpFound(params[2])) return true;
	switch(PlayerInfo[params[0]][pDonateRank])
	{
		case 1: if(params[1] > 5 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 5");
		case 2: if(params[1] > 7 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 5");
		case 3: if(params[1] > 7 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 2");
		default: if(params[1] > 7 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 7");
	}
	AntiBan[playerid] += 30;
	PlayerInfo[playerid][pBanAdm]++;
	format(stringer1, sizeof(stringer1), "Adminstrator %s banned %s for %d day(s). Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
	format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP],PlayerInfo[params[0]][pIpReg]);
	SendAdminMessage(COLOR_GREY,stringer1);
	SendClientMessage(params[0], COLOR_LIGHTRED, "Note due to the violation of the server rules. If not agreed with the manager,");
	SendClientMessage(params[0], COLOR_LIGHTRED, "Take screen shot and go to the discord server and make a report about this admin, if you are not make any wrong thing");
	PlayerInfo[params[0]][pLeader] = 0, PlayerInfo[params[0]][pMember] = 0, PlayerInfo[params[0]][pJob] = 0, PlayerInfo[params[0]][pRank] = 0, PlayerInfo[params[0]][pOdet] = 0;
	ServerBan(playerid, PlayerInfo[params[0]][pNames], params[1], params[2]);
	KickEx(params[0]);
	SetPVarInt(playerid,"BanTime",gettime()+10);
	return true;
}*/
CMD:ban(playerid, params[])
{
    if(GetPVarInt(playerid,"BanTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You need to wait 10 seconds to ban a player again");
    if(PlayerInfo[playerid][pcBan] == 0 && PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
 //   if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//    if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your admin action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
    if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ban [id] [days] [reason]");
    if(!IsPlayerConnected(params[0])) return true;
    if(IsPlayerFake(params[0]) && !FD(playerid)) return SendClientMessage(playerid,-1,"The bar has been ordered!");
    if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "The administrator has not been overridden!");
    if((FD(params[0]) && !FD(playerid)) || IsIpFound(params[2])) return true;
    switch(PlayerInfo[params[0]][pDonateRank])
    {
        case 1: if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 5");
        case 2: if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 5");
        case 3: if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 2");
        default: if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Less than 1 or more than 7");
    }
    AntiBan[playerid] += 30;
    PlayerInfo[playerid][pBanAdm]++;
    format(stringer1, sizeof(stringer1), "Adminstrator %s banned %s for %d day(s). Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
    SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
    format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP],PlayerInfo[params[0]][pIpReg]);
    SendAdminMessage(COLOR_GREY,stringer1);
    new string[30];
    format(string, sizeof(string), "Hey brother! \nYou have been banned from {fff000}New York RolePlay {ffffff}for breaking the rules \nIf you need anyhelp or unblock the acocunt please return to the discord server \nthe discord server is: {fff000}https://discord.gg/AP-RP | {ffffff}the link isnt work? tell {ff0000}notsanad#7298 {ffffff}Maybe he can give you \nthe link of the discord server. \n\nTo close the window press {FFF000}'F8' {ffffff}or press close button");
    ShowPlayerDialog(params[0], 0000, DIALOG_STYLE_MSGBOX, "Account Blocks", string, "Close", ":(");
    SendClientMessage(params[0], COLOR_LIGHTRED, "Note due to the violation of the server rules. If not agreed with the manager,");
    SendClientMessage(params[0], COLOR_LIGHTRED, "Take screen shot and go to the discord server and make a report about this admin, if you are not make any wrong thing");
    PlayerInfo[params[0]][pLeader] = 0, PlayerInfo[params[0]][pMember] = 0, PlayerInfo[params[0]][pJob] = 0, PlayerInfo[params[0]][pRank] = 0, PlayerInfo[params[0]][pOdet] = 0;
    ServerBan(playerid, PlayerInfo[params[0]][pNames], params[1], params[2]);
    KickEx(params[0]);
    SetPVarInt(playerid,"BanTime",gettime()+10);
    return true;
}
CMD:anticheat(playerid)
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
    {
    	ShowCheatSettingsApanel(playerid);
    }
    return 1;
}
CMD:setfulldostup(playerid, params[])
{
    if(FD(playerid))
    {
        if(PlayerInfo[playerid][pFull] < 4) return true;
		if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setfulldostup [id] [1-4]");
		if(params[1] < 0 || params[1] > 4) return SendClientMessage(playerid, COLOR_WHITE, "You cannot issue less than 0 or more than 4");
		if(!IsPlayerConnected(params[0])) return true;
		PlayerInfo[params[0]][pFull] = params[1];
		UpdatePlayerData(params[0], "pFull", PlayerInfo[params[0]][pFull]);
		format(stringer1, sizeof(stringer1), "{FF0000}[FullDosup]: {FFFFFF}%s changed your FD level to %i! (Information about full access commands - /fdhelp)",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0], -1, stringer1);
		format(stringer1, sizeof(stringer1), "{FF0000}[FullDosup]: {FFFFFF}You changed %s FD level to %i!",PlayerInfo[params[0]][pNames],params[1]);
		SendClientMessage(playerid, -1, stringer1);
	}
	return true;
}
CMD:fdhelp(playerid)
{
    new string[1500];
	if(PlayerInfo[playerid][pFull] < 4) return 1; string[0] = EOS;
	if(PlayerInfo[playerid][pFull] >= 1) strcat(string, "{FFFF00}Replacer founder: {ffffff}/unbanby /setstat /prefix /givecmd /getip /aa /offadmin /admins and all purchased commands");
	if(PlayerInfo[playerid][pFull] >= 2) strcat(string, "\n{FFFF00}AND ABOUT Reference: {ffffff}/noooc /weather /pgetip /agetipreg /asellhouse /asellbiz");
	if(PlayerInfo[playerid][pFull] >= 3) strcat(string, "\n{FFFF00}The originator: {ffffff}/newpromo /offsc and the above");
	if(PlayerInfo[playerid][pFull] >= 4) strcat(string, "\n{FFFF00}Main High: {ffffff}/giverub /hostname /econfig /givefd /apanel /setpassword /restart");
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF0000}Team FD", string, "Close", "");
	return 1;
}
CMD:quest(playerid)
{
    new string[895],
        quest_1 = PlayerInfo[playerid][pQuest1],
        quest_2 = PlayerInfo[playerid][pQuest2],
        quest_3 = PlayerInfo[playerid][pQuest3],
        quest_4 = PlayerInfo[playerid][pQuest4],
        quest_5 = PlayerInfo[playerid][pQuest5],
        quest_6 = PlayerInfo[playerid][pQuest6],
        quest_7 = PlayerInfo[playerid][pQuest7],
        quest_8 = PlayerInfo[playerid][pQuest8],
        quest_9 = PlayerInfo[playerid][pQuest9],
        quest_10 = PlayerInfo[playerid][pQuest10],
        quest_11 = PlayerInfo[playerid][pQuest11];

    format(string,sizeof(string),"#\tSatus:\n{ffffff}[1] Always on style\t| %s\n[2] Home, lovely home\t| %s\n[3] This is the starting point, chuvak!\t| %s\n[4] Number on the car\t| %s\n[5] Car for pumping\t| %s\n[6] Expensive accessories\t| %s\n[7] First cannon\t| %s\n[8] Show your abilities!\t| %s\n[9] Choose your path\t| %s\n[10] Raise the dough\t| %s\n[11] Life's work\t| %s\n{0000FF}TOP players on the server"
	,!quest_1?("{ff0000}Not done"):("{00FF11}Performed"),!quest_2?("{ff0000}Not done"):("{00FF11}Performed")
	,!quest_3?("{ff0000}Not done"):("{00FF11}Performed"),!quest_4?("{ff0000}Not done"):("{00FF11}Performed")
	,!quest_5?("{ff0000}Not done"):("{00FF11}Performed"),!quest_6?("{ff0000}Not done"):("{00FF11}Performed"),
	!quest_7?("{ff0000}Not done"):("{00FF11}Performed"),!quest_8?("{ff0000}Not done"):("{00FF11}Performed"),
	!quest_9?("{ff0000}Not done"):("{00FF11}Performed"),!quest_10?("{ff0000}Not done"):("{00FF11}Performed"),
	!quest_11?("{ff0000}Not done"):("{00FF11}Performed"));
    ShowPlayerDialog(playerid,700,DIALOG_STYLE_TABLIST_HEADERS,"Tasks to complete",string, !"Select", !"Exit");
    return true;
}
CMD:iban(playerid, params[])
{
	if(GetPVarInt(playerid,"BanTime") > gettime())return SendClientMessage(playerid,COLOR_GREY,"You can ban a player once every 10 seconds.");
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true; //� ��� ��� ������� � ������ �������. ��� ������� ����������� � {FF0000}/adonate
//	if(PlayerInfo[playerid][pcBan] == 0 && PlayerInfo[playerid][pAlcoInvenxua] < 12) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}There is a reprimand on your account, some commands have been blocked. Remove the reprimand - {FFFFFF} /adonate, {FF6600} to remove the command lock");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /iban [id] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be banned!");
	if(FD(params[0]) || IsIpFound(params[1])) return DelAdmin(playerid, 1);
	AntiBan[playerid] += 30;
	PlayerInfo[playerid][pBanAdm]++;
	format(stringer1, sizeof(stringer1), "Adminstrator %s blocked indefinitely %s. Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
	SendAdminMessageToAll(COLOR_LIGHTRED,stringer1,params[0]);
	format(stringer1, sizeof(stringer1), "{FFFFFF}Nick: {FF0000}[%s] | {FFFFFF}IP: {FF0000}[%s] | {FFFFFF}REGIP: {FF0000}[IP: %s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP],PlayerInfo[params[0]][pIpReg]);
	SendAdminMessage(COLOR_LIGHTRED,stringer1);
	SendClientMessage(params[0], COLOR_LIGHTRED, "You have been seen violating server rules. If you disagree with the opinion of the Adminstrator,");
	SendClientMessage(params[0], COLOR_LIGHTRED, "press the F8 key (screenshot), then the TAB + F8 keys and write a complaint to the Discord Server - "PAGE_FORUM"");
	PlayerInfo[params[0]][pLeader] = 0, PlayerInfo[params[0]][pMember] = 0, PlayerInfo[params[0]][pJob] = 0, PlayerInfo[params[0]][pRank] = 0, PlayerInfo[params[0]][pOdet] = 0;
	ServerBan(playerid, PlayerInfo[params[0]][pNames], 999, params[1]);
	KickEx(params[0]);
	SetPVarInt(playerid,"BanTime",gettime()+10);
	return true;
}
CMD:sban(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}There is a reprimand on your account, some commands have been blocked. Remove the reprimand - {FFFFFF} /adonate, {FF6600} to remove the command lock ");
//	if(PlayerInfo[playerid][pcBan] == 0 && PlayerInfo[playerid][pAlcoInvenxua] < 12) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sban [id] [days] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be banned!");
	if(FD(params[0]) || IsIpFound(params[2])) return DelAdmin(playerid, 1);
	if(params[1] > 14 || params[1] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: No less than 1 and no more than 14");
   	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	if(minute1 < 10)
	{
	    format(stringer1, sizeof(stringer1), "[SBAN] Adminstrator %s banned %s for %d days. [Reason: %s] [%d/%d/%d  %d:0%d]",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1],params[2],day1,month1,year1,hour1, minute1);
	    SendAdminMessage(COLOR_LIGHTRED,stringer1);
	}
	else
	{
		format(stringer1, sizeof(stringer1), "[SBAN] Adminstrator %s banned %s for %d days. [Reason: %s] [%d/%d/%d  %d:%d]",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1],params[2],day1,month1,year1,hour1, minute1);
	    SendAdminMessage(COLOR_LIGHTRED,stringer1);
	}
	AntiBan[playerid] += 30;
	PlayerInfo[playerid][pBanAdm]++;
	format(stringer1, sizeof(stringer1), "Nick: [%s] | IP: [%s] | REGIP: [IP: %s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP],PlayerInfo[params[0]][pIpReg]);
	SendAdminMessage(COLOR_LIGHTRED,stringer1);
	PlayerInfo[params[0]][pLeader] = 0, PlayerInfo[params[0]][pMember] = 0, PlayerInfo[params[0]][pJob] = 0, PlayerInfo[params[0]][pRank] = 0, PlayerInfo[params[0]][pOdet] = 0;
	ServerBan(playerid, PlayerInfo[params[0]][pNames], params[1], params[2]);
	KickEx(params[0]);
	return true;
}
CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}There is a reprimand on your account, some commands have been blocked. Remove the reprimand - {FFFFFF} /adonate, {FF6600} to unlock commands");
	if(sscanf(params, "s[17]",params[0])) return SendClientMessage(playerid,COLOR_WHITE, "Usage: /unbanip [IP address]");
	if(!IsIpFound(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not match the structure of the IP address.");
	format(mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `baniplog` WHERE `ip` = '%s'", params[0]);
    mysql_function_query(connects, mysql_query_, false, "UnBan", "dsd", playerid, params[0], 1);
	return true;
}
CMD:banip(playerid, params[])
{
	if(!is_cmd_allow(playerid, CMD_banip) && PlayerInfo[playerid][pAlcoInvenxua] < 10) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
/*	if(AntiBan[playerid] >= 60) {
		AntiBan[playerid] = 180;
		return SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������.");
    }*/
    if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}There is a reprimand on your account, some commands have been blocked. Remove the reprimand - {FFFFFF} /adonate, {FF6600} to unlock commands");
    static ip[17], days, reason[50];
	if(sscanf(params, "s[17]ds[50]", ip, days, reason)) return SendClientMessage(playerid,COLOR_WHITE, "Usage: /banip [IP address] [days] [reason]");
	if(strfind(ip, "*", true) != -1 || !IsIpFound(ip)) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the structure of the IP address.");
	foreach(Player,i)
	{
	    if(!strcmp(ip, PlayerInfo[i][pIP], true))
		{
	        if(PlayerInfo[i][pAlcoInvenxua] > 5 && PlayerInfo[playerid][pAlcoInvenxua] < 12) return DelAdmin(playerid, 1);
	        SendMes(i, COLOR_LIGHTRED, "Adminstrator %s has blocked your IP address for %d days. Reason: %s", PlayerInfo[playerid][pNames], days, reason);
        	KickEx(i);
        	break;
	    }
	}
	format(mysql_query_, sizeof(mysql_query_), "SELECT 1 FROM `baniplog` WHERE `ip` = '%s' LIMIT 1", ip);
	mysql_tquery(connects, mysql_query_, "OffBan", "dsdsd", playerid, ip, days, reason, 1);
	return true;
}
CMD:real(playerid, params[]) {
	if(!IsPlayerInRangeOfPoint(playerid, 20.0, 1495.3583,1306.8704,1093.2936)) return SendClientMessage(playerid, COLOR_GREY, "You must be in a real estate agency (/gps -> 1 -> 8)");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /real [id Houses]");
	if(params[0] < 0 || params[0] > 1999) return SendClientMessage(playerid, COLOR_WHITE, "House with this ID does not exist");
	if(HouseInfo[params[0]][hOwned] > 0) return SendClientMessage(playerid, -1, "The house is not for sale");
	SetPlayerCheckpoint(playerid, HouseInfo[params[0]][hEntrancex], HouseInfo[params[0]][hEntrancey], HouseInfo[params[0]][hEntrancez], 5.0);
	gPlayerCheckpointStatus[playerid] = 13;
	SendClientMessage(playerid, -1, "The house is marked on {FF0000} map!");
	return true;
}
CMD:realodbans(playerid, params[])
{
	if(FD(playerid)) {
		SendRconCommand("reloadbans");
		SendClientMessage(playerid, COLOR_WHITE, "Ban list reloaded.");
	}
	return true;
}
CMD:freeze(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] <= 3) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /freeze [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be frozen!");
	TogglePlayerControllable(params[0], 0);
	format(stringer1, sizeof(stringer1), "Adminstrator Player %s has been frozen by the Adminstrator %s",PlayerInfo[params[0]][pNames],PlayerInfo[playerid][pNames]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:unfreeze(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] <= 3) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /unfreeze [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator cannot be frozen!");
	TogglePlayerControllable(params[0], 1);
	format(stringer1, sizeof(stringer1), "Adminstrator %s unfrozen a player %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:vips(playerid) {
	if(PlayerInfo[playerid][pDonateRank] < 1) return true;
	new string[144], j = 0;
	foreach(Player, i) {
		if(PlayerInfo[i][pDonateRank] < 1 || playerid == i) continue;
		format(string, sizeof(string), "%s[%d] - %d donate rank", PlayerInfo[i][pNames], i, PlayerInfo[i][pDonateRank]);
		SendClientMessage(playerid, COLOR_YELLOW, string), j++;
	}
	if(j < 1) SendClientMessage(playerid, COLOR_YELLOW, "There are no VIP players in the game!");
	return true;
}
CMD:amembers(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /amembers [1-28]");
    if(params[0] > 28 || params[0] < 0) return SendClientMessage(playerid, COLOR_GREY, "Cannot be less than 1 or more than 28");
    SendClientMessage(playerid, 0x059BD3FF, "organizations players list Online:");
    foreach(Player,i)
    {
        if(PlayerInfo[i][pLeader] == params[0]) format(stringer1, sizeof(stringer1), " [%d] %s  rank: Leader",i,PlayerInfo[i][pNames]),SendClientMessage(playerid, 0x059BD3FF, stringer1);
        else if(PlayerInfo[i][pMember] == params[0]) format(stringer1, sizeof(stringer1), " [%d] %s  rank: %d",i,PlayerInfo[i][pNames], PlayerInfo[i][pRank]),SendClientMessage(playerid, 0x059BD3FF, stringer1);
    }
    return true;
}
CMD:slapms(playerid, params[])
{
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerPos(playerid, slx, sly, slz);
	SetPPos(playerid, slx, sly, slz+7);
	SetPlayerHealth(playerid, 100);
	return 1;
}
CMD:slap(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 3) return true;
//	if(PlayerInfo[playerid][pVigs] > 2) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /slap [id]");
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid, -1, "This player is AFK");
	new Float:shealth;
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0], shealth);
	SetPlayerHealthAC(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(stringer1, sizeof(stringer1), "Adminstrator %s slapped %s",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:pm(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] >= 1 || PlayerInfo[playerid][pHelper] > 0)
	{
		new text[128];
		if(sscanf(params, "dS[128]",params[0],text)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /pm [id] [message]");
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
		if(!strlen(text) && PlayerInfo[playerid][pAlcoInvenxua] > 0) {
			SetPVarInt(playerid, "IdReport", params[0] + 1);
			return ShowPlayerDialog(playerid, 9122, DIALOG_STYLE_LIST, "{FFFFFF}Admin Assistant", "Started spying on the player\nNo violations noticed\nThe player was punished\nPlease do not litter the report\nPost Your Gameplay In Our Forum Get Some Rewards\nHello, You Can Boost Our Discord To Get Rewards /nTo Report Open Ticket In Discord With Screenshot\nOur Forum � "PAGE_FORUM" / IN CONTACT - "PAGE_VK"\nOur Forum Hello, you can file a complaint with the group in the cell.\nYou Can Contact the Founders of the project in Discord Blackrose_Rog\nThank You For Playing On Our Server We Wish Plesant Game/nRefill the account on the Discord", "Next", "Cancle");
		}
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] for %s[%d]: %s", PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0], text), PlayerInfo[playerid][pRepAdm]++;
		else format(stringer1, sizeof(stringer1), "{FF9945} Response from the helper: %s: %s",PlayerInfo[playerid][pNames],text), PlayerInfo[playerid][pHotvet] ++;
		SendClientMessage(params[0], 0xff9945FF, stringer1);
		DeletePVar(params[0], "RepUn");
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) { format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] for %s[%d]: %s", PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0], text); }
		else { format(stringer1, sizeof(stringer1), "{FF9945}[H] %s[%d]: %s Answer from: %s",PlayerInfo[params[0]][pNames],params[0],text,PlayerInfo[playerid][pNames]); }
		SCMAH(0xff9945FF, stringer1);
	}
	return true;
}
/*CMD:pm(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] >= 1 || PlayerInfo[playerid][pHelper] > 0)
    {
        new text[128];
        if(sscanf(params, "dS[128]",params[0],text)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /pm [id] [msg]");
        if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
        if(!strlen(text) && PlayerInfo[playerid][pAlcoInvenxua] > 0) {
            SetPVarInt(playerid, "IdReport", params[0] + 1);
            new string[21];
            format(string, sizeof(string), "* {ffffff}Adminstrator %s was checked your report, wait a second", PlayerInfo[playerid][pNames]);
            SendClientMessage(params[0], COLOR_GREEN, string);
            return true;
        }

        if(PlayerInfo[playerid][pAlcoInvenxua] > 0) format(stringer1, sizeof(stringer1), "{ffa73b}Adminstrator: %s[%d]: {ffffff}%s", PlayerInfo[playerid][pNames],playerid, text), PlayerInfo[playerid][pRepAdm]++;
        else format(stringer1, sizeof(stringer1), "{ffa73b}Support: %s[%d]: {ffffff}%s", PlayerInfo[playerid][pNames],playerid, text), PlayerInfo[playerid][pHotvet] ++;
        SendClientMessage(params[0], 0xff9945FF, stringer1);
        DeletePVar(params[0], "RepUn");
        if(PlayerInfo[playerid][pAlcoInvenxua] > 0) { format(stringer1, sizeof(stringer1), "{ffa73b}Adminstrator: %s[%d] to player %s[%d]: {ffffff}%s", PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0], text); }
        else { format(stringer1, sizeof(stringer1), "{ffa73b}Support %s[%d]: to %s message{ffffff}: %s",PlayerInfo[params[0]][pNames],params[0],text,PlayerInfo[playerid][pNames]); }
        SCMAH(0xff9945FF, stringer1);
    }
    return true;
}*/
CMD:me(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /me [action]");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Suspicions of advertising!");
		return false;
	}
	format(stringer1, sizeof(stringer1), "{ea8df7}%s %s", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	return true;
}
alias:shout("s");
CMD:shout(playerid, params[])
{
	if(gag[playerid] == 1) return	SendClientMessage(playerid, COLOR_LIGHTRED, "You have a gag, you cannot speak!");
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: (/s)hout [message]");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Suspicions in advertising!");
		return false;
	}
	format(stringer1, sizeof(stringer1), "%s[%d] shouts: %s",PlayerInfo[playerid][pNames],playerid,params[0]);
	ProxDetector(playerid, 60.0, COLOR_WHITE, stringer1);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(PlayerCuffed[playerid] == 0) FIXES_ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	}
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	return true;
}
CMD:try(playerid, params[])
{
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /try [message]");
	if(gag[playerid] == 1) return	SendClientMessage(playerid, COLOR_LIGHTRED, "You have a gag, you cannot speak!");
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Suspicions of advertising!");
		return false;
	}
	new temptryrand = random(2);
	if(temptryrand == 1) format(stringer1, 90, "%s %s {1CEF00}| Good luck",PlayerInfo[playerid][pNames],params[0]);
	else format(stringer1, 90, "%s %s {FF0000}| Unsuccessful",PlayerInfo[playerid][pNames],params[0]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return 1;
}
CMD:do(playerid, params[])
{
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /do [message]");
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(strlen(params[0]) > 100) return SendClientMessage(playerid,COLOR_GREY,"The message is too long!");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Advertising suspicions!");
		return false;
	}
	format(stringer1, sizeof(stringer1), "%s (( %s ))",params[0],PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	return 1;
}
CMD:todo(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, 0xB4B5B7FF, "Use /todo [phrase * action]");
    if(strfind(params[0], "*") == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Use /todo [phrase * action]");
    if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Suspicions of advertising!");
		return false;
	}
    new arrCoords[2][64];
    sscanf(params[0],"p<*>s[64]s[64]",arrCoords[0],arrCoords[1]);
    format(stringer1, sizeof(stringer1), "\"%s\", - said(�) %s,{C2A2DA} %s",arrCoords[0],PlayerInfo[playerid][pNames],arrCoords[1]);
    SetPlayerChatBubble(playerid, stringer1, 0x6495EDFF, 20.0, 10000);
	ProxDetector(playerid, 20.0, 0xE6E6E6E6, stringer1);
	return true;
}
CMD:mm(playerid)
{
	MainMenuPl(playerid);
	return true;
}
alias:mainmenu("mm");
CMD:mainmenu(playerid)
{
	MainMenuPl(playerid);
	return true;
}
CMD:menu(playerid)
{
	MainMenuPl(playerid);
	return true;
}
CMD:help(playerid)
{
    ShowHelp(playerid);
	return true;
}
CMD:youtubers(playerid, params[])
{
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Server Youtube Creators", "{80ff00}Server {ff0000}Youtube {ffff00}Creators -:\n\n{24c773}[1] {ffffff}-{ff0000}Coming Soon\n{24c773}[2] {ffffff}-{ff0000}Coming Soon\n{24c773}[3] {ffffff}-{ff0000}Coming Soon", "Close", "");
	return true;
}
CMD:jmlist(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] > 1)
    {
       JailMuteList(playerid);
    }
    return true;
}
CMD:namestore(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /namestore [ID]");
	if(params[0] <= 0) return 1;
	format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM  `setname` WHERE `account` = '%d'", PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, mysql_query_, true, "Logs", "ddd", playerid, 5, 0);
	return true;
}

CMD:hcheck(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11 && PlayerInfo[playerid][pHelper] < 7) return true;
	mysql_function_query(connects, "SELECT `Name`, `pHelper`, `pHotvet` FROM  `"TABLE_ACCOUNT"` WHERE `pHelper` != '0' AND `pOnline` = '1001'", true, "Logs", "ddd", playerid,4, 0);
	return true;
}
CMD:givecmd(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	new Namets[24], CMD_name[32], CMD_allow, query[144];
	if(sscanf(params, "s[24]s[32]d", Namets, CMD_name, CMD_allow)) return SendClientMessage(playerid, 0xCECECEFF, "Usage: /givecmd [name] [command] [1/0]");
	new CMD_i;
	for (CMD_i = 0; CMD_i < CMD_NUM; CMD_i++)
	{
		if(!strcmp(CMD_names[CMD_i], CMD_name, true)) break;
	}
	if (CMD_i >= CMD_NUM) return SendClientMessage(playerid, -1, "{ffffff}The command entered does not exist");
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s'", Namets);
	mysql_function_query(connects, query, true, "setcmd_SQL_callback" ,"dsdd", playerid, Namets, CMD_i, CMD_allow);
	return true;
}

CMD:setadmin(playerid,params[])
{
	if(!strcmp(AdminName, "Admin_Admin", true))
	{
		SendClientMessage(playerid,-1,"In the mode settings on the host, the standard nik Admin_Admin cannot be issued as an administrator.");
	} else {
		new sendname[32];
		GetPlayerName(playerid,sendname,sizeof(sendname));
		if(!strcmp(AdminName, sendname, true))
		{
			new string[1000];
			PlayerInfo[playerid][pAlcoInvenxua] = 13;
			PlayerInfo[playerid][pVigs] = 0;
			PlayerInfo[playerid][pFull] = 4;
			mysql_format(connects,string, 246, "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `vigs` = '0', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
			SendClientMessage(playerid, COLOR_GREEN, "{0099CC}You have been given FULL ACCESS! Sign up with /alogin");
			SendClientMessage(playerid, COLOR_GREEN, "{0099CC}Use {FFD700}/ahelp, {0099CC}to learn about new features");
			new CMDaccess[CMD_NUM + 1];
			cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
			sscanf("Founder", "s[16+1]", PlayerInfo[playerid][pPrefix]);
			for(new i = 0; i < sizeof CMD_names; i++)
			{
				CMDaccess[i] = '1';
				PlayerInfo[playerid][aiCMDaccess][i] = '1';
			}
			CMDaccess[CMD_setadmin] = '1';
			PlayerInfo[playerid][aiCMDaccess][CMD_setadmin] = '1';
			new query[144];
			mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `CMDaccess` = '%s', `pPrefix` = '%s' WHERE `Name` = '%e'", CMDaccess,PlayerInfo[playerid][pPrefix],PlayerInfo[playerid][pNames]);
			mysql_function_query(connects, query, false, "", "");
			mysql_function_query(connects, string, false, "", "");
			SendClientMessage(playerid,COLOR_GREEN,"You have been given admin rights enter /apanel");
		}
	}
	return true;
}
CMD:lohcwthedevking(playerid,params[])
{
	new NameA[24], lvl;
	if(sscanf(params,"s[24]d",NameA,lvl)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setadmin [name] [level]");
	if(lvl > 13 || lvl < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Not less than 1 and more than 13");
	new query[144];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", NameA);
	mysql_function_query(connects, query, true, "SetAdmin", "dds", playerid, lvl, NameA);
	return true;
}
CMD:setadmins(playerid,params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 12) return true;
	new NameA[24], lvl;
	if(sscanf(params,"s[24]d",NameA,lvl)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setadmin [name] [level]");
	if(lvl > 11 || lvl < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Not less than 1 and more than 11");
	new query[144];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", NameA);
	mysql_function_query(connects, query, true, "SetAdmin", "dds", playerid, lvl, NameA);
	return true;
}
forward SetAdmin(playerid, level, name[]);
public SetAdmin(playerid, level, name[]) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
		new lvl = cache_get_field_content_int(0, "pAlcoInvenxua", connects);
		if(lvl < 1 && level < 1) return SendClientMessage(playerid, COLOR_WHITE, "Player is not an administrator!");
		new query[256], string[144];//PlayerInfo[playerid][pDostup] = 11111;
		format(query, sizeof(query), "UPDATE `accounts` SET `pAlcoInvenxua` = '%d' WHERE `Name` = '%s'", level, name);
		mysql_function_query(connects, query, false, "", "");
		if(lvl < 1 && level > 0) {
			format(string, sizeof(string), "%s was appointed to the post of administrator level %d", name, level);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "{0099CC}%s has made you a level %d administrator. Enter - /alogin.", PlayerInfo[playerid][pNames], level);
			//SendClientMessage(playerid, COLOR_WHITE, string);
		} else if(lvl > 0 && level > 0) {
			format(string, sizeof(string), "You changed the admin level from %d to %d for %s", lvl, level, name);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "{0099CC}%s changed your admin level from %d to %d.", PlayerInfo[playerid][pNames], lvl, level);
		} else if(level == 0) {
			format(string, sizeof(string), "You have removed admin rights from %s", name);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "{0099CC}%s dismissed you as server administrator.", PlayerInfo[playerid][pNames]);
		}
		foreach(Player, i) {
			if(!IsPlayerConnected(i)) continue;
			if(strcmp(PlayerInfo[i][pNames], name, true) != 0) continue;
			if(level == 0) {
				SendClientMessage(i, COLOR_WHITE, string);
				DelAdmin(i);
				break;
			}
			PlayerInfo[i][pAlcoInvenxua] = level;
			SendClientMessage(i, COLOR_WHITE, string);
			break;
		}
	} else return SendClientMessage(playerid, COLOR_WHITE, "This player is not registered on this server!");
	return true;
}
CMD:asetadmins(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	new NameA[24], lvl;
	if(sscanf(params,"s[24]d",NameA,lvl)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setadmin [name] [level]");
	if(lvl > 12 || lvl < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Not less than 1 and more than 11");
	new query[144];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", NameA);
	mysql_function_query(connects, query, true, "SetAdmin", "dds", playerid, lvl, NameA);
	return true;
}
CMD:donate(playerid) {
	new string[144];
	format(string,sizeof(string),"{FFD700}Donate Panel {FFFFFF}| Balance: %d donates",PlayerInfo[playerid][pDonatemoney2]);
	ShowPlayerDialog(playerid, 10054, DIALOG_STYLE_LIST, string, "\
		{328fed}[1] {FFFFFF}Buying game currency\
		\n{328fed}[2] {FFFFFF}Basic privileges\t\t\t{FFFFFF}>>>\
		\n{328fed}[3] {FFFFFF}Receive all licenses\t\t\t| 1450\
		\n{328fed}[4] {FFFFFF}Obtain all Weapon Skills\t| 500\
		\n{328fed}[5] {FFFFFF}Receive med-card\t\t\t\t| 500\
		\n{328fed}[6] {FFFFFF}Receive Military-card\t\t\t\t| 500\
		\n{328fed}[7] {FFFFFF}Purchase VIP\
		", "Ready", "Back");
	return true;
}
alias:works("fate");
CMD:works(playerid)
{
    if(GetPVarInt(playerid,"anti_flood_works") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 2 minutes to use this commands {FF0000}/works.");
	ShowPlayerDialog(playerid, 9676, DIALOG_STYLE_LIST, "{FFD700}Fate System Join Factions $200K", "[1] LSPD\n[2] FBI\n[3] Army Aircraft Carrier\n[4] Ministry of Emergency Situations LS\n[5] La Cosa Nostra\n[6] Yakuza\n[7] City hall\n[8] SFPD\n[9] Instructors\n[10] Ballas Gang\
	\n[11] Los Santos Vagos\n[12] Russian Mafia\n[13] Groove Street\n[14] Sa News\n[15] Varios Los Varios Los Aztecas\n[16] Rifa Gang\n[17] Army Area 51\n[18] LVPD\n[19] Hitman\n[20] Street racers\n[21] SWAT\n[22] Administration of the President\
	\n[23] Casino 4 Dragons\n[24] Casino Caligulas", "Next", "Cancle");
	SetPVarInt(playerid,"anti_flood_works",gettime()+120);
	return true;
}
CMD:armbody(playerid)
{
	if(PlayerInfo[playerid][pArmBody] == 0) return true;
	if(PlayerInfo[playerid][pDedUse] == 1) return SCM(playerid,-1,"You're in a suit, take it off and try again!");
	if(PlayerInfo[playerid][pNinjaUse] == 1) return SCM(playerid,-1,"You're in a suit, take it off and try again!");
	if(PlayerInfo[playerid][pArmBodyUse] == 0)
	{
		PlayerInfo[playerid][pArmBodyUse] = 1;
		PlayerInfo[playerid][pDedUse] = 0;
		PlayerInfo[playerid][pNinjaUse] = 0;
		SCM(playerid,-1,"Now your weapon is on your back!");
	}
	else
	{
	   CheckItem(playerid);
	   for(new i=0;i<6;i++) if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
	   PlayerInfo[playerid][pArmBodyUse] = 0;
	   RemovePlayerAttachedObject(playerid, 6);
	   RemovePlayerAttachedObject(playerid, 7);
	   RemovePlayerAttachedObject(playerid, 8);
	   RemovePlayerAttachedObject(playerid, 9);
	   RemovePlayerAttachedObject(playerid, 10);
	   SCM(playerid,-1,"Now your weapon is not on your back!");
	}
	return true;
}
CMD:donaterub(playerid)
{
	new string[300];
	mysql_format(connects, string, sizeof(string), "SELECT * FROM `accounts` WHERE `Name` = '%e' AND `newDonation` > 0", PlayerInfo[playerid][pNames]);
	mysql_tquery(connects, string, "OnCheckDonations", "d", playerid);
	return true;
}
CMD:cases(playerid) {

	format(stringer1, sizeof(stringer1), "{ffffff}Cases Box | {FFD700}%d Donate Points", PlayerInfo[playerid][pDonatemoney2]);
	ShowPlayerDialog(playerid, 7421, DIALOG_STYLE_LIST, stringer1, "\
	[1] Coming Soon\
	\n[2] Coming Soon \t>>\
	\n[3] Coming Soon\t\t{9994EB}9999 rub\
	\n[4] Coming Soon\t{9994EB}9999 rub\
	\n[5] Coming Soon\t{9994EB}9999 rub\
	\n[6]{FF0000} Flashing Nickname\t\t{FF0000}25000 Donate Points\
 	\n[7] Coming Soon\t{9994EB}35000 Donate Points\
	\n[8]{4682B4} Factions Rank Systems [NEW]\t\t\t{4682B4}650 Faction Points\
	\n[9] Coming Soon\t\t{9994EB}9999 rub\
	\n[10] Coming Soon\t\t{9994EB}9999 rub\
	\n{FFD700}Information", "Select", "Back");
	return true;
}
CMD:dadm(playerid, params[]) {
	if(PlayerInfo[playerid][pAlcoInvenxua] >= 1 || PlayerInfo[playerid][pHelper] > 0) {
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /dadm [id]");
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] in order for %s[%d]: Top up your account on the website "PAGE_SITE" and buy at /mm > Additionally",PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames],params[0]);
		else format(stringer1, sizeof(stringer1), "{FF9945}Answer from %s: Top up your account on the website "PAGE_SITE" and buy at /mm > Additionally",PlayerInfo[playerid][pNames]), PlayerInfo[playerid][pHotvet] ++;
		SendClientMessage(params[0], 0xff9945FF, stringer1);
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) { format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] in order for %s[%d]: Top up your account on the website "PAGE_SITE" and buy at /mm > Additionally",PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames],params[0]); }
		else { format(stringer1, sizeof(stringer1), "{FF9945}[H] %s: Top up your account on the website "PAGE_SITE" and buy at /mm > Additionally | To: %s[%d]",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[0]); }
		SCMAH(0xff9945FF, stringer1);
	}
	return true;
}
CMD:kk(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] >= 1 || PlayerInfo[playerid][pHelper] > 0) {
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /kk [id]");
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] for %s[%d]: Leave a complaint in the VK group - "PAGE_FORUM"",PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames], params[0]);
		else format(stringer1, sizeof(stringer1), "{FF9945}Reply from %s: Leave a complaint in the VK group - "PAGE_FORUM"",PlayerInfo[playerid][pNames]), PlayerInfo[playerid][pHotvet] ++;
		SendClientMessage(params[0], 0xff9945FF, stringer1);
		if(PlayerInfo[playerid][pAlcoInvenxua] > 0) { format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] for %s[%d]: Leave a complaint in the VK group - "PAGE_FORUM"",PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames], params[0]); }
		else { format(stringer1, sizeof(stringer1), "{FF9945}[H] %s: Leave a complaint in the VK group - "PAGE_FORUM" | For %s[%d]",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[0]); }
		SCMAH(0xff9945FF, stringer1);
	}
	return true;
}
CMD:spbikes(playerid) {
	if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return true;
	new string[144];
	for(new i = 0; i < sizeof(FaggioBikes); i++) if(!IsVehicleOccupied(FaggioBikes[i])) SetVehicleToRespawn(FaggioBikes[i]);
	format(string, sizeof(string), "Adminstrator %s[%d] spawned unoccupied mopeds near the spawn/hospital", PlayerInfo[playerid][pNames], playerid);
	SendClientMessageToAll(COLOR_ORANGE, string);
	return true;
}
/*CMD:mpwin(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your admin actions are blocked for 3 minutes."); AntiBan[playerid] = 180; return true; }
	if(sscanf(params,"dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /mpwin [id] [amount]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(params[1] > 500 || params[1] < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Not less than $ and more than $35.000!");
	PlayerInfo[params[0]][pDonatemoney2] += params[1];
	if(PlayerInfo[playerid][pQuest8] == 0)
	{
		PlayerInfo[playerid][pQuest8] = 1;
		UpdatePlayerData(playerid, "pQuest8", PlayerInfo[playerid][pQuest8]);
	}
	format(stringer1, sizeof(stringer1), "Adminstrator %s: MP is over, %s defeated! He gets %d DonateMoney (/donate)", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1]);
	SendClientMessageToAll(0xFFCD00ff, stringer1);
	SendMes(params[0],COLOR_WHITE, "Your donation account: %d DonatMoney {FFFFFF} ((Use /donate ))", PlayerInfo[params[0]][pDonatemoney2]);
	AntiBan[playerid] += 20;
	return true;
}*/
CMD:ceject(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ceject [playerid]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The player is not next to you!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 25) {
		if(IsPlayerInRangeOfPoint(playerid, 10.0,1568.2023,-1694.1594,5.8906)) {
			SetPlayerInteriorEx(params[0],6);
			SetPPos(params[0],253.9933,86.9706,1002.4453);
			SetPlayerFacingAngle(params[0], 278.0311); }
		else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1590.8289,716.0479,-5.2422)) {
			SetPlayerInteriorEx(params[0],10);
			SetPPos(params[0],217.3147,121.3382,999.0156);
			SetPlayerFacingAngle(params[0], 272.8898); }
		else if(IsPlayerInRangeOfPoint(playerid, 10.0,2295.1934,2451.8459,10.8203)) {
			SetPlayerInteriorEx(params[0],3);
			SetPlayerVirtualWorldEx(params[0], 122);
			SetPPos(params[0],238.5033,141.1578,1003.0234);
			SetPlayerFacingAngle(params[0], 359.1617); }
		else return SendClientMessage(playerid, 0x6ab1ffaa, "You pushed the criminal into the precinct."); }
	return true;
}
CMD:withdraw(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 10.0,2308.8201,-13.2660,26.7422))
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /withdraw [amount]");
	if(params[0] < 1 || params[0] > 1000000) { SendClientMessage(playerid, COLOR_GREY, "You cannot withdraw 1 Money or more 1000000!"); return true; }
	if(PlayerInfo[playerid][pBank] < params[0]) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money!");
	GiveMoney(playerid, params[0]);
	PlayerInfo[playerid][pBank] -= params[0];
	format(stringer1, sizeof(stringer1), "You have withdrawn %s Money. Remainder: %s Money",formatInt(params[0]), formatInt(PlayerInfo[playerid][pBank]));
	SendClientMessage(playerid, COLOR_YELLOW, stringer1);
	return true;
}
CMD:newswithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 16 || PlayerInfo[playerid][pRank] < 12) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /newswithdraw [amount]");
	if(params[0] < 1 || params[0] > 1000000) return SendClientMessage(playerid, COLOR_GREY, "You cannot withdraw less than 1 or more 1000000 Money!");
	if(FracBank[0][fLsnews] < params[0]) return SendClientMessage(playerid, COLOR_GREY, "There is not that much money in SAN NEWS bank");
	FracBank[0][fLsnews] -= params[0];
	GiveMoney(playerid, params[0]);
	SendMes(playerid, 0x6ab1ffaa, "You have withdrawn from SAN NEWS bank: %s Money", formatInt(params[0]));
    SetOtherInt("FracBank[0][fLsnews]", FracBank[0][fLsnews]);
	return true;
}
CMD:shield(playerid)
{
    if(TeamPain[playerid] != 0 && StartPaintBall == 2) return SendClientMessage(playerid,COLOR_GREY,"It is forbidden to use the shield on the PaintBall.");
	if(IsACop(playerid) || IsAArm(playerid))
	{
		if(shield[playerid] == 0)
		{
			SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0), SetPlayerHealthAC(playerid, 999), shield[playerid] = 1;
		}
		else { RemovePlayerAttachedObject(playerid, 1), SetPlayerHealthAC(playerid, 50), shield[playerid] = 0; }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You are not a Police Officer / Military / FBI");
	return true;
}
CMD:gomp(playerid)
{
    if(Teleport == 0) return SendClientMessage(playerid, -1, "{AC0000}[ERROR] {ffffff}The given moment of operation is not present..");
	else ShowPlayerDialog(playerid, 3333, DIALOG_STYLE_MSGBOX, "{FFCD00}Teleportation", "{ffffff}Sure you want to go to the place of the test?", "Yes", "No");
	return 1;
}
CMD:tpcor(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return 1;
	new Float:x,Float:z,Float:y;
	if(sscanf(params,"p<,>fff",x,y,z)) return SendClientMessage(playerid,-1,"Usage: /tpcor [x], [y], [z]");
	SetPPos(playerid,Float:x,Float:y,Float:z);
	return SendClientMessage(playerid,-1,"You are teleported");
}
CMD:lookat(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return 1;
	new Float:x,Float:z,Float:y;
	if(sscanf(params,"p<,>fff",x,y,z)) return SendClientMessage(playerid,-1,"Usage: /lookat [x], [y], [z]");
	SetPlayerCameraLookAt(playerid,Float:x,Float:y,Float:z);
	return true;
}
CMD:tpint(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return 1;
	if(sscanf(params, "d", params[1])) return true;
	SetPlayerInteriorEx(playerid, params[1]);
	return true;
}
CMD:news(playerid, params[])
{
	if(gag[playerid] == 1) return	SendClientMessage(playerid, COLOR_LIGHTRED, "You have a gag, you cannot speak!");
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You have a mute!!");
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /news [message]");
	if(gag[playerid] == 1) return	SendClientMessage(playerid, COLOR_LIGHTRED, "You have a gag, you cannot speak!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 16:
		{
			if(GetPlayerVehicleID(playerid) >= lsnewscar[0] && GetPlayerVehicleID(playerid) <= lsnewscar[1] || IsPlayerInRangeOfPoint(playerid, 60.0,1741.7501,-1915.8391,1961.1769)) { } else { SendClientMessage(playerid, COLOR_GRAD1, "�� �� � ����������� ������ / �������� / �����!"); return true;}
			format(stringer1, sizeof(stringer1), "< LS News > %s[%d]: %s",PlayerInfo[playerid][pNames], playerid, params[0]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
	return true;
}
CMD:grove(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
	if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your submission again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 15:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Grove Street\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Grove Street )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:grovestreet(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
	if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 15:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Grove Street\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Grove Street )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:ballas(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 12:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Ballas\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Ballas Gang )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:bal(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 12:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Ballas\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Ballas Gang )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:vagos(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 13:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Los Santos Vagos\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Los Santos Vagos )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:vag(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 13:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Los Santos Vagos\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Los Santos Vagos )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:lsvagos(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 13:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Los Santos Vagos\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Los Santos Vagos )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:aztec(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 17:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Varios Los Aztecas\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Varios Los Aztecas )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:aztecas(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 17:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Varios Los Aztecas\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Varios Los Aztecas )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:varios(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
    if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 17:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"Varios Los Aztecas\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Varios Los Aztecas )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
CMD:rifa(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "You have a mute!");
	if(GetPVarInt(playerid,"anti_sub_spamming") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 1 minutes to open your {FF0000}submission {FFCC00}again.");
	switch(PlayerInfo[playerid][pLeader])
	{
	case 18:
		{
			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] In this time, the gang \"RIFA\" is opening the submitions ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
 			format(stringer1, sizeof(stringer1), "{10eb00}[Invites] For the gang, Invite? go to the location (( /works /fate > Rifa Gang )) ", PlayerInfo[playerid][pNames]);
			SendClientMessageToAll(0x0073b7AA, stringer1);
		 }
    }
    SetPVarInt(playerid,"anti_sub_spamming",gettime()+60);
	return true;
}
alias:live("l");
CMD:live(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You have a mute!!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /live [id/name]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This player is not available, or you have specified your id");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "�A man far away from you!");
	new newcar = GetPlayerVehicleID(playerid);
	switch(PlayerInfo[playerid][pMember])
	{
	case 16:
		{
			if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1] || IsPlayerInRangeOfPoint(playerid, 60.0,1741.7501,-1915.8391,1961.1769)) { } else { SendClientMessage(playerid, COLOR_GREY, "You are not in a reporter's car/helicopter/office!"); return true;}
			if(TalkingLivels[playerid] != INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, 0x6495EDFF, "The live broadcast has ended");
				SendClientMessage(TalkingLivels[playerid], 0x6495EDFF, "The live broadcast has ended");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(TalkingLivels[playerid], 1);
				TalkingLivels[TalkingLivels[playerid]] = INVALID_PLAYER_ID;
				TalkingLivels[playerid] = INVALID_PLAYER_ID;
				return true;
			}
			format(stringer1, sizeof(stringer1), "You asked %s to make an interview.",PlayerInfo[params[0]][pNames]);
			SendClientMessage(playerid, 0x6495EDFF, stringer1);
			format(stringer1, sizeof(stringer1), "%s invites you to make an interview.",PlayerInfo[playerid][pNames]);
			SendClientMessage(params[0], 0x6495EDFF, stringer1);
			SendClientMessage(params[0], COLOR_WHITE, "Enter /accept livels, to agree");
			LiveOfferls[params[0]] = playerid;
		 }
	}
	return true;
}
alias:npanel("np");
CMD:npanel(playerid, params[])
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 488 || IsPlayerInRangeOfPoint(playerid, 60.0,1741.7501,-1915.8391,1961.1769)) {
		if(PlayerInfo[playerid][pMember] == 16) ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "[ NEWS MENU ]", "{B8B8B8}Announcements\n [ 1 ] Live\n [ 2 ] Get off the air.\n [ 3 ] Start receiving calls / sms\n [ 4 ] Stop receiving calls/ sms\n [ 5 ] Set the price for calls sms\n [ 6 ] Set the price for advertisements", "Accept", "Cancle"); }
	else return SendClientMessage(playerid, COLOR_GREY, "You are not in a service vehicle/office!");
	return true;
}
alias:advertise("ad");
CMD:advertise(playerid, params[])
{
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Enter: (/ad)vertise [message]");
	new len = strlen(params[0]);
	if(len > 100) return SendClientMessage(playerid,COLOR_GREY,"maximum ad length - 100 Words");
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You have a mute!!");
	if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,COLOR_GREY,"Unfortunately, the queue for the announcements is full., try again later");
	if(adverttime > 0) return SendClientMessage(playerid,COLOR_WHITE,"You cannot send more than one message per 30 seconds!");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Predictions about the reclamation!");
		return false;
	}
	SetPVarString(playerid,"advert",params[0]);
	format(stringer,sizeof(stringer),"{B8B8B8}Price of the ad: {00FF5E}$%d.\n{B8B8B8}Are you really sending out an ad?",len*addd);
	ShowPlayerDialog(playerid,8454,0,"Announcement",stringer,"Yes","No");
	return true;
}
alias:vipad("vad");
CMD:vipad(playerid, params[])
{
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /v(ip)ad [message]");
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You have a mute!!");
	if(PlayerInfo[playerid][pDonateRank] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You don't have a VIP account!");
	if(gVip[playerid][vipTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "You have already submitted an advertisement for publication. Wait for it...");
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Predictions about the reclamation!");
		return false;
	}
	switch(PlayerInfo[playerid][pDonateRank])
	{
	case 1:
		{
			VipNews[playerid] ++;
			if(VipNews[playerid] >= 3) return SendClientMessage(playerid,COLOR_WHITE,"You have exceeded your ad limit!");
		}
	case 2:
		{
			if(VipNews[playerid] >= 7) return SendClientMessage(playerid,COLOR_WHITE,"You have exceeded your ad limit!");
		}
	}
	strmid(gVip[playerid][vipSender], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
	gVip[playerid][vipID] = playerid;
	strmid(gVip[playerid][vipText], params[0], 0, strlen(params[0]), 255);
	gVipTime += 30;
	gVip[playerid][vipTime] = gVipTime;
	gVip[playerid][vipNumber] = PlayerInfo[playerid][pPnumber];
	gVip[playerid][vipChek] = true;
	SendMes(playerid, COLOR_GREY, "Your announcement has been successfully delivered to the Personalized Announcement Verification Service. Approximate time to wait for publication: %i seconds.",gVip[playerid][vipTime]);
	FracBank[0][fLsnews] += strlen(params[0])*addd;
	PlayerInfo[playerid][pCash] -= strlen(params[0])*addd;
	format(stringer,sizeof(stringer), "~r~-$%d", strlen(params[0])*addd);
	GameTextForPlayer(playerid, stringer, 5000, 1);
	return true;
}
CMD:unrent(playerid)
{
	if(GetPVarInt(playerid, "ArendKey") == -1) return SendClientMessage(playerid, 0xAFAFAFFF, "You do not rent a vehicle.");
	new rc = GetPVarInt(playerid, "ArendKey");
	if(ArendInfo[rc][aPlayerID] != playerid)
	{
		SendClientMessage(playerid, 0xAFAFAFFF, "You do not rent a vehicle.");
		SetPVarInt(playerid, "ArendKey", -1);
		return 1;
	}
	SendClientMessage(playerid, 0xFFFFFFFF, "You canceled your lease.");
 	ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
    SetVehicleToRespawn(ArendInfo[rc][aID]);
	return true;
}
CMD:viphelp(playerid)
{
	stringer[0] = 0;
    strcat(stringer,"{FFFF00}[1] Bronze VIP{FFFFFF} - Issued forever:\n\n{32CD32}Commands:\n{FFFFFF}- /togphone\n- /admins\n- Payday Boost 15 Donate Points\n-{FFFFFF}- /(v)ipchat\n- /vippanel\n\n");
    strcat(stringer,"{32CD32}Privilege:\n{FFFFFF}- Maximum account blocking for 5 days;\n- It is possible to submit ads to /vipad three times per hour.\n\n");
    strcat(stringer,"{FFFF00}Silver VIP{FFFFFF} - Issued forever:\n\n{32CD32}Commands:\n{FFFFFF}- /togphone\n- Payday Boost 30 Donate Points\n\n");
    strcat(stringer,"{32CD32}Privilege:\n{FFFFFF}- Maximum account blocking for 4 days;\n- It is possible to submit ads to /vipad seven times per hour.\n\n");
    strcat(stringer,"{FFFF00}Gold VIP{FFFFFF} - Issued forever:\n\n{32CD32}Commands:\n{FFFFFF}- /togphone\n- Payday Boost 50 Donate Points\n- Leader-leave\n- /vipkit\n\n");
    strcat(stringer,"{32CD32}Privilege:\n{FFFFFF}- Maximum account blocking for 2 days;\n- Unlimited ad submission;\n");
    strcat(stringer,"- Full satiety when spawning;\n- Double EXP on salary.");
    ShowPlayerDialog(playerid, 0, 0, "{FFD700}Help with VIP status management", stringer, "Close", "");
	return true;
}
CMD:vippanel(playerid)
{
	if(PlayerInfo[playerid][pDonateRank] != 1 && PlayerInfo[playerid][pDonateRank] != 2 && PlayerInfo[playerid][pDonateRank] != 3) return SendClientMessage(playerid,COLOR_WHITE,"You Not Own Any VIP Pass!");
	format(stringer,sizeof(stringer),"{FFCC00}[1] {FFFFFF}� Turn On/Off Phone\n{FFCC00}[2] {FFFFFF}� Leader Leave Menu\n{FFCC00}[3] {FFFFFF}� Reduse Prison Time\n{FFCC00}[4] {FFFFFF}� Mobile Reload VIP");
	ShowPlayerDialog(playerid,9487,DIALOG_STYLE_LIST,"{FFCC00}[VIP panel]",stringer,"Select","Cancle");
    return true;
}
CMD:skin(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 1) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /skin [skinid]");
	if(params[0] > 311 || params[0] < 1) { SendClientMessage(playerid, COLOR_GREY, "Invalid skin ID!"); return true; }
	PlayerInfo[playerid][pChar] = params[0];
	SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
	return true;
}
/*CMD:buyadm(playerid)
{
	new fstring[599];
	if(PlayerInfo[playerid][pAlcoInvenxua] >= 12) return SendClientMessage(playerid, COLOR_WHITE, "� ��� ��� ���� ������� ������������� ������.");
	for(new i = PlayerInfo[playerid][pAlcoInvenxua]; i < 11; i++)
	{
		if(!i) format(fstring, sizeof(fstring), "{ffffff}%i �������\t{8BD032}%i ������{FFFFFF}", i + 1, ((i + 1) - PlayerInfo[playerid][pAlcoInvenxua]) * adminprice);
		else format(fstring, sizeof(fstring), "%s\n%i �������\t{8BD032}%i ������", fstring, i + 1, ((i + 1) - PlayerInfo[playerid][pAlcoInvenxua]) * adminprice);
	}
	format(fstring, sizeof(fstring), "%s\n{FF0000}12 �������\t{8BD032} 599 ������", fstring);
	ShowPlayerDialog(playerid, 9641, DIALOG_STYLE_LIST, "{FFD700}������� �������", fstring, "Choice", "Cancle");
	return true;*/
//	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Buying Admin", "{FF0000}Sorry Brother{A8C4E4}, This command/future was deleted by the server scripter!!\n\n{FFFF00}Asia {32db23}Paradise", "Close", "");
//}
/*CMD:buyowner(playerid)
{
	SendActia(playerid,0);
}*/
/*CMD:countrychat(playerid, params[]) {
	ShowPlayerDialog(playerid, 8291, DIALOG_STYLE_LIST, "{FFD700}Choose an interest", "American interest/n Russian interest/n Malaysian interest/n Indonesian interest/n Bangladesh interest/n Europian interest/n No interest", "Select", "Cancle");
	return true;
}*/

CMD:setskin(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setskin [playerid] [skinid]");
	if(params[1] > 311 || params[1] < 1) { SendClientMessage(playerid, COLOR_GREY, "Invaild skin id!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pChar] = params[1];
	format(stringer1, sizeof(stringer1), "Your skin has been changed by adminstrator: %s", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], 0x6495EDFF, stringer1);
	format(stringer1, sizeof(stringer1), "You have been changed the skin for player %s to skin id: %i",PlayerInfo[params[0]][pNames],params[1]);
	SendClientMessage(playerid, 0x6495EDFF, stringer1);
	SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
	return true;
}
CMD:pay(playerid, params[])
{
	if(sscanf(params, "dd", params[0],params[1])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /pay [id] [amount]");
	if(params[1] < 1 || params[1] > 300000) return SendClientMessage(playerid, COLOR_GRAD1, "you can't pay more than $299999.");
	if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You need to be have 2 playing hours in your account (/mm - Statics).");
	if(!IsPlayerConnected(params[0])) return true;
 	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "You can't pay cash to yourself.");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "You are too far away.");
	if(PlayerInfo[playerid][pCash] < params[1]) return true;
	GiveMoney(params[0], params[1]);
	PlayerInfo[playerid][pCash] -= params[1];
	format(stringer1, sizeof(stringer1), "You gived the player %s[%i] some money %s Money.",PlayerInfo[params[0]][pNames],params[0],formatInt(params[1]));
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, COLOR_GRAD1, stringer1);
	format(stringer1, sizeof(stringer1), "You received %s Money from %s[%i].",formatInt(params[1]),PlayerInfo[playerid][pNames], playerid);
	SendClientMessage(params[0], COLOR_GRAD1, stringer1);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(stringer1,sizeof(stringer1), "He took out his wallet and handed over the money to %s",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:paygold(playerid, params[])
{
    if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /paygold [id] [gold]");
    if(params[1] < 1 || params[1] > 150) return SendClientMessage(playerid, COLOR_GRAD1, "You can't sell more than 150 Gold Bars.");
    if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You need to have at least 2 playing hours in your account (/mm - Statics).");
    if(!IsPlayerConnected(params[0])) return true;
    if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "You can't give gold bars to yourself.");
    if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "You are too far away.");
    if(PlayerInfo[playerid][pGold] < params[1]) return true;
    GiveMoney(params[0], params[1]);
    PlayerInfo[playerid][pGold] -= params[1];
    format(stringer1, sizeof(stringer1), "You gave the player %s[%i] %d Gold Bars.", PlayerInfo[params[0]][pNames], params[0], params[1]);
    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    SendClientMessage(playerid, COLOR_GRAD1, stringer1);
    format(stringer1, sizeof(stringer1), "You received %d Gold Bars from %s[%i].", params[1], PlayerInfo[playerid][pNames], playerid);
    SendClientMessage(params[0], COLOR_GRAD1, stringer1);
    PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
    format(stringer1, sizeof(stringer1), "He took out his cases and handed over the Gold Bars to %s.", PlayerInfo[params[0]][pNames]);
    SetPlayerChatBubble(playerid, stringer1, COLOR_PURPLE, 30.0, 10000);
    return true;
}
CMD:sellzone(playerid, params[])
{
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pLeader] > 0)
		{
			new full = 0;
			for(new i = 1;i<=TOTALGZ;i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
				{
					if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Do not clear the feed area!");
					if(sscanf(params, "di", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sellzone [playerid] [amount]");
					if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,COLOR_GREY,"This player is not in the game.");
					if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "This player is too far!");
					if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Do not wash out the zone of yourselves!");
					if(!IsAGang(params[0])) return SendClientMessage(playerid, COLOR_GREY, "This player is not in a gang!");
					if(FrakCD1[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid, COLOR_GREY, "One area of ??your band is well stocked at the same time.");
					if(PlayerInfo[params[0]][pLeader] > 0 || PlayerInfo[params[0]][pMember] > 0)
					{
						if(params[1] < 1 || params[1] > 1000000) return SendClientMessage(playerid, COLOR_GREY, "You can't sell your zone more than 1.000.000 Money(s)!");
						format(stringer1,144,"You have already bought %s's zone. Price: %s Money", PlayerInfo[params[0]][pNames], formatInt(params[1])), SendClientMessage(playerid,0x6495EDFF, stringer1);
						format(stringer1, 144, "%s provided you to buy a zone. Price: %s Money\nYou accept?", PlayerInfo[playerid][pNames], formatInt(params[1]));
						ShowPlayerDialog(params[0], 1005, 0, "Gangzone Sell", stringer1, "Yes", "No");
						SetPVarInt(params[0], "PlayerZone", playerid);
						SetPVarInt(params[0], "ZonePrice", params[1]);
						SetPVarInt(params[0], "ZoneID", i);
						full++;
						break;
					}
					else SendClientMessage(playerid, COLOR_GREY, "The player is not the leader of the gang!");
				}
			}
			if(full == 0) SendClientMessage(playerid, COLOR_GREY, "You must be in the ghetto!");
		}
		else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:selldrugs(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "The function is available from rank 3 and above!");
	new full = 0;
	for(new i = 1;i<=TOTALGZ;i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
		{
			if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "You can only sell drugs on your own land!");
			if(sscanf(params, "diii", params[0], params[1], params[2], params[3]))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Usage: /selldrugs [playerid] [id narcotics] [grams] [price]");
				return SendClientMessage(playerid, COLOR_GREY, "Drug Ideas: [0 - seeds], [1 - cocaine], [2 - crack], [3 - heroine], [4 - LSD], [5 - methamphetamine], [6 - marijuana]");
			}
			if(params[1] < 0 || params[1] > 6) return SendClientMessage(playerid, COLOR_GREY, "Drug ID cannot be less than 0 or greater than 6.");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,COLOR_GREY,"Player is not authorized.");
			if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The player's too far away.!");
			if(params[2] < 1 || params[2] > 100) return SendClientMessage(playerid, COLOR_GREY, "Number of grams from 1 to 100!");
			if(params[3] < 1 || params[3] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Price from 1 20000 Moneys(s)!");
			if(PlayerInfo[playerid][p_drugs][params[1]] < params[2]) return SendClientMessage(playerid, COLOR_WHITE, "* You don't have enough drugs!");
			format(stringer1,144,"You have offered %s' to buy the drug %s (gram: %i). Price: %s Money", PlayerInfo[params[0]][pNames],Drugs[params[1]][d_name],params[2], formatInt(params[3])), SendClientMessage(playerid,0x6495EDFF, stringer1);
			format(stringer1, 144, "%s offered to buy you drugs. %s (gram: %i). Price: %s Money", PlayerInfo[playerid][pNames],Drugs[params[1]][d_name],params[2], formatInt(params[3]));
			ShowPlayerDialog(params[0], 1006, 0, "Drugs", stringer1, "Yes", "No");
			SetPVarInt(params[0], "PlayerDrugs", playerid);
			SetPVarInt(params[0], "PlayerDrugsID", params[1]);
			SetPVarInt(params[0], "PlayerDrugsKG", params[2]);
			SetPVarInt(params[0], "DrugsPrice", params[3]);
			full++;
			break;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "You can only sell drugs in the ghetto!");
	return true;
}
CMD:sellgun(playerid, params[])
{
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "The function is available from rank 3 and above!");
		new full = 0;
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "You can sell weapons only in your zones!");
				if(sscanf(params, "diii", params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sellgun [playerid] [id weapons] [ammo] [price]");
				if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,COLOR_GREY,"Player is not authorized.");
				if(params[1] == 24 || params[1] == 25 || params[1] == 29 || params[1] == 23 || params[1] == 30 || params[1] == 31 || params[1] == 33)
				{
					if(params[2] < 1 || params[2] > 999) return SendClientMessage(playerid, COLOR_GREY, "Number of cartridges from 1 to 999!");
					if(params[3] < 1 || params[3] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Prices from 1 to 20,000 Moneys!");
					if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The player is too far away!");
					if(PlayerInfo[playerid][pMats] < params[2]) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough materials!");
                    format(stringer1,128,"You offered %s to buy %s weapon (%i) with %i ammo. Price: %s Money", PlayerInfo[params[0]][pNames], WeaponNames[params[1]], params[1], params[2], formatInt(params[3])), SendClientMessage(playerid,0x6495EDFF, stringer1);
					format(stringer1, 127, "%s suggested you buy weapon %s (%i) with %i ammo. Price: %s Money\n\nDo you agree?", PlayerInfo[playerid][pNames],WeaponNames[params[1]], params[1], params[2], formatInt(params[3]));
					ShowPlayerDialog(params[0], 1007, 0, "Weapon", stringer1, "Yes", "No");
					SetPVarInt(params[0], "PlayerGun", playerid);
					SetPVarInt(params[0], "PlayerGun_", params[1]);
					SetPVarInt(params[0], "PlayerGAmmo", params[2]);
					SetPVarInt(params[0], "PlayerGPrice", params[3]);
					full++;
					break;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Invalid weapon ID! Weapon ID: 23, 24, 25, 29, 30, 31, 33");
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "You can sell weapons only in the ghetto!");
	}
	return true;
}
CMD:mxpell(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 7 && PlayerInfo[playerid][pMember] != 16) return SendClientMessage(playerid,COLOR_WHITE,"You are not a City Hall/News employee!");
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /mxpell [id] [reason]");
	if(!ProxDetectorS(15.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Player is too far!");
	if(IsACop(params[0]) || IsAArm(params[0]) || PlayerInfo[params[0]][pMember] == 4 || PlayerInfo[params[0]][pMember] == 7) return SendClientMessage(playerid, COLOR_RED, "You can't kick out a Government employee!");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(PlayerInfo[playerid][pMember] == 7)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 60.0,1482.1993,-1799.5953,2995.6289)) return SendClientMessage(playerid, COLOR_GREY, "Must be at City Hall!");
		SetPlayerInteriorEx(params[0],0);
		SetPPos(params[0],1480.8832,-1769.0471,18.7958);
		SetPlayerFacingAngle(params[0], 0.3133);
		DisablePlayerCheckpoint(params[0]);
		CP[params[0]] = 0;
		SetPVarInt(params[0],"MerEnter",gettime()+300);
		format(stringer1,100,"Employee: %s kicked you out of the city hall door. Reason: %s",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0],COLOR_WHITE,stringer1);
		format(stringer1,100,"You kicked %s out the door.",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid,COLOR_WHITE,stringer1);
	}
	else
	{
		if(!IsPlayerInRangeOfPoint(playerid, 60.0,1745.7302,-1915.4186,1961.1769)) return SendClientMessage(playerid, COLOR_GREY, "Must be in the studio!");
		SetPlayerInteriorEx(params[0],0);
		SetPPos(params[0],1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(params[0], 175.8234);
		SetPlayerVirtualWorldEx(params[0], 0);
		DisablePlayerCheckpoint(params[0]);
		CP[params[0]] = 0;
		SetPVarInt(params[0],"NewsEnter",gettime()+300);
		format(stringer1,100,"Employee: %s kicked you out of the studio door. Reason: %s",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0],COLOR_WHITE,stringer1);
		format(stringer1,100,"You kicked %s out the door.",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid,COLOR_WHITE,stringer1);
	}
	return true;
}
CMD:axpell(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 11) return SendClientMessage(playerid,COLOR_WHITE,"You are not a driving school employee!");
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /axpell [id] [reason]");
	if(!ProxDetectorS(15.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The player is too far away!");
	if(IsACop(params[0]) || IsAArm(params[0]) || PlayerInfo[params[0]][pMember] == 4 || PlayerInfo[params[0]][pMember] == 7) return SendClientMessage(playerid, COLOR_RED, "You can't kick out a Government employee!");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(IsPlayerInRangeOfPoint(playerid, 30.0,-790.2884,1546.5732,1139.2369))
	{
		SetPlayerInteriorEx(params[0],0);
		SetPlayerVirtualWorldEx(params[0], 0);
		SetPPos(params[0],-2026.9436,-99.6266,35.1641);
		SetPlayerFacingAngle(params[0], 355.8038);
		SetPVarInt(params[0],"AvtoEnter",gettime()+300);
		format(stringer1,100,"Employee: %s kicked you out of the driving school door. Reason: %s",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0],COLOR_WHITE,stringer1);
		format(stringer1,100,"You kicked %s out the door.",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid,COLOR_WHITE,stringer1);
	}
	return true;
}
CMD:mdpell(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 4) return SendClientMessage(playerid,COLOR_WHITE,"You are not a doctor!");
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /mdpell [id] [reason]");
	if(!ProxDetectorS(15.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Player is too far!");
	if(IsACop(params[0]) || IsAArm(params[0]) || PlayerInfo[params[0]][pMember] == 4 || PlayerInfo[params[0]][pMember] == 7) return SendClientMessage(playerid, COLOR_RED, "You can't kick out a government employee!");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 50.0,347.8218,400.8753,1022.8019)) return SendClientMessage(playerid, COLOR_GREY, "You are not on hospital premises.");
	PlayerInfo[params[0]][pHospital] = 0;
	SetPPos(params[0],1177.1721,-1323.3220,14.0576);
	SetPlayerInteriorEx(params[0],0);
	SetPlayerFacingAngle(params[0], 270);
	SetPlayerVirtualWorldEx(params[0], 0);
	SetPVarInt(params[0],"MdEnter",gettime()+300);
	format(stringer1,100,"Employee: %s kicked you out of the hospital door. Reason: %s",PlayerInfo[playerid][pNames],params[1]);
	SendClientMessage(params[0],COLOR_WHITE,stringer1);
	format(stringer1,100,"You kicked %s out the door.",PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid,COLOR_WHITE,stringer1);
	return true;
}
CMD:money(playerid, params[])
{
	if (PlayerInfo[playerid][pFull] < 1) return true;
	if(sscanf(params, "dd",params[0],params[1])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /money [id] [amount]");
	if(!IsPlayerConnected(params[0])) return true;
	format(stringer1, sizeof(stringer1), "%s Money transferred to the player's account %s",formatInt(params[1]),PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid, COLOR_WHITE, stringer1);
	GiveBank(params[0], params[1]);
	format(stringer1, sizeof(stringer1), "Account replenishment for the amount: %s Money", formatInt(params[1]));
	SendClientMessage(params[0], COLOR_WHITE, stringer1);
	format(stringer1, sizeof(stringer1), "New balance in the bank: %s Money", formatInt(PlayerInfo[params[0]][pBank]));
	SendClientMessage(params[0], COLOR_WHITE, stringer1);
	return true;
}
CMD:avig(playerid, params[])
{
	if(!PlayerInfo[playerid][pAlcoInvenxua]) return true;
	if(!is_cmd_allow(playerid, CMD_avig) && PlayerInfo[playerid][pAlcoInvenxua] < 11) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	new nicks[24];
	if(sscanf(params, "s[24]s[100]",nicks, params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /avig [playername] [reason]");
	if(!IsValidRpName(nicks)) return SendClientMessage(playerid, COLOR_WHITE, "The entered value does not correspond to the structure of the nickname.");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your admin action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
	if(!strcmp(nicks, ""AntiBan1"") || !strcmp(nicks, ""AntiBan2"")) return DelAdmin(playerid);
//	AntiBan[playerid] += 30;
	new ids = GetPlayerID(nicks);
    if(IsPlayerConnected(ids))
	{
	    if(!PlayerInfo[ids][pLeader] && !PlayerInfo[ids][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_WHITE, "This player is not Leader/Adminstrator");
		if(FD(ids)) return DelAdmin(playerid);
	    if(playerid == ids) return SendClientMessage(playerid, COLOR_WHITE, "Impossible to swap out the source of your own.");
	    PlayerInfo[ids][pVigs] ++;
	    if(PlayerInfo[ids][pVigs] >= 3)
		{
		    if(PlayerInfo[ids][pLeader] && !PlayerInfo[ids][pAlcoInvenxua])
		    {
		        format(stringer1, sizeof(stringer1), "Adminstrator %s Kicked the player %s: %s from the leader (3/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[PlayerInfo[ids][pMember]], PlayerInfo[ids][pNames], params[1]);
  		        SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		        format(stringer1, sizeof(stringer1), "removed the leader of the faction %s because of (3/3): %s", GetPlayerFracName[PlayerInfo[ids][pMember]], params[1]);
  		        Admin_Log(playerid, stringer1, nicks, gettime());
  		        SetPlayerSkinEx(ids, PlayerInfo[ids][pChar]);
  		        SetPlayerArmour(ids,0);
		        SetPlayerHealthAC(ids,100);
		        ResetWeapons(ids);
		        PlayerInfo[ids][pLeader] = 0;
    	        PlayerInfo[ids][pMember] = 0;
    	        PlayerInfo[ids][pRank] = 0;
    	        PlayerInfo[ids][pVigs] = 0;
    	        PlayerInfo[ids][pOdet] = 0;
    	        SetPlayerToTeamColor(ids);
    	        format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pLeader` = '0', `pRank` = '0', `odet` = '0' , `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[ids][pID]);
		        mysql_function_query(connects, mysql_query_, false, "", "");
		    }
		    else if(PlayerInfo[ids][pAlcoInvenxua])
		    {
		        format(stringer1, sizeof(stringer1), "Adminstrator %s Kicked %s from administrator rank (3/3). Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[ids][pNames], params[1]);
  		        SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		        format(stringer1, sizeof(stringer1), "removed the rank of adminstrator (3/3), because of: %s", params[1]);
  		        Admin_Log(playerid, stringer1, nicks, gettime());
  		        DelAdmin(ids);
		    }
		}
		else
		{
		    if(PlayerInfo[ids][pLeader] && !PlayerInfo[ids][pAlcoInvenxua])
		    {
		        format(stringer1, sizeof(stringer1), "Adminstrator %s warned the faction leader %s: %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[PlayerInfo[ids][pMember]], PlayerInfo[ids][pNames],PlayerInfo[ids][pVigs], params[1]);
  		        SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		        format(stringer1, sizeof(stringer1), "warned the faction leader %s (%d/3) because of: %s", GetPlayerFracName[PlayerInfo[ids][pMember]],PlayerInfo[ids][pVigs], params[1]);
  		        Admin_Log(playerid, stringer1, nicks, gettime());
    	        format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[ids][pVigs], PlayerInfo[ids][pID]);
		        mysql_function_query(connects, mysql_query_, false, "", "");
            }
		    else if(PlayerInfo[ids][pAlcoInvenxua])
		    {
		        format(stringer1, sizeof(stringer1), "Adminstrator %s give warn to the adminstrator %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[ids][pNames],PlayerInfo[ids][pVigs], params[1]);
  		        SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		        format(stringer1, sizeof(stringer1), "warned the adminstrator (%d/3), Because of: %s", PlayerInfo[ids][pVigs], params[1]);
  		        Admin_Log(playerid, stringer1, nicks, gettime());
  		        format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[ids][pVigs],PlayerInfo[ids][pID]);
		        mysql_function_query(connects, mysql_query_, false, "", "");
            }
		}
		return true;
    }
    format(mysql_query_,sizeof(mysql_query_), "SELECT `pAlcoInvenxua`, `pLeader`, `vigs` FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'", nicks);
	mysql_function_query(connects, mysql_query_, true, "SetVig_Date", "dssd", playerid,nicks,params[1],2);
	return 1;
}
CMD:aunvig(playerid, params[])
{
	if(!is_cmd_allow(playerid, CMD_aunvig) && PlayerInfo[playerid][pAlcoInvenxua] < 11) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	new nicks[24];
	if(sscanf(params, "s[24]s[100]",nicks, params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /aunvig [playername] [reason]");
	if(!IsValidRpName(nicks)) return SendClientMessage(playerid, COLOR_WHITE, "The entered value does not correspond to the structure of the nickname.");
//	if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"Your admin action is locked for 3 minutes."); AntiBan[playerid] = 180; return true; }
//	AntiBan[playerid] += 30;
	new ids = GetPlayerID(nicks);
    if(IsPlayerConnected(ids))
	{
	    if(!PlayerInfo[ids][pLeader] && !PlayerInfo[ids][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_WHITE, "The player is not adminstrator / leader");
	    if(playerid == ids && !FD(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Impossible to remove a warn to yourself.");
	    if(PlayerInfo[ids][pVigs] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "No warns.");
	    PlayerInfo[ids][pVigs] --;
		if(PlayerInfo[ids][pLeader] && !PlayerInfo[ids][pAlcoInvenxua])
		{
		    format(stringer1, sizeof(stringer1), "Adminstrator %s unwarned the faction leader %s: %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], GetPlayerFracName[PlayerInfo[ids][pMember]], PlayerInfo[ids][pNames],PlayerInfo[ids][pVigs], params[1]);
  		    SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
  		    format(stringer1, sizeof(stringer1), "removed the warn from leader of the faction (%s) (%d/3) Because of: %s", GetPlayerFracName[PlayerInfo[ids][pMember]],PlayerInfo[ids][pVigs], params[1]);
  		    Admin_Log(playerid, stringer1, nicks, gettime());
    	    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[ids][pVigs], PlayerInfo[ids][pID]);
		    mysql_function_query(connects, mysql_query_, false, "", "");
        }
		else if(PlayerInfo[ids][pAlcoInvenxua])
		{
		    format(stringer1, sizeof(stringer1), "Adminstrator %s unwarned the adminstrator %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[ids][pNames],PlayerInfo[ids][pVigs], params[1]);
		    SendAdminMessage(COLOR_LIGHTRED, stringer1);
  		    format(stringer1, sizeof(stringer1), "removed the warn (%d/3), Because of: %s", PlayerInfo[ids][pVigs], params[1]);
  		    Admin_Log(playerid, stringer1, nicks, gettime());
  		    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[ids][pVigs],PlayerInfo[ids][pID]);
		    mysql_function_query(connects, mysql_query_, false, "", "");
        }
		return true;
    }
    format(mysql_query_,sizeof(mysql_query_), "SELECT `pAlcoInvenxua`, `pLeader`, `vigs` FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'", nicks);
	mysql_function_query(connects, mysql_query_, true, "SetVig_Date", "dssd", playerid,nicks,params[1],1);
	return 1;
}
CMD:fvig(playerid, params[])
{
	if(!PlayerInfo[playerid][pMember]) return 1;
 	if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][3]) return SendMes(playerid, -1, "Available with %i ranks", gFractionRank[PlayerInfo[playerid][pMember]-1][3]);
    if(sscanf(params, "ds[100]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /fvig [id] [reason]");
    if(!IsPlayerConnected(params[0])) return true;
    if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember] || PlayerInfo[params[0]][pAlcoInvenxua] || PlayerInfo[params[0]][pRank] >= gFractionRank[PlayerInfo[playerid][pMember]-1][3]) return SendClientMessage(playerid,COLOR_GREY,"Player not in your faction");
    PlayerInfo[params[0]][pVigs] ++;
    if(PlayerInfo[params[0]][pVigs] >= 3)
	{
		format(stringer1, sizeof(stringer1), "[F] %s kicked player %s (3/3), Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
  		SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED, stringer1);
  		SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
  		SetPlayerArmour(params[0],0);
		SetPlayerHealthAC(params[0],100);
		ResetWeapons(params[0]);
    	PlayerInfo[params[0]][pMember] = 0;
    	PlayerInfo[params[0]][pRank] = 0;
    	PlayerInfo[params[0]][pVigs] = 0;
    	PlayerInfo[params[0]][pOdet] = 0;
    	SetPlayerToTeamColor(params[0]);
    	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `odet` = '0' , `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
		mysql_function_query(connects, mysql_query_, false, "", "");
	}
    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[params[0]][pVigs],PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	format(stringer1, sizeof(stringer1), "[F] %s warned the player %s (%d/3), Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], PlayerInfo[params[0]][pVigs], params[1]);
  	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED, stringer1);
	return 1;
}
CMD:funvig(playerid, params[])
{
	if(!PlayerInfo[playerid][pMember]) return 1;
 	if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][3]) return SendMes(playerid, -1, "Available with %i ranks", gFractionRank[PlayerInfo[playerid][pMember]-1][3]);
    if(sscanf(params, "ds[100]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /funvig [id] [reason]");
    if(!IsPlayerConnected(params[0])) return true;
    if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember] || PlayerInfo[params[0]][pAlcoInvenxua] || PlayerInfo[params[0]][pRank] >= gFractionRank[PlayerInfo[playerid][pMember]-1][3]) return SendClientMessage(playerid,COLOR_GREY,"Player not in your faction");
	if(PlayerInfo[params[0]][pVigs] <= 0) return true;
	PlayerInfo[params[0]][pVigs] --;
    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[params[0]][pVigs],PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	format(stringer1, sizeof(stringer1), "[F] %s delete the warn from the player %s (%d/3). Reason: %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], PlayerInfo[params[0]][pVigs], params[1]);
  	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED, stringer1);
	return 1;
}

CMD:jail(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return true;
//	if(PlayerInfo[playerid][pVigs] > 2) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /jail [id] [minute] [reason]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 60 || params[1] <= 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: jail time must be from 1 minute to 60 minute");
	if((FD(params[0]) && !FD(playerid)) || IsIpFound(params[2])) return true;
	ResetWeapons(params[0]);
	SetPlayerInteriorEx(params[0], 6);
	switch(random(3))
	{
		case 0: SetPPos(params[0],5512.0732,1249.1172,23.1886), SetPlayerFacingAngle(params[0], 120.3213);
		case 1: SetPPos(params[0],5524.6377,1241.7778,23.1886), SetPlayerFacingAngle(params[0], 102.7743);
		case 2: SetPPos(params[0],5517.6646,1255.9296,23.1886), SetPlayerFacingAngle(params[0], 99.9542);
//		case 0: SetPPos(params[0],346.7122, 306.7019, 999.4639), SetPlayerFacingAngle(params[0], 120.3213);
//		case 1: SetPPos(params[0],344.0128, 304.9643, 999.4639), SetPlayerFacingAngle(params[0], 102.7743);
//		case 2: SetPPos(params[0],347.7505, 302.1187, 999.4639), SetPlayerFacingAngle(params[0], 99.9542);
	}
	TogglePlayerControllable(params[0], false);
	SetTimerEx("UnFreez", 2900, 0, "d", params[0]);
	PlayerInfo[params[0]][pJailed] = 4;
	PlayerInfo[params[0]][pMestoJail] = 0;
	PlayerInfo[params[0]][pJailTime] = params[1]*60;
	PlayerInfo[playerid][pJailAdm]++;
/*	format(stringer1, sizeof(stringer1), "Adminstrator %s has jailed the player %s for %i minute(s). Reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED, stringer1);
	format(stringer1, sizeof(stringer1), "Adminstrator %s has jailed the player %s for %i minute(s). Reason: %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1], params[2]);
	SendClientMessageToAll(COLOR_GREY,stringer1);*/
	format(stringer1, sizeof(stringer1), "Adminstrator %s jailed you for %i minute(s). Reason: %s",PlayerInfo[playerid][pNames],params[1], params[2]);
	SendClientMessage(params[0], COLOR_LIGHTRED, stringer1);
	format(stringer1, sizeof(stringer1), "Adminstrator %s has jailed the player %s for %i minute(s). Reason: %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1], params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
	TextDrawShowForPlayer(params[0], samp4);
	return true;
}
CMD:unjail(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return true;
//	if(PlayerInfo[playerid][pVigs] > 2) return SendClientMessage(playerid, -1, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /unjail [id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(stringer1, sizeof(stringer1), "You have been unjail by adminstrator: %s",PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], COLOR_LIGHTRED, stringer1);
	format(stringer1, sizeof(stringer1), "Adminstrator %s unjailed the player %s from the jail", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
	if(PlayerInfo[params[0]][pJailed] != 4) PlayerInfo[params[0]][pUsedJail] = 0;
	PlayerInfo[params[0]][pJailed] = 0;
	PlayerInfo[params[0]][pJailTime] = 0;
	SpawnPlayerEx(params[0]);
	TextDrawHideForPlayer(params[0], samp4);
	return true;
}
/*CMD:rankup(playerid, params[])
{
    if(!PlayerInfo[playerid][pMember])
        return true; // or return 1;

    // Check if the player has enough pDonateMoney2
    if(PlayerInfo[playerid][pFacPoint] < 650)
    {
        SendClientMessage(playerid, COLOR_RED, "You don't have enough Faction Points to rank up.");
        return true; // or return 1;
    }

    // Increment the player's rank by 1
    PlayerInfo[playerid][pRank]++;

    // Check if rank exceeds the maximum allowed rank for the player's organization
    switch(PlayerInfo[playerid][pMember])
    {
        case 1,10,3,19,21:
            if(PlayerInfo[playerid][pRank] > 14)
            {
                PlayerInfo[playerid][pRank] = 14; // Set to maximum rank
                SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
                return true; // or return 1;
            }
        case 2,26,4,5,6,11,12,13,14,15,17,18,22,24,25,7:
            if(PlayerInfo[playerid][pRank] > 9)
            {
                PlayerInfo[playerid][pRank] = 9; // Set to maximum rank
                SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
                return true; // or return 1;
            }
        case 27,28:
            if(PlayerInfo[playerid][pRank] > 4)
            {
                PlayerInfo[playerid][pRank] = 4; // Set to maximum rank
                SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
                return true; // or return 1;
            }
        case 16:
            if(PlayerInfo[playerid][pRank] > 12)
            {
                PlayerInfo[playerid][pRank] = 12; // Set to maximum rank
                SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
                return true; // or return 1;
            }
        case 23:
            if(PlayerInfo[playerid][pRank] > 11)
            {
                PlayerInfo[playerid][pRank] = 11; // Set to maximum rank
                SendClientMessage(playerid, COLOR_GRAD1, "You are already at the maximum rank for your organization.");
                return true; // or return 1;
            }
    }

    // Perform additional checks and actions for specific ranks

    // Deduct 600 from pDonateMoney2
    PlayerInfo[playerid][pFacPoint] -= 650;

    // Update rank in the SQL database
    format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pRank` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pRank], PlayerInfo[playerid][pID]);
    mysql_function_query(connects, mysql_query_, false, "", "");

    // Inform the player about the rank change
    format(stringer, sizeof(stringer), "You have been promoted to rank %d with 600 Faction Points!", PlayerInfo[playerid][pRank]);
    SendClientMessage(playerid, COLOR_ORANGE, stringer);

    return true; // or return 1;
}*/
CMD:rankup(playerid) {
	new string[144];
	format(string,sizeof(string),"{FFD700}Factions Rank System {FFFFFF}| Balance: %d Fac Points",PlayerInfo[playerid][pFacPoint]);
	ShowPlayerDialog(playerid,10062,DIALOG_STYLE_LIST,"{FFFF00}Factions Ranks","[1] Rank Up 650-Fpoints [New]","Select","Close");
	return true;
}
CMD:giverank(playerid, params[])
{
    if(!PlayerInfo[playerid][pMember]) return 1;
 	if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][2]) return SendMes(playerid, -1, "Available with %i ranks", gFractionRank[PlayerInfo[playerid][pMember]-1][2]);
    if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /giverank [id] [rank]");
    switch(PlayerInfo[playerid][pMember])
    {
   	    case 1,10,3,19,21: if(params[1] > 14 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Any less 1 or more 14!");
        case 2,26,4,5,6,11,12,13,14,15,17,18,22,24,25,7: if(params[1] > 9 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Any less 1 or more 9!");
        case 27,28: if(params[1] > 4 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Any less 1 or more 4!");
        case 16: if(params[1] > 12 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Any less 1 or more 12!");
        case 23: if(params[1] > 11 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Any less 1 or more 11!");
    }
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
    switch(PlayerInfo[playerid][pMember])
	{
	    case 1..4, 7, 10, 11, 19, 21, 25:
		{
	        if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"Not on service!");
	        if(PlayerInfo[params[0]][pRank] <= 5 && params[1] > 5)
	        {
	            if(PlayerInfo[params[0]][pMedCard] == 0) return SendClientMessage(playerid,COLOR_WHITE,"To obtain this rank, the player must have a med-card.");
	            if((PlayerInfo[params[0]][pMember] == 1 || PlayerInfo[params[0]][pMember] == 2 || PlayerInfo[params[0]][pMember] == 10 || PlayerInfo[params[0]][pMember] == 21 || PlayerInfo[params[0]][pMember] == 25) && PlayerInfo[params[0]][pVoenBill] == 0)
   	            {
	                return SendClientMessage(playerid,COLOR_WHITE,"To obtain this rank, the player must have a military ID.");
	            }
	        }
		}
	}
    if((PlayerInfo[params[0]][pMember] == 3 || PlayerInfo[params[0]][pMember] == 19) && params[1] >= 3 && PlayerInfo[params[0]][pVoenBill] == 0)
	{
	    PlayerInfo[params[0]][pVoenBill] = 1;
		SendClientMessage(params[0], COLOR_GRAD1, "Congratulations! You've got your free ticket");
	    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `voenbill` = '1' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
	    mysql_function_query(connects, mysql_query_, false, "", "");
	}
    if (PlayerInfo[params[0]][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] You have specified the leader ID");
    if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "This player is not in your organization!");
    if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pRank] <= params[1]) return SendClientMessage(playerid,COLOR_GREY,"ERROR");
    if(PlayerInfo[playerid][pLeader] <= 0 && PlayerInfo[playerid][pRank] <=  PlayerInfo[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "ERROR");
    format(stringer1, sizeof(stringer1), "You have been promoted / demoted to %d rank %s",params[1], PlayerInfo[playerid][pNames]);
    SendClientMessage(params[0], 0x6BB3FFAA, stringer1);
    format(stringer1, sizeof(stringer1), "You have upgraded %s to %s %d.", PlayerInfo[params[0]][pNames], fRankName[PlayerInfo[params[0]][pMember]-1][PlayerInfo[params[0]][pMember]-1], params[1]);
    SendClientMessage(playerid, 0x6BB3FFAA, stringer1);
    PlayerInfo[params[0]][pRank] = params[1];
    return true;
}
CMD:uninvite(playerid, params[])
{
    if(!PlayerInfo[playerid][pMember]) return 1;
    switch(PlayerInfo[playerid][pMember]) { case 1..4, 7, 10, 11, 19, 21, 25: if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"you are not on duty!"); }
    if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][1]) return SendMes(playerid, -1, "Available from rank %i", gFractionRank[PlayerInfo[playerid][pMember]-1][1]);
    if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /uninvite [id] [reason]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
    if(PlayerInfo[playerid][pRank] == PlayerInfo[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] You can't kick this player");
    if(PlayerInfo[playerid][pLeader] <= 0 && PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "[ERROR] You can't kick this player");
    if(PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pLeader] || PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pMember])
    {
        if(PlayerInfo[params[0]][pMember] <= 0 || PlayerInfo[params[0]][pLeader] >= 1) return true;
        if(IsPlayerStartCroupier(params[0]))
        {
            if(CroupierTable[params[0]] != -1)
            {
                switch(CroupierGame[params[0]])
                {
                    case 1: OnPlayerExitDiceTable(params[0], CroupierTable[params[0]]);
                    case 2: OnPlayerExitRouleTable(params[0], CroupierTable[params[0]]);
                    case 3: OnPlayerExitBlackJackTable(params[0], CroupierTable[params[0]]);
                }
            }
            StartDuty[params[0]] = 0;
        }
        format(stringer1, sizeof(stringer1), "{3d9eff}%s kicked you out of the organization, Reason: {ffffff}%s",PlayerInfo[playerid][pNames],params[1]);
        SendClientMessage(params[0], 0x6495EDFF, stringer1);
        format(stringer1, sizeof(stringer1), "%s[%d] kicked the player %s[%d] from the organization, Reason: %s", PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames], params[0], params[1]);
        SendFamilyMessage(PlayerInfo[params[0]][pMember], 0x5677b3FF, stringer1);
        SetPlayerArmour(params[0],0);
        if(IsAGang(params[0])) {
            if(GangInfo[PlayerInfo[params[0]][pMember]][capture] > 0) {
                PlayerTextDrawHide(params[0], CaptureTD[params[0]][0]);
                PlayerTextDrawHide(params[0], CaptureTD[params[0]][1]);
                PlayerTextDrawHide(params[0], CaptureTD[params[0]][2]);
                PlayerTextDrawHide(params[0], CaptureTD[params[0]][3]);
                PlayerTextDrawHide(params[0], CaptureTD[params[0]][4]);
                if(!PlayerInfo[params[0]][pAlcoInvenxua]) ClearKillFeed(params[0]);
            }
        }
        PlayerInfo[params[0]][pMember] = 0;
        PlayerInfo[params[0]][pLeader] = 0;
        PlayerInfo[params[0]][pRank] = 0;
        SetPlayerColor(params[0], 0xe6e6e6FF);
        SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
        format(stringer1, sizeof(stringer1), "Adminstrator Player %s[%d] kicked the player %s[%d] from the organization, Reason: %s", PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames], params[0], params[1]);
        SendAdminMessage(COLOR_GREY,stringer1);
        PlayerInfo[params[0]][pOdet] = 0;
        format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `odet` = '0' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
        mysql_function_query(connects, stringer, false, "", "");
    }
    return true;
}
CMD:mark(playerid, params[])
{
	if (PlayerInfo[playerid][pAlcoInvenxua] >=13) { GetPlayerPos(playerid, gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]); SendClientMessage(playerid, COLOR_WHITE, "Teleport point set!"); }
	return true;
}
CMD:mp(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return SendClientMessage(playerid,COLOR_GREY,"You have no rights");
	ShowPlayerDialog(playerid, 5343, DIALOG_STYLE_LIST,"Create Event", "{0080FF}[1] {FFFFFF}Start/End event\n{0080FF}[2] {FFFFFF}Give event players a weapons\n{0080FF}[3] {FFFFFF}Give event players a health\n{0080FF}[4] {FFFFFF}Delete weapons from the event players\n{0080FF}[5] {FFFFFF}Give event players a skin", "Select", "Cancle");
	return true;
}
/*CMD:bugs(playerid, params[])
{
	if(GetPVarInt(playerid, "bug_time") > gettime()) return SendClientMessage(playerid, -1, "���������� ���������� � ���� ����� ������ ��� � 30 ������.");
	ShowPlayerDialog(playerid, 22831, DIALOG_STYLE_INPUT, "{FFCC00}��������� �� ������ �������� ����", "{FFFFFF}| �������� � ���� ��� ������� �� �����. �� ����������� �������� |","Submit","Cancle");
	return true;
}
CMD:bugs(playerid, params[])
{
	new string[500];
    strcat(string, "{FFFFFF}�������� ���? �������� ��� �����������!\n\n\
	{FFFF00}�������� ����������\n\n\
	{FFFF00}[1] {FFFFFF}������� � ������ ������� � {FFFF00}vk.com/slava_nike\n\
	{FFFF00}[2] {FFFFFF}������� �� {FFFF00}'�������� ���������'\n\
	{FFFF00}[3] {FFFFFF}�������� ��� � {FFFF00}#���\n\n\
	{FFFFFF}��� ���� ������������ �����, ���������� ��� �� ������.");
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFFF00}��������� �� ������ �������� ����", string, "Ready", "");
}*/
CMD:sms(playerid, params[])
{
    if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You want to be in the game for 2 hours (/mm - Statistics).");
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sms [id] [message]");
	if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: You have a gag.");
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "You have a mute!");
	if(takephone[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have a phone");
	if(strlen(params[1]) > 95) return SendClientMessage(playerid,COLOR_GREY,"The message is too long!");
	if(IsAIP(params[1])) {
		SendClientMessage(playerid, -1, "Suspicions in advertising!");
		return false;
	}
	switch (params[0])
	{
		case 11888:
		{
			if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "SMS reception is disabled");
			if(PlayerInfo[playerid][pBank] <= 0)
			{
				format(stringer1, sizeof(stringer1), "[Outgoing SMS]: %s | Recipient: Sa News",params[1]);
				SendClientMessage(playerid,  COLOR_YELLOW, stringer1);
				SendClientMessage(playerid,  COLOR_GRAD1, "Message not delivered, not enough funds ");
				format(stringer1, sizeof(stringer1), "%s pulls out a mobile phone", PlayerInfo[playerid][pNames]);
				SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,5.0,10000);
				return true;
			}
			format(stringer1, sizeof(stringer1), "[Ether] %s. Sender: %s[%i]",params[1],PlayerInfo[playerid][pNames], playerid);
			SendFamilyMessage(16, COLOR_YELLOW, stringer1);
			format(stringer1, sizeof(stringer1), "[Outgoing SMS]: %s | Recipient: Sa News",params[1]);
			SendClientMessage(playerid,  COLOR_YELLOW, stringer1);
			PlayerInfo[playerid][pMobile] -= smspricels;
			FracBank[0][fLsnews] += smspricels;
		}
	}
	if (IsPlayerConnected(params[0]))
	{
		if(params[0] != INVALID_PLAYER_ID)
		{
			if(PhoneOnline[params[0]] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "The subscriber's phone is off...");
				format(stringer1, sizeof(stringer1), "%s tpulls out a mobile phone", PlayerInfo[playerid][pNames]);
				SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,5.0,10000);
				return true;
			}
			if(GetPVarInt(params[0], "AFK_Time") > 1) return SendClientMessage(playerid, COLOR_GREY, "Given player AFK");
			PlayerInfo[playerid][pBank] -=20;
			format(stringer1, sizeof(stringer1), "[Incoming SMS]: %s | Sender: %s[%d]",params[1],PlayerInfo[playerid][pNames], playerid);
			SendClientMessage(params[0], COLOR_YELLOW, stringer1);
			SetPlayerChatBubble(params[0],"SMS <<<",COLOR_YELLOW,5.0,10000);
			foreach(Player,i)
			{
				if(BigEarSms[i] != 0)
				{
					format(stringer1, sizeof(stringer1), "� Incoming to %s[%d]: %s. Sender: %s[%d].",PlayerInfo[params[0]][pNames],params[0],params[1],PlayerInfo[playerid][pNames],playerid);
					SendClientMessage(i, COLOR_YELLOW, stringer1);
				}
		    }
			PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(stringer1, sizeof(stringer1), "[Outgoing SMS]: %s | Recipient: %s[%d]",params[1], PlayerInfo[params[0]][pNames], params[0]);
			SendClientMessage(playerid,  COLOR_YELLOW, stringer1);
			//format(stringer1, sizeof(stringer1), "%s ��������(�) ��� ���������", PlayerInfo[playerid][pNames]);
			SetPlayerChatBubble(playerid,"SMS >>>",COLOR_YELLOW,5.0,10000);
			return true;
	   	 }
	}
	return true;
}
CMD:tazer(playerid, params[])
{
    if(GetPVarInt(playerid,"anti_flood_tazer") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 15 seconds to use this commands {FF0000}/tazer 1/2/3.");
	if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || IsACop(playerid)) {
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid,COLOR_WHITE,"Usage: /tazer [1/2/3]");
		SetPVarInt(playerid,"anti_flood_tazer",gettime()+15);
		switch(params[0])
		{
		case 1:
			{
				format(stringer1, sizeof(stringer1), "Cop Agent %s stuns everyone",PlayerInfo[playerid][pNames]);
				ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer1);
				foreach(Player,i)
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid,X,Y,Z);
					if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
					{
						SendClientMessage(i,-1,"You are frozen for 15 seconds");
						FIXES_ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
						PlayerCuffed[i] = 1;
						PlayerCuffedTime[i] = 15;
					}
				}
			}
		case 2:
			{
				format(stringer1, sizeof(stringer1), "Cop Agent %s stuns all nearby lawyers",PlayerInfo[playerid][pNames]);
				ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer1);
				foreach(Player,i)
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid,X,Y,Z);
					if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
					{
						if(IsAArm(i) || IsACop(i) || IsAMedic(i))
						{
							SendClientMessage(i,-1,"You are frozen for 15 seconds");
							FIXES_ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
							PlayerCuffed[i] = 1;
							PlayerCuffedTime[i] = 15;
						}
					}
				}
			}
		case 3:
			{
				format(stringer1, sizeof(stringer1), "Cop Agent %s stuns all nearby residents. ", PlayerInfo[playerid][pNames]);
				ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer1);
				foreach(Player,i)
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid,X,Y,Z);
					if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
					{
						if(PlayerInfo[i][pMember] == 0 || IsAGang(i) || ISAMAFIA(i))
						{
							SendClientMessage(i,-1,"You are frozen for 15 seconds. ");
							FIXES_ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
							PlayerCuffed[i] = 1;
							PlayerCuffedTime[i] = 15;
						}
					}
				}
			}
		}
	}
	return true;
}
CMD:veh(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
//	if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, -1, "{FF6600}There is a reprimand on your account, some commands have been blocked. Remove the reprimand � {FFFFFF}/adonate, {FF6600} to unlock commands");
	if(IsAGreenZone(playerid)) return SendClientMessage(playerid, -1, "It is forbidden to create a car in the green zone!");
	if(sscanf(params, "ddd",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /veh [id] [color 1] [color 2]");
	new intt = GetPlayerInterior(playerid);
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /veh [id vehicle] [color 1] [color 2]");
	if(params[1] < 0 || params[1] > 254) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /veh [id vehicle] [color 1] [color 2]");
	if(params[2] < 0 || params[2] > 254) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /veh [id vehicle] [color 1] [color 2]");
	new Float:X,Float:Y,Float:Z, string[144];
	GetPlayerPos(playerid, X,Y,Z);
	createdvehs ++ ;
	createdvehicles[createdvehs] = CreateVehicleEx(params[0], X,Y,Z, 0.0, params[1], params[2], 60000, 0);
	vehcreat[createdvehicles[createdvehs]] = 1;
	PutPlayerInVeh(playerid, createdvehicles[createdvehs], 0);
	SetVehicleParamsEx(createdvehicles[createdvehs] ,VEHICLE_PARAMS_ON,false,alarm,doorss,bonnet,boot,objective);
	zavodis[playerid] = 1;
	Fuell[createdvehicles[createdvehs]] = 100;
	VEHICLE[createdvehicles[createdvehs]][ vHealth ] = 1000.0;
	VEHICLE[createdvehicles[createdvehs]][ vLock ] = 0;
	VEHICLE[createdvehicles[createdvehs]-1][v_X] = X;
    VEHICLE[createdvehicles[createdvehs]-1][v_X] = Y;
    VEHICLE[createdvehicles[createdvehs]-1][v_Z] = Z;
	LinkVehicleToInterior(createdvehicles[createdvehs], intt);
	format(string, sizeof(string), "Adminstrator %s[%d] created a car '%s' (id %d)(color %d, %d)", PlayerInfo[playerid][pNames], playerid, VehicleNameS[params[0] - 400], params[0], params[1], params[2]);
	SendAdminMessage(COLOR_GREY, string);
	format(stringer1, sizeof(stringer1), "Vehicle ID: %d created, to delete /delveh", params[0]);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
	return true;
}
CMD:acar(playerid, params[])
{
	if(!is_cmd_allow(playerid, CMD_acar)) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(IsAGreenZone(playerid)) return SendClientMessage(playerid, -1, "It is prohibited to create a car in the green zone!");
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /acar [color 1] [color 2]");
	new intt = GetPlayerInterior(playerid);
	if(params[0] < 0 || params[0] > 254) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /acar [color 1] [color 2] [1/0]");
	if(params[1] < 0 || params[1] > 254) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /acar [color 1] [color 2] [1/0]");

	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	createdvehs ++ ;
	createdvehicles[createdvehs] = CreateVehicleEx(411, X,Y,Z, 0.0, params[0], params[1], 60000, 0);
	vehcreat[createdvehicles[createdvehs]] = 1;
	//
	Objects[createdvehs][0] = CreateDynamicObjectEx(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	AttachDynamicObjectToVehicle(Objects[createdvehs][0], createdvehicles[createdvehs], -0.650, 2.740, -0.470, -0.299, -0.400, -166.900);
	Objects[createdvehs][1] = CreateDynamicObjectEx(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	AttachDynamicObjectToVehicle(Objects[createdvehs][1], createdvehicles[createdvehs], 0.660, 2.723, -0.460, 0.000, 0.000, 167.499);
	Objects[createdvehs][2] = CreateDynamicObjectEx(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	AttachDynamicObjectToVehicle(Objects[createdvehs][2], createdvehicles[createdvehs], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
	Objects[createdvehs][3] = CreateDynamicObjectEx(19620,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	AttachDynamicObjectToVehicle(Objects[createdvehs][3], createdvehicles[createdvehs], -0.003, 0.114, 0.609, 0.000, -0.000, 178.600);
	Objects[createdvehs][4] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][4], 0, PlayerInfo[playerid][pNames], 90, "Ariel", 30, 1, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][4], createdvehicles[createdvehs], -1.101, -0.000, -0.110, 0.000, 0.000, -178.399);
	Objects[createdvehs][5] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][5], 0, "MIGHTY", 80, "Ariel", 40, 0, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][5], createdvehicles[createdvehs], -0.001, 1.921, 0.171, 0.399, -78.600, 91.500);
	Objects[createdvehs][6] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][6], 0, "MIGHTY", 80, "Ariel", 40, 0, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][6], createdvehicles[createdvehs], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
	Objects[createdvehs][7] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][7], 0, "MIGHTY", 80, "Ariel", 40, 0, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][7], createdvehicles[createdvehs], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
	Objects[createdvehs][8] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][8], 0, "MIGHTY", 80, "Ariel", 40, 0, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][8], createdvehicles[createdvehs], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
	Objects[createdvehs][9] = CreateDynamicObjectEx(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,300.0,300.0);
	SetDynamicObjectMaterialText(Objects[createdvehs][9], 0, "MIGHTY", 80, "Ariel", 40, 0, -1, 0, 1);
	AttachDynamicObjectToVehicle(Objects[createdvehs][9], createdvehicles[createdvehs], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
	//
	SetPVarInt(playerid, "Acar", 1);
	PutPlayerInVeh(playerid, createdvehicles[createdvehs], 0);
	SetPVarInt(playerid, "IdCar", createdvehs);
	SetPVarInt(playerid, "IdVeh", GetPlayerVehicleID(playerid));
	SetVehicleParamsEx(createdvehicles[createdvehs] ,VEHICLE_PARAMS_ON,false,alarm,doorss,bonnet,boot,objective);
	zavodis[playerid] = 1;
	Fuell[createdvehicles[createdvehs]] = 100;
	VEHICLE[createdvehicles[createdvehs]][ vHealth ] = 1000.0;
	VEHICLE[createdvehicles[createdvehs]][ vLock ] = 0;
	VEHICLE[createdvehicles[createdvehs]-1][v_X] = X;
 	VEHICLE[createdvehicles[createdvehs]-1][v_X] = Y;
 	VEHICLE[createdvehicles[createdvehs]-1][v_Z] = Z;
	LinkVehicleToInterior(createdvehicles[createdvehs], intt);
	format(stringer1, sizeof(stringer1), "VIP %s[%d] created MIGHTY Infernus Only OOC Usage Only! (color %d, %d)", PlayerInfo[playerid][pNames], playerid, params[0], params[1]);
	SendAdminMessage(COLOR_GREY, stringer1);
	SendClientMessage(playerid, 0x6ab1ffaa, "Vehicle ID: 411 created for removal Just Left From Car");
	return true;
}
CMD:reports(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 1 && PlayerInfo[playerid][pHelper] < 1) return 1;
    new str[200];
    stringer = "";
    new null = 0;
    foreach(new i: Player)
    {
        if(GetPVarInt(i,"RepUn") > 0)
        {
            null++;
            format(str,sizeof(str),"{a38b52}%i. %s[%d] | {33CCFF}Report: %s\n",null,PlayerInfo[i][pNames],i,RepInfo[i][Reptext]);
            strcat(stringer,str);
        }
    }
    if(null == 0) return SendClientMessage(playerid, 0xAA3333AA,"ERROR: The list of reports is empty...");
    return ShowPlayerDialog(playerid, 228, DIALOG_STYLE_TABLIST, "Report",stringer, "Close", "");
}
CMD:defines(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 1 && PlayerInfo[playerid][pHelper] < 1) return 1;
    new str[200];
    stringer = "";
    new null = 0;
    foreach(new i: Player)
    {
        if(GetPVarInt(i,"RepUn") > 0)
        {
            null++;
            format(str,sizeof(str),"{a38b52}%i. %s[%d] | {33CCFF}Report: %s\n",null,PlayerInfo[i][pNames],i,RepInfo[i][Reptext]);
            strcat(stringer,str);
        }
    }
    if(null == 0) return SendClientMessage(playerid, 0xAA3333AA,"ERROR: The list of reports is empty...");
    return ShowPlayerDialog(playerid, 228, DIALOG_STYLE_TABLIST, "Report",stringer, "Close", "");
}
CMD:delveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(vehcreat[GetPlayerVehicleID(playerid)] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "This car cannot be removed.");
	if(GetPVarInt(playerid, "Acar")) {
		for(new i = 0; i < 11; i++)
		{
			DestroyDynamicObject(Objects[GetPVarInt(playerid, "IdCar")][i]);
		}
		DeletePVar(playerid, "Acar"), DeletePVar(playerid, "IdCar");
	}
	RemoveFromVehicle(playerid);
	DestroyVehicleEx(GetPlayerVehicleID(playerid));
	createdvehs --;
	return true;
}
CMD:dvall(playerid)
{
   	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	new total_car = 0, string[144];
    for(new i = 0; i < createdvehs + 1; i++)
	{
		if(createdvehicles[i] <= 0) continue;
		DestroyVehicle(createdvehicles[i]);
		createdvehicles[i] = 0;
		total_car ++;
	}
	createdvehs = 0;
	format(string, sizeof(string), "You have deleted %i cars created on the server!", total_car);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "%s(%d) deleted all created transport on the server. (%i pcs)",PlayerInfo[playerid][pNames], playerid, total_car);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}
CMD:duty(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 11) return SendClientMessage(playerid, COLOR_GRAD1, "You are not a member of a driving school!");
	if(!IsPlayerInRangeOfPoint(playerid,50.0,-781.4494,1546.2416,1139.2369)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in a driving school!");
	if(GetPVarInt(playerid,"DutyAsh") == 0) format(stringer1, sizeof(stringer1), "Instructor %s has started work",PlayerInfo[playerid][pNames]), SetPVarInt(playerid,"DutyAsh",1);
	else format(stringer1, sizeof(stringer1), "Instructor %s has completed a working day",PlayerInfo[playerid][pNames]), SetPVarInt(playerid,"DutyAsh",0);
	ProxDetector(playerid, 25.0, COLOR_PURPLE, stringer1);
	return true;
}
CMD:mutelist(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] == 1 && PlayerInfo[playerid][pHelper] < 6) return true;
	new countmute = 0;
	foreach(Player,i)
	{
 		if(PlayerInfo[i][pMuted] == 1 && IsPlayerConnected(i))
		{
			format(stringer1, sizeof(stringer1), "%s [ID: %d] | %d seconds", PlayerInfo[i][pNames], i,PlayerInfo[i][pMuteTime]);
			countmute++;
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringer1);
		}
    }
    if(countmute == 0) SendClientMessage(playerid, COLOR_GRAD1, "No players have a mute!");
    else
	{
		format(stringer1, sizeof(stringer1), "Total: %d human!", countmute);
		SendClientMessage(playerid, COLOR_ISPOLZUY, stringer1);
	}
	return true;
}
CMD:warnmans(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
	new countmute = 0;
	foreach(Player,i)
	{
 		if(PlayerInfo[i][pWarns] == 0) continue;
		format(stringer1,sizeof(stringer1),"{FFA500}%s[%i]. {FFFFFF}Warns: {FFA500}%i.{FFFFFF} Before withdrawal:{FFA500} %i hours",PlayerInfo[i][pNames],i, PlayerInfo[i][pWarns],10 - PlayerInfo[i][punWarnstime]);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, stringer1);
		countmute++;
    }
    if(countmute == 0) SendClientMessage(playerid, COLOR_GRAD1, "No players with warn!");
    else
	{
		format(stringer1, sizeof(stringer1), "Total: %d people!", countmute);
		SendClientMessage(playerid, COLOR_ISPOLZUY, stringer1);
	}
	return true;
}
CMD:jaillist(playerid, params[])
{
	if(!PlayerInfo[playerid][pAlcoInvenxua]) return true;
	new countmute;
	foreach(Player,i) {
 		if(!PlayerInfo[i][pJailed]) continue;
		format(stringer1,sizeof(stringer1),"{FFA500}%s[%i]. {FFFFFF}Conclusion time: {FFA500}%i.",PlayerInfo[i][pNames], i, PlayerInfo[i][pJailTime]);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, stringer1);
		countmute++;
    }
    if(countmute == 0) SendClientMessage(playerid, COLOR_GRAD1, "No prisoners found!");
    else SendMes(playerid, COLOR_ISPOLZUY, "Total: %d human!",countmute);
	return true;
}
CMD:knocklist(playerid,params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] <= 1) return true;
	foreach(Player,i)
	{
		if(PlayerTied[playerid] > 0 && IsPlayerConnected(i))
		{
			format(stringer1, sizeof(stringer1), "%s [ID: %d]", PlayerInfo[i][pNames], i);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringer1);
		}
	}
	return true;
}
CMD:kiss(playerid,params[])
{
	params[0] = GetClosestPlayer(playerid);
	if(GetPlayerInterior(playerid) != 0) return true;
	if(PlayerInfo[playerid][pJailTime] > 0 || PlayerInfo[params[0]][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "This command cannot be used in prison.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "Unable to perform action!");
	if(PlayerInfo[params[0]][pSex] == PlayerInfo[playerid][pSex]) return SendClientMessage(playerid, COLOR_GREY, "You can't kiss him.");
	if(!ProxDetectorS(4.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "There's no one around!");
	FIXES_ApplyAnimation(params[0],"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
	FIXES_ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,1);
	return true;
}
CMD:blowjb(playerid, params[])
{
	if(!PlayerInfo[playerid][pMinet]) return SendClientMessage(playerid, -1, "This command is not available to you! Buy it at /donaterub");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /blowjb [id]");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return true;
	if(PlayerInfo[playerid][pJailed] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Cannot be used in prison!");
	if(!ProxDetectorS(4.0, playerid, params[0])) return true;
	if(GetPVarInt(playerid,"MinetTime") > gettime()) return SendClientMessage(playerid, -1, "Can be used once every 30 seconds.");
    SetPVarInt(playerid,"MinetTime",gettime()+30);
	FIXES_ApplyAnimation(params[0],"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,5,1);
	FIXES_ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,5,1);
	SendMes(playerid,COLOR_GREEN,"You gave a blowjob %s :)",PlayerInfo[params[0]][pNames]);
	SendMes(params[0],COLOR_INDIGO,"Gave you a blowjob %s :)",PlayerInfo[playerid][pNames]);
	return true;
}
CMD:raped(playerid, params[])
{
	if(!PlayerInfo[playerid][pIznas]) return SendClientMessage(playerid, -1, "This command is not available to you! Buy it at /donaterub");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /raped [ID]");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return true;
	if(PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Cannot be used in prison!");
	if(GetDistanceBetweenPlayers(playerid, params[0]) < 2)
	{
 		if(GetPVarInt(playerid,"IznasTime") > gettime()) return SendClientMessage(playerid, -1, "Can be used once every 30 seconds.");
   		SetPVarInt(playerid,"IznasTime",gettime()+30);
		SendMes(playerid,0xFF0000AA,"You raped a player %s",PlayerInfo[params[0]][pNames]);
		SendMes(params[0],0x00FF00AA,"You were raped %s",PlayerInfo[playerid][pNames]);
		FIXES_ApplyAnimation(params[0],"SNM","SPANKINGW",4.1,0,1,1,1,1);
		FIXES_ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1);
   	}
   	else SendClientMessage(playerid,COLOR_WHITE,"You're too far away!");
    return 1;
}
CMD:myskill(playerid,params[])
{
	format(stringer, sizeof(stringer), "{FFFFFF}SDPistol:{32CD32}.................{FFFFFF}%d percent.\nDesertEagle:{32CD32}..............{FFFFFF}%d percent.\nShotGun:{32CD32}..................{FFFFFF}%d percent.\nMP5:{32CD32}......................{FFFFFF}%d percent.\nAK47:{32CD32}.....................{FFFFFF}%d percent.\nM4:{32CD32}.......................{FFFFFF}%d percent.",
	PlayerInfo[playerid][pSDPistol],PlayerInfo[playerid][pDesertEagle],PlayerInfo[playerid][pShotGun],PlayerInfo[playerid][pMP5],PlayerInfo[playerid][pAK47],PlayerInfo[playerid][pM4]);
 	if(sscanf(params, "d",params[0]))
	{
		ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,"Skill",stringer,"Exit","");
		format(stringer1, 90, "%s reviews his weapon skills",PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 25.0, COLOR_PURPLE, stringer1);
		return true;
	}
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
	format(stringer1, 90, "Skills %s",PlayerInfo[playerid][pNames]);
	ShowPlayerDialog(params[0],000,DIALOG_STYLE_MSGBOX,stringer1,stringer,"Exit","");
	format(stringer1, 90, "%s shows off his weapon skills %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 25.0, COLOR_PURPLE, stringer1);
 	return true;
}
alias:animlist("anim");
CMD:animlist(playerid,params[])
{
    if(PlayerCuffed[playerid] != 0 || AntiSbiv[playerid] > gettime()) return true;
    new stringiser[1700];
 	if(sscanf(params, "d",params[0]))
	{
        new Animser[][] = {
	        {" [1] Dance - 1 \n [2] Dance - 2 \n [3] Dance - 3 \n [4] Dance - 4 \n [5] Dealer's counter \n [6] Passed something \n [7] Ate what -that \n [8] Relieve the need \n [9] Meditation \n [10] Sit injured \n [11] Sleep on your side \n [12] Lie on your back \n [13] Slap your hand \n [14] Graffiti 1 \n [15] Graffiti 2 \n [16] Smoking \n [17] Robbery \n [18] Wear a mask \n [19] Hands up \n [20] Call someone \n [21] Hands up \n [22] Cheerleader 1 \n [23] Cheerleader 2 \n [24] Cheerleader 3\n"},
	        {" [25] Show middle finger \n [26] Drink something \n [27] Wave your hands \n [28] Male smoking \n [29] Lie down 1 \n [30]. Lie down 2 \n [31] Lie down 3 \n [32] Lie down 4 \n [33] Sit down on the floor \n [34] Read rap 1 \n [35] Read rap 2 \n [36] Read rap 3 \n [37] Read rap 4 \n [38] Kick the ball \n [39] Throw the ball \n [40] Pick up the ball \n [41] Call \n [42] Repair the car \n [43] Lean against the car \n [44] Put your hands together\n"},
			{" [45] Hold Bat 1 \n [46] Hold Bat 2 \n [47] Gangster Gesture 1 \n [48] Gangster Gesture 2 \n [49] Gangster Gesture 3 \n [50] Gangster gesture 4 \n [51] Gangster gesture 5 \n [52] Gangster gesture 6 \n [53] Gangster gesture 7 \n [54] Gangster gesture 8 \n [55] Cry \n [56] Sit down 1 \n [57] Sit down 2 \n [58] Sit down on your elbows \n [59] Ladies smoking \n [60] Artificial respiration \n [61] Lean back \n [62] Lean back 2 \n [63] Facepalm \n [64] Scratch"}
	    };
	    stringiser = "";
		format(stringiser, sizeof(stringiser), "%s%s%s", Animser[0], Animser[1], Animser[2]);
		ShowPlayerDialog(playerid,1994,DIALOG_STYLE_LIST, "List of animations", stringiser, "Select", "Cancle");
		return true;
	}
	if(params[0] > 64 || params[0] < 0) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 0 or more than 64!");
	switch(params[0])
	{
 		case 0:
   		{
			new Animsser[][] = {
	        {" [1] Dance - 1 \n [2] Dance - 2 \n [3] Dance - 3 \n [4] Dance - 4 \n [5] Dealer's counter \n [6] Passed something \n [7] Ate what -that \n [8] Relieve the need \n [9] Meditation \n [10] Sit injured \n [11] Sleep on your side \n [12] Lie on your back \n [13] Slap your hand \n [14] Graffiti 1 \n [15] Graffiti 2 \n [16] Smoking \n [17] Robbery \n [18] Wear a mask \n [19] Hands up \n [20] Call someone \n [21] Hands up \n [22] Cheerleader 1 \n [23] Cheerleader 2 \n [24] Cheerleader 3\n"},
	        {" [25] Show middle finger \n [26] Drink something \n [27] Wave your hands \n [28] Male smoking \n [29] Lie down 1 \n [30]. Lie down 2 \n [31] Lie down 3 \n [32] Lie down 4 \n [33] Sit down on the floor \n [34] Read rap 1 \n [35] Read rap 2 \n [36] Read rap 3 \n [37] Read rap 4 \n [38] Kick the ball \n [39] Throw the ball \n [40] Pick up the ball \n [41] Call \n [42] Repair the car \n [43] Lean against the car \n [44] Put your hands together\n"},
			{" [45] Hold Bat 1 \n [46] Hold Bat 2 \n [47] Gangster Gesture 1 \n [48] Gangster Gesture 2 \n [49] Gangster Gesture 3 \n [50] Gangster gesture 4 \n [51] Gangster gesture 5 \n [52] Gangster gesture 6 \n [53] Gangster gesture 7 \n [54] Gangster gesture 8 \n [55] Cry \n [56] Sit down 1 \n [57] Sit down 2 \n [58] Sit down on your elbows \n [59] Ladies smoking \n [60] Artificial respiration \n [61] Lean back \n [62] Lean back 2 \n [63] Facepalm \n [64] Scratch"}
			};
			stringiser = "";
			format(stringiser, sizeof(stringiser), "%s%s%s", Animsser[0], Animsser[1], Animsser[2]);
			ShowPlayerDialog(playerid,1994,DIALOG_STYLE_LIST, "List of animations", stringiser, "Select", "Cancle");
			return 1;
   		}
     	case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
	    case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
	    case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
        case 4: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
	    case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
	    case 6: FIXES_ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
	    case 7: FIXES_ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
		case 8: FIXES_ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
		case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
		case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
		case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
		case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
		case 13: FIXES_ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
		case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
		case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
		case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
		case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
		case 18: FIXES_ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
		case 19: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
		case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
		case 21: FIXES_ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
		case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
		case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
		case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
		case 25: FIXES_ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
	    case 26: FIXES_ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
	    case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
	    case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
		case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
		case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
		case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
		case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
		case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
		case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
		case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
		case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
		case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
		case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
		case 39: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
		case 40: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
		case 41: FIXES_ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
		case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
		case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
		case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
		case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
	    case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
    	case 47: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
        case 48: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
	    case 49: FIXES_ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
		case 50: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
		case 51: FIXES_ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
		case 52: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
		case 53: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
		case 54: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
		case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
		case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
		case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
		case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
		case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
		case 60: FIXES_ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
		case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
		case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
		case 63: FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	}
    SetPVarInt(playerid,"Animation", 1);
 	return true;
}
CMD:lol(playerid,params[])
{
    FIXES_ApplyAnimation(playerid,"SEX","SEX_1to2_P",4.1,0,0,0,0,0,1);
 	return true;
}
alias:licenses("lic");
CMD:licenses(playerid,params[])
{
	new text1[20],text4[20],text5[20],text6[20],text7[20];
	if(PlayerInfo[playerid][pVodPrava]) { text1 = "Own"; } else { text1 = "Not Own"; }
	if(PlayerInfo[playerid][pFlyLic]) { text4 = "Own"; } else { text4 = "Not Own"; }
	if(PlayerInfo[playerid][pBoatLic]) { text5 = "Own"; } else { text5 = "Not Own"; }
	if(PlayerInfo[playerid][pFishLic]) { text6 = "Own"; } else { text6 = "Not Own"; }
	if(PlayerInfo[playerid][pGunLic]) { text7 = "Own"; } else { text7 = "Not Own"; }
 	if(sscanf(params, "d",params[0]))
	{
		SendClientMessage(playerid,0x0AA8DAFF,"-------======[ LICENSES ]======-------");
		SendMes(playerid, 0xC0E1EEFF, "Driver license: %s",text1);
		SendMes(playerid, 0xC0E1EEFF, "Air transport license: %s",text4);
		SendMes(playerid, 0xC0E1EEFF, "Water transport license: %s",text5);
		SendMes(playerid, 0xC0E1EEFF, "Fishing license: %s",text6);
		SendMes(playerid, 0xC0E1EEFF, "Weapon license: %s",text7);
		SendClientMessage(playerid,0x0AA8DAFF,"===============================");
		format(stringer1,sizeof(stringer1), "%s looks at his licenses",PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		return true;
	}
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid,COLOR_GREY,"Player is not near you");
	SendMes(params[0], 0xC0E1EEFF, "-------======[ LICENSES %s ]======-------",PlayerInfo[playerid][pNames]);
	SendMes(params[0], 0xC0E1EEFF, "Driver license: %s",text1);
	SendMes(params[0], 0xC0E1EEFF, "Air transport license: %s",text4);
	SendMes(params[0], 0xC0E1EEFF, "Water transport license: %s",text5);
	SendMes(params[0], 0xC0E1EEFF, "Fishing license: %s",text6);
	SendMes(params[0], 0xC0E1EEFF, "Weapon license: %s",text7);
	SendClientMessage(params[0],0x0AA8DAFF,"===============================");
	format(stringer1,sizeof(stringer1), "%s took out my licenses and showed them to %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	format(stringer1,sizeof(stringer1), "showed my licenses to %s",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
 	return true;
}
CMD:givecarlic(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return SendClientMessage(playerid, COLOR_WHITE, "This command is not avilable for you!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "Usage: /givecarlic [playerid]");
	PlayerInfo[params[0]][pVodPrava] = 1;
	format(stringer1,sizeof(stringer1), "Adminstrator %s gave you a car license!", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], -1, stringer1);
	new string[128];
	format(string,sizeof(string), "Adminstrator %s was gave the player %s a car license", PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY, string);
	return true;
}
CMD:carpass(playerid, params[])
{
    if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_GRAD2, "You don't have a car!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "You are not in the car!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid, COLOR_GRAD2, "There are no documents in the glove compartment of this vehicle.");
	new house = PlayerInfo[playerid][pPhousekey];
	if(sscanf(params, "d",params[0]))
	{
		SendClientMessage(playerid,0x0AA8DAFF,"-------========[ Those. Passport ]========-------");
		SendMes(playerid,0xC0E1EEFF, "Model: %s",VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
		SendMes(playerid,0xC0E1EEFF, "Owner: %s",HouseInfo[house][hOwner]);
		SendMes(playerid,0xC0E1EEFF, "State: %d",PlayerInfo[playerid][pProz]);
		SendClientMessage(playerid,0x0AA8DAFF,"-------========[ Those. Passport ]========-------");
		format(stringer1,sizeof(stringer1), "took the documents out of the glove compartment",PlayerInfo[playerid][pNames]);
		SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
		return true;
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,-1,"Player is offline");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	SendClientMessage(params[0],0x0AA8DAFF,"-------========[ Those. Passport ]========-------");
	SendMes(params[0],0xC0E1EEFF, "Model: %s",VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SendMes(params[0],0xC0E1EEFF, "Owner: %s",HouseInfo[house][hOwner]);
	SendMes(params[0],0xC0E1EEFF, "State: %d",PlayerInfo[playerid][pProz]);
	SendClientMessage(params[0],0x0AA8DAFF,"-------========[ Those. Passport ]========-------");
	format(stringer1, sizeof(stringer1), "%s took out the documents and showed them %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return true;
}
CMD:business(playerid)
{
	if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY,"You don't own a business!");
	new biz = GetPVarInt(playerid, "PlayerBizz"), string[600], mafiatext[20];
    if(BizzInfo[biz][bMafia] == 6) { mafiatext = "Yakuza"; }
    else if(BizzInfo[biz][bMafia] == 14) { mafiatext = "Russian Mafia"; }
    else if(BizzInfo[biz][bMafia] == 5) { mafiatext = "La Cosa Nostra"; }
    else if(BizzInfo[biz][bMafia] == 0) { mafiatext = "No"; }
	if(BizzInfo[biz][bType] == 2)
	{
		format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t{dbba25}Gas station\n{FFFFFF}Business number:\t\t\t%d\nOwner:\t\t\t\t%s\n\nEnterprise balance:\t\t\t%d$\nThe business is leased for: \t\t\t%d days\nPrice:\t\t\t\t%d$\nControl:\t\t\t\t%s\nEntrance fee:\t\t\t\t%d\nStatus:\t\t\t\t\t%s\n\n{35d408}To open your business dashboard\n{35d408}click 'Change'",
		biz, BizzInfo[biz][bOwner], BizzInfo[biz][bMoney], floatround((BizzInfo[biz][bMoney]/100)/24), BizzInfo[biz][bPrice], mafiatext, BizzInfo[biz][bEnter], (!BizzInfo[biz][bLock])?("{239304}������") : ("{df3f12}������"));
	}
	else
	{
	 	format(string, sizeof(string), "{FFFFFF}Name:\t\t\t\t{dbba25}%s\n{FFFFFF}Business number:\t\t\t%d\nOwner:\t\t\t\t%s\n\nEnterprise balance:\t\t\t%d$\nThe business is leased for: \t\t\t%d days\nPrice:\t\t\t\t%d$\nControl:\t\t\t\t%s\nEntrance fee:\t\t\t\t%d\nStatus:\t\t\t\t\t%s\n\n{35d408}To open your business dashboard\n{35d408}click 'Change'",
		BizzInfo[biz][bName], biz, BizzInfo[biz][bOwner], BizzInfo[biz][bMoney], floatround((BizzInfo[biz][bMoney]/100)/24), BizzInfo[biz][bPrice], mafiatext, BizzInfo[biz][bEnter], (!BizzInfo[biz][bLock])?("{239304}Open") : ("{df3f12}Closed"));
	}
	ShowPlayerDialog(playerid, 9199, DIALOG_STYLE_MSGBOX, "{dba002}Business Information", string, "Next", "Close");
	return true;
}
CMD:buylead(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You are admin!");
//	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Buying Leader", "{FF0000}Sorry Brother{A8C4E4}, This command/future was deleted by the server scripter!!\n\n{FFFF00}Asia {32db23}Paradise", "Close", "");
	mysql_function_query(connects, "SELECT * FROM `accounts` WHERE `pLeader` > 0  ORDER BY `pLeader`", true, "BuyLead", "d", playerid);
	return true;
}
CMD:buybiz(playerid, params[])
{
	if(GetPlayerBizz(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY,"You already own a business!");
//	if(PlayerInfo[playerid][pAlcoInvenxua] > 0) return SendClientMessage(playerid, COLOR_GREY, "Adminstrator can't have a business!");
	new full = 0, full_ = 0, str[128];
 	for(new idx = 1; idx <= TOTALBIZZ; idx++)
    {
  		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
		    full++;
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
     		{
     		    full_++;
				if(PlayerInfo[playerid][pBank] < BizzInfo[idx][bPrice]) return SendClientMessage(playerid, COLOR_GREY,"You don't have enough funds in your bank account!");
				else
				{
				    SetPVarInt(playerid,"PlayerBizz",idx);
				    ClearString();
					format(str,128,"{FFFFFF}Name:\t\t{FFD700}%s\n",BizzInfo[idx][bName]);
					strcat(stringer,str);
					format(str,128,"{FFFFFF}Price:\t\t{3399FF}%s$\n\n",formatInt(BizzInfo[idx][bPrice]));
					strcat(stringer,str);
					strcat(stringer,"{00cb00}Are you sure you want to buy this business?");
					ShowPlayerDialog(playerid, 9152, 0, "{63CB00}Buying a new business ", stringer, "Yes", "No");
					break;
				}
		    }
		}
    }
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY,"You must be close to business!");
	else if(full_ == 0) return SendClientMessage(playerid, COLOR_GREY,"The business already has an owner!");
	return true;
}
CMD:leave(playerid, params[])
{
//    if(PlayerInfo[playerid][pDonateRank] != 3) return SendClientMessage(playerid, -1, "You don't have Gold VIP in your account!");
	if(PlayerInfo[playerid][pCash] < 100000) return SendClientMessage(playerid, 0x6495EDFF, "You don't have $100.000");
	if(PlayerInfo[playerid][pMember]== 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not in a Organization!");
	if(PlayerInfo[playerid][pLeader] > 0) return SendClientMessage(playerid, COLOR_BLUE, "You are a leader, you can't leave!");
	ShowPlayerDialog(playerid,1119, DIALOG_STYLE_MSGBOX, "Leave The Organization","Do you really want to leave this organization for $ 100.000?", "Yes", "No");
    return true;
}
CMD:amusic(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(Music2 == true) {
	    MusicU[0] = 0.0; MusicU[1] = 0.0; MusicU[2] = 0.0; MusicU[3] = 0.0; UMusic[0] = 0; Music2 = false;
	    foreach(Player,i) {
	        if(GetPVarInt(i,"Music"))
	        {
	            DeletePVar(i,"Music");
				StopAudioStreamForPlayer(i);
            }
		}
	    return SendClientMessage(playerid, COLOR_WHITE, "The music was turned off.");
	}
    new Float:X, Float:Y, Float:Z, result[101];
    if(sscanf(params, "ds[128]",params[0],result)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /amusic [radius] [link]");
    new Float:Distance = params[0];
    GetPlayerPos(playerid, X, Y, Z);
    MusicU[0] = Distance; MusicU[1] = X; MusicU[2] = Y; MusicU[3] = Z; UMusic = result; Music2 = true;
    foreach(Player,i) {
        if(!IsPlayerInRangeOfPoint(i, MusicU[0], MusicU[1], MusicU[2], MusicU[3])) continue;
		if(!GetPVarInt(i,"Music"))
		{
		    SetPVarInt(i,"Music",1);
			PlayAudioStreamForPlayer(i, UMusic, MusicU[1], MusicU[2], MusicU[3], MusicU[0], true);
		}
	}
    return true;
}
CMD:fuelcars(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
    foreach(new x : valid_vehicles) Fuell[x] = 100;
    format(stringer1,sizeof(stringer1),"Adminstrator %s fueled all the transport!",PlayerInfo[playerid][pNames]);
    SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
    return true;
}
CMD:spawncars(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
	if(GetPVarInt(playerid, "SpawnCars") > gettime()) return SendClientMessage(playerid, -1, "Vehicles can be spawned once every 5 minutes!");
    foreach(new x : valid_vehicles) if(!IsVehicleOccupied(x)) SetVehicleToRespawn(x);
	SetPVarInt(playerid, "SpawnCars", gettime() + 300);
    format(stringer1,sizeof(stringer1),"Adminstrator %s spawned unoccupied transport!",PlayerInfo[playerid][pNames]);
    SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
    return true;
}
CMD:spveh(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return true;
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /spveh [radius]");
    new Float:pos = params[0],Float:car_x,Float:car_y,Float:car_z;
    foreach(new x : valid_vehicles) {
	    GetVehiclePos(x,car_x,car_y,car_z);
	    if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) SetVehicleToRespawn(x);
    }
    format(stringer1, sizeof(stringer1), "Adminstrator %s[%d] respawned cars within %d meters",PlayerInfo[playerid][pNames], playerid, params[0]);
    SendAdminMessage(COLOR_GREY,stringer1);
    return true;
}
CMD:vipkit(playerid)
{
    if(PlayerInfo[playerid][pDonateRank] != 3) return true;
    if(IsPlayerConnected(playerid)) ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "Objects", "{FFFFFF}Chicken hat\nLight on head\nFlasher on head\nBlack mask\nBandana #1\nBandana #2\nBandana #3\nBandana #4\nBandana #5\nDragon mask\nLaser on head\nAlmighty set \nParrot on the shoulder\nBright light\nLarge M4 in hand\nPenis\nParrot costume\nDelete all objects", "Select", "Close");
    return true;
}
CMD:object(playerid, params[])
{
    // Check if the player has fewer than 12 items in their inventory
    if(PlayerInfo[playerid][pAlcoInvenxua] < 12)
        return true;

    // Define a variable to store the target player ID
    new targetPlayerId;

    // Parse the parameters, expecting a single integer and store it in targetPlayerId
    if(sscanf(params, "d", targetPlayerId))
        return SendClientMessage(playerid, COLOR_WHITE, "Usage: /object [id]");

    // Check if the target player with the given ID is connected
    if(IsPlayerConnected(targetPlayerId))
    {
        // Show the dialog with the list of objects to the target player
        ShowPlayerDialog(
            targetPlayerId,
            8000,
            DIALOG_STYLE_LIST,
            "Objects",
            "{FFFFFF}Chicken hat\nLight on head\nFlasher on head\nBlack mask\nBandana #1\nBandana #2\nBandana #3\nBandana #4\nBandana #5\nDragon mask\nLaser on head\nAlmighty set\nParrot on the shoulder\nBright light\nLarge M4 in hand\nPenis\nParrot costume\nDelete all objects",
            "Select",
            "Close"
        );
    }

    // Return true to indicate the command was processed successfully
    return true;
}
CMD:obj(playerid,params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	ShowPlayerDialog(playerid,89, DIALOG_STYLE_LIST, "Editor","[1] Create object\n[2] Edit objects","Select","Cancle");
	return true;
}
CMD:tp(playerid)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] >= 1) { ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Choose a place to teleport", "{4169E1}[1] Admin Zone\n{FFCC00}[2] For events >>\n{FFCC00}[3] Organizations bases >>{FFFFFF}\n[4] Vinewood\n[5] Centre SF\n[6] LV Center\n[7] Movers work\n[8] Ghetto\n[9] Driving school\n[10] Forest\n[11] Bus station-2\n[12] City hall\n[13] Sign Near City Hall\n[14] Zone 51 checkpoint\n[15] Casino Four Dragons\n[16] Casino Caligulas\n[17] Ammo LS\n[18] Aircraft carrier parking\n[19] Army zone 51\n[20] Car park", "Select", "Cancle"); }
    return true;
}
alias:teleport("tp");
CMD:teleport(playerid)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] >= 1) { ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Choose a place to teleport", "{4169E1}[1] Admin Zone\n{FFCC00}[2] For events >>\n{FFCC00}[3] Organizations bases >>{FFFFFF}\n[4] Vinewood\n[5] Centre SF\n[6] LV Center\n[7] Movers work\n[8] Ghetto\n[9] Driving school\n[10] Forest\n[11] Bus station-2\n[12] City hall\n[13] Sign Near City Hall\n[14] Zone 51 checkpoint\n[15] Casino Four Dragons\n[16] Casino Caligulas\n[17] Ammo LS\n[18] Aircraft carrier parking\n[19] Army zone 51\n[20] Car park", "Select", "Cancle"); }
    return true;
}
alias:apanel("ap");
CMD:apanel(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 1) return true;
	format(stringer,sizeof(stringer),"{FFCC00}[1] {FFFFFF}� Admin Commands\n{FFCC00}[2] {FFFFFF}� Teleport menu\n{FFCC00}[3] {FFFFFF}� Home/Business Menu\n{FFCC00}[4] {FFFFFF}� Additionally\n{FFCC00}[5] {FFFFFF}� Founder's Menu");
	ShowPlayerDialog(playerid,1001,DIALOG_STYLE_LIST,"{FFCC00}Adminstrator: Admin panel",stringer,"Select","Cancle");
    return true;
}
CMD:announc(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] == 4)
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "You are not authorized to use this command.");
	}
	if(sscanf(params, "s[128]", params[0]))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /announce [text]");
	}
	foreach(Player, i)
	{
		TextDrawSetString(Kenji[7], params[0]);
		for(new f = 0; f < 8; f ++)
		{
			TextDrawShowForPlayer(i, Kenji[f]);
		}

		SetTimerEx("KenjiHIDE", 5, false, "i", i);
		PlayerPlaySound(i,1150,0.0,0.0,0.0);
	}
	return 1;
}
CMD:en(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid);
    if(GetPlayerVehicleID(playerid) == 0 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	GetVehicleParamsEx(carid,engine,light,alarm,doorss,bonnet,boot,objective);	format(stringer,sizeof(stringer),"Name\tAction\n[1] Engine \t\t[%s{FFFFFF}]\n[2] headlights \t\t[%s{FFFFFF}]\n[3] Doors \t\t[%s{FFFFFF}]\n[4] Hood \t\t[%s{FFFFFF}]\n[5] Trunk \t\t[%s{FFFFFF}]\n[6] Fill up\n[6] Information",engine ? ("{32CD32}Switched on") : ("{FF0000}Switched off"),light ? ("{32CD32}Off") : ("{FF0000}On"),VEHICLE[carid][vLock] ? ("{FF0000}Closed") : ("{32CD32}Open"),bonnet ? ("{32CD32}Open") : ("{FF0000}Closed"),boot ? ("{32CD32}Open") : ("{FF0000}Closed"));
	ShowPlayerDialog(playerid, 8023, DIALOG_STYLE_TABLIST_HEADERS, "Transmission control", stringer, "Select", "Close");
    return true;
}
CMD:uval(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
    if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /uval [playerid] [reason]");
    if(!IsPlayerConnected(params[0])) return true;
    if(PlayerInfo[params[0]][pMember] == 0) return true;
    if(IsPlayerStartCroupier(params[0]))
    {
        if(CroupierTable[params[0]] != -1)
	    {
	        switch(CroupierGame[params[0]])
	        {
	            case 1: OnPlayerExitDiceTable(params[0], CroupierTable[params[0]]);
	            case 2: OnPlayerExitRouleTable(params[0], CroupierTable[params[0]]);
	            case 3: OnPlayerExitBlackJackTable(params[0], CroupierTable[params[0]]);
	        }
	    }
	    StartDuty[params[0]] = 0;
	}
	format(stringer1, sizeof(stringer1), "kicked %s from organization, with reason: %s",GetPlayerFracName[PlayerInfo[params[0]][pMember]],params[1]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
    SendMes(params[0], 0xff0000ff, "The administrator %s has kicked you from the organization. Reason: %s", PlayerInfo[playerid][pNames], params[1]);
    SendMes(playerid, 0x6ab1ffaa, "You kicked %s from the organization.", PlayerInfo[params[0]][pNames]);
    SendClientMessage(params[0], COLOR_WHITE, "Now you are an ordinary citizen...");
    SetPlayerArmour(params[0],0);
	ResetWeapons(params[0]);
	if(IsAGang(params[0])) {
		if(GangInfo[PlayerInfo[params[0]][pMember]][capture] > 0) {
			PlayerTextDrawHide(params[0], CaptureTD[params[0]][0]);
			PlayerTextDrawHide(params[0], CaptureTD[params[0]][1]);
			PlayerTextDrawHide(params[0], CaptureTD[params[0]][2]);
			PlayerTextDrawHide(params[0], CaptureTD[params[0]][3]);
			PlayerTextDrawHide(params[0], CaptureTD[params[0]][4]);
			if(!PlayerInfo[params[0]][pAlcoInvenxua]) ClearKillFeed(params[0]);
		}
	}
    PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	SetPlayerColor(params[0], 0xe6e6e6FF);
	SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s[%d] kicked %s[%d] from organization. Reason: %s", PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames], params[0], params[1]);
	SendClientMessageToAll(COLOR_GREY,stringer1);
	PlayerInfo[params[0]][pOdet] = 0;
	if(!PlayerInfo[params[0]][pAlcoInvenxua]) PlayerInfo[params[0]][pVigs] = 0;
	format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `odet` = '0', `vigs` = '%d' WHERE `pID` = '%d'",PlayerInfo[params[0]][pVigs],PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, stringer, false, "", "");
	return true;
}
CMD:trailer(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "This command is not available to you!");
	new car = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(car) != 525 || GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "You need to be in a tow truck!");
    new Float:pX,Float:pY,Float:pZ;
	new Float:vX,Float:vY,Float:vZ, veh;
	GetPlayerPos(playerid,pX,pY,pZ);
	foreach(new vid : valid_vehicles) {
		GetVehiclePos(vid,vX,vY,vZ);
		if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid != car)) {
            veh ++;
			if(IsTrailerAttachedToVehicle(car)) DetachTrailerFromVehicle(car);
			else AttachTrailerToVehicle(vid, car);
			break;
		}
	}
	if(!veh) SendClientMessage(playerid,0xFFFF00AA,"There is no car nearby");
    return true;
}
CMD:prefix(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "ds[32]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /prefix [ID] [Prefix]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Person not found!");
	if(PlayerInfo[params[0]][pAlcoInvenxua] < 1 && dostup[playerid] < 1) return SendClientMessage(playerid, COLOR_WHITE, "The player is not an Adminstrator or is not logged in!");
	new string[144], query[144];
	sscanf(params[1], "s[32]", PlayerInfo[params[0]][pPrefix]);
	format(query, sizeof(query), "UPDATE `accounts` SET `pPrefix` = '%s' WHERE `pID` = '%d'", PlayerInfo[params[0]][pPrefix], PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, query, false, "", "");
	format(string, sizeof(string), "Adminstrator %s prefixed '%s' to Adminstrator: %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pPrefix], PlayerInfo[params[0]][pNames]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
    return true;
}
CMD:ghetto(playerid)
{
//	if(!is_cmd_allow(playerid, CMD_ghetto) && PlayerInfo[playerid][pFull] < 1) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
    if(!is_cmd_allow(playerid, CMD_ghetto) && PlayerInfo[playerid][pAlcoInvenxua] < 13) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	ShowDialogGhetto(playerid);
	return true;
}
CMD:untrailer(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "This command is not available to you!");
    new vehplid = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(vehplid) != 525 || GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "You need to be in a tow truck!");
    DetachTrailerFromVehicle(vehplid);
    SendClientMessage(playerid, 0x6ab1ffaa, "You unhitched the car");
    return true;
}
alias:bizwar("mafiawar");
CMD:bizwar(playerid,params[])
{
	if(!ISAMAFIA(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "The command can only be used from rank 6");
	new h; gettime(h);
	if(h < 1 || h > 23 ) return SendClientMessage(playerid, COLOR_GREY, "The command can only be used from 1:00 to 0:00");
	if(BizzWars != false || BizzWarTimeAll > 0)
	{
		format(stringer1, sizeof(stringer1), "The war for business can start in %d seconds.", BizzWarTimeAll);
		SendClientMessage(playerid, COLOR_GREY, stringer1);
		return true;
	}
	new numberzone;
	if(sscanf(params,"d",numberzone)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /bizwar [arrow id (0 - Airport | 1 - Quarry | 2 - Dam)]");
	if(numberzone < 0 || numberzone > 2) return true;
	for(new numberbizz = 1; numberbizz <= TOTALBIZZ; numberbizz++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[numberbizz][bEntrx], BizzInfo[numberbizz][bEntry], BizzInfo[numberbizz][bEntrz])) continue;
	    if(BizzInfo[numberbizz][bMafia] == PlayerInfo[playerid][pMember] || strcmp(BizzInfo[numberbizz][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This business belongs to your mafia / The business has no owner!");
	    if(BizzInfo[numberbizz][bMafia] == 0) return BizzInfo[numberbizz][bMafia] = PlayerInfo[playerid][pMember], BizzWarTimeAll = 7200, SaveBizz(numberbizz), SendClientMessage(playerid, COLOR_WHITE, "This business had no roof. This business goes into the hands of your mafia.");
	    BizzWarsNumberZone = numberzone;
	    if(BizzWarsNumberZone == 0) GangZoneBizzWar[0] = GangZoneCreate(gBizzWarZone[0][0],gBizzWarZone[0][1],gBizzWarZone[0][2],gBizzWarZone[0][3]);
	    else if(BizzWarsNumberZone == 1) GangZoneBizzWar[1] = GangZoneCreate(gBizzWarZone[1][0],gBizzWarZone[1][1],gBizzWarZone[1][2],gBizzWarZone[1][3]);
	    else GangZoneBizzWar[2] = GangZoneCreate(gBizzWarZone[2][0],gBizzWarZone[2][1],gBizzWarZone[2][2],gBizzWarZone[2][3]);
	    GangZoneShowForAll(GangZoneBizzWar[numberzone], GetGangColor(PlayerInfo[playerid][pMember]));
	    GangZoneFlashForAll(GangZoneBizzWar[numberzone],GetGangColor(BizzInfo[numberbizz][bMafia]));
		format(stringer1, sizeof(stringer1), "[Attention]: %s shot your mafia's arrow for %s business. Meeting point: # %d.",GetPlayerFracName[PlayerInfo[playerid][pMember]],BizzInfo[numberbizz][bName],numberzone);
		SendFamilyMessage(BizzInfo[numberbizz][bMafia], COLOR_LIGHTRED,stringer1);
		format(stringer1, sizeof(stringer1), "[Attention]: %s scored an arrow from %s for %s business. Meeting point: # %d.",PlayerInfo[playerid][pNames], GetPlayerFracName[BizzInfo[numberbizz][bMafia]],BizzInfo[numberbizz][bName],numberzone);
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00A86BFF, stringer1);
		SendClientMessage(playerid, COLOR_WHITE, "You scored an arrow. The war will go on until time runs out!");
		SendClientMessage(playerid, COLOR_WHITE, "To win the war, your mafia must knock the enemy mafia out of the square!");
		BizzWar[numberbizz][bwNapad] = PlayerInfo[playerid][pMember];
		BizzWar[numberbizz][bwGuard] = BizzInfo[numberbizz][bMafia];
		BizzWarsNumber = BizzInfo[numberbizz][bID];
		BizzWarTimeAll = 2500;
		BizzWarTime = 600;
		BizzWars = true;
		GangInfo[PlayerInfo[playerid][pMember]][capture] = 1;
		GangInfo[BizzInfo[numberbizz][bMafia]][capture] = 1;
		GangInfo[BizzInfo[numberbizz][bMafia]][captureid] = PlayerInfo[playerid][pMember];
		GangInfo[PlayerInfo[playerid][pMember]][captureid] = PlayerInfo[playerid][pMember];
		GangInfo[PlayerInfo[playerid][pMember]][gangnumber] = 1;
		GangInfo[BizzInfo[numberbizz][bMafia]][gangnumber] = 0;
		format(stringer1,sizeof(stringer1),"%s: %d, KILLS: %d~n~%s: %d, KILLS: %d~n~~n~TIME: %s",GetPlayerFracName[BizzWar[numberbizz][bwNapad]], BizzWar[numberbizz][bwCostNapad],GangInfo[BizzWar[numberbizz][bwNapad]][score],GetPlayerFracName[BizzWar[numberbizz][bwGuard]], BizzWar[numberbizz][bwCostGuard],GangInfo[BizzWar[numberbizz][bwGuard]][score],Convert(BizzWarTime));
		foreach (new i : Player)
		{
		    if(gPlayerLogged[i] == 0) continue;
			if(BizzWar[numberbizz][bwNapad] != PlayerInfo[i][pMember] && BizzWar[numberbizz][bwGuard] != PlayerInfo[i][pMember]) continue;
		   	TextDrawSetString(TextBizzWar, stringer1);
			TextDrawShowForPlayer(i, TextBizzWar);
		}
	}
	return true;
}
alias:bizlist("bizl");
CMD:bizlist(playerid, params[])
{
    if(!ISAMAFIA(playerid)) return true;
    new null;
    stringer[0] = 0;
	for(new b = 1; b <= TOTALBIZZ; b++)
	{
		if(BizzInfo[b][bMafia] == PlayerInfo[playerid][pMember])
		{
            null++;
 			format(stringer, sizeof(stringer), "%s%i. %s\n",stringer, null, BizzInfo[b][bName]);
		}
	}
	if(null > 0) ShowPlayerDialog(playerid,000, 2, "Businesses under control", stringer, "Accept", "Cancle");
	else SendClientMessage(playerid,-1,"No businesses");
	return true;
}
CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not a policeman!");
	if(sscanf(params, "dds[128]",params[0],params[1],params[2])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /ticket [id] [price] [reason]");
	if(params[1] < 1 || params[1] > 50000) { SendClientMessage(playerid, COLOR_GREY, "The penalty must not exceed 50000 and must not be less than 0 Money!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PlayerInfo[params[0]][pCash] < params[1]) return SendClientMessage(playerid, COLOR_GRAD1, "It doesn't have that much money!");
	if(params[0] == playerid) { SendClientMessage(playerid, COLOR_GREY, "[ERROR] You have entered your ID"); return true; }
	format(stringer1, sizeof(stringer1), "You have issued a fine in the amount of %i Money %s. Reason: %s",params[1],PlayerInfo[params[0]][pNames],params[2]);
	SendClientMessage(playerid, COLOR_BLUE, stringer1);
	format(stringer1, sizeof(stringer1), "Officer %s wrote you a fine of %i Money. Reason: %s",PlayerInfo[playerid][pNames],params[1],params[2]);
	SendClientMessage(params[0], COLOR_BLUE, stringer1);
	SendClientMessage(params[0], COLOR_WHITE, "(( Usage: /accept ticket, to pay the fine ))");
	TicketOffer[params[0]] = playerid;
	TicketMoney[params[0]] = params[1];
	return true;
}
CMD:gm(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /gm [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPVarInt(params[0], "AFK_Time") > 2) return SendClientMessage(playerid, COLOR_GREY, "This player is in AFK");
	GetPlayerHealth(params[0],GMHP[params[0]][0]);
	GetVehicleHealth(GetPlayerVehicleID(params[0]),VEHHP[params[0]][0]);
	GetPlayerArmour(params[0], GMARMOUR[params[0]][0]);
	SetPlayerHealthAC(params[0], 100.0);
	SetPlayerArmour(params[0], 0);
	setVehicleHealth(GetPlayerVehicleID(params[0]),10000.0);
	SetTimerEx("GETHP", 1000, false, "i", params[0]);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz+7, 5, 0.5);
	format(stringer1, sizeof(stringer1), "Adminstrator %s created The player %s on GM-Check",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
    SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:drugs(playerid, params[])
{
    if(PlayerCuffed[playerid] || PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You can't move ;(");
	if(sscanf(params, "dd", params[0], params[1])) return ShowMyDrugs(playerid);
	if(params[0] < 0 || params[0] > 6) return SendClientMessage(playerid, COLOR_GREY, "Drug ID cannot be less than 0 and greater than 6.");
	if(PlayerInfo[playerid][pNarcoLomka] < 3000) if(params[1] > 3 || params[1] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Not less than 1 gram and more than 3 grams!");
	if(PlayerInfo[playerid][pNarcoLomka] >= 3000 && PlayerInfo[playerid][pNarcoLomka] < 5000) if(params[1] > 5 || params[1] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Not less than 1 gram and more than 5 grams!");
	if(PlayerInfo[playerid][pNarcoLomka] >= 5000) if(params[1] > 8 || params[1] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Not less than 1 gram and more than 8 grams!");
	return OnPlayerUseDrug(playerid, params[0], params[1]);
}
CMD:givedrug(playerid, params[]) {
    if(PlayerCuffed[playerid] || PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You can't move ;(");
	if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givedrug [playerid] [id drugs] [number]");
	TransferDrugsPlayer(playerid, params[0], params[1]-1, params[2]);
	return true;
}
CMD:ddrug(playerid, params[]) {
    if(PlayerCuffed[playerid] || PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You can't move ;(");
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ddrug [id drugs] [number]");
	DropDrugPlayer(playerid, params[1], params[2]);
	return true;
}
CMD:pdrug(playerid, params[]) {
    if(PlayerCuffed[playerid] || PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You can't move ;(");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_WHITE, "* Can't pick up drugs while in the car!");
	new ids = -1;
	for(new i = 0; i < MAX_DROPPED_ITEMS; i++) {
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, DItems[i][dr_x], DItems[i][dr_y], DItems[i][dr_z]) || DItems[i][dr_int] != GetPlayerInterior(playerid) || DItems[i][dr_vw] != GetPlayerVirtualWorld(playerid) || DItems[i][dr_id] == 0) continue;
		ids = i;
		break;
	}
	if(ids == -1) return SendClientMessage(playerid, COLOR_WHITE, "* There are no drugs near you to pick up!");
	if(DItems[ids][dr_type] != 2) return SendClientMessage(playerid, COLOR_WHITE, "* There are no drugs near you to pick up!");
	DestroyDynamicObject(DItems[ids][dr_object]);
	SendMes(playerid, -1, "* You picked up %s drugs with %d grams from the ground.", Drugs[DItems[ids][dr_item_id]+1][d_name], DItems[ids][dr_quantity]);
	PlayerInfo[playerid][p_drugs][DItems[ids][dr_item_id]] += DItems[ids][dr_quantity];
	format(mysql_query_, sizeof(mysql_query_), "DELETE FROM `dropped_items` WHERE `id` = '%d'", DItems[ids][dr_id]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	DItems[ids][dr_id] = 0;
	return true;
}
CMD:plant(playerid)
{
	if(PlayerCuffed[playerid] || PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You can't move ;(");
	return ShowPlayerDialog(playerid, 594, DIALOG_STYLE_LIST, "Actions with seeds", "[1] Plant\n[2] Dig\n[3] Destroy", "Select", "Go out");
}
CMD:dgun(playerid) {
 	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_WHITE, "* You cannot throw away weapons while in the car!");
 	new gun = GetPlayerWeapon(playerid);
	if(PlayerInfo[playerid][Weapon][Slot(gun)] == 0 || PlayerInfo[playerid][Ammo][Slot(gun)] == 0) return SendClientMessage(playerid, COLOR_WHITE, "* This weapon cannot be thrown away!");
	new ids = -1;
	for(new i; i < MAX_DROPPED_ITEMS; i++) {
		if(DItems[i][dr_id] == 0) {
			ids = i;
			break;
		}
	}
	if(ids == -1) return SendClientMessage(playerid, COLOR_WHITE, "* Failed to drop weapon, please try again later! ");
	SendMes(playerid, -1, "* Throwed %s weapon with %d ammo on the ground.", WeaponNames[gun], PlayerInfo[playerid][Ammo][Slot(gun)]);
	DItems[ids][dr_type] 		= 1;
	DItems[ids][dr_item_id] 		= PlayerInfo[playerid][Weapon][Slot(gun)];
	DItems[ids][dr_quantity] 	= PlayerInfo[playerid][Ammo][Slot(gun)];
	DItems[ids][dr_time] 		= gettime();
	DItems[ids][dr_by] 			= PlayerInfo[playerid][pID];
	DItems[ids][dr_obj] 			= GunObjects[gun][0];
	GetPlayerPos(playerid, DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z]);
	DItems[ids][dr_z]			= DItems[ids][dr_z]-1;
	DItems[ids][dr_rx] 			= 90.0;
	DItems[ids][dr_ry] 			= 120.0;
	GetPlayerFacingAngle(playerid, DItems[ids][dr_rz]);
	DItems[ids][dr_int] 			= GetPlayerInterior(playerid);
	DItems[ids][dr_vw] 			= GetPlayerVirtualWorld(playerid);
	DItems[ids][dr_object] = CreateDynamicObject(DItems[ids][dr_obj], DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z], DItems[ids][dr_rx], DItems[ids][dr_ry], DItems[ids][dr_rz], DItems[ids][dr_vw], DItems[ids][dr_int], -1);
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `dropped_items` (`storage_type`,`item_id`, `item_quantity`, `drop_time`, `dropped_by`, `obj`, `pos_x`, `pos_y`, `pos_z`, `pos_rx`, `pos_ry`, `pos_rz`, `pos_a`, `vw`, `int`) VALUES ('%d', '%d', '%d', '%d', '%d', '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d')",
	DItems[ids][dr_type], DItems[ids][dr_item_id], DItems[ids][dr_quantity], DItems[ids][dr_time], DItems[ids][dr_by], DItems[ids][dr_obj], DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z], DItems[ids][dr_rx], DItems[ids][dr_ry], DItems[ids][dr_rz], DItems[ids][dr_a], DItems[ids][dr_vw], DItems[ids][dr_int]);
	mysql_function_query(connects, mysql_query_, true, "GetDroppedItemId","i", ids);
	PlayerInfo[playerid][Weapon][Slot(gun)] = 0;
	PlayerInfo[playerid][Ammo][Slot(gun)] = 0;
    ResetPlayerWeapons(playerid);
    SetPlayerWeaponss(playerid);
	return true;
}
CMD:pgun(playerid) {
 	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_WHITE, "* You cannot pick up a weapon while in the car!");
	new ids = -1;
	for(new i = 0; i < MAX_DROPPED_ITEMS; i++) {
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, DItems[i][dr_x], DItems[i][dr_y], DItems[i][dr_z]) || DItems[i][dr_int] != GetPlayerInterior(playerid) || DItems[i][dr_vw] != GetPlayerVirtualWorld(playerid) || DItems[i][dr_id] == 0) continue;
		ids = i;
		break;
	}
	if(ids == -1) return SendClientMessage(playerid, COLOR_WHITE, "* There are no weapons near you that can be picked up!");
	if(DItems[ids][dr_type] != 1) return SendClientMessage(playerid, COLOR_WHITE, "* There are no weapons near you that can be picked up!");
	DestroyDynamicObject(DItems[ids][dr_object]);
	SendMes(playerid, -1, "* Raised %s weapon with %d bullets from the ground.", WeaponNames[DItems[ids][dr_item_id]], DItems[ids][dr_quantity]);
	GiveWeapon(playerid, DItems[ids][dr_item_id], DItems[ids][dr_quantity]);
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "DELETE FROM `dropped_items` WHERE `id` = '%d'", DItems[ids][dr_id]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	DItems[ids][dr_id] = 0;
	return true;
}
CMD:getstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 3) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getstats [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] != INVALID_PLAYER_ID) ShowStats(playerid,params[0]);
	else SendClientMessage(playerid, COLOR_GRAD1, "[ERROR] Person not found!");
	return true;
}
alias:recon("re");
CMD:recon(playerid,params[])
{
	if(!PlayerInfo[playerid][pAlcoInvenxua]) return 1;
    if(!strcmp(params[0],"off",true) && GetPlayerState(playerid) == 9) {
    	TogglePlayerSpectatingEx(playerid,0);
		GameTextForPlayer(playerid,"~w~RECON ~r~OFF",3000,4);
		return true;
	}
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /re(con) [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,COLOR_GRAD1, "ERROR: The player does not exist or is it you");
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid,-1,"The player is already being followed!");
	if(FD(params[0]) && !FD(playerid)) return SendClientMessage(playerid,-1,"It is forbidden to spy on this person!");
//	if(PlayerInfo[params[0]][pInv] > 0 && !FD(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Purchased from the player the 'stealth' function!");
	new playerState = GetPlayerState(params[0]);
	if(playerState == PLAYER_STATE_SPECTATING && gSpecID[params[0]] != INVALID_PLAYER_ID) return SendMes(playerid, COLOR_GRAD1, "Adminstrator monitors %s[%d]", PlayerInfo[gSpecID[params[0]]][pNames], gSpecID[params[0]]);
	if(playerState != 1 && playerState != 2 && playerState != 3) return SendClientMessage(playerid, COLOR_GRAD1, "Player has not entered the game");
	if(GetPlayerState(playerid) != 9)
	{
		GetPlayerPos(playerid, gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]);
		gPlayerInformation[playerid][0] = GetPlayerInterior(playerid);
		gPlayerInformation[playerid][1] = GetPlayerVirtualWorld(playerid);
	}
	gSpecID[playerid] = params[0];
	StartRecon(playerid, params[0]);
	UpdateRecon(playerid, params[0]);
	for(new x=0; x <= 1; x ++) PlayerTextDrawShow(playerid, PlayerText:ReconPlayerText[playerid][x]);
	ShowMenuForPlayer(ReconPanel, playerid);
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
	return SendClientMessage(playerid, COLOR_GREY, "To stop tracking a player, enter: '/re off'");
}
CMD:getip(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getip [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, 0xAA3333AA, "ERROR: there is no such player.");
	if(IsPlayerFake(params[0])) return 1;
	format(stringer1, sizeof(stringer1), "%s | IP: %s",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP]);
	SendClientMessage(playerid,COLOR_WHITE,stringer1);
	return true;
}
CMD:mafiabalance(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 6: return SendMes(playerid, 0x6ab1ffaa, "In the Yakuza Mafia Bank: %s Money", formatInt(MafiaBank[0][nYakuza]));
	case 14: return SendMes(playerid, 0x6ab1ffaa, "In the Russian mafia bank: %s Money", formatInt(MafiaBank[0][nRm]));
	case 5: return SendMes(playerid, 0x6ab1ffaa, "At the LCN mafia bank: %s Money", formatInt(MafiaBank[0][nLcn]));
	}
	return true;
}
CMD:mafiawithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /mafiawithdraw [quantity]");
	if(params[0] < 1) { SendClientMessage(playerid, COLOR_GREY, "Wrong amount of money!"); return true; }
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nYakuza] <= 0) { SendClientMessage(playerid, COLOR_GREY, "There's no money in the Yakuza mafia bank"); return true; }
		if(MafiaBank[0][nYakuza] < params[0]) { SendClientMessage(playerid, COLOR_GREY, "There's not that much money in the Yakuza mafia bank"); return true; }
		MafiaBank[0][nYakuza] -= params[0];
		GiveMoney(playerid, params[0]);
		format(stringer1, sizeof(stringer1), "You withdrew from the Yakuza mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 8)
	{
		if(MafiaBank[0][nRm] <= 0) { SendClientMessage(playerid, COLOR_GREY, "There is no money in the Russian mafia bank"); return true; }
		if(MafiaBank[0][nRm] < params[0]) { SendClientMessage(playerid, COLOR_GREY, "There is not that much money in the Russian mafia bank"); return true; }
		MafiaBank[0][nRm] -= params[0];
		GiveMoney(playerid, params[0]);
		format(stringer1, sizeof(stringer1), "You withdrew from the Russian mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nLcn] <= 0) { SendClientMessage(playerid, COLOR_GREY, "There is no money in the LCN mafia bank"); return true; }
		if(MafiaBank[0][nLcn] < params[0]) { SendClientMessage(playerid, COLOR_GREY, "There's not that much money in the LCN mafia bank"); return true; }
		MafiaBank[0][nLcn] -= params[0];
		GiveMoney(playerid, params[0]);
		format(stringer1, sizeof(stringer1), "You withdrew LCN from the mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	return true;
}
CMD:mafiabankput(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /mafiawithdraw [quantity]");
	if(params[0] < 1 || PlayerInfo[playerid][pCash] < params[0]) { SendClientMessage(playerid, COLOR_GREY, "Wrong amount of money!"); return true; }
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 10)
	{
		MafiaBank[0][nYakuza] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(stringer1, sizeof(stringer1), "You put it in the Yakuza mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 8)
	{
		MafiaBank[0][nRm] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(stringer1, sizeof(stringer1), "You deposited in the Russian mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 10)
	{
		MafiaBank[0][nLcn] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(stringer1, sizeof(stringer1), "You deposited LCN in the mafia bank: %s Money", formatInt(params[0]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	return true;
}
CMD:followme(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "{F70000}x {ADAEAD}You are not a policeman!");
	if(sscanf(params, "d",params[0])) return  SendClientMessage(playerid, COLOR_WHITE, "Usage: /followme [playerid]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, 0xAA3333AA, "ERROR: there is no such player, or is it you.");
    if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid,COLOR_GREY,"{F70000}x {ADAEAD}You or the player is in the car!");
    if(FollowBy[playerid] != INVALID_PLAYER_ID) return SendClientMessage(playerid, 0xAA3333AA, "You cannot take a player under escort when you are escorting yourself.!");
    if(PlayerInfo[params[0]][pJailed] > 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"{F70000}x {ADAEAD}The player in the prison!");
    if(PlayerCuffed[params[0]] <= 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"{F70000}x {ADAEAD}Player not in handcuffs!");
    new Float: X, Float: Y, Float: Z; GetPlayerPos(params[0], X, Y, Z);
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SendClientMessage(playerid, 0xAA3333AA, "The player is far from you!");
    if(FollowBy[params[0]] != INVALID_PLAYER_ID)
    {
        KillTimer(TimerForPlayer[params[0]]);
        SetPVarInt(playerid, "TempFollowBy", -1);
        FollowBy[params[0]] = INVALID_PLAYER_ID;
        TimerForPlayer[params[0]] = INVALID_PLAYER_ID;
        ClearAnimations(playerid);
        TogglePlayerControllable(params[0], 1);
        SendClientMessage(playerid, 0xa38b52AA, "You have successfully removed the convoy from the player!");
        return SendClientMessage(params[0], 0xFFFF00AA, "The convoy was removed from you!");
    }
    if(GetPVarInt(playerid, "TempFollowBy") != -1) return SendClientMessage(playerid, 0xAA3333AA, "You cannot accompany more than 2 players at the same time!");
    FollowBy[params[0]] = playerid;
    SetPVarInt(playerid, "TempFollowBy", params[0]);
    TimerForPlayer[params[0]] = SetTimerEx("FollowToPlayer", 1000, 1, "i", params[0]);
    SendClientMessage(playerid, 0xa38b52AA, "You have successfully started escorting this player.!");
    return SendClientMessage(params[0], 0xFFFF00AA, "You were taken under escort");
}
CMD:cput(playerid, params[])
{
	if(IsACop(playerid) || ISAMAFIA(playerid) || PlayerInfo[playerid][pMember] == 23)
	{
		new carr = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(carr!=441||carr!=446||carr!=448||carr!=449||carr!=452||carr!=450||carr!=453||carr!=454||carr!=460||carr!=461||carr!=462||carr!=463||carr!=464||carr!=465||carr!=468
			||carr!=472||carr!=473||carr!=481||carr!=484||carr!=493||carr!=501||carr!=509||carr!=510||carr!=521||carr!=522||carr!=523||carr!=539||carr!=564||carr!=568 ||carr!=569
			||carr!=570||carr!=571||carr!=584||carr!=586||carr!=595)
		{
		if(sscanf(params, "d",params[0])) return  SendClientMessage(playerid, COLOR_WHITE, "Usage: /cput [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if (!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "[ERROR] Man far from you");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "[ERROR] You can't drag yourself into the car. ");
		if(PlayerCuffed[params[0]] == 0 && IsACop(playerid)) return  SendClientMessage(playerid,COLOR_GREY,"A player without handcuffs.");
		if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GRAD1, "[ERROR] Man in car");
		new mesto2,vehicle=GetPlayerVehicleID(playerid);
		foreach(Player,i)
		{
			if(IsPlayerInVehicle(i,vehicle))
			{
				mesto2 = GetPlayerVehicleSeat(i);
				if(mesto2==2) return SendClientMessage(playerid, COLOR_GRAD1, "[ERROR] The seat in the car is already taken ");
			}
		}
		PutPlayerInVeh(params[0],vehicle,1);
		format(stringer1,sizeof(stringer1), "You were dragged into the car %s",PlayerInfo[playerid][pNames]);
		SendClientMessage(params[0],0x64E96EDFF,stringer1);
		format(stringer1,sizeof(stringer1), "You dragged into the car %s",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid,0x64E96EDFF,stringer1);
		}
	}
	return true;
}
alias:finds("findplayer");
CMD:finds(playerid,params[])
{
	if(GetPVarInt(playerid,"id_find"))
	{
	    SendClientMessage(playerid,-1,"You have disabled the tag");
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid,"id_find");
	    return 1;
	}
	else if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 23) return 1;
	else if(PlayerInfo[playerid][pOdet] == 0 && PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid,COLOR_WHITE,"You need to start your working day on the premises of organizations!");
	else if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /finds [id]");
	else if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Player's off the grid or it's you");
	else if(GetPlayerInterior(params[0]) > 0) SendClientMessage(playerid,COLOR_WHITE,"A person can be in an interior environment.");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(params[0], X,Y,Z);
	SetPVarInt(playerid,"id_find",(params[0]+1));
	SetPlayerCheckpoint(playerid, X,Y,Z, 3);
	SendClientMessage(playerid,-1,"You put a mark on a player, the mark will be renewed every second");
	SendClientMessage(playerid,COLOR_BLUE,"To deactivate the marker, use again {FFFFFF}/finds");
	return 1;
}
CMD:givegun(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return true;
	if(sscanf(params, "ddd",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givegun [id] [weaponid] [amount]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[2] < 1 || params[2] > 999) return SendClientMessage(playerid, COLOR_GRAD1, "No less than 1 or more than 999 rounds!");
	if(params[1] < 1 || params[1] > 46) return SendClientMessage(playerid, COLOR_GREY, "Weapon IDs from 1 to 46! ");
	switch(params[1])
	{
		case 35..40,1,2,4,9,16..19,20..22,26..28,44,45: return SendClientMessage(playerid, COLOR_GRAD1, "Prohibited weapons!");
	}
	GiveWeapon(params[0],params[1],params[2]);
	SendMes(params[0], -1, "Administrator %s has given you a weapon!", PlayerInfo[playerid][pNames]);
//	SendClientMessage(playerid, -1, "You have gived the player %s a weapon!", PlayerInfo[playerid][pNames]);
//	SendAdminMessage(COLOR_GREY, "Administrator %s has given the player %s a weapon", PlayerInfo[playerid][pNames], params[0]);
	return true;
}
CMD:clearweapons(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "ddd",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /clearweapons [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
    ResetPlayerWeapons(params[0]);
    SendClientMessage(playerid, COLOR_GRAD1, "You have cleared the weapons from a player");
	format(stringer1, sizeof(stringer1), "Adminstrator %s has cleared a weapons from the player %s", PlayerInfo[playerid][pNames], params[0]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:iwep(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 5) return true;
	if(sscanf(params,"d",params[0])) return	SendClientMessage(playerid, -1, "Usage: /iwep [playerid]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "The player's off the grid.");
	new CheckGun[13], CheckAmmo[13];
	GetPlayerWeaponData(params[0],0,CheckGun[0],CheckAmmo[0]);
	GetPlayerWeaponData(params[0],1,CheckGun[1],CheckAmmo[1]);
	GetPlayerWeaponData(params[0],2,CheckGun[2],CheckAmmo[2]);
	GetPlayerWeaponData(params[0],3,CheckGun[3],CheckAmmo[3]);
	GetPlayerWeaponData(params[0],4,CheckGun[4],CheckAmmo[4]);
	GetPlayerWeaponData(params[0],5,CheckGun[5],CheckAmmo[5]);
	GetPlayerWeaponData(params[0],6,CheckGun[6],CheckAmmo[6]);
	GetPlayerWeaponData(params[0],7,CheckGun[7],CheckAmmo[7]);
	GetPlayerWeaponData(params[0],8,CheckGun[8],CheckAmmo[8]);
	GetPlayerWeaponData(params[0],9,CheckGun[9],CheckAmmo[9]);
	GetPlayerWeaponData(params[0],10,CheckGun[10],CheckAmmo[10]);
	GetPlayerWeaponData(params[0],11,CheckGun[11],CheckAmmo[11]);
	GetPlayerWeaponData(params[0],12,CheckGun[12],CheckAmmo[12]);
	format(stringer,sizeof(stringer),
	"Player:   %s\n\n\
			0\tWeapon: %d     Ammo: %d\
			\n1\tWeapon: %d     Ammo: %d\
			\n2\tWeapon: %d     Ammo: %d\
			\n3\tWeapon: %d     Ammo: %d\
			\n4\tWeapon: %d     Ammo: %d\
			\n5\tWeapon: %d     Ammo: %d\
			\n6\tWeapon: %d     Ammo: %d\
			\n7\tWeapon: %d     Ammo: %d\
			\n8\tWeapon: %d     Ammo: %d\
			\n9\tWeapon: %d     Ammo: %d\
			\n10\tWeapon: %d     Ammo: %d\
			\n11\tWeapon: %d     Ammo: %d\
			\n12\tWeapon: %d     Ammo: %d"
	,PlayerInfo[params[0]][pNames], CheckGun[0], CheckAmmo[0], CheckGun[1], CheckAmmo[1], CheckGun[2],\
	CheckAmmo[2], CheckGun[3], CheckAmmo[3], CheckGun[4], CheckAmmo[4], CheckGun[5], CheckAmmo[5], CheckGun[6],\
    CheckAmmo[6], CheckGun[7], CheckAmmo[7], CheckGun[8], CheckAmmo[8], CheckGun[9], CheckAmmo[9], CheckGun[10], CheckAmmo[10], CheckGun[11], CheckAmmo[11], CheckGun[12], CheckAmmo[12]);
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}Information weapons",stringer,"Ready","");
	return 1;
}
CMD:dmexit(playerid)
{
	if(!GetPVarInt(playerid, "on_dmarena")) return true;
	ResetPlayerWeapons(playerid);
	SetPlayerInteriorEx(playerid, 0);
	SetPlayerVirtualWorldEx(playerid, 0);
	SetPlayerHealthAC(playerid, 100);
	SetPlayerArmour(playerid, 0);
	SetPlayerPos(playerid, 300.5217, 284.4201, 999.2425);
	SetPlayerFacingAngle(playerid, 91.5311);
	DeletePVar(playerid, "Health"), DeletePVar(playerid, "Armour");
	DeletePVar(playerid, "on_dmarena");
	DeletePVar(playerid, "arena_weapon_set");
	DeletePVar(playerid, "arena_pick");
//	PlayerInfo[playerid][pKillsOnDM] = 0;
	return true;
}
CMD:undemote(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 26 || PlayerInfo[playerid][pRank] < 9) return true;
	if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(sscanf(params, "dd",params[0],params[1])) return  SendClientMessage(playerid, COLOR_WHITE, "Usage: /undemote [id] [rank]");
	if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't fire the leader!");
	switch(PlayerInfo[params[0]][pMember])
    {
        case 12..15,26,16,24,27,28: return true;
	    case 17,18,0,5,6,9,20,23: return true;
    	case 1,10,3,19,21: if(params[1] > 14 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "No less than 0 and more than 14!");
     	case 2,11,25,7: if(params[1] > 9 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "No less than 0 and no more than 9!");
    }
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
    if(params[1] > 0)
    {
	    PlayerInfo[params[0]][pRank] = params[1];
	    format(stringer1, sizeof(stringer1), "You have been promoted/reduced to %i rank by the Minister %s",params[1], PlayerInfo[playerid][pNames]);
	    SendClientMessage(params[0], 0x6495EDFF, stringer1);
	    format(stringer1, sizeof(stringer1), "You have raised/reduced %s to %i ranking.", PlayerInfo[params[0]][pNames],params[1]);
	    SendClientMessage(playerid, 0x6495EDFF, stringer1);
	}
	else
	{
	    ResetWeapons(params[0]);
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		if(!PlayerInfo[params[0]][pAlcoInvenxua]) PlayerInfo[params[0]][pVigs] = 0;
		SetPlayerArmour(params[0],0);
		SetPlayerColor(params[0], 0xe6e6e6FF);
		SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
		SendClientMessage(params[0], COLOR_BLUE, "You were fired by the Minister.");
		SendClientMessage(params[0], 0x6495EDFF, "Now you're a civilian again...");
		SendClientMessage(playerid,COLOR_GREY,"You successfully dismissed this player");
		PlayerInfo[params[0]][pOdet] = 0;
		format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `odet` = '0', `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
		mysql_function_query(connects, stringer, false, "", "");
	}
	return true;
}
CMD:forceskin(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /forceskin [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pMember] < 1) return SendClientMessage(playerid, COLOR_GREY, "The human being is nowhere to be found");
	SendClientMessage(params[0], 0x6495EDFF,"You have been authorized to modify the skin by the server Adminstrator");
	format(stringer1, sizeof(stringer1), "You've allowed %s to change the skin", PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid, 0x6495EDFF, stringer1);
	ShowMenuForPlayer(ChoseSkin,params[0]);
	SetPlayerInteriorEx(params[0],5);
	OldSkin[params[0]] = GetPlayerSkin(params[0]);
	ChosenSkin[params[0]] = OldSkin[params[0]];
	new skin =2 + random(100);
	SetPlayerVirtualWorldEx(params[0],skin);
	new rand = random(sizeof(gInviteSpawns));
	SetPPos(params[0], gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
	SetPlayerFacingAngle(params[0], gInviteSpawns[rand][3]);
	SetPlayerCameraPos(params[0],gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	SetPlayerCameraLookAt(params[0],gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	TogglePlayerControllable(params[0], 0);
	SelectChar[params[0]] = INVALID_PLAYER_ID;
	SelectCharID[params[0]] = PlayerInfo[params[0]][pMember];
	SelectCharPlace[params[0]] = 1;
	PlayerInfo[params[0]][pChar] = ChosenSkin[params[0]];
	return true;
}
CMD:rob(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 1) return SendClientMessage(playerid, COLOR_GRAD2, "You don't work as a thief!");
    if(TheifRobID[playerid] != INVALID_PLAYER_ID) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /rob [playerid]");
	if(ProxDetectorS(1.0, playerid, params[0]) && params[0] != playerid)
	{
		if(IsPlayerInAnyVehicle(params[0])) return true;
		if(GetPVarInt(params[0], "AFK_Time") > 2) return SendClientMessage(playerid, COLOR_GREY, "You can't rob a player in AFK!");
		if(IsAGreenZone(params[0])) return SendClientMessage(playerid, COLOR_GREY, "You are in the green zone!");
		if(PlayerInfo[params[0]][pCash] <= 0) return SendClientMessage(playerid, COLOR_GRAD2, "He has no money.");
		new Float:A,Float:A2;
		GetPlayerFacingAngle(playerid, A);
		GetPlayerFacingAngle(params[0], A2);
		if( (40) > (A-A2) > (-40) )
		{
			CheckRobPlayer(playerid);
			CheckTheftCar(playerid);
			TheifRobID[playerid] = params[0];
			SetPlayerRandomKey(playerid, TheifKey[playerid], false);
			FIXES_ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0); ///aaaa
 			ShowPlayerActionBand(playerid, 0, 8);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Approach the player from behind to rob him");
	}
	return true;
}
CMD:ginfo(playerid, params[])
{
	if(!IsAGang(playerid)) return true;
	switch(PlayerInfo[playerid][pMember])
	{
	case 13:
		{
			format(stringer, sizeof(stringer),"{ffffff}Number of controlled quarters: {DBD604}%d\n{ffffff}Daily income (in payday): {DBD604}$%d\n\n{ffffff}Gang Bank Balance: {DBD604}%d{ffffff}\n{ffffff}The state of materials in the safe: {DBD604}%d{ffffff}\n{ffffff}The state of the first-aid kits in the safe: {DBD604}%d{ffffff}\n",TotalGzV,TotalGzV*300,FracBank[0][fVagos], vagosmatbi, FracBank[0][fVagosn]);
			ShowPlayerDialog(playerid,1043,DIALOG_STYLE_MSGBOX,"Los Santos Los Santos Vagos",stringer, "Close", "");
		}
	case 12:
		{
			format(stringer, sizeof(stringer),"{ffffff}Number of controlled quarters: {B313E7}%d\n{ffffff}Daily income (in payday): {B313E7}$%d\n\n{ffffff}Gang Bank Balance: {B313E7}%d{ffffff}\n{ffffff}The state of materials in the safe: {B313E7}%d{ffffff}\n{ffffff}The state of the first-aid kits in the safe: {B313E7}%d{ffffff}\n",TotalGzB,TotalGzB*300,FracBank[0][fBallas], ballasmatbi, FracBank[0][fBallasn]);
			ShowPlayerDialog(playerid,1042,DIALOG_STYLE_MSGBOX,"Ballas Gang",stringer, "Close", "");
		}
	case 15:
		{
			format(stringer, sizeof(stringer),"{ffffff}Number of controlled quarters: {24b012}%d\n{ffffff}Daily income (in payday): {24b012}$%d\n\n{ffffff}Gang Bank Balance: {24b012}%d{ffffff}\n{ffffff}The state of materials in the safe: {24b012}%d{ffffff}\n{ffffff}The state of the first-aid kits in the safe: {24b012}%d{ffffff}\n",TotalGzG,TotalGzG*300,FracBank[0][fGrove], groovmatbi, FracBank[0][fGroven]);
			ShowPlayerDialog(playerid,1045,DIALOG_STYLE_MSGBOX,"Grove Street Gang",stringer, "Close", "");
		}
	case 17:
		{
			format(stringer, sizeof(stringer),"{ffffff}Number of controlled quarters: {30d5c8}%d\n{ffffff}Daily income (in payday): {30d5c8}$%d\n\n{ffffff}Gang Bank Balance: {30d5c8}%d{ffffff}\n{ffffff}The state of materials in the safe: {30d5c8}%d{ffffff}\n{ffffff}The state of the first-aid kits in the safe: {30d5c8}%d{ffffff}\n",TotalGzA,TotalGzA*300,FracBank[0][fAztek], aztekmatbi, FracBank[0][fAztekn]);
			ShowPlayerDialog(playerid,1047,DIALOG_STYLE_MSGBOX,"Varios Los Varios Los Aztecas",stringer, "Close", "");
		}
	case 18:
		{
			format(stringer, sizeof(stringer),"{ffffff}Number of controlled quarters: {2A9170}%d\n{ffffff}Daily income (in payday): {2A9170}$%d\n\n{ffffff}Gang Bank Balance: {2A9170}%d{ffffff}\n{ffffff}The state of materials in the safe: {2A9170}%d{ffffff}\n{ffffff}The state of the first-aid kits in the safe: {2A9170}%d{ffffff}\n",TotalGzR,TotalGzR*300,FracBank[0][fRifa], rifamatbi, FracBank[0][fRifan]);
			ShowPlayerDialog(playerid,1048,DIALOG_STYLE_MSGBOX,"Rifa Gang",stringer, "Close", "");
		}
	}
	return true;
}
CMD:narkoz(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 4) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /narkoz [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 30.0,-2659.1233,611.1161,14.4531) || !IsPlayerInRangeOfPoint(playerid, 30.0,2033.8335,-1406.4746,17.2076)) return true;
	if(seans[params[0]] == 1) return SendClientMessage(playerid,COLOR_GREEN,"The next session can be done in one hour");
	if(PlayerInfo[params[0]][pNarcoLomka] <= 100)  return  SendClientMessage(playerid,COLOR_GREEN,"Patients don't have a dependency");
	PlayerInfo[params[0]][pNarcoLomka] -=500;
	SetPlayerWeather(params[0], 7);
	SendMes(params[0],COLOR_GREEN,"Medic %s has given you a drug addiction treatment",PlayerInfo[playerid][pNames]);
	SendMes(playerid,COLOR_GREEN,"Did you have a drug-addiction counseling session with %s",PlayerInfo[params[0]][pNames]);
	seans[params[0]] = 1;
	return true;
}
CMD:healaddict(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 4) return SendClientMessage(playerid,COLOR_GREY,"You are not a doctor!");
	if(sscanf(params, "d", params[0]))  return SendClientMessage(playerid, COLOR_WHITE, "Usage: /healaddict [id]");
	if(!IsPlayerInRangeOfPoint(playerid, 30.0,1158.6372,-1323.8540,15.4269)) return SendClientMessage(playerid, COLOR_GREY, "You're not on the hospital grounds.");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This player is not available, or you have specified your id");
	if(seans[params[0]] == 1) return SendClientMessage(playerid,COLOR_GREEN, "The next session can be done in one hour");
	if(PlayerInfo[params[0]][pNarcoLomka] <= 3000) return SendClientMessage(playerid,COLOR_GREY,"The patient has no dependency");
	PlayerInfo[params[0]][pNarcoLomka] -=1000;
	format(stringer1,sizeof(stringer1), "Medic %s has given you a drug addiction treatment",PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0],COLOR_GREEN,stringer1);
	format(stringer1,sizeof(stringer1), "You've done a drug-addiction test with %s",PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid,COLOR_GREEN,stringer1);
	seans[params[0]] = 1;
	return true;
}
CMD:wlock(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
    if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid, -1, "Only the leader or deputy can manage the Varios Los Aztecas!");
    switch(PlayerInfo[playerid][pMember])
    {
    case 15: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {00CC00}Grove Street");
    case 12: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {CC00FF}Ballas Gang");
    case 13: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {ffcd00}Los Santos Vagos");
    case 17: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {00F5FF}Varios Los Aztecas");
    case 18: format(stringer, sizeof(stringer), "{FFFFFF}This gang safe belongs to the gang {6666ff}Rifa Gang");
    }
    ShowPlayerDialog(playerid,1405,DIALOG_STYLE_MSGBOX,"Gang Safe",stringer,"Open","Close");
   	return true;
}
CMD:gmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
	ShowPlayerDialog(playerid,9595,DIALOG_STYLE_LIST,"Gang Menu","[1] {2aa2c8}Get guns{FFFFFF}\n[2] {2aa2c8}Check gang safe{FFFFFF}\n[3] {2aa2c8}Put money in the gang bank{FFFFFF}\n[4] {2aa2c8}Withdraw money from the gang bank{FFFFFF}\n[5] {2aa2c8}Check gang bank {FFFFFF}\n[6] {2aa2c8}Sell materials to the mafia{FFFFFF}\n[7] {2aa2c8}Check alcohol supply{FFFFFF}\n[8] {2aa2c8}Gang safe management", "Choose", "Exit");
	return true;
}
alias:lpanel("lp");
CMD:lpanel(playerid)
{
	if(!PlayerInfo[playerid][pLeader]) return 1;
	new Member = PlayerInfo[playerid][pLeader] - 1;
	new fr1 = gFractionRank[Member][0], fr2 = gFractionRank[Member][1], fr3 = gFractionRank[Member][2], fr4 = gFractionRank[Member][3];
	format(stringer,sizeof(stringer),"{FFFFFF}Management Offline Players\nCan take:\t\t\t{ffff00}%s (%i){FFFFFF}\nCan kick:\t\t\t{ffff00}%s (%i){FFFFFF}\nCan increase:\t\t\t{ffff00}%s (%i){FFFFFF}\nCan use reprimands:\t{ffff00}%s (%i){FFFFFF}\nRank Management"\
	,fRankName[Member][fr1-1],fr1,fRankName[Member][fr2-1],fr2,fRankName[Member][fr3-1],fr3,fRankName[Member][fr4-1],fr4);
	ShowPlayerDialog(playerid,9391,DIALOG_STYLE_LIST,"{ffff00}Leader panel", stringer, "Select", "Close");
	return 1;
}
CMD:mmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 5)
	ShowPlayerDialog(playerid,9596,DIALOG_STYLE_LIST,"Mafia Menu","[1] Check the mafia bank\n[2] Top up the mafia bank\n[3] Withdraw money from the mafia bank\n[4] Check the mafia warehouse\n[5] Seized businesses", "�", "Close");
	return true;
}
CMD:hi(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Can't be used in a car");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /hi [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(2.0, playerid, params[0])) return true;
	if(params[0] == playerid)  return  SendClientMessage(playerid,COLOR_GRAD1, "[ERROR] You have entered your ID");
	format(stringer1, sizeof(stringer1), "%s shake hands %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	if(PlayerCuffed[playerid] == 0) { FIXES_ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1); }
	if(PlayerCuffed[params[0]] == 0) { FIXES_ApplyAnimation(params[0], "GANGS", "hndshkfa",4.0,0,0,0,0,0,1); }
	return true;
}
CMD:keys(playerid, params[])
{
	if(!IsAGang(playerid)) return true;
	if(keys[playerid] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have the keys to prison!");
	format(stringer1, sizeof(stringer1), "You have %i keys.", keys[playerid]);
	SendClientMessage(playerid, COLOR_YELLOW, stringer1);
	format(stringer1, sizeof(stringer1), "%s takes the keys",PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return true;
}
CMD:givecopkeys(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givecopkeys [id]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "That man is far away from you!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 25 )
	{
		if(!IsPlayerConnected(params[0])) return true;
		keys[params[0]] += 1;
		format(stringer1, sizeof(stringer1), "Officer %s gave out the keys to the police station %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	}
	return true;
}
CMD:yes(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 16)
	{
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /yes [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "That man didn't call the studio!");
		format(stringer1, sizeof(stringer1), "You've received a call from %s",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid, COLOR_WHITE, stringer1);
		SendClientMessage(params[0], COLOR_YELLOW, "You get in the studio, you talk.");
		if(PlayerInfo[playerid][pMember] == 16)
		{
			TalkingLivels[params[0]] = 2;
			PlayerInfo[params[0]][pMobile] -= smspricels;
			FracBank[0][fLsnews] += smspricels;
		}
	}
	return true;
}
CMD:off(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 16)
	{
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /off [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] !=1) return SendClientMessage(playerid, COLOR_GRAD1, "That man didn't call the studio!");
		format(stringer1, sizeof(stringer1), "You've completed the call from %s",PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid, COLOR_BLUE, stringer1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
		SendClientMessage(params[0], COLOR_YELLOW, "The call is over.");
		zvonok[params[0]] = 0;
		TalkingLivels[params[0]] = INVALID_PLAYER_ID;
	}
	return true;
}
CMD:cartool(playerid, params[])
{
    if(PlayerInfo[playerid][pCash] < 25000)
    {
        SendClientMessage(playerid, COLOR_RED, "You don't have enough money to use car tools. You need at least 25000 pCash.");
        return false;
    }

    if(IsPlayerInAnyVehicle(playerid))
    {
        RepairVehicle(GetPlayerVehicleID(playerid));
        VEHICLE[GetPlayerVehicleID(playerid)][vHealth] = 1000.0;
        Fuell[GetPlayerVehicleID(playerid)] = 100;
        PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
        SendClientMessage(playerid, COLOR_WHITE, "Your vehicle has been repaired and refueled toolkit Price 25000$ deducted.");

        // Deduct 25000 pCash from the player
        PlayerInfo[playerid][pCash] -= 25000;
    }
    else
    {
        SendClientMessage(playerid, COLOR_RED, "You need to be in a vehicle to use this command.");
    }

    return true;
}
CMD:hp(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		VEHICLE[GetPlayerVehicleID(playerid)][vHealth] = 1000.0;
		Fuell[GetPlayerVehicleID(playerid)] = 100;
//		SendClientMessage(playerid, COLOR_WHITE, "!");
		SetPlayerHealthAC(playerid, 100.0);
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
	}
	PlayerHealth[playerid] = 100;
	PlayerInfo[playerid][pSatiety] = 100;
	SetPlayerHealthAC(playerid, 100.0);
	return true;
}
CMD:satiety(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 6) return true;
	return SendMes(playerid,COLOR_BLUE, "Satisfaction %i of 100 percent!",PlayerInfo[playerid][pSatiety]);
}
CMD:healnear(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] >= 8)
	{
        new string[128];
        new count;
        foreach(Player, i) {
            if(ProxDetectorS(12.0, playerid, i)) {
                SetPlayerHealth(i, 100);
                count++;
            }
        }
        format(string, sizeof(string), "You have healed all players near you, count: ({ff0000}%d{ffffff}).", count);
        SendClientMessage(playerid, COLOR_WHITE, string);
    }
    return 1;
}
CMD:sethp(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 1) return true;
	if(sscanf(params, "di",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sethp [id] [amount]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid, -1, "Player is AFK");
	PlayerHealth[params[0]] = params[1];
	SetPlayerHealthAC(params[0], params[1]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s set the player %s hp to [%d HP]", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:setarmor(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "di",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sethp [id] [amount]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid, -1, "Player is AFK");
	PlayerHealth[params[0]] = params[1];
	SetPlayerArmour(params[0], params[1]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s set the player %s am to [%d AM]", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:setam(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "di",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setam [id] [amount]");
	if(!IsPlayerConnected(params[0])) return true;
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid, -1, "Player is AFK");
	PlayerHealth[params[0]] = params[1];
	SetPlayerArmour(params[0], params[1]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s set the player %s am to [%d Armor]", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:am(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	SetPlayerArmour(playerid, 100.0);
	return true;
}
CMD:sethpprice(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 8)
	{
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /sethpprice [cost]");
		if(params[0] < 1 || params[0] > 1000) { SendClientMessage(playerid, COLOR_GREY, "You cannot set less than 0 and more than 1000"); return true; }
		healpric = params[0];
		SendClientMessageToAll(COLOR_WHITE, "---========== State News ==========---");
		format(stringer1, sizeof(stringer1), "The price of treatment, in the amount of %i Money. is set by Doctor. Physician LS: %s.", healpric,PlayerInfo[playerid][pNames]);
		SendClientMessageToAll(0xd815edFF, stringer1);
		return true;
	}
	return true;
}
CMD:setklass(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setklass [ID] [Class]");
	if(params[0] < 0 || params[0] > 1999) return 1;
	if(params[1] < 0 || params[1] > 5) return 1;
	HouseInfo[params[0]][hKlass] = params[1];
	SendClientMessage(playerid, COLOR_WHITE, "Class set");
	return true;
}
CMD:getschet(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getschet [ID]");
	if(params[0] < 0 || params[0] > 1999) return 1;
	format(stringer1, sizeof(stringer1), "Household account: %i",HouseInfo[params[0]][hTakings]);
	SendClientMessage(playerid, COLOR_WHITE, stringer1);
	return true;
}
alias:play("fm");
CMD:play(playerid, params[])
{
	if(playerradio[playerid] == 1)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		StopAudioStreamForPlayer(playerid);
		SendClientMessage(playerid, -1, "{FE6500}Radio off");
		playerradio[playerid] = 0;
	}
	ShowPlayerDialog(playerid, 245, DIALOG_STYLE_LIST, "{FFCD00}THR Radio", "[1] FM Radio\n[2] Europa Radio\n[3] Gm Radio\n[4] Sky Radio\n[5] DFM Radio\n[6] ICE FM", "Accept", "Cancle");
	return true;
}
CMD:startpb(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
    if(StartPaintBall != 0) return SendClientMessage(playerid, COLOR_GREY,"Paintball is about to start!");
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /startpb [Order: 0- Classic battle, 1- Mixed fog, 2- de_dust_2x2]");
    if(params[0] < 0 || params[0] > 3) return 1;
    TimerPaintBall = REGISTER_PAINTBALL;
    StartPaintBall = 1;
    typePB = params[0];
    switch(params[0])
	{
		case 0: SendClientMessageToAll(COLOR_YELLOW3,"5 minutes from the start of the game (map: Classic battle). All those wishing to arrive at the place of registration");
		case 1: SendClientMessageToAll(COLOR_YELLOW3,"5 minutes from the start of the game (map: Mixed fog). All those wishing to arrive at the place of registration");
		case 2: SendClientMessageToAll(COLOR_YELLOW3,"5 minutes from the start of the game (map: de_dust_2x2). All those wishing to arrive at the place of registration");
	}
    return true;
}
CMD:startrace(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(RaceStarting[2] != 0) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}Non-stop activities have already begun");
	RaceStarting[2] = 3;
	RaceStarting[0] = 300;
	switch(random(4))
	{
		case 0: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 5 minutes (map: Wolking Street Race). All those wishing to arrive at the place of registration"), typeRace = 0;
		case 1: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 5 minutes (map: Las-Venturas / San-Fierro Race). All those wishing to arrive at the place of registration"), typeRace = 1;
		case 2: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 5 minutes (map: Las-Venturas / San-Fierro Race). All those wishing to arrive at the place of registration"), typeRace = 1;
		case 3: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 5 minutes (map: Wolking Street Race). All those wishing to arrive at the place of registration"), typeRace = 0;
		default: SendClientMessageToAll(COLOR_YELLOW3,"Race starts in 5 minutes (map: Las-Venturas / San-Fierro Race). All those wishing to arrive at the place of registration"), typeRace = 1;
	}
	return 1;
}
CMD:startbase(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(BaseStarting[1] == 1 || BaseStarting[1] == 3) return SendClientMessage(playerid, -1, "� {AC0000}[ERROR] {ffffff}BASE jumping is already underway.");
	BaseStarting[1] = 3;
	BaseStarting[0] = 300;
	SendClientMessageToAll(COLOR_YELLOW3,"BASE jumping starts in 5 minutes. All those wishing to arrive at the place of registration");
	return 1;
}
CMD:racelist(playerid,params[])
{
	if(!strlen(race_str)) return SendClientMessage(playerid, -1, "There's no information on the last race");
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}List of winners:",race_str,"Close","");
	return 1;
}
alias:find("members");
CMD:find(playerid) {
    if(PlayerInfo[playerid][pMember] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "You are not a member!");
	new string[256];
	format(string, sizeof(string), "SELECT * FROM `accounts` WHERE `pMember` OR `pLeader` = '%d'", PlayerInfo[playerid][pMember]);
	mysql_function_query(connects, string, true, "FindPlayer", "d", playerid);
	return true;
}
publics: FindPlayer(playerid) {
	new rows, fields, f = 0;
	cache_get_data(rows, fields);
	if(rows) for(new i = 0; i < rows; i++) f++;
	new string[1000], afk = 0, j = 0;
	string = "{FFFFFF}Level\t{FFFFFF}Rank\t{FFFFFF}Telephone\t{FFFFFF}ID\t{FFFFFF}Nickname";
	foreach(Player, i) {
		if(playerid == i) j++;
		if(PlayerInfo[i][pMember] != PlayerInfo[playerid][pMember] || i == playerid || PlayerInfo[i][pAlcoInvenxua]) continue;
		if(GetPVarInt(i, "AFK_Time") > 2) afk++;
		format(string, sizeof(string), "%s\n{FFFFFF}%d\t\t{FFFFFF}%d\t{FFFFFF}%d\t\t{FFFFFF}%d\t{FFFFFF}%s", string, PlayerInfo[i][pLevel], PlayerInfo[i][pRank], PlayerInfo[i][pPnumber], i, PlayerInfo[i][pNames]);
		j++;
	}
	if(j < 2) return ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{f7ac13}Members of the organization online", "No member of the organization is online!", "Close", "");
	else {
		format(string, sizeof(string), "%s\n\n\n{94e516}Total in the organization: %d\n{94e516}Of which online: %d\n{94e516}On AFK: %d", string, f, j, afk);
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{f7ac13}Members of the organization online", string, "Close", "");
	}
	return true;
}
CMD:call(playerid, params[])
{
    if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You must be in the game for 2 hours (/mm - Statistics).");
	if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You have a mute!!");
	if(PhoneOnline[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Your phone's off!");
	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "You're already on the phone!");
	if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "You don't own a cell phone!");
	if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "You've got a clump, you can't talk!");
	if(takephone[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have a cell phone");
	if(sscanf(params, "i", params[0])) return ShowPlayerDialog(playerid, 9956, 2, "Select a server", "[0] Call a Taxi Driver \n[1] Call Medical Help \n[2] Call Mechanic\n[3] To call the police", "�", "Close");
	if(params[0] < 0 || params[0] > 9999999) return SendClientMessage(playerid, COLOR_GREY, "Wrong phone number!");
	if(params[0] == PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid, COLOR_GREY, "You can't call yourself!");
	if(PlayerInfo[playerid][pBank] <= 0) return SendClientMessage(playerid, COLOR_GREY, "The amount in your account is not sufficient to make a call");
	new full;
	foreach(Player,i)
	{
		if(!IsPlayerConnected(i) || gPlayerLogged[playerid] == 0) continue;
		if(params[0] == 11888)
		{
			if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "Live TV is off.");
			format(stringer1, sizeof(stringer1), "There's a caller on the line: %s. Enter /yes [%i], to answer",PlayerInfo[playerid][pNames], playerid);
			SendFamilyMessage(16, COLOR_YELLOW, stringer1);
			SendClientMessage(playerid,  COLOR_WHITE, "To hang up the handset, enter /h");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
			zvonok[playerid] = 1;
			PlayerInfo[playerid][pBank] -= smspricels;
			FracBank[0][fLsnews] += smspricels;
			full++;
			return true;
		}
		if(params[0] == PlayerInfo[i][pPnumber] && params[0] != 0)
		{
			if(PhoneOnline[i] > 0) return SendClientMessage(playerid, COLOR_GREY, "The player turned off his cell phone!");
			if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "The player is already talking on the phone!");
			Mobile[playerid] = i;
			format(stringer1, sizeof(stringer1),"Calling you: %s. To answer, Usage: /P", PlayerInfo[playerid][pNames]);
			SendClientMessage(i,COLOR_GRAD2, stringer1);
			format(stringer1, sizeof(stringer1), "%s 's cell phone is ringing", PlayerInfo[i][pNames]);
			ProxDetector(i, 30.0, COLOR_PURPLE, stringer1);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_WHITE, "To hang up, Usage: /H");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
			full++;
			break;
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "The player with this number was not found!");
	return true;
}
alias:pickup("p");
CMD:pickup(playerid, params[])
{
	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "You are already on the phone!");
	foreach(Player,i)
	{
		if(!IsPlayerConnected(i) || gPlayerLogged[playerid] == 0) continue;
		if(Mobile[i] == playerid)
		{
			Mobile[playerid] = i;
			format(stringer1, 128,"%s picked up the mobile phone", PlayerInfo[playerid][pNames]);
			SendClientMessage(i,COLOR_GRAD2, stringer1);
			format(stringer1, 90, "%s answered the call", PlayerInfo[playerid][pNames]);
			ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return true;
		}
	}
	return true;
}
alias:hangup("h");
CMD:hangup(playerid, params[])
{
	new caller = Mobile[playerid];
	if(IsPlayerConnected(caller))
	{
		SendClientMessage(caller, COLOR_GRAD2, "The subscriber hung up");
		SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
		Mobile[caller] = -1;
		SendClientMessage(playerid,  COLOR_GRAD2, "You hung up");
		Mobile[playerid] = -1;
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		return true;
	}
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	TalkingLive[playerid] = INVALID_PLAYER_ID;
	TalkingLivels[playerid] = INVALID_PLAYER_ID;
	zvonok[playerid] = 0;
	return true;
}
CMD:kickpb(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 4) return true;
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /kickpb [id] [reason]");
	if(TeamPain[params[0]] == 0) return SendClientMessage(playerid,COLOR_GREY,"Player does not participate in PaintBall.");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAlcoInvenxua] > PlayerInfo[playerid][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD2, "Adminstrator �� ����� ���� ������!");
	format(stringer1, sizeof(stringer1), "Adminstrator %s kicked player %s with PaintBall. reason: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
	EndPaint(params[0]);
	SetPPos(params[0], 1557.7139,-1790.7910,13.5469);
    SetPlayerFacingAngle(params[0], 269.1077);
    SetPlayerInteriorEx(params[0], 0);
    SetPlayerVirtualWorldEx(params[0],0);
	for(new i; i < 3; i++) TextDrawHideForPlayer(params[0], PaintText[i]);
	ResetWeapons(params[0]);
    SetPlayerHealthAC(params[0],100);
	if(PlayerInfo[params[0]][pMember] != 0) SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pModel]);
	else SetPlayerSkinEx(params[0], PlayerInfo[params[0]][pChar]);
	SetPlayerToTeamColor(params[0]);
	return true;
}
CMD:exitpb(playerid)
{
	if(TeamPain[playerid] && StartPaintBall == 2)
	{
		EndPaint(playerid);
		SetPPos(playerid, 1557.7139,-1790.7910,13.5469);
    	SetPlayerFacingAngle(playerid, 269.1077);
    	SetPlayerInteriorEx(playerid, 0);
    	SetPlayerVirtualWorldEx(playerid,0);
		for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, PaintText[i]);
		ResetWeapons(playerid);
    	SetPlayerHealthAC(playerid,100);
		if(PlayerInfo[playerid][pMember] != 0) SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
		else SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
		SetPlayerToTeamColor(playerid);
		SendClientMessage(playerid, -1, "You left MP 'PaintBall'");
	}
	else SendClientMessage(playerid,COLOR_GREY,"You are not participating in PaintBall.");
	return true;
}
CMD:hhelp(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] < 1) return true;
    ShowPlayerDialog(playerid, 7000, DIALOG_STYLE_LIST, "Helper help", "{FFD700}[1] Support Agent\n[2] Support Agent\n[3] Support Agent\n[4] Support Agent\n[5] Support Agent\n[6] Support Agent\n[7] Support Agent\n[8] {FF0000}The Support chef", "Ok", "");
	return true;
}
/*CMD:leaders(playerid, params[])
{
    new b=0,string[1200] = "Organization Name - Rank 10 Name - Nikcname - Phone\n\n", strings[144];
    foreach(Player,i)
    {
        //if(PlayerInfo[i][pAlcoInvenxua] > 0 || PlayerInfo[i][pLeader] <= 0) continue;
		if(PlayerInfo[i][pLeader] <= 0 || PlayerInfo[i][pAlcoInvenxua] > 0) continue;
        b++;
		format(strings, sizeof(strings), "{FFFFFF}%s - %s - %s - %d\n", GetPlayerFracName[PlayerInfo[i][pLeader]], fRankName[PlayerInfo[i][pLeader]-1][PlayerInfo[i][pRank]-1], PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]);
        strcat(string, strings);
    }
    ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}Online Leaders", string, "Close", "");
    return true;
}*/
/*CMD:leaders(playerid) return mysql_function_query(connects, "SELECT * FROM `accounts` WHERE `pLeader` !=0 ORDER BY `accounts`.`pLeader` DESC", true, "aLeaders", "i", playerid);
publics: aLeaders(playerid, query[])
{
    new rows, fields;
    cache_get_data(rows, fields, connects);

    if(!rows)
        return SendClientMessage(playerid, 0xFF0000FF, "No leaders online!");

    new string[5000], online[20], name[24], ttextt[32], orgName[64];
    string = "";

    for(new i = 0; i < rows; i ++)
    {
        PlayerInfo[i][pLeader] = cache_get_field_content_int(i, "pLeader", connects);
        cache_get_field_content(i, "Name", name, connects, 24);
        cache_get_field_content(i, "pGetonDate", online, connects, 20);

        // Retrieve organization name based on pLeader value
        switch(PlayerInfo[i][pLeader])
        {
			case 1: orgName  = "{2641FE}LSPD";
			case 2: orgName  = "{313131}FBI";
			case 3: orgName  = "{a38b52}Army: Aircraft Carrier";
		    case 4: orgName  = "{d815ed}Medic";
			case 5: orgName  = "{DDA701}LCN";
			case 6: orgName  = "{FF0000}Yakuza";
			case 7: orgName  = "{114D71}Government";
			case 8: orgName  = "{B313E7}Casino Rich";
			case 10: orgName  = "{2641FE}SFPD";
			case 11: orgName  = "{139BEC}Instructors";
			case 12: orgName  = "{8813E7}Ballas Gang";
			case 13: orgName  = "{DBD604}Los Santos Vagos";
			case 14: orgName  = "{B4B5B7}Russian Mafia";
			case 15: orgName  = "{24b012}The Grove";
			case 16: orgName  = "{40848B}San News";
			case 17: orgName  = "{01FCFF}Varios Los Aztecas";
			case 18: orgName  = "{83BFBF}Rifa Gang";
			case 19: orgName  = "{a38b52}Army: Area 51";
			case 21: orgName  = "{2641FE}LVPD";
			case 23: orgName  = "{708090}Hitman";
			case 24: orgName  = "{F45000}Street Rasers";
			case 25: orgName  = "{90EE90}SWAT";
			case 26: orgName  = "{708090}Government";
			case 27: orgName  = "{B313E7}Casino Four Dragons";
			case 28: orgName  = "{B313E7}Casino Caligulas";
			default: orgName  = "{FF0000}Unknown";
        }

        if(IsPlayerConnected(GetPlayerID(name)))
            ttextt = "[{2CE40C}Online{ffffff}]";
        else
            ttextt = "[{E40C0C}Offline{ffffff}]";

        // Add leader information with organization name
        format(string, sizeof(string), "%s%s (%s) {FFFFFF}Date of last visit: %s\n", string, name, orgName, online);
    }

    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFC100}Leaders of organizations:\t", string, "Close", "");
    return 1;
}*/
CMD:leaders(playerid) {return mysql_function_query(connects,"SELECT * FROM `accounts` WHERE `pLeader` != 0 ORDER BY `pLeader` DESC",true, "aLeaders", "i", playerid);
}

publics: aLeaders(playerid, query[]) {
    new rows, fields;
    cache_get_data(rows, fields, connects);

    if (!rows) {
        return SendClientMessage(playerid, 0xFF0000FF, "No leaders online!");
    }

    new string[5000], online[20], name[24], ttextt[32], orgName[64];
    string = "";

    for (new i = 0; i < rows; i++) {
        new leaderID = cache_get_field_content_int(i, "pLeader", connects);  // Renamed to leaderID
        cache_get_field_content(i, "Name", name, connects, 24);
        cache_get_field_content(i, "pGetonDate", online, connects, 20);

        // Ensure leaderID is valid and greater than 0
        if (leaderID > 0) {
            // Retrieve organization name based on leaderID value
            switch (leaderID) {
                case 1: orgName = "{2641FE}LSPD";
                case 2: orgName = "{313131}FBI";
                case 3: orgName = "{a38b52}Army: Aircraft Carrier";
                case 4: orgName = "{d815ed}Medic";
                case 5: orgName = "{DDA701}LCN";
                case 6: orgName = "{FF0000}Yakuza";
                case 7: orgName = "{114D71}Government";
                case 8: orgName = "{B313E7}Casino Rich";
                case 10: orgName = "{2641FE}SFPD";
                case 11: orgName = "{139BEC}Instructors";
                case 12: orgName = "{8813E7}Ballas Gang";
                case 13: orgName = "{DBD604}Los Santos Vagos";
                case 14: orgName = "{B4B5B7}Russian Mafia";
                case 15: orgName = "{24b012}The Grove";
                case 16: orgName = "{40848B}San News";
                case 17: orgName = "{01FCFF}Varios Los Aztecas";
                case 18: orgName = "{83BFBF}Rifa Gang";
                case 19: orgName = "{a38b52}Army: Area 51";
                case 21: orgName = "{2641FE}LVPD";
                case 23: orgName = "{708090}Hitman";
                case 24: orgName = "{F45000}Street Rasers";
                case 25: orgName = "{90EE90}SWAT";
                case 26: orgName = "{708090}Government";
                case 27: orgName = "{B313E7}Casino Four Dragons";
                case 28: orgName = "{B313E7}Casino Caligulas";
                default: orgName = "{FF0000}Unknown";
            }

            if (IsPlayerConnected(GetPlayerID(name))) {
                ttextt = "[{2CE40C}Online{ffffff}]";
            } else {
                ttextt = "[{E40C0C}Offline{ffffff}]";
            }

            // Add leader information with organization name
            format(string, sizeof(string), "%s%s (%s) {FFFFFF}Date of last visit: %s\n", string, name, orgName, online);
        }
    }

    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFC100}Leaders of organizations:\t", string, "Close", "");
    return 1;
}
CMD:clear(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_FADE4, "Usage: /clear [playerid]");
    if(!IsPlayerConnected(params[0])) return true;
//	new memberrs = PlayerInfo[playerid][pMember], rankk = PlayerInfo[playerid][pRank], lead = PlayerInfo[playerid][pLeader];
//	if (memberrs == 1 && rankk >= 12 || lead == 1 || memberrs == 2 && rankk >= 6 || lead == 2 || memberrs == 10 && rankk >= 12 || lead == 10 || memberrs == 21 && rankk >= 12 || lead == 21 || memberrs == 25 && rankk >= 8 || lead == 25 || PlayerInfo[playerid][pAlcoInvenxua] >= 2)
	{
		SendMes(playerid, -1, "{3399FF}You have removed the wanted list from %s", PlayerInfo[params[0]][pNames]);
		SendMes(params[0], -1, "{3399FF}Officer %s has removed your wanted list. ", PlayerInfo[playerid][pNames]);
		PlayerInfo[params[0]][pWanted] = 0;
        SetPlayerWantedLevel(params[0], 0);
	}
	return true;
}
/*CMD:time(playerid,params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) FIXES_ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	format(stringer1, sizeof(stringer1), "%s called the exact time service", PlayerInfo[playerid][pNames]);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
	SendClientMessage(playerid,COLOR_WHITE,"{8BD032}You called the exact time service");
	new jail = PlayerInfo[playerid][pJailTime];
	new hour,minuite,second;
	new year, month,day, mtext[20];
	new string[700];
	getdate(year, month, day);
	gettime(hour,minuite,second);
	switch(month)
	{
		case 1: mtext = "January";
		case 2: mtext = "February";
		case 3: mtext = "Martha";
		case 4: mtext = "April";
		case 5: mtext = "May";
		case 6: mtext = "June";
		case 7: mtext = "July";
		case 8: mtext = "August";
		case 9: mtext = "September";
		case 10: mtext = "October";
		case 11: mtext = "November";
		case 12: mtext = "December";
	}
	if(PlayerInfo[playerid][pJailTime] > 1) format(string, sizeof(string), "{FFFFFF}Hello!\n{FFFFFF}You called the exact time service\n\n{FFFFFF}Today's date:\t{8BD032}%02d %s %d G.\n{FFFFFF}Current time:\t{3399FF}%02d:%02d\n\n{FFFFFF}Time to release from prison: %d sec\n\n{FFFFFF}Time in the game today:\t\t{FFD700}%d h %d min\n{FFFFFF}Time in the game yesterday:\t\t{FFD700}%d � %d ���\n{FFFFFF}AFK for today:\t\t{eb9d11}%d h %d min\n{FFFFFF}AFK yesterday:\t\t\t{eb9d11}%d h %d min",
	day, mtext, year, hour, minuite, jail, PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60, PlayerInfo[playerid][pOnlineYes] / 60 , PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pDayAfk] / 60, PlayerInfo[playerid][pDayAfk] % 60, PlayerInfo[playerid][pAfkYes] / 60, PlayerInfo[playerid][pAfkYes] % 60);
	else format(string, sizeof(string), "{FFFFFF}Hello!\n{FFFFFF}You called the exact time service\n\n{FFFFFF}Today's date:\t{8BD032}%02d %s %d G.\n{FFFFFF}Current time:\t{3399FF}%02d:%02d\n\n{FFFFFF}Time in the game today:\t\t{FFD700}%d h %d min\n{FFFFFF}Time in the game yesterday:\t\t{FFD700}%d h %d min\n{FFFFFF}AFK today:\t\t{eb9d11}%d h %d min\n{FFFFFF}AFK yesterday:\t\t\t{eb9d11}%d h %d min",
	day, mtext, year, hour, minuite, PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60, PlayerInfo[playerid][pOnlineYes] / 60 , PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pDayAfk] / 60, PlayerInfo[playerid][pDayAfk] % 60, PlayerInfo[playerid][pAfkYes] / 60, PlayerInfo[playerid][pAfkYes] % 60);
	ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}Exact time", string, "Close", "");
	return true;
}*/
CMD:time(playerid,params[])
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) FIXES_ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
//    format(stringer1, sizeof(stringer1), "%s checks the time", PlayerInfo[playerid][pName]);
	format(stringer1, sizeof(stringer1), "%s called the exact time service", PlayerInfo[playerid][pNames]);
    SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
    new jail = PlayerInfo[playerid][pJailTime];
    new hour,minuite,second;
    new year, month,day, mtext[20];
    new string[700];
    getdate(year, month, day);
    gettime(hour,minuite,second);
    switch(month)
    {
        case 1: mtext = "January";
        case 2: mtext = "February";
        case 3: mtext = "March";
        case 4: mtext = "April";
        case 5: mtext = "May";
        case 6: mtext = "June";
        case 7: mtext = "July";
        case 8: mtext = "August";
        case 9: mtext = "September";
        case 10: mtext = "October";
        case 11: mtext = "November";
        case 12: mtext = "December";
    }
    if(PlayerInfo[playerid][pJailTime] > 1) format(string, sizeof(string), "{ffc800}You called the exact time service in New York! \n\n* {FFFFFF}Today's date:\t{b4b5b7}%02d %s %d \n{ffc800}* {FFFFFF}Current time:\t{b4b5b7}%02d:%02d\n\n{ffc800}* {FFFFFF}Time to release from prison: {b4b5b7}%d sec\n\n{ffc800}* {FFFFFF}Time in the game today:\t\t{b4b5b7}%d h %d",
    day, mtext, year, hour, minuite, jail, PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60, PlayerInfo[playerid][pOnlineYes] / 60 , PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pDayAfk] / 60, PlayerInfo[playerid][pDayAfk] % 60, PlayerInfo[playerid][pAfkYes] / 60, PlayerInfo[playerid][pAfkYes] % 60);
    else format(string, sizeof(string), "{ffc800}You called the exact time service in New York! \n\n* {FFFFFF}Today's date:\t{b4b5b7}%02d %s %d.\n{ffc800}* {FFFFFF}Current time:\t{b4b5b7}%02d:%02d\n\n{ffc800}* {FFFFFF}Time in the game today:\t\t{b4b5b7}%d h %d min",
    day, mtext, year, hour, minuite, PlayerInfo[playerid][pDayOnline] / 60, PlayerInfo[playerid][pDayOnline] % 60, PlayerInfo[playerid][pOnlineYes] / 60 , PlayerInfo[playerid][pOnlineYes] % 60, PlayerInfo[playerid][pDayAfk] / 60, PlayerInfo[playerid][pDayAfk] % 60, PlayerInfo[playerid][pAfkYes] / 60, PlayerInfo[playerid][pAfkYes] % 60);
    ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}Exact time", string, "Close", "");
    return true;
}
alias:directory("dir");
CMD:directory(playerid, params[])
{
	ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"{CCFF00}Game Guide","{99FF99}Government employees:{FFFFFF}\n1) Lawyers\n2) Doctors\n3) Press\n4) Instructors\n \n{99FF99}Working group:{FFFFFF}\n1) Mechanics\n2) Taxi drivers\n3) Product delivery people\n \n{99FF99}Management:{FFFFFF}\n1) Administration\n2) /leaders","Select","Cancle");
	return true;
}
/*CMD:changeskin(playerid, params[])
{
	if(!PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,COLOR_WHITE,"You are not a member of an organization");
	switch(PlayerInfo[playerid][pMember]) { case 1..4, 7, 10, 11, 19, 21, 25: if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!"); }
	if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][2]) return SendMes(playerid, -1, "Available from rank %i", gFractionRank[PlayerInfo[playerid][pMember]-1][2]);
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /changeskin [playerid]");
    if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,COLOR_WHITE,"You are far apart");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,COLOR_WHITE,"The player is not a member of your organization");
	if(PlayerInfo[params[0]][pRank] >= PlayerInfo[playerid][pRank] && params[0] != playerid) return SendClientMessage(playerid,COLOR_WHITE,"Your rank is insufficient");
	new fractionid = PlayerInfo[playerid][pMember] - 1;
	SetPVarInt(playerid,"actplayerid",params[0]);
	for(new i;i<12;i++)
	{
		new skinid = gFractionSkin[fractionid][i];
		if(!skinid) break;
		if(skinid == PlayerInfo[params[0]][pModel])
		{
			if(!i) format(stringer,sizeof(stringer),"{a38b52}Skin %d [%d]",i+1,skinid);
			else format(stringer,sizeof(stringer),"%s\n{a38b52}Skin %d [%d]",stringer,i+1,skinid);
		}
		else
		{
			if(!i) format(stringer,sizeof(stringer),"Skin %d [%d]",i+1,skinid);
			else format(stringer,sizeof(stringer),"%s\nSkin %d [%d]",stringer,i+1,skinid);
		}
	}
	ShowPlayerDialog(playerid,2213,2,PlayerInfo[params[0]][pNames],stringer,"OK","Cancle");
	return true;
}*/
CMD:changeskin(playerid, params[])
{
    if(!PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,COLOR_WHITE,"You are not a member of an organization");
    switch(PlayerInfo[playerid][pMember]) { case 1..4, 7, 10, 11, 19, 21, 25: if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!"); }
    if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][2]) return SendMes(playerid, -1, "Available from rank %i", gFractionRank[PlayerInfo[playerid][pMember]-1][2]);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /changeskin [playerid]");
    if(!IsPlayerConnected(params[0])) return true;
    if(!ProxDetectorS(8.0, playerid, params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,COLOR_WHITE,"You are far apart");
    if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,COLOR_WHITE,"The player is not a member of your organization");
    if(PlayerInfo[params[0]][pRank] >= PlayerInfo[playerid][pRank] && params[0] != playerid) return SendClientMessage(playerid,COLOR_WHITE,"Your rank is insufficient");
    new fractionid = PlayerInfo[playerid][pMember] - 1;
    SetPVarInt(playerid,"actplayerid",params[0]);
    for(new i;i<12;i++)
    {
        new skinid = gFractionSkin[fractionid][i];
        if(!skinid) break;
        if(skinid == PlayerInfo[params[0]][pModel])
        {
            if(!i) format(stringer,sizeof(stringer),"{a38b52}%d [%d]",i+1,skinid);
            else format(stringer,sizeof(stringer),"%s\n{a38b52}%d [%d]",stringer,i+1,skinid);
        }
        else
        {
            if(!i) format(stringer,sizeof(stringer),"%d [%d]",i+1,skinid);
            else format(stringer,sizeof(stringer),"%s\n%d [%d]",stringer,i+1,skinid);
        }
    }
    ShowPlayerDialog(playerid,2213,2,PlayerInfo[params[0]][pNames],stringer,"OK","Cancle");
    return true;
}
CMD:bizlock(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pRank] < 5) return true;
	new null, null_;
	for(new b = 1; b <= TOTALBIZZ; b++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 3.0,BizzInfo[b][bEntrx], BizzInfo[b][bEntry], BizzInfo[b][bEntrz]) && !IsPlayerInRangeOfPoint(playerid, 3.0,BizzInfo[b][bExitx], BizzInfo[b][bExity], BizzInfo[b][bExitz]) || BizzInfo[b][bLock]) continue;
		foreach(Player,i) if(GetDistanceBetweenPlayers(playerid,i) < 15 && PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] > 2) null++;
		null_++;
		if(null < 2) return SendClientMessage(playerid, COLOR_GREY,"You must have at least 2 witnesses with you!");
		BizzInfo[b][bLock] = 1;
		SendClientMessage(playerid, COLOR_GRAD1, "You closed your business");
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		SaveBizz(b);
		return true;
	}
	if(null_ == 0) return SendClientMessage(playerid, COLOR_GREY,"You must be at the business!");
	return true;
}
CMD:setdrugsprice(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"You are not a bandit!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setdrugsprice [number]");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 319.1909,1119.4548,1083.8828)) return SendClientMessage ( playerid,  COLOR_GRAD1,  "You should be in a stash!" );
    if(params[0] < 10 || params[0] > 500) return SendClientMessage ( playerid,  COLOR_GRAD1,  "The price for 1 gram of drugs cannot be lower than 500, and more than 500 Money." );
    if(GZInfo[47][gFrak] != PlayerInfo[playerid][pLeader]) return SendClientMessage ( playerid,  COLOR_GRAD1,  "Only available to the leader of the gang that owns the drug den." );
    pricelist = params[0];
	SendMes(playerid,-1,"You have set the price for drugs at: %d bucks!",params[0]);
	format(stringer1, sizeof (stringer1),  "Stash\n Under control:\n %s\nThe price of drugs: %d",GetPlayerFracName[GZInfo[47][gFrak]],pricelist);
    UpdateDynamic3DTextLabelText(PritonLable,COLOR_GREEN,stringer1);
	return true;
}
CMD:lomka(playerid, params[])
{
	if(GetPVarInt(playerid,"anti_flood_lomka") > gettime()) return SendClientMessage(playerid, -1, "{FFCC00}Wait 10 seconds to use this commands {FF0000}/lomka.");
	if(PlayerInfo[playerid][pMember] != 4) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /lomka [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return true;
	SetPlayerWeather(params[0], 14);
	SendMes(playerid,COLOR_GREEN,"You saved %s from Drugs symptoms",PlayerInfo[params[0]][pNames]);
	SendMes(params[0],COLOR_GREEN,"Medic %s saved you from Drugs symptoms",PlayerInfo[playerid][pNames]);
	FIXES_ApplyAnimation(params[0],"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid,"anti_flood_lomka",gettime()+10);
	if(GetPVarInt(params[0], "CurrentPlayerDrug")) {
		DeletePVar(playerid, "CurrentPlayerDrug");
		ClearPlayerDrugEffects(playerid);
	}
	return true;
}
CMD:heal(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 4 || (TeamPain[playerid] != 0 && StartPaintBall == 2)) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /heal [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "There is no such player, or is it you!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "This person is far from you!");
	format(stringer1, sizeof(stringer1), "You offered to cure %s for %d Money.",PlayerInfo[params[0]][pNames],healpric);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,sizeof(stringer1), "Do you want to be cured for %d Money?",healpric);
	ShowPlayerDialog(params[0],5522,DIALOG_STYLE_MSGBOX,"Treatment", stringer1, "Yes", "No");
	HealOffer[params[0]] = playerid;
	HealPrice[params[0]] = healpric;
	return true;
}
CMD:back(playerid) {
	if(!GetPVarFloat(playerid, "BackX")) return true;
	SetPPos(playerid, GetPVarFloat(playerid, "BackX"), GetPVarFloat(playerid, "BackY"), GetPVarFloat(playerid, "BackZ"));
	SetPlayerInteriorEx(playerid, GetPVarInt(playerid, "BackIn"));
	SetPlayerVirtualWorldEx(playerid, GetPVarInt(playerid, "BackVw"));
	DeletePVar(playerid, "BackX"), DeletePVar(playerid, "BackY"), DeletePVar(playerid, "BackZ"), DeletePVar(playerid, "BackIn"), DeletePVar(playerid, "BackVw");
	SendClientMessage(playerid, COLOR_WHITE, "You have been successfully teleported!");
	return true;
}
CMD:bank(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2033.3008,-731.7920,1121.0779) && !GetPVarInt(playerid, "InBank")) return true;
	ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Banking services", "{ffffff}[1] Account management\n[2] Transfer to business account\n[3] House Tax Pay\n[4] Pick up money for the house\n[5] Order business products\n[6] Buy Gold Bar\n[7] Sell Gold Bar", "Select", "Close");
	return true;
}
/*CMD:report(playerid, params[])
{
	if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Your report is blocked!");
	if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "There is a time limit for sending a complaint, please wait.");
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /report [message]");
	SendMes(playerid,0x00cb00ff,"%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, params[0]);
	format(stringer, sizeof(stringer), "%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, params[0]);
	SCMAH(0x00cb00ff,stringer);
	strmid(RepInfo[playerid][Reptext], params[0], 0, Reptext_SIZE, Reptext_SIZE);
	SetPVarInt(playerid,"RepUn",1);
	SendClientMessage(playerid, COLOR_WHITE, "Wait, the adminstrators will answer you shortly.");
	SetPVarInt(playerid,"AntiFloodRep",gettime() + 15);
	return true;
}*/
alias:report("rep");
CMD:report(playerid, params[])
{
    if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Don't flood u already submited a report right now!");
    if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Please don't flood in report.");
    if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_GRAD3, "USAGE: /report [report]");
    format(stringer, sizeof(stringer), "{328fed}[R] {ffff00}%s[%d]{ffffff}: %s", PlayerInfo[playerid][pNames], playerid, params[0]);
    SCMAH(0x00cb00ff,stringer);
    GameTextForPlayer(playerid, "~b~~h~+report", 5000, 1);
    strmid(RepInfo[playerid][Reptext], params[0], 0, Reptext_SIZE, Reptext_SIZE);
    SetPVarInt(playerid,"RepUn",1);
    SendClientMessage(playerid, COLOR_GREEN,"* {328fed}Thanks for submited report, if you need help please use {ffff00}/ask");
    SendClientMessage(playerid, COLOR_GREEN, "* {328fed}Use {ffff00}/ask {328fed}to talk with server helpers");
    SetPVarInt(playerid,"AntiFloodRep",gettime() + 10);
    return true;
}
/*CMD:ask(playerid, params[])
{
    if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Don't flood u already submited a report right now!");
    if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "flood off");
    if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_GRAD3, "USAGE: /ask [question]");
    format(stringer, sizeof(stringer), "{bd0d00}[ASK]%s[%d]: {ffffff}%s", PlayerInfo[playerid][pNames], playerid, params[0]);
    SendHelperMessage(0x00cb00ff,stringer);
    GameTextForPlayer(playerid, "~b~~h~+ask", 5000, 1);
    strmid(RepInfo[playerid][Reptext], params[0], 0, Reptext_SIZE, Reptext_SIZE);
    SetPVarInt(playerid,"RepUn",1);
    SendClientMessage(playerid, COLOR_GREEN,"* {ffffff}Thanks for submited ask, if you have any questions");
    SendClientMessage(playerid, COLOR_GREEN, "* {ffffff}Use /faq for questions");
    SetPVarInt(playerid,"AntiFloodRep",gettime() + 10);
    return true;
}*/
CMD:ask(playerid, params[])
{
    if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Don't flood you already submited a question right now!");
    if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "You can send a question again after 30 seconds");
    if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_GRAD3, "USAGE: /ask [question]");
    format(stringer, sizeof(stringer), "{328fed}[ASK]%s[%d]: {ffffff}%s", PlayerInfo[playerid][pNames], playerid, params[0]);
    SendHelperMessage(0x00cb00ff,stringer);
    GameTextForPlayer(playerid, "~b~~h~+ask", 5000, 1);
    strmid(RepInfo[playerid][Reptext], params[0], 0, Reptext_SIZE, Reptext_SIZE);
    SetPVarInt(playerid,"RepUn",1);
//    SendClientMessage(playerid, COLOR_GREEN,"* {ffffff}Thanks for submited ask, if you have any questions use {}/faq");
    SendClientMessage(playerid, COLOR_GREEN, "* {328fed}Thanks for submited a ask ticket");
    SetPVarInt(playerid,"AntiFloodRep",gettime() + 30);
    return true;
}
CMD:ls12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 1307.3856, -1427.6573, 59.0313);
    SetPlayerCameraLookAt(playerid, 1306.5116, -1427.1604, 58.3963);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
	return true;
}
CMD:swat12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 744.9391, -1306.9321, 30.3434);
    SetPlayerCameraLookAt(playerid, 745.2365, -1307.8923, 29.8834);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
	return true;
}
CMD:sfpd12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, -1638.6238, 651.3376, 25.9294);
    SetPlayerCameraLookAt(playerid, -1637.8636, 651.9771, 25.5095);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
 	return true;
}
CMD:lvpd12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 2214.8625, 2443.0420, 31.4532);
    SetPlayerCameraLookAt(playerid, 2215.7161, 2443.5713, 30.3934);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
	return true;
}
CMD:lv12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 69.6693, 1836.7369, 62.8695);
    SetPlayerCameraLookAt(playerid, 70.6021, 1837.0946, 62.4046);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
	return true;
}
CMD:lsp12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 86.8200, -1513.3700, 19.1400);
    SetPlayerCameraLookAt(playerid, 85.9400, -1513.8300, 18.6300);
	SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
    return true;
}
CMD:lspd12918(playerid, params[])
{
    SetPlayerCameraPos(playerid, 1491.2712, -1633.0273, 51.5680);
    SetPlayerCameraLookAt(playerid, 1492.1599, -1633.4965, 50.8430);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
    return true;
}
CMD:clist(playerid, params[])
{
    if(IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Gangs have this feature disabled!");
	new dialog[512];
	strcat(dialog, "[0]	Turn off the color\n[1]	Green\n[2] Light green\n[3]	Bright green\n[4] Turquoise\n[5] Yellow-green\n[6] Dark green\n[7] grey-green\n[8] Red\n[9] Bright red\n[10] Orange\n[11] Brown\n[12] Dark red\n[13] Grey-red\n[14] Yellow-orange\n[15] Crimson\n[16] Pink\n[17] Blue\n[18] Light Blue\n[19] Steel Blue\n[20] Blue-Green\n[21] Dark Blue\n[22] Purple\n");
	strcat(dialog, "[23] Indigo\n[24] Gray Blue\n[25] Yellow\n[26] Corn\n[27] Gold\n[28] Old Gold\n[29] Olive\n[30] Gray\n[31] Silver\n[32] Black\n[33] White");
	ShowPlayerDialog(playerid,56,DIALOG_STYLE_LIST, "Color",dialog, "Select", "Cancle");
	return true;
}
CMD:showudost(playerid, params[])
{
	if(!IsACop(playerid) || !IsAArm(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You don't have a license.");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new ttext[32];
	if(PlayerInfo[playerid][pMember] == 0) { ttext = "Citizen"; }
	else if(PlayerInfo[playerid][pMember] == 1) { ttext = "LSPD"; }
	else if(PlayerInfo[playerid][pMember] == 2) { ttext = "FBI"; }
	else if(PlayerInfo[playerid][pMember] == 10) { ttext = "SFPD"; }
	else if(PlayerInfo[playerid][pMember] == 21) { ttext = "LVPD"; }
	else if(PlayerInfo[playerid][pMember] == 26) { ttext = "Administration of the President"; }
	else if(PlayerInfo[playerid][pMember] == 25) { ttext = "SAPD SWAT"; }
	else if(PlayerInfo[playerid][pMember] == 25) { ttext = "City Hall"; }
	else if(PlayerInfo[playerid][pMember] == 3) { ttext = "SFA"; }
	else if(PlayerInfo[playerid][pMember] == 19) { ttext = "LVA"; }
	new msg[] = "Name: %s\nphone number: %i\nAge: %i\nDivision: %s\n Rank: %i";
	format(stringer1, sizeof(stringer1), msg,PlayerInfo[playerid][pNames],PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pLevel],ttext,PlayerInfo[playerid][pRank]);
	ShowPlayerDialog(params[0], 10036, DIALOG_STYLE_MSGBOX, "Certificate",stringer1, "Ready", "");
	format(stringer1, sizeof(stringer1), "%s Showed his credentials to %s'o.",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	format(stringer1,sizeof(stringer1), "Showed his license. %s'o",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:mask(playerid, params[])
{
	if(PlayerInfo[playerid][pMask] == 0)
	{
	    if(!PlayerInfo[playerid][Texts][2]) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have a mask!");
//		SetPlayerColor(playerid, 0x7a766700);
		SetPlayerColor(playerid, 0xffffffAA);
		PlayerInfo[playerid][pMask] = 600;
		PlayerInfo[playerid][Texts][2] --;
		FIXES_ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 0, 0, 0, 0);
		SendClientMessage(playerid, -1, "{3399FF}Your GPS position is hidden for 10 minutes!");
		SetPlayerChatBubble(playerid, "{FF9900}Wears a mask", -1, 20.0, 500);
		GameTextForPlayer(playerid, "~b~ INVISABLE ON", 800, 4);
		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
		format(stringer1, sizeof(stringer1), "%s took out a mask", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer1);
		SetPlayerAttachedObject(playerid, 0, 19801, 2, 0.079999, 0.032000, 0.000000, 175.699966, 85.100021, -6.399999, 1.160000, 1.205000, 1.289000);
	}
	else
	{
		SetPlayerToTeamColor(playerid);
		PlayerInfo[playerid][pMask] = 0;
		format(stringer1, sizeof(stringer1), "%s removed the mask",  PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 20.0, COLOR_PURPLE, stringer1);
		RemovePlayerAttachedObject(playerid, 0);
	}
	return true;
}
CMD:putkazna(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /putkazna [quantity]");
	if(params[0] > 5000000 || params[0] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 and more than 5,000,000 Moneys");
	if(PlayerInfo[playerid][pCash] < params[0]) return SendClientMessage(playerid,COLOR_GREY,"You don't have enough money");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0,1482.2699,-1802.7987,2995.6277)) return SendClientMessage(playerid, COLOR_WHITE, "You are far from the donation site!");
	PlayerInfo[playerid][pCash] -= params[0];
	kazna += params[0];
	SendMes(playerid, 0x6495EDFF, "You increased the state treasury by %s, now the treasury contains %s Money.", formatInt(params[0]), formatInt(kazna));
	format(stringer1, sizeof(stringer1), "Placed %s Money in the state treasury.", formatInt(params[0]));
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
	format(stringer1,sizeof(stringer1),"{C2A2DA}State Treasury: {FFD700}%s\n{C2A2DA}State Tax: {FFD700}%s\n{C2A2DA}Donate money enter '/putkazna'", formatInt(kazna), formatInt(nalog));
	Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
	SaveMeria();
	return true;
}
/*CMD:takekazna(playerid, params[])
{
    if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pLeader] == 26)
	{
	    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /takekazna [quantity]");
	    if(params[0] > 5000000 || params[0] < 1) return SendClientMessage(playerid,COLOR_WHITE,"ERROR: Cannot be less than 1 and more than 5,000,000 Moneys");
	    if(kazna < params[0]) return SendClientMessage(playerid,COLOR_GREY,"There is not that much money in the treasury!");
	    if(!IsPlayerInRangeOfPoint(playerid, 15.0,1482.2699,-1802.7987,2995.6277)) return SendClientMessage(playerid, COLOR_WHITE, "You must be at City Hall.");
	    GiveMoney(playerid, params[0]);
	    kazna -= params[0];
	    SendMes(playerid, 0x6495EDFF, "You withdrew %s Money from the state treasury, now in the treasury %s Money.", formatInt(params[0]), formatInt(kazna));
	    format(stringer1,sizeof(stringer1),"{C2A2DA}State Treasury: {FFD700}%s\n{C2A2DA}State Tax: {FFD700}%s\n{C2A2DA}Donate money enter '/putkazna'", formatInt(kazna), formatInt(nalog));
	    Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
	    SaveMeria();
	}
	return true;
}
CMD:setleader(playerid, params[])
{
	if(!is_cmd_allow(playerid, CMD_setleader) && PlayerInfo[playerid][pAlcoInvenxua] < 11) return SendClientMessage(playerid, COLOR_GRAD1,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setleader [id] [organization id (1 - 28)]");
	if(params[1] > 28 || params[1] < 1 || params[1] == 22 || params[1] == 20 || params[1] == 9 || params[1] == 8) return SendClientMessage(playerid, COLOR_GREY, "organization id must be from 1 to 28!");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player is not in the game");
	if(PlayerInfo[params[0]][pMember] > 0 && !PlayerInfo[params[0]][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD1,"This player is in a organization already.");
	if(PlayerInfo[params[0]][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GRAD1,"This player have a warn.");
	new query[400];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `pLeader` = '%d' LIMIT 1", params[1]);
	mysql_function_query(connects, query, true, "SetLeader", "ddd", playerid, params[0], params[1]);
	return 1;
}

publics: SetLeader(playerid, issuerid, fraction) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) {
		SendMes(issuerid, COLOR_BLUE, "Adminstrator %s maked you the leader of %s", PlayerInfo[playerid][pNames], GetPlayerFracName[fraction]);
		format(stringer1, sizeof(stringer1), "Adminstrator %s maked %s the leader of organization %s (%d).",PlayerInfo[playerid][pNames], PlayerInfo[issuerid][pNames],GetPlayerFracName[fraction],fraction);
		SendClientMessageToAll(COLOR_GREY,stringer1);
		switch(fraction)
		{
			case 1,10,21: PlayerInfo[issuerid][pRank] = 15, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (283) : (76);
			case 2: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (165) : (141);
			case 3,19: PlayerInfo[issuerid][pRank] = 15, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (61) : (191);
			case 4: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (70) : (219);
			case 5: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (113) : (214);
			case 6: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (186) : (169);
			case 7: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (147) : (150);
			case 11: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (59) : (172);
			case 12: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (104) : (195);
			case 13: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (110) : (190);
			case 14: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (272) : (214);
			case 15: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (270) : (56);
			case 16: PlayerInfo[issuerid][pRank] = 13, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (187) : (211);
			case 17: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (115) : (41);
			case 18: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (173) : (226);
			case 23: PlayerInfo[issuerid][pRank] = 12, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (294) : (169);
			case 24: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (67) : (55);
			case 25: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (285) : (76);
			case 26: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (295) : (12);
			case 27,28: PlayerInfo[issuerid][pRank] = 5, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (189) : (172);
			default: return SendClientMessage(playerid, COLOR_WHITE, "This feature has been deleted.");
		}
		SetPlayerSkinEx(issuerid, PlayerInfo[issuerid][pModel]);
		SetPlayerArmour(issuerid,0);
		SetPlayerHealthAC(issuerid,100);
		PlayerInfo[issuerid][pLeader] = fraction;
		PlayerInfo[issuerid][pMember] = fraction;
		PlayerInfo[issuerid][pJob] = 0;
		if(!PlayerInfo[issuerid][pAlcoInvenxua]) PlayerInfo[issuerid][pVigs] = 0;
		SetPlayerToTeamColor(issuerid);
		format(stringer1, sizeof(stringer1), "the leader of the organization %s",GetPlayerFracName[fraction]);
		Admin_Log(playerid, stringer1, PlayerInfo[issuerid][pNames], gettime());
		switch(PlayerInfo[issuerid][pMember])
		{
			case 1..4, 7, 10, 11, 19, 21, 25, 26: PlayerInfo[issuerid][pOdet] = 1, SendClientMessage(issuerid,COLOR_BLUE,"Your working day has started successfully!");
		}
		new query[400];
		format(query, sizeof(query), "UPDATE `accounts` SET `pMember` = '%d', `pLeader` = '%d', `pRank` = '%d', `pModel` = '%d', `pJob` = '0', `odet` = '%d' , `vigs` = '%d' WHERE `pID` = '%d'",fraction,fraction,PlayerInfo[issuerid][pRank],PlayerInfo[issuerid][pModel],PlayerInfo[issuerid][pOdet],PlayerInfo[issuerid][pVigs],PlayerInfo[issuerid][pID]);
		mysql_function_query(connects, query, false, "", "");
	} else {
		new string[144], name[24];
		cache_get_field_content(0, "Name", name, connects, 24);
		format(string, sizeof(string), "This is still a movie (%s)! Start, take it off!", name);
		SendClientMessage(playerid, -1, string);
	}
	return true;
}

CMD:templeader(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, 0xCECECEFF, "Usage: /templeader [ID faction]");
	if(params[0] > 28 || params[0] < 1 || params[0] == 22 || params[0] == 20 || params[0] == 9 || params[0] == 8) return SendClientMessage(playerid, COLOR_GREY, "Not less than 1 or more than 28!");
	switch(params[0])
	{
		case 1,10,21: PlayerInfo[playerid][pRank] = 15, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (283) : (76);
		case 2: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (165) : (141);
		case 3,19: PlayerInfo[playerid][pRank] = 15, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (61) : (191);
		case 4: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (70) : (219);
		case 5: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (113) : (214);
		case 6: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (186) : (169);
		case 7: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (147) : (150);
		case 11: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (59) : (172);
		case 12: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (104) : (195);
		case 13: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (110) : (190);
		case 14: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (272) : (214);
		case 15: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (270) : (56);
		case 16: PlayerInfo[playerid][pRank] = 13, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (187) : (211);
		case 17: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (115) : (41);
		case 18: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (173) : (226);
		case 23: PlayerInfo[playerid][pRank] = 12, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (294) : (169);
		case 24: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (67) : (55);
		case 25: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (285) : (76);
		case 26: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (295) : (12);
		case 27,28: PlayerInfo[playerid][pRank] = 5, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (189) : (172);
		default: return SendClientMessage(playerid, COLOR_WHITE, "This faction has been removed.");
	}
	new string[144];
	SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
	SetPlayerArmour(playerid,0);
	SetPlayerHealthAC(playerid,100);
	SetPVarInt(playerid, "TempLeader", 1);
	PlayerInfo[playerid][pLeader] = params[0];
    PlayerInfo[playerid][pMember] = params[0];
    PlayerInfo[playerid][pJob] = 0;
    if(!PlayerInfo[playerid][pAlcoInvenxua]) PlayerInfo[playerid][pVigs] = 0;
    SetPlayerToTeamColor(playerid);
	format(stringer1, sizeof(stringer1), "issued temporary leadership to organization %s",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	format(string, sizeof(string), "Adminstrator %s[%d] gave himself the temporary leadership of the %s organization", PlayerInfo[playerid][pNames], playerid, GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	SendAdminMessage(COLOR_GREY, string);
	switch(PlayerInfo[playerid][pMember])
	{
		case 1..4, 7, 10, 11, 19, 21, 25: PlayerInfo[playerid][pOdet] = 1, SendClientMessage(playerid,COLOR_BLUE,"Your working day has started successfully!");
	}
	return true;
}*/
CMD:templeader(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, 0xCECECEFF, "Usage: /templeader [ID faction]");
	if(params[0] > 28 || params[0] < 1 || params[0] == 22 || params[0] == 20 || params[0] == 9 || params[0] == 8) return SendClientMessage(playerid, COLOR_GREY, "Not less than 1 or more than 28!");
	switch(params[0])
	{
		case 1,10,21: PlayerInfo[playerid][pRank] = 15, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (283) : (76);
		case 2: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (165) : (141);
		case 3,19: PlayerInfo[playerid][pRank] = 15, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (61) : (191);
		case 4: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (70) : (219);
		case 5: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (113) : (214);
		case 6: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (120) : (169);
		case 7: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (147) : (150);
		case 11: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (59) : (172);
		case 12: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (21) : (195);
		case 13: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (47) : (190);
		case 14: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (272) : (214);
		case 15: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (297) : (56);
		case 16: PlayerInfo[playerid][pRank] = 13, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (187) : (211);
		case 17: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (44) : (41);
		case 18: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (273) : (226);
		case 23: PlayerInfo[playerid][pRank] = 12, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (294) : (169);
		case 24: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (67) : (55);
		case 25: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (285) : (76);
		case 26: PlayerInfo[playerid][pRank] = 10, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (295) : (12);
		case 27,28: PlayerInfo[playerid][pRank] = 5, PlayerInfo[playerid][pModel] = (PlayerInfo[playerid][pSex] == 1) ? (189) : (172);
		default: return SendClientMessage(playerid, COLOR_WHITE, "This faction has been removed.");
	}
	new string[144];
	SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
	SetPlayerArmour(playerid,0);
	SetPlayerHealthAC(playerid,100);
	SetPVarInt(playerid, "TempLeader", 1);
	PlayerInfo[playerid][pLeader] = params[0];
    PlayerInfo[playerid][pMember] = params[0];
    PlayerInfo[playerid][pJob] = 0;
    if(!PlayerInfo[playerid][pAlcoInvenxua]) PlayerInfo[playerid][pVigs] = 0;
    SetPlayerToTeamColor(playerid);
	format(stringer1, sizeof(stringer1), "issued temporary leadership to organization %s",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
	format(string, sizeof(string), " her [A] %s[%d] was temporaryed to leadership of %s", PlayerInfo[playerid][pNames], playerid, GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	SendAdminMessage(COLOR_GREY, string);
	switch(PlayerInfo[playerid][pMember])
	{
		case 1..4, 7, 10, 11, 19, 21, 25: PlayerInfo[playerid][pOdet] = 1;
	}
	return true;
}
CMD:setleader(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setleader [id] [organization id (1 - 28)]");
	if(params[1] > 28 || params[1] < 1 || params[1] == 22 || params[1] == 20 || params[1] == 9 || params[1] == 8) return SendClientMessage(playerid, COLOR_GREY, "organization id must be from 1 to 28!");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player is not in the game");
	if(PlayerInfo[params[0]][pMember] > 0 && !PlayerInfo[params[0]][pAlcoInvenxua]) return SendClientMessage(playerid, COLOR_GRAD1,"This player is in a organization already.");
	if(PlayerInfo[params[0]][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GRAD1,"This player have a warn.");
	new query[400];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `pLeader` = '%d' LIMIT 1", params[1]);
	mysql_function_query(connects, query, true, "SetLeader", "ddd", playerid, params[0], params[1]);
	return 1;
}

publics: SetLeader(playerid, issuerid, fraction) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) {
		SendMes(issuerid, COLOR_BLUE, "Adminstrator %s maked you the leader of {ffffff}%s", PlayerInfo[playerid][pNames], GetPlayerFracName[fraction]);
		format(stringer1, sizeof(stringer1), "{b4b5b7}Adminstrator %s maked %s the leader of organization {ffffff}%s.",PlayerInfo[playerid][pNames], PlayerInfo[issuerid][pNames],GetPlayerFracName[fraction]);
		SendClientMessageToAll(COLOR_GREY,stringer1);
		switch(fraction)
		{
			case 1,10,21: PlayerInfo[issuerid][pRank] = 15, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (283) : (76);
			case 2: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (165) : (141);
			case 3,19: PlayerInfo[issuerid][pRank] = 15, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (61) : (191);
			case 4: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (70) : (219);
			case 5: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (113) : (214);
			case 6: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (120) : (169);
			case 7: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (147) : (150);
			case 11: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (59) : (172);
			case 12: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (21) : (195);
			case 13: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (47) : (190);
			case 14: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (272) : (214);
			case 15: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (297) : (56);
			case 16: PlayerInfo[issuerid][pRank] = 13, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (187) : (211);
			case 17: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (44) : (41);
			case 18: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (273) : (226);
			case 23: PlayerInfo[issuerid][pRank] = 12, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (294) : (169);
			case 24: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (67) : (55);
			case 25: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (285) : (76);
			case 26: PlayerInfo[issuerid][pRank] = 10, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (295) : (12);
			case 27,28: PlayerInfo[issuerid][pRank] = 5, PlayerInfo[issuerid][pModel] = (PlayerInfo[issuerid][pSex] == 1) ? (189) : (172);
			default: return SendClientMessage(playerid, COLOR_WHITE, "This feature has been deleted.");
		}
		SetPlayerSkinEx(issuerid, PlayerInfo[issuerid][pModel]);
		SetPlayerArmour(issuerid,0);
		SetPlayerHealthAC(issuerid,100);
		PlayerInfo[issuerid][pLeader] = fraction;
		PlayerInfo[issuerid][pMember] = fraction;
		PlayerInfo[issuerid][pJob] = 0;
		if(!PlayerInfo[issuerid][pAlcoInvenxua]) PlayerInfo[issuerid][pVigs] = 0;
		SetPlayerToTeamColor(issuerid);
		format(stringer1, sizeof(stringer1), "the leader of the organization %s",GetPlayerFracName[fraction]);
		Admin_Log(playerid, stringer1, PlayerInfo[issuerid][pNames], gettime());
		switch(PlayerInfo[issuerid][pMember])
		{
			case 1..4, 7, 10, 11, 19, 21, 25, 26: PlayerInfo[issuerid][pOdet] = 1;
		}
		new query[400];
		format(query, sizeof(query), "UPDATE `accounts` SET `pMember` = '%d', `pLeader` = '%d', `pRank` = '%d', `pModel` = '%d', `pJob` = '0', `odet` = '%d' , `vigs` = '%d' WHERE `pID` = '%d'",fraction,fraction,PlayerInfo[issuerid][pRank],PlayerInfo[issuerid][pModel],PlayerInfo[issuerid][pOdet],PlayerInfo[issuerid][pVigs],PlayerInfo[issuerid][pID]);
		mysql_function_query(connects, query, false, "", "");
	} else {
		new string[144], name[24];
		cache_get_field_content(0, "Name", name, connects, 24);
		format(string, sizeof(string), "This is still a movie (%s)! Start, take it off!", name);
		SendClientMessage(playerid, -1, string);
	}
	return true;
}
CMD:nalog(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pLeader] == 26)
	{
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /nalog [Amount]");
		if(params[0] > 150000 || params[0] < 1000) return SendClientMessage(playerid,COLOR_WHITE,"The tax cannot be less than 1,000 and more than 150,000!");
		if(IsPlayerInRangeOfPoint(playerid, 50.0,1482.2699,-1802.7987,2995.6277) || IsPlayerInRangeOfPoint(playerid, 50.0,2100.1724,743.6107,1097.1689))
		{
			nalog = params[0];
			SendClientMessageToAll(COLOR_WHITE, " ===== [Urgent news] ===== ");
			format(stringer1, sizeof(stringer1), "The state president changed the state tax. Now the worldwide tax is {FFFFFF}%s {6495ED}Money.",formatInt(params[0]));
			SendClientMessageToAll(0x6495EDFF, stringer1);
			format(stringer1,sizeof(stringer1),"{C2A2DA}State Treasury: {FFD700}%s\n{C2A2DA}State Tax: {FFD700}%s\n{C2A2DA}Donate money enter '/putkazna'", formatInt(kazna), formatInt(nalog));
			Update3DTextLabelText(kaznameria, 0xC2A2DAFF, stringer1);
			SaveMeria();
		}
		else return SendClientMessage(playerid,COLOR_WHITE,"Must be in city hall or government building!");
	}
	return true;
}
CMD:election(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 12) return true;
	ShowPlayerDialog(playerid, 8922, 2, "Elections", "Start elections\nEnd elections\nChange candidate names", "Accept", "Cancle");
	return true;
}
CMD:getpick(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(Pick == 0) return SendClientMessage(playerid, COLOR_GREY, "There are no elections in the state!");
	GetPick(playerid, 1);
	return true;
}
CMD:free(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 1) return true;
	{
		if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /free [id] [price]");
		if(PlayerInfo[params[0]][pJailed] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "The man is not in prison!");
		if(params[1] < 100 || params[1] > 1000000) { SendClientMessage(playerid, COLOR_GREY, "The price can't be less 100 and more 1000000!"); return true; }
		if(params[1] == playerid)  return  SendClientMessage(playerid,COLOR_GRAD1, "[ERROR] You have indicated your ID");
		if(!ProxDetectorS(15.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "This person is far from you!");
		format(stringer1, sizeof(stringer1), "[Advocate] You offered to sell it to %s for %s Money",PlayerInfo[params[0]][pNames],formatInt(params[1]));
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "[Advocate] Lawyer %s offers you freedom for %s Money",PlayerInfo[playerid][pNames],formatInt(params[1]));
		SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
		ShowPlayerDialog(params[0],6622,DIALOG_STYLE_MSGBOX,"Lawyer services", "Select a Payment Method:", "Cash", "Bank");
		FreeOffer[params[0]] = playerid;
		FreePrice[params[0]] = params[1];
		SposobOffer[params[0]] = 0;
	}
	return true;
}
CMD:selfie(playerid)
{
	if(!GetPVarInt(playerid,"Selfie"))
	{
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		SendClientMessage(playerid, -1, "� {FFC800}[Clue] {ffffff}lead /headmove , so that your head looks at the camera when taking a selfie.");
		SendClientMessage(playerid, -1, "� {FFC800}[Clue] {ffffff}Click 'F8' , to take a selfie.");
		SendClientMessage(playerid, -1, "� {FFC800}[Clue] {ffffff}Write '/selfie' , to finish filming.");
		SendClientMessage(playerid, -1, "� {FFC800}[Clue] {ffffff}To change the camera position, press the S,A,key'");
		GetPlayerPos(playerid,posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]);
		static Float: n1X, Float: n1Y, Float:PosCam;
		GetPlayerFacingAngle(playerid, PosCam);
		n1X = posCam[playerid][0] + Radius * floatcos(180.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(180.0, degrees);
		SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 270.0);
		FIXES_ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
		SetPVarInt(playerid,"Selfie",1);
		SetPVarInt(playerid,"selfie_knopka",1);
	}
	else
	{
		TogglePlayerControllable(playerid,1);
		SetCameraBehindPlayer(playerid);
		RemovePlayerAttachedObject(playerid, 0);
		FIXES_ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
		DeletePVar(playerid,"Selfie");
		DeletePVar(playerid,"selfie_knopka");
	}
}
CMD:agivevip(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /agivevip [id] [level VIP]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player doesn't exist");
	switch(params[1])
	{
		case 1: SendClientMessage(params[0], COLOR_WHITE, "Congratulations, you have received from the administration {FFA500}Bronze VIP");
		case 2: SendClientMessage(params[0], COLOR_WHITE, "Congratulations, you have received from the administration {FFA500}Silver VIP");
		case 3: SendClientMessage(params[0], COLOR_WHITE, "Congratulations, you have received from the administration {FFA500}Gold VIP");
		default: SendClientMessage(params[0], COLOR_WHITE, "Adminstrator has taken away your VIP account!");
	}
	if(params[2] == 0)
	{
		PlayerInfo[params[0]][pDonateRank] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "- You took the player's VIP Status.");
	}
	else
	{
		PlayerInfo[params[0]][pDonateRank] = params[1];
		SendClientMessage(playerid, COLOR_WHITE, "- You gave the player a VIP Status.");
	}
	return true;
}
CMD:hitmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23) ShowPlayerDialog(playerid,7763,DIALOG_STYLE_LIST,"Laptop","{FF0000}[1] Available contracts\n[2] Check contract\n[3] Cancel order\n[4] {32CD32}Online agency members\n[5] Fake passport\n[6] Wear a mask","Next","Close");
	else return SendClientMessage(playerid, COLOR_WHITE, "You do not know what is on the site");
	return true;
}
CMD:contract(playerid, params[])
{
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /contract [id] [amount]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player doesn't exist or it's you");
	if(PlayerInfo[params[0]][pAlcoInvenxua] > 0 || PlayerInfo[params[0]][pMember] == 23 || PlayerInfo[playerid][pMember] == 23) return SendClientMessage(playerid, COLOR_GREY, "You cannot order this person.");
	if(params[1] < 10000 || params[1] > 10000000) return SendClientMessage(playerid, COLOR_GREY, "The contract amount must be at least $10000, and maximum $1000000!");
	if(IsACop(params[0]) && params[1] < 50000) return SendClientMessage(playerid, COLOR_GREY,"This man's head is worth more than you offer.");
	if(PlayerInfo[params[0]][pContract] > 0) return SendClientMessage(playerid,COLOR_GREY,"This victim has already been ordered, Hitman cannot accept it.");
	if(PlayerInfo[playerid][pCash] < params[1]) return SendClientMessage(playerid,COLOR_GREY,"Have you decided to deceive us? You have no money!");
	PlayerInfo[playerid][pCash] -= params[1];
 	PlayerInfo[params[0]][pHeadValue] += params[1];
    format(stringer1, sizeof(stringer1), "Attention, a new order has arrived, the price of the customer's head is %s Money.", formatInt(params[1]));
	SendFamilyMessage(23, COLOR_YELLOW, stringer1);
	SendMes(playerid,COLOR_WHITE,"You have successfully ordered %s for %s Money.",PlayerInfo[params[0]][pNames],formatInt(params[1]));
	PlayerInfo[params[0]][pContract] = 600;
	return true;
}
CMD:bankup(playerid, params[])
{
    if(keis[playerid] != 1) return SendClientMessage(playerid,COLOR_GRAD1,"You don't have a case with you");
	if(!IsPlayerInRangeOfPoint(playerid,10.0,1919.7749, -1760.5482, 13.5469) && !IsPlayerInRangeOfPoint(playerid,10.0,1361.9775, -1290.5338, 13.3604) && !IsPlayerInRangeOfPoint(playerid,10.0,1137.8004, -1755.2164, 13.5811)) return true;
	GiveBank(playerid, 15000);
	SendClientMessage(playerid,COLOR_GREEN,"You have successfully deposited money into an ATM. To continue, get back in the car!");
	RemovePlayerAttachedObject(playerid,3);
	keis[playerid] = 0;
	return true;
}
CMD:offalend(playerid, params[])
{
    if(PlayerInfo[playerid][pHomez] == 255) return SendClientMessage(playerid,COLOR_GRAD1,"You are not registered in any house.");
    PlayerInfo[playerid][pHomez] = 255;
    SendClientMessage(playerid, COLOR_GREY, "You checked out.");
	return true;
}
CMD:addbizz(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 4) return true;
    return ShowPlayerDialog(playerid, 9150, 2, "Add a business", "Shop 24/7\nRefueling\nPizzeria\nSnack bar (Burger Shot)\nSnack bar (Cluckin Bell)\nClub (Alhambra)\nClub (Jizzy)\nClub (Pig Pen)\nClub (Misty)\nClothing store (Binco)\nClothing store (Victim)\nAmmo (Int 1)\nAmmo (Int 2)\nAmmo (Int 3)\nAccessories store", "Accept", "Cancle");
}
CMD:addzone(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 4) return true;
    new str[50];
    ClearString();
    strcat(stringer,"Create a green zone\n");
    for(new g = 1; g <= TOTALZONE; g++)
    {
    	format(str, 50, "%i. %s\n", GREENZONE[g][grid], GREENZONE[g][grName]);
     	strcat(stringer,str);
	}
 	return ShowPlayerDialog(playerid, 7555, 2, "Green zone", stringer, "Choice", "Close");
}
CMD:setbizprod(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setbizprod [number of products]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
            if(BizzInfo[idx][bType] != 2) {
	        	if(params[0] > 20000 || params[0] < 0) return SendClientMessage(playerid, COLOR_WHITE, "Products cannot be less than 0, or more than 20000.");
			}
			else if(params[0] > 50000 || params[0] < 0) return SendClientMessage(playerid, COLOR_WHITE, "Products cannot be less than 0, or more than 50000.");
			BizzInfo[idx][bProduct] = params[0];
			SaveBizz(idx);
			SendMes(playerid, COLOR_WHITE, "You have replaced %s products for business with %i",BizzInfo[idx][bName], BizzInfo[idx][bProduct]);
			break;
		}
	}
	return true;
}
CMD:setbizmafia(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "d", params[0])) {
	    SendClientMessage(playerid, COLOR_WHITE, "Usage: /setbizmafia [ID mafia]");
		return SendClientMessage(playerid, COLOR_WHITE, "ID mafia: 5 - LCN, 6 - yakuza, 14 - Russian Mafia.");
	}
	if(params[0] != 5 && params[0] != 6 && params[0] != 14) return SendClientMessage(playerid, COLOR_WHITE, "ID mafia: 5 - LCN, 6 - yakuza, 14 - Russian Mafia.");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bMafia] = params[0];
			SaveBizz(idx);
			format(stringer1, sizeof(stringer1), "Adminstrator %s gave %s business to the mafia: %s", PlayerInfo[playerid][pNames], BizzInfo[idx][bName], GetPlayerFracName[params[0]]);
		    SendClientMessageToAll(COLOR_LIGHTRED,stringer1);
			break;
		}
	}
	return 1;
}
CMD:recorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "boomBox")) return SendClientMessage(playerid, -1, "You don't have a tape recorder, buy one from 24/7");
    if(GetPVarInt(playerid, "PlacedBB")) return SendClientMessage(playerid, -1, "Have you already installed the tape recorder?.");
	new Float:BBCoord[4];
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, "BBX", BBCoord[0]);
	SetPVarFloat(playerid, "BBY", BBCoord[1]);
	SetPVarFloat(playerid, "BBZ", BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	foreach(new i: Player)
	{
		if(!GetPVarType(i, "PlacedBB") || !IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) continue;
		return SendClientMessage(playerid, COLOR_WHITE, "The tape recorder is placed on the ground");
	}
	format(stringer1, sizeof(stringer1), "{ea8df7}%s installed a tape recorder", PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2226, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	format(stringer, 128, "Installed: %s (%i)\n/setrecorder - Play a song\n/drecorder - Put away", PlayerInfo[playerid][pNames], playerid);
	SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(stringer, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 15.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
	FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	return 1;
}

CMD:setrecorder(playerid, params[])
{
	if(!GetPVarType(playerid, "PlacedBB")) return SendClientMessage(playerid, -1, "Record player not installed");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) return SendClientMessage(playerid, -1, "You're not near the tape recorder");
	return ShowPlayerDialog(playerid,17504,DIALOG_STYLE_LIST,"{FF6F00}Radio List","{FFFFFF}Record FM\nZaycev FM - Dance\nChanson\nRadio melody\nKiss FM\nSky Radio\nZaycev FM - REP\nCustom melody\nTurn off","Select", "Close");
}

CMD:drecorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "PlacedBB")) return SendClientMessage(playerid, -1, "You didn't put the tape recorder on");
	foreach(new i: Player)
	{
		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
	}
	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
	DeletePVar(playerid, "PlacedBB"); DeletePVar(playerid, "BBLabel");
	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	SendClientMessage(playerid, -1, "You put away the tape recorder");
	DeletePVar(playerid,"boomBox");
	return 1;
}
CMD:fill(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "You must be driving!");
	if(Fuell[GetPlayerVehicleID(playerid)] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Your tank is full!");
	new full;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 2)
		{
		    if(PlayerInfo[playerid][pCash] < (BizzInfo[i][bTill] / 3)*floatround((100-Fuell[GetPlayerVehicleID(playerid)]))) return SendClientMessage(playerid,COLOR_GREY,"You Insufficient funds!");
		    if(BizzInfo[i][bProduct] < floatround((100-Fuell[GetPlayerVehicleID(playerid)])) || BizzInfo[i][bLock] || strcmp(BizzInfo[i][bOwner],"None",true) == 0) return SendClientMessage(playerid,COLOR_GREY,"Gas station doesn't work!");
		    SendMes(playerid,COLOR_BLUE,"You have refueled your car with %i Money!",(BizzInfo[i][bTill] / 3)*floatround((100-Fuell[GetPlayerVehicleID(playerid)])));
		    PlayerInfo[playerid][pCash] -= (BizzInfo[i][bTill] / 3)*floatround((100-Fuell[GetPlayerVehicleID(playerid)]));
		    BizzInfo[i][bProduct] -= floatround((100-Fuell[GetPlayerVehicleID(playerid)]));
		    BizzPay[i] += (BizzInfo[i][bTill] / 3)*floatround((100-Fuell[GetPlayerVehicleID(playerid)]));
		    BizzInfo[i][bMoney] += (BizzInfo[i][bTill] / 3)*floatround((100-Fuell[GetPlayerVehicleID(playerid)]));
		    Fuell[GetPlayerVehicleID(playerid)] = float(100);
			full++;
			break;
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "You must be at the gas station!");
	return true;
}
CMD:fillcar(playerid, params[])
{
	new car = GetNearestVehicle(playerid);
    if(car == -1) return SendClientMessage(playerid,COLOR_GREY,"You must be near the car!");
	if(PlayerInfo[playerid][pFuel] == 0) return SendClientMessage(playerid, COLOR_GREY, "You don't have a canister!");
	if(Fuell[GetPlayerVehicleID(playerid)] + float(20) >= 100) Fuell[car] = float(100);
	else Fuell[car] += float(20);
	PlayerInfo[playerid][pFuelcar] += 20;
	SendMes(playerid,COLOR_WHITE,"You filled %s' car with 20 liters!",VehicleNameS[GetVehicleModel(car)-400]);
	PlayerInfo[playerid][pFuel]--;
	return true;
}
CMD:load(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 5) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "You must be driving a vehicle!");
	if(GetPVarInt(playerid,"ProductID") == 0) return SendClientMessage(playerid,COLOR_GREY,"You are not fulfilling the order!");
	new i = GetPVarInt(playerid,"ProductID");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 552)
	{
        if(!IsPlayerInRangeOfPoint(playerid, 8.0, -1037.3811,-625.9559,32.0078)) return SendClientMessage(playerid,COLOR_GREY,"You must be near the warehouse!");
        SetPVarInt(playerid,"LoadProd",1);
        SendMes(playerid,COLOR_BLUE,"%i liters of gasoline were loaded into the car!",ProductInfo[i][pTill]);
	}
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 440)
	{
        if(!IsPlayerInRangeOfPoint(playerid, 8.0, -18.9035,-269.3631,5.4297)) return SendClientMessage(playerid,COLOR_GREY,"You must be near the warehouse!");
        SetPVarInt(playerid,"LoadProd",1);
        SendMes(playerid,COLOR_BLUE,"%i groceries were loaded into the car!",ProductInfo[i][pTill]);
	}
	return true;
}
CMD:sellbiz(playerid, params[])
{
    if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY,"You don't own a business!");
    if(sscanf(params, "dd",params[0],params[1]))
	{
		ShowPlayerDialog(playerid, 9159, 0, "Sell ??business", "{ffffff}Do you want to sell your business?\n{AFAFAF}(to sell a business to another player enter /sellbiz [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the business back.!", "Yes", "No");
		return true;
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,"Player is offline");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
	if(PlayerInfo[params[0]][pAlcoInvenxua] > 0) return SendClientMessage(playerid, COLOR_GREY, "Player Administrator!");
	if(GetPlayerBizz(params[0]) > 0) return SendClientMessage(playerid, COLOR_GREY,"The player already has a business!");
	if(params[1] < 90000 || params[1] > 2000000000) return SendClientMessage(playerid,COLOR_GREY,"The price cannot be less than 90,000 or more 2000000000.");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "You can't sell a business to yourself.");
	if(!IsPlayerInRangeOfPoint(playerid, 90.0,BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bExitx], BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bExity], BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bExitz])
	    && !IsPlayerInRangeOfPoint(playerid, 10.0,BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntrx], BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntry], BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntrz])) return SendClientMessage(playerid,COLOR_GREY,"To sell a business, you must be near the business.");
	format(stringer1,144,"You offered %s to buy your business. Price: %s Money", PlayerInfo[params[0]][pNames], formatInt(params[1])), SendClientMessage(playerid,0x6495EDFF, stringer1);
	format(stringer1, 144, "%s offered you to buy a business (%s). Price: %s Money", PlayerInfo[playerid][pNames],BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bName], formatInt(params[1]));
	ShowPlayerDialog(params[0], 1009, 0, "Buying a business", stringer1, "Yes", "No");
	SetPVarInt(params[0], "PBizz", playerid);
	SetPVarInt(params[0], "PBizzMoney", params[1]);
	SELL[2][playerid] = params[0];
	return true;
}
CMD:econfig(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	{
		if(sscanf(params, "dd", params[0], params[1]))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Usage: /econfig [select] [Amount]");
			SendClientMessage(playerid, COLOR_WHITE, "[1] Number of rubles distributed(1 - standard ) | [2] Donation and experience multiplier(1 - standard)");
			return true;
		}
		switch(params[0])
		{
			case 1:
			{
				if(params[1] < 1 || params[1] > 100) return SendClientMessage(playerid, COLOR_WHITE, "Valid values: 1 to 100!");
				new string[144];
				Config[sDistRub] = params[1];
				format(string, sizeof(string), "You have set up a distribution of %d rubles every PayDay", params[1]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(stringer1, sizeof(stringer1), "UPDATE `config` SET `distrub` = '%d'", params[1]);
				mysql_function_query(connects, stringer1, false, "", "");
			}
			case 2:
			{
				if(params[1] < 1 || params[1] > 100) return SendClientMessage(playerid, COLOR_WHITE, "Valid values: 1 to 100!");
				new string[144];
				format(string, sizeof(string), "Donation multiplier changed from %d to %d",Config[sDonPower],params[1]);
				SendClientMessage(playerid,-1,string);
				Config[sDonPower] = params[1];
				format(stringer1, sizeof(stringer1), "UPDATE `config` SET `donpower` = '%d'", params[1]);
				mysql_function_query(connects, stringer1, false, "", "");
			}
		}
	}
	return true;
}
CMD:asellbiz(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 2) return true;
	new abizz = 0;
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			format(stringer1, sizeof(stringer1), "Valid values (ID: %d)", idx);
			Admin_Log(playerid, stringer1, BizzInfo[idx][bOwner], gettime());
			strmid(BizzInfo[idx][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			BizzInfo[idx][bLock] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "sold the business.");
			BizzInfo[idx][bBuyPrice] = 0;
			BizzInfo[idx][bMoney] = 0;
			BizzInfo[idx][bLic] = 0;
			BizzInfo[idx][bEnter] = 100;
			BizzInfo[idx][bTill] = 50;
			BizzInfo[idx][bLockTime] = 0;
			BizzInfo[idx][bProduct] = 0;
			SaveBizz(idx);
			UpdateBizz(idx);
			abizz ++;
			break;
		}
	}
	if(abizz == 0) return SendClientMessage(playerid,COLOR_GREY,"Must be located near the business you want to sell.");
	return true;
}
CMD:plist(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 5) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "You must be driving a vehicle!");
	if(GetPlayerVehicleID(playerid) == GetPVarInt(playerid,"JobVehicle"))
	{
        if(GetPVarInt(playerid, "ProductID") > 0) return SendClientMessage(playerid, COLOR_GREY, "You are already completing your order!");
		ProductList(playerid);
 	}
    else SendClientMessage(playerid, COLOR_GREY, "You must be in a vehicle to deliver products.!");
	return 1;
}
CMD:gg(playerid)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 1 && PlayerInfo[playerid][pHelper] < 2) return true;
    if(ggtime > 0) return SendClientMessage(playerid, COLOR_GREY, "At this hour, a wish was already sent to the players :)");
    new nsa[144];
    if(PlayerInfo[playerid][pAlcoInvenxua] > 0) format(nsa, sizeof(nsa), "{FFD700}%s %s: {FFD700}I wish you a pleasant game on our server!", (FD(playerid)) ? "Founder" : "Adminstrator", PlayerInfo[playerid][pNames]);
    else format(nsa, sizeof(nsa), "Game assistant %s[%d]: ready to answer your questions. /mm > Support or /rep [message].", PlayerInfo[playerid][pNames], playerid);
    foreach(new i:Player) SendClientMessage(i,0x99FF33aa,nsa);
    ggtime = 1;
    return 1;
}
CMD:ptp(playerid, params[]) {
	if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /ptp [ID to who] [ID to who]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1]) || playerid == params[0] || playerid == params[1]) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	new Float:PPos[3], string[144];
	GetPlayerPos(params[1], PPos[0], PPos[1], PPos[2]);
	SetPPos(params[0], PPos[0], PPos[1], PPos[2]);
	SetPlayerInteriorEx(params[0], GetPlayerInterior(params[1]));
	SetPlayerVirtualWorldEx(params[0], GetPlayerVirtualWorld(params[1]));
	format(string, sizeof(string), "Adminstrator %s teleported you to the player %s", PlayerInfo[playerid][pNames], PlayerInfo[params[1]][pNames]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "Adminstrator %s teleported a player to you %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	SendClientMessage(params[1], COLOR_WHITE, string);
	format(string, sizeof(string), "Adminstrator %s[%d] teleported %s[%d] To %s[%d]", PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames], params[0], PlayerInfo[params[1]][pNames], params[1]);
	SendAdminMessage(COLOR_GREY, string);
	return true;
}
CMD:materials(playerid,params[])
{
    if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return SendClientMessage(playerid,COLOR_GREY,"You are not a gangster / mafia");
    new param[15];
    if(sscanf(params,"s[32]S()[64]", param, params))
    {
        SendClientMessage(playerid, COLOR_WHITE, " Usage: /materials [name]");
        SendClientMessage(playerid, COLOR_WHITE, " Available gang names: get, put");
        SendClientMessage(playerid, COLOR_WHITE, " Available names for mafias: buy");
        return true;
    }
    if(strcmp(param,"get",true) == 0)
    {
        if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GREY,"You are not a bandit!");
        if(IsPlayerInRangeOfPoint(playerid, 10.0,-1290.9072,501.4489,11.1953))
        {
            if(armmatsf == 0)return SendClientMessage(playerid,COLOR_GRAD1,"SF Army Depot is empty");
            if(PlayerInfo[playerid][pMats] >= 250) return SendClientMessage(playerid,COLOR_GRAD1,"You can't take more");
			SendClientMessage(playerid, 0x6495EDFF, "You took 250 materials from the army warehouse");
			SendClientMessage(playerid, COLOR_GREEN, "Carry the box to the truck (( /materialsput ))");
			PlayerInfo[playerid][pMats] += 250;
			FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
			SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
			FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
			usemats[playerid] = 1;
			armmatsf -= 250;
			SetOtherInt("armmatsf", armmatsf);
        }
        if(IsPlayerInRangeOfPoint(playerid, 10.0,316.8127,-167.5395,999.5938))
        {
		    if(armmatbi == 0)return SendClientMessage(playerid,COLOR_GRAD1,"LV Army warehouse is empty");
			if(PlayerInfo[playerid][pMats] >= 250) return SendClientMessage(playerid,COLOR_GRAD1,"You can't take more");
			SendClientMessage(playerid, 0x6495EDFF, "You took 250 materials from the army warehouse");
			SendClientMessage(playerid, COLOR_GREEN, "Carry the box to the truck (( /materialsput ))");
			PlayerInfo[playerid][pMats] += 250;
			FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
			SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
			FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
			usemats[playerid] = 1;
			armmatbi -= 250;
			SetOtherInt("armmatbi", armmatbi);
        }
    }
    else if(strcmp(param,"put",true) == 0)
    {
        new tmpcar = GetNearestVehicle(playerid);
        if(tmpcar == -1) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
        switch(PlayerInfo[playerid][pMember])
        {
        case 12:
        {
			if(tmpcar != matsfuraballas) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
            if(Furi[tmpcar-matsfuraballas][gBallas] >= 5000) return SendClientMessage(playerid,COLOR_GRAD1,"The van is full");
            if(PlayerInfo[playerid][pMats] < 250) return SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuraballas][gBallas]);
            SendClientMessage(playerid, COLOR_WHITE, "You put 250 mats in the van");
            Furi[tmpcar-matsfuraballas][gBallas] += 250;//
            PlayerInfo[playerid][pMats] -=250;
		    usemats[playerid] = 0;
		    RemovePlayerAttachedObject(playerid, 1);
		    SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuraballas][gBallas]);
	    	return true;
		}
		case 13:
		{
		    if(tmpcar != matsfuravagos) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
            if(Furi[tmpcar-matsfuravagos][gVagos] >= 5000) return SendClientMessage(playerid,COLOR_GRAD1,"The van is full");
		    if(PlayerInfo[playerid][pMats] < 250) return SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuravagos][gVagos]);
			SendClientMessage(playerid, COLOR_WHITE, "You put 250 mats in the van");
			Furi[tmpcar-matsfuravagos][gVagos] += 250;//
			PlayerInfo[playerid][pMats] -=250;
			usemats[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuravagos][gVagos]);
			return true;
		}
		case 15:
		{
		    if(tmpcar != matsfuragrove) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
            if(Furi[tmpcar-matsfuragrove][gGrove]  >= 5000) return  SendClientMessage(playerid,COLOR_GRAD1,"The van is full");
		    if(PlayerInfo[playerid][pMats] < 250) return SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuragrove][gGrove]);
		    SendClientMessage(playerid, COLOR_WHITE, "You put 250 mats in the van");
		    Furi[tmpcar-matsfuragrove][gGrove] += 250;//
			PlayerInfo[playerid][pMats] -=250;
			usemats[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuragrove][gGrove]);
			return true;
		}
		case 17:
		{
		    if(tmpcar != matsfuraactek) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
            if(Furi[tmpcar-matsfuraactek][gAztek]  >= 5000)return SendClientMessage(playerid,COLOR_GRAD1,"The van is full");
			if(PlayerInfo[playerid][pMats] < 250) return SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuraactek][gAztek]);
			SendClientMessage(playerid, COLOR_WHITE, "You put 250 mats in the van");
			Furi[tmpcar-matsfuraactek][gAztek] += 250;//
			PlayerInfo[playerid][pMats] -=250;
			usemats[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfuraactek][gAztek]);
			return true;
		}
		case 18:
		{
		    if(tmpcar != matsfurarifa) return SendClientMessage(playerid,COLOR_GRAD1,"You should be near the van");
            if(Furi[tmpcar-matsfurarifa][gRifa]   >= 5000)return SendClientMessage(playerid,COLOR_GRAD1,"The van is full");
		    if(PlayerInfo[playerid][pMats] < 250) return SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfurarifa][gRifa]);
			SendClientMessage(playerid, COLOR_WHITE, "You put 250 mats in the van");
			Furi[tmpcar-matsfurarifa][gRifa] += 250;//
			PlayerInfo[playerid][pMats] -=250;
			usemats[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendMes(playerid, TEAM_GROVE_COLOR, "Materials %d/5000", Furi[tmpcar-matsfurarifa][gRifa]);
			return true;
		}
	    }
	    return true;
     }
     else if(strcmp(param, "buy",true) == 0)
     {
		new ammo,null;
		if(!ISAMAFIA(playerid)) return SendClientMessage(playerid,COLOR_GREY,"This command is not available to you!");
		for(new b = 1; b <= TOTALBIZZ;b++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 30.0,BizzInfo[b][bExitx],BizzInfo[b][bExity],BizzInfo[b][bExitz]) && GetPlayerVirtualWorld(playerid) == BizzInfo[b][bVirtual] && BizzInfo[b][bType] == 7)
		    {
  				if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,COLOR_GREY,"You cannot use this command");
  				if(sscanf(params, "i", ammo) || ammo < 3 || ammo > 100000) return SendClientMessage(playerid,COLOR_WHITE,"Usage: /materials buy [quantity 3-100000]");
  				if(BizzInfo[b][bProduct] < ammo/3) return SendClientMessage(playerid,COLOR_GREY,"Not enough products!");
  				switch(PlayerInfo[playerid][pMember])
		        {
		            case 14:
		            {
					    if(MafiaBank[0][nRm] < ammo*30 || rmmats+ammo > 1000000) return SendClientMessage(playerid,COLOR_GREY,"The mafia warehouse has insufficient funds / the warehouse is full!");
						rmmats+=ammo;
  			        	MafiaBank[0][nRm]-=ammo*30;
  				        SetOtherInt("rmmats", rmmats);
  				        SetOtherInt("MafiaBank[0][nRm]", MafiaBank[0][nRm]);
		            }
		            case 5:
		            {
		                if(MafiaBank[0][nLcn] < ammo*30 || lcnmats+ammo > 1000000) return SendClientMessage(playerid,COLOR_GREY,"The mafia warehouse has insufficient funds / the warehouse is full!");
						lcnmats+=ammo;
  				        MafiaBank[0][nLcn]-=ammo*30;
		    			SetOtherInt("lcnmats", lcnmats);
		    			SetOtherInt("MafiaBank[0][nLcn]", MafiaBank[0][nLcn]);
					}
					case 6:
					{
						if(MafiaBank[0][nYakuza] < ammo*30 || yakuzamats+ammo > 1000000) return SendClientMessage(playerid,COLOR_GREY,"The mafia warehouse has insufficient funds / the warehouse is full!");
					    yakuzamats+=ammo;
		    			MafiaBank[0][nYakuza]-=ammo*30;
		    			SetOtherInt("yakuzamats", yakuzamats);
		    			SetOtherInt("MafiaBank[0][nYakuza]", MafiaBank[0][nYakuza]);
					}
		        }
   		        BizzInfo[b][bProduct]-=ammo/3;
		        BizzInfo[b][bMoney]+=ammo*30;
                BizzPay[b]+=ammo*30;
		        SendMes(playerid,COLOR_BLUE,"You bought %i materials for the mafia warehouse, cost %i Money!",ammo,ammo*30);
 				null++;
  			    break;
	        }
		}
		if(null == 0) return SendClientMessage(playerid,COLOR_GREY,"You must be in ammo!");
    }
    return true;
}
CMD:buycar(playerid, params[])
{
    if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid,COLOR_WHITE,"You don't have home!");
    if(PlayerInfo[playerid][pVodPrava] == 0) return SendClientMessage(playerid, COLOR_WHITE, "You don't have a driver's license - /Donate");
   	if(IsPlayerInRangeOfPoint(playerid,5.0, 556.5716,-1292.6392,17.2482))
	{
		SetPVarInt(playerid,"AutoShop",1);
		return ShowBuyCar(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1951.2544,293.6375,35.4688))
	{
		SetPVarInt(playerid,"AutoShop",2);
		return ShowPlayerDialog(playerid,2323,0,"Choosing a class","Select the class of cars","C","D");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0,-1657.7015,1210.2267,7.2500))
	{
		SetPVarInt(playerid,"AutoShop",3);
		return ShowPlayerDialog(playerid,2323,0,"Choosing a class","Select the class of cars","A","B");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, 2200.8857,1394.2892,11.0625))
	{
		SetPVarInt(playerid,"AutoShop",4);
		return ShowPlayerDialog(playerid,2323,0,"Choosing a class","Select the class of cars","A","B");
	}
	else SendClientMessage(playerid,COLOR_WHITE,"You are not in the Dealership");
	return true;
}
CMD:setbet(playerid, params[])
{
 	new tableid = GetPlayerNearestDiceTable(playerid);
    if(tableid != -1)
	{
	 	if(CroupierTable[playerid] != tableid || CroupierGame[playerid] != 1) return SendClientMessage(playerid, COLOR_SILVER, "You must be at the gaming table");
		if(PlayerInfo[playerid][pMember] != DRAGONS_FRAC && PlayerInfo[playerid][pMember] != CALIGULAS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You are not a dealer");
		if(StartDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "You should change your clothes");
    	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Usage: /setbet [amount]");
		{
			if(StartDice[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait for the game to end");
			if(DiceTableInfo[tableid][dBank] != 0) return SendClientMessage(playerid, COLOR_SILVER, "Bank must be zero");
			if(params[0] > 100000000 || params[0] < 100000) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Minimum - 1000000, maximum - 100000000");
			{
				new str[128], bet[16];
				DiceTableInfo[tableid][dBet] = params[0];
				format(str, sizeof(str), "You have set a bet of %d Money", params[0]);
				SendClientMessage(playerid, 0x74A402AA, str);
				format(bet, sizeof(bet), "%d$", params[0]);
				TextDrawSetString(DiceBetShow[tableid], bet);
			}
		}
	}
	return true;
}

CMD:newpromo(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 3) return true;
	new pcode[12];
	if(sscanf(params, "s[12]dddd", pcode, params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, -1, "Usage: /newpromo [Name] [Rub] [Used-Times] [Adm(1/0)] [Hours]");
	if(strlen(pcode) < 3 || strlen(pcode) > 12) return SendClientMessage(playerid, -1, "The name of the promocode is from 3 to 12 characters long!");
	if(params[0] < 1) return SendClientMessage(playerid, -1, "You can't make a promocodes's have a lower than 1 rub!");
	if(params[1] < 1) return SendClientMessage(playerid, -1, "Number of times using the power supply, do not remove the other 1!");
	if(params[2] > 1 || params[2] < 0) return SendClientMessage(playerid, -1, "Acceptable value: 1 - Allow admins to use the promocode, 0 - Allow all players to use the promocode");
	if(params[3] < 0) return SendClientMessage(playerid, -1, "Acceptable value: from 0");
	new query[300], string[144];
	format(query, sizeof(query), "INSERT INTO `promocodes` (`Name`, `Value`, `Use`, `aAdmin`, `pHad`) VALUES ('%s', '%d', '%d', '%d', '%d')", pcode, params[0], params[1], params[2], params[3]);
	mysql_function_query(connects, query, false, "", "");
	format(string, sizeof(string), "Promocodes %s cost %d Rub, Successfully created!", pcode, params[0]);
	SendClientMessage(playerid, -1, string);
	return true;
}

CMD:startdice(playerid, params[])
{
	new tableid = GetPlayerNearestDiceTable(playerid);
    if(tableid != -1)
	{
	    if(CroupierTable[playerid] != tableid || CroupierGame[playerid] != 1) return SendClientMessage(playerid, COLOR_SILVER, "You must be at the gaming table");
		if(PlayerInfo[playerid][pMember] != DRAGONS_FRAC && PlayerInfo[playerid][pMember] != CALIGULAS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You are not a dealer");
		if(StartDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "You must change your clothes");
		if(StartDice[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "The game has already started on this table");
		if(DiceTableInfo[tableid][dBet] == 0) return SendClientMessage(playerid, COLOR_SILVER, "You must set the rate");
		{
			new gamers;
		 	foreach (new i : Player)
		    {
				if(ChooseBet[i] == 1 && DiceTable[i] == tableid)
			    {
					gamers++;
				}
			}
			if(gamers < 2) return SendClientMessage(playerid, COLOR_SILVER, "Not enough players to start the game");
			{
			    SendClientMessage(playerid, 0x4395D1AA, "The game has begun!");
				DiceTableInfo[tableid][dTime] = 20;
				StartDice[tableid] = 1;
				TimerDice[tableid] = SetTimerEx("DiceTimer", 800, true, "i", tableid);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_SILVER, "You are too far from the gaming table");
	return true;
}
CMD:roule(playerid, params[])
{
	new tableid = GetPlayerNearestRouleTable(playerid);
    if(tableid != -1)
	{
	    if(CroupierTable[playerid] != tableid || CroupierGame[playerid] != 2) return SendClientMessage(playerid, COLOR_SILVER, "You must be at the gaming table");
		if(PlayerInfo[playerid][pMember] != DRAGONS_FRAC && PlayerInfo[playerid][pMember] != CALIGULAS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You are not a dealer");
		if(StartDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "You must change your clothes");
		if(StartRoule[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "The game has already started");
		{
		    new gamers;
		 	foreach (new i : Player)
		    {
				if(ChooseBet[i] == 1 && RouleTable[i] == tableid)
			    {
					gamers++;
					SendClientMessage(i, 0x4395D1AA, "The game has begun!");
				}
			}
			if(gamers == 0) return SendClientMessage(playerid, COLOR_SILVER, "Not enough players");
			{
			    SendClientMessage(playerid, 0x4395D1AA, "The game has begun!");
			    StartRoule[tableid] = 1;
				RouleTableInfo[tableid][rTime] = 15;
				TimerRoule[tableid] = SetTimerEx("RouleTimer", 1000, true, "d", tableid);
			    TimerRouleGame[tableid] = SetTimerEx("RouleGameTimer", 100, true, "d", tableid);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_SILVER, "You are too far from the gaming table");
	}
	return true;
}
CMD:startblackjack(playerid, params[])
{
    new tableid = GetPlayerNearestBlackJackTable(playerid);
    if(tableid != -1)
    {
		if(CroupierTable[playerid] != tableid || CroupierGame[playerid] != 3) return SendClientMessage(playerid, COLOR_SILVER, "You must be at the gaming table");
		if(PlayerInfo[playerid][pMember] != DRAGONS_FRAC && PlayerInfo[playerid][pMember] != CALIGULAS_FRAC) return SendClientMessage(playerid, COLOR_SILVER, "You are not a dealer");
		if(StartDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "You should change your clothes");
        if(StartBlackJack[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "The game has already started on this table");
		{
			new gamers;
		 	foreach (new i : Player)
		    {
				if(ChooseBet[i] == 1 && BlackJackTable[i] == tableid)
    			{
			    	new rand[2];
					rand[0] = random(13), rand[1] = random(13);
			        gamers++;
			        BlackJackTime[i] = 15;
			        BlackJackPoints[i]+=GetBlackJackPoints(rand[0])+GetBlackJackPoints(rand[1]);
			        if(BlackJackGamer[i] == 0)
			        {
			        	new points[5];
            			valstr(points, BlackJackPoints[i]);
    					TextDrawSetString(BlackJackCardShow[tableid][0], Cards[rand[0]]);
				    	TextDrawSetString(BlackJackCardShow[tableid][1], Cards[rand[1]]);
				    	TextDrawSetString(BlackJackPointsShow[tableid][BlackJackGamer[i]], points);
					}
					else if(BlackJackGamer[i] == 1)
					{
					    new points[5];
         				valstr(points, BlackJackPoints[i]);
					    TextDrawSetString(BlackJackCardShow[tableid][5], Cards[rand[0]]);
				        TextDrawSetString(BlackJackCardShow[tableid][6], Cards[rand[1]]);
					    TextDrawSetString(BlackJackPointsShow[tableid][BlackJackGamer[i]], points);
					}
					if(BlackJackPoints[playerid] > 21)
					{
   						SendClientMessage(playerid, COLOR_RED, "You have scored more than [21] Your bet is lost");
         				ResetPlayerBlackJackGame(playerid);
					}
					else if(BlackJackPoints[i] == 21)
					{
	    				new str[128];
						GiveMoney(playerid, BlackJackBet[playerid]*2);
					    format(str, sizeof(str), "Congratulations, you have Blackjack! You beat the dealer and win %d$", BlackJackBet[i]*2);
					    SendClientMessage(i, COLOR_ORANGE, str);
					    ResetPlayerBlackJackGame(i);
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "You have 15 seconds to draw another card");
					}
				}
			}
			if(gamers == 0) return SendClientMessage(playerid, COLOR_SILVER, "Not enough players to start the game");
			{
				new rand[2];
			    rand[0] = random(13), rand[1] = random(13);
			    StartBlackJack[tableid] = 1;
			    TextDrawSetString(BlackJackCardShow[tableid][10], "ld_card:cdback");
			    TextDrawSetString(BlackJackCardShow[tableid][11], "ld_card:cdback");
				TimerBlackJack[tableid] = SetTimerEx("BlackJackTimer", 1000, true, "d", tableid);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_SILVER, "You are too far from the gaming table");
	}
	return true;
}
CMD:skill(playerid, params[])
{
	if(sscanf(params,"d",params[0]))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: /skill [skill number]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Car thief skill\n[2] Boxer skill");
		return true;
	}
	new nado;
	new skilles;
	switch(params[0])
	{
 		case 1:
   		{
     		switch(PlayerInfo[playerid][pAutoSkill])
       		{
				case 0..60: skilles = 1;
				case 61..120: skilles = 2;
				case 121..180: skilles = 3;
				case 181..240: skilles = 4;
				case 241..1000: SendClientMessage(playerid, COLOR_YELLOW ,"You are a professional car thief. Your skill reaches the maximum.");
    		}
			switch(skilles)
   			{
      			case 1: nado = 60;
		        case 2: nado = 120;
		        case 3: nado = 180;
		        case 4: nado = 240;
	        }
			format(stringer, sizeof(stringer), "Your car thief skill: %d. To get promoted you need to turn in %d more cars.", skilles, nado - PlayerInfo[playerid][pAutoSkill]);
			SendClientMessage(playerid, COLOR_YELLOW ,stringer);
   		}
		case 2:
		{
  			if(PlayerInfo[playerid][pFightSkill] == 5) return SendClientMessage(playerid, COLOR_YELLOW ,"Your boxing skill is maximum. Than according to Socks.");
		    switch(PlayerInfo[playerid][pFightSkill])
		    {
      			case 1: nado = 50;
		        case 2: nado = 100;
		        case 3: nado = 150;
		        case 4: nado = 200;
	        }
			format(stringer, sizeof(stringer), "Your boxer skill: %d. To advance, you need to win another %d battles.", PlayerInfo[playerid][pFightSkill],nado-PlayerInfo[playerid][pFightSkil]);
			SendClientMessage(playerid, COLOR_YELLOW ,stringer);
   		}
	    default: SendClientMessage(playerid, COLOR_GREY, "Wrong number.");
	}
 	return true;
}
CMD:fight(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 14) return SendClientMessage(playerid, COLOR_WHITE, "You don't work as a boxer!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /fight [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(boy[params[0]] == 0 || boy[playerid] == 0)
 	{
  		if(PlayerInfo[playerid][pFightTime] <= 0)
    	{
     		if(ring == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The boxing ring is busy.");
     		if(!ProxDetectorS(15.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GRAD1, "This person is far from you!");
		    SendMes(params[0],COLOR_LIGHTBLUE,"Boxer %s challenges you to a fight. Type /accept fight to accept.", PlayerInfo[playerid][pNames]);
		    SendMes(playerid,COLOR_LIGHTBLUE,"You challenged %s to a duel.", PlayerInfo[params[0]][pNames]);
		    fightid[params[0]] = playerid;
		    fightid[playerid] = params[0];
		    return true;
      	}
        else SendMes(playerid,COLOR_GRAD1,"You will be able to fight the next battle only after %d seconds.", PlayerInfo[playerid][pFightTime]);
    }
	return true;
}
CMD:gunlist(playerid, params[])
{
    if(IsAGang(playerid)) return ShowPlayerDialog(playerid,8321,DIALOG_STYLE_MSGBOX,"List of weapons","\tName\t\tMatov for 1 cartridge\t\tMatov for 1 clip\n________________________________________________________________________\n\n\tDeagle\t\t\t2\t\t\t\t42\n\tSdpistol\t\t2\t\t\t\t102\n\tRifle\t\t\t2\t\t\t\t-\n\tShotgun\t\t2\t\t\t\t-\n\tSMG\t\t\t2\t\t\t\t180\n\tAK47\t\t\t2�\t\t\t\t180\n\tM4\t\t\t2\t\t\t\t300","Close","");
    return true;
}
CMD:get(playerid, params[])
{
    new x_job[30];
    if(sscanf(params,"s[30]",x_job)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /get (fuel/guns/paintball)");
	if(strcmp(x_job,"guns",true) == 0)
	{
	    if(!IsATerra(playerid)) return	SendClientMessage(playerid, COLOR_GRAD1, "You are not in your gang base");
		if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 1)
		{
            switch(PlayerInfo[playerid][pMember])
			{
			    case 15: if(FracBank[0][fLock][0] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Your gang safe is closed.");
				case 12: if(FracBank[0][fLock][1] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Your gang safe is closed.");
				case 13: if(FracBank[0][fLock][2] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Your gang safe is closed.");
				case 17: if(FracBank[0][fLock][3] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Your gang safe is closed.");
				case 18: if(FracBank[0][fLock][4] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Your gang safe is closed.");
			}
		    ShowPlayerDialog(playerid, 9599, 2, "Gang Guns","> Take out other materials\n> Put\n<> {6495ED}Weapon\tCartridges\t�Materials\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Select", "Cancle");
			return true;
		}
	}
	else if(strcmp(x_job, "fuel",true) == 0)
	{
	    new null;
	    for(new b = 1; b <= TOTALBIZZ; b++)
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[b][bEntrx], BizzInfo[b][bEntry], BizzInfo[b][bEntrz]) || BizzInfo[b][bType] != 2) continue;
			new fuel = BizzInfo[b][bTill] / 3;
   			if(BizzInfo[b][bProduct] < 20 || BizzInfo[b][bLock] == 1) return SendClientMessage(playerid,COLOR_GRAD1,"There is not enough fuel at the gas station!");
			if(PlayerInfo[playerid][pFuel] > 3) return SendClientMessage(playerid,COLOR_GREY,"You already have 3 canisters.");
			if(PlayerInfo[playerid][pCash] < fuel * 20) return SendClientMessage(playerid,COLOR_GRAD1, "Not enough money!");
			PlayerInfo[playerid][pCash] -= fuel * 20;
			BizzPay[b] += fuel * 20;
			BizzInfo[b][bMoney] += fuel * 20;
			BizzInfo[b][bProduct] -= 20;
			PlayerInfo[playerid][pFuel]++;
			SendMes(playerid,0x6495EDFF,"You bought a canister with 20 liters of gasoline for %i Money",fuel * 20);
			null++;
			break;
	    }
	    if(null == 0) return SendClientMessage(playerid, COLOR_GREY, "You must be at the gas station!");
    }
	else if(strcmp(x_job, "paintball", true) == 0)
	{
	    if(PaintList)
	    {
	        new winner;
	        stringer[0] = 0;
	        strcat(stringer,"{0004FF}Blue Team:\n");
	        for(new i = 0; i < PaintList; i++) if(PaintInfo[i][Type] == 1) format(stringer1,sizeof(stringer1),"\n%s\t\tKills: %i\t\tDeaths: %i",PaintInfo[i][Name],PaintInfo[i][Kills],PaintInfo[i][Deaths]), strcat(stringer,stringer1), winner+=PaintInfo[i][Kills];
	        format(stringer1,sizeof(stringer1),"\n___________________________________________\nTotal number of kills: %i\n\n",winner), strcat(stringer,stringer1);
	        winner = 0;
	        strcat(stringer,"{FF0000}Team Red:\n");
	        for(new i = 0; i < PaintList; i++) if(PaintInfo[i][Type] == 2) format(stringer1,sizeof(stringer1),"\n%s\t\tKills: %i\t\tDeaths: %i",PaintInfo[i][Name],PaintInfo[i][Kills],PaintInfo[i][Deaths]), strcat(stringer,stringer1), winner+=PaintInfo[i][Kills];
	        format(stringer1,sizeof(stringer1),"\n___________________________________________\nTotal number of kills: %i",winner), strcat(stringer,stringer1);
	        ShowPlayerDialog(playerid, 000, DIALOG_STYLE_MSGBOX, "Match report", stringer, "Close", "");
	    }
   		else ShowPlayerDialog(playerid, 000, DIALOG_STYLE_MSGBOX, "Match report", "Match did not take place!", "Close", "");
   		return true;
	}
	return true;
}
CMD:unloading(playerid, params[])
{
    new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return  SendClientMessage(playerid,COLOR_GREY,"You're not in a van!");
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 3)
	{
	    if(Furi[tmpcar-matsfuraballas][gBallas] <= 0) return SendClientMessage(playerid,COLOR_GREY,"Not enough materials to unload");
		if(IsPlayerInRangeOfPoint(playerid, 6.0,1454.3406,758.1638,11.0234))
		{
		    lcnmats += Furi[tmpcar-matsfuraballas][gBallas];
			Furi[tmpcar-matsfuraballas][gBallas] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuraballas][gBallas]);
			SendMes(playerid,COLOR_WHITE,"LCN Mafia Warehouse: %d/50000", lcnmats);
            SetOtherInt("lcnmats", lcnmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,967.3965,1684.1112,8.8516))
		{
		    rmmats += Furi[tmpcar-matsfuraballas][gBallas];
			Furi[tmpcar-matsfuraballas][gBallas] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuraballas][gBallas]);
			SendMes(playerid,COLOR_WHITE,"Russian mafia warehouse: %d/50000", rmmats);
            SetOtherInt("rmmats", rmmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,1460.3116,2763.8110,10.8203))
		{
		    yakuzamats += Furi[tmpcar-matsfuraballas][gBallas];
			Furi[tmpcar-matsfuraballas][gBallas] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats",Furi[tmpcar-matsfuraballas][gBallas]);
			SendMes(playerid,COLOR_WHITE,"Yakuza warehouse: %d/50000", yakuzamats);
            SetOtherInt("yakuzamats", yakuzamats);
			return true;
		}
		if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
		if(ballasmatbi > 300000) return  SendClientMessage(playerid,COLOR_GREY,"The warehouse is full");
		ballasmatbi += Furi[tmpcar-matsfuraballas][gBallas];
		Furi[tmpcar-matsfuraballas][gBallas] = 0;//
		SendClientMessage(playerid,COLOR_GREEN,"Materials unloaded");
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 3)
	{
	    if(Furi[tmpcar-matsfuravagos][gVagos] <= 0) return SendClientMessage(playerid,COLOR_GREY,"Not enough materials to unload");
		if(IsPlayerInRangeOfPoint(playerid, 6.0,1454.3406,758.1638,11.0234))
		{
		    lcnmats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuravagos][gVagos]);
			SendMes(playerid,COLOR_WHITE,"LCN Mafia Warehouse: %d/50000", lcnmats);
            SetOtherInt("lcnmats", lcnmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuravagos][gVagos]);
			SendMes(playerid,COLOR_WHITE,"Russian mafia warehouse: %d/50000", rmmats);
            SetOtherInt("rmmats", rmmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuravagos][gVagos]);
			SendMes(playerid,COLOR_WHITE,"Yakuza warehouse: %d/50000", yakuzamats);
   			SetOtherInt("yakuzamats", yakuzamats);
			return true;
		}
		if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
		if(vagosmatbi > 300000) return   SendClientMessage(playerid,COLOR_GREY,"The warehouse is full");
		vagosmatbi += Furi[tmpcar-matsfuravagos][gVagos];
		Furi[tmpcar-matsfuravagos][gVagos] = 0;//
		SendClientMessage(playerid,COLOR_GREEN,"Materials unloaded");
	}
	else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfuragrove][gGrove] <= 0) return   SendClientMessage(playerid,COLOR_GREY,"Not enough materials to unload");
		if(IsPlayerInRangeOfPoint(playerid, 6.0,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuragrove][gGrove]);
			SendMes(playerid,COLOR_WHITE,"LCN Mafia Warehouse: %d/50000", lcnmats);
            SetOtherInt("lcnmats", lcnmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuragrove][gGrove]);
			SendMes(playerid,COLOR_WHITE,"Russian mafia warehouse: %d/50000", rmmats);
            SetOtherInt("rmmats", rmmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuragrove][gGrove]);
			SendMes(playerid,COLOR_WHITE,"Yakuza warehouse: %d/50000", yakuzamats);
            SetOtherInt("yakuzamats", yakuzamats);
			return true;
		}
		if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
		if(groovmatbi > 300000) return   SendClientMessage(playerid,COLOR_GREY,"The warehouse is full");
		groovmatbi += Furi[tmpcar-matsfuragrove][gGrove];
		Furi[tmpcar-matsfuragrove][gGrove] = 0;//
		SendClientMessage(playerid,COLOR_GREEN,"Materials unloaded");
	}
	else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfuraactek][gAztek] <= 0) return  SendClientMessage(playerid,COLOR_GREY,"Not enough materials to unload");
		if(IsPlayerInRangeOfPoint(playerid, 6.0,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuraactek][gAztek]);
			SendMes(playerid,COLOR_WHITE,"LCN Mafia Warehouse: %d/50000", lcnmats);
            SetOtherInt("lcnmats", lcnmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuraactek][gAztek]);
			SendMes(playerid,COLOR_WHITE,"Russian mafia warehouse: %d/50000", rmmats);
            SetOtherInt("rmmats", rmmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfuraactek][gAztek]);
			SendMes(playerid,COLOR_WHITE,"Yakuza warehouse: %d/50000", yakuzamats);
            SetOtherInt("yakuzamats", yakuzamats);
			return true;
		}
		if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
		if(aztekmatbi > 300000) return SendClientMessage(playerid,COLOR_GREY,"The warehouse is full");
		aztekmatbi += Furi[tmpcar-matsfuraactek][gAztek];
		Furi[tmpcar-matsfuraactek][gAztek] = 0;//
		SendClientMessage(playerid,COLOR_GREEN,"Materials unloaded");
	}
	else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfurarifa][gRifa] <= 0) return  SendClientMessage(playerid,COLOR_GREY,"Not enough materials to unload");
		if(IsPlayerInRangeOfPoint(playerid, 6.0,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfurarifa][gRifa]);
			SendMes(playerid,COLOR_WHITE,"LCN Mafia Warehouse: %d/50000", lcnmats);
            SetOtherInt("lcnmats", lcnmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfurarifa][gRifa]);
			SendMes(playerid,COLOR_WHITE,"Russian mafia warehouse: %d/50000", rmmats);
            SetOtherInt("rmmats", rmmats);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6.0,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;//
			SendMes(playerid,TEAM_GROVE_COLOR,"Materials unloaded! In the van: %d/5000 mats", Furi[tmpcar-matsfurarifa][gRifa]);
			SendMes(playerid,COLOR_WHITE,"Yakuza warehouse: %d/50000", yakuzamats);
            SetOtherInt("yakuzamats", yakuzamats);
			return true;
		}
		if(!IsATerra (playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in your organization base");
		if(rifamatbi > 300000) return   SendClientMessage(playerid,COLOR_GREY,"The warehouse is full");
		rifamatbi += Furi[tmpcar-matsfurarifa][gRifa];
		Furi[tmpcar-matsfurarifa][gRifa] = 0;//
		SendClientMessage(playerid,COLOR_GREEN,"Materials unloaded");
	}
	return true;
}
CMD:newsbank(playerid, params[])
{
    switch(PlayerInfo[playerid][pMember])
    {
        case 16: return SendMes(playerid, 0x6ab1ffaa, "In SAN NEWS bank: %d Money", FracBank[0][fLsnews]);
	}
	return true;
}
CMD:getweapon(playerid, params[])
{
    switch(PlayerInfo[playerid][pMember])
    {
    case 6:
        {
		    if(IsPlayerInRangeOfPoint(playerid, 4.0,1257.1469,-792.7399,1084.2344))//��� getgun
			{
                if(PlayerInfo[playerid][pRank] <= 1)return SendClientMessage(playerid,COLOR_GRAD1,"Weapons can be taken from the 1st rank!");
				ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Take the gun off the shelf Yakuza", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 rounds] ]\n- Mp5 [400 mats/200 rounds]\n- Sdpistol [100 mats/100 rounds])", "Select", "Cancle");
            }
		}
    case 5:
        {
		    if(IsPlayerInRangeOfPoint(playerid, 4.0,1257.1469,-792.7399,1084.2344))//lcn getgun
			{
				if(PlayerInfo[playerid][pRank] <= 1)return SendClientMessage(playerid,COLOR_GRAD1,"Weapons can be taken from the 1st rank!");
				ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Take the gun off the shelf LCN", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 cartridges]\n- Mp5 [400 mats/200 cartridges]\n- Sdpistol [100 mats/100 cartridges])", "Select", "Cancle");
			}
		}
	case 14:
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0,1257.1469,-792.7399,1084.2344))//�� getgun
			{
				if(PlayerInfo[playerid][pRank] <= 1)return SendClientMessage(playerid,COLOR_GRAD1,"Weapons can be taken from the 1st rank!");
				ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Take the gun off the shelf Russian mafia", "- Deagle [70 mats/50 rounds]\n- Shotgun [50 mats/15 rounds]\n- Rifle [100 mats/10 rounds]\n- M4 [500 mats/100 rounds]\n- AK-47 [500 mats/100 cartridges]\n- Mp5 [400 mats/200 cartridges]\n- Sdpistol [100 mats/100 cartridges])", "Select", "Cancle");
			}
		}
	}
	return true;
}
CMD:getgun(playerid, params[])
{
    switch(PlayerInfo[playerid][pMember])
    {
    case 19:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return SendClientMessage(playerid,COLOR_GREY,"You're not in a Hummer!");
			if(armmatbi <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"There are no weapons in the warehouse!");
			if(PlayerInfo[playerid][pGun51Time] > 0) return 	SendClientMessage(playerid,COLOR_GRAD1,"You can pick up a weapon once every 5 minutes");
			GiveWeapon(playerid, 30, 100);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armmatbi -= 500;
			PlayerInfo[playerid][pGun51Time] = 60;
			SetPlayerChatBubble(playerid,"took the weapon from the trunk",COLOR_PURPLE,30.0,10000);
			SendClientMessage(playerid, COLOR_ISPOLZUY,"You took from the trunk: AK-47 (100), Bulletproof vest, Packed rations");
			return true;
		}
	case 3:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return SendClientMessage(playerid,COLOR_GREY,"You're not in a Hummer!");
			if(armmatsf <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"There are no weapons in the warehouse!");
			if(PlayerInfo[playerid][pGunaviaTime] > 0) return SendClientMessage(playerid,COLOR_GRAD1,"You can pick up a weapon once every 5 minutes");
			GiveWeapon(playerid, 31, 100);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armmatsf -= 500;
			PlayerInfo[playerid][pGunaviaTime] = 60;
			SetPlayerChatBubble(playerid,"took the weapon from the trunk",COLOR_PURPLE,30.0,10000);
			SendClientMessage(playerid, COLOR_ISPOLZUY,"You took from the trunk: M4 (100), Body Armor, Packed Rations");
			return true;
		}
	}
	return true;
}
CMD:balance(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 8) return true;
    SendMes(playerid, COLOR_WHITE, "yakuza: %d Money", MafiaBank[0][nYakuza]);
    SendMes(playerid, COLOR_WHITE, "Russian Mafia: %d Money", MafiaBank[0][nRm]);
	SendMes(playerid, COLOR_WHITE, "LCN: %d Money", MafiaBank[0][nLcn]);
	SendMes(playerid, COLOR_WHITE, "SAN NEWS: %d Money", FracBank[0][fLsnews]);
	SendMes(playerid, COLOR_WHITE, "Coffers: %d Money", kazna);
	return true;
}
CMD:gangsafe(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] >= 8)
	{
		SendMes(playerid, COLOR_GRAD1, "In the safe of Zone 51: %d / 50,000 mats", armmatbi);
		SendMes(playerid, COLOR_GRAD1, "In the Aircraft Carrier Army safe: %d/50000 mats", armmatsf);
		SendMes(playerid, COLOR_GRAD1, "In stock FBI %d mats", fbimats);
		SendMes(playerid, COLOR_GRAD1, "In stock LSPD %d/50000 mats", lspdmatbi);
		SendMes(playerid, COLOR_GRAD1, "In stock SFPD %d/50000 mats", sfpdmats);
		SendMes(playerid, COLOR_GRAD1, "In stock LVPD %d/50000 mats", lvpdmats);
		SendMes(playerid, COLOR_GRAD1, "At the Yakuza Mafia mafia safe %d/50000 mats", yakuzamats);
		SendMes(playerid, COLOR_GRAD1, "At the Mafia mafia safe LCN %d/50000 mats", lcnmats);
		SendMes(playerid, COLOR_GRAD1, "In the mafia safe of the Russian Mafia %d/50000 mats", rmmats);
		return true;
	}
    switch(PlayerInfo[playerid][pMember])
	{
	case 19: return SendMes(playerid, 0x6495EDFF, "In the safe of Zone 51 of the army: %d/100000 mats", armmatbi);
	case 2: return SendMes(playerid, 0x6495EDFF, "In stock FBI %d mats", fbimats);
	case 1: return SendMes(playerid, 0x6495EDFF, "In stock LSPD %d/50000 mats", lspdmatbi);
	case 10: return SendMes(playerid, 0x6495EDFF, "In stock SFPD %d/50000 mats", sfpdmats);
	case 6: return SendMes(playerid, 0x6495EDFF, "In the mafia safe %d/50000 mats", yakuzamats);
	case 5: return SendMes(playerid, 0x6495EDFF, "In the mafia safe %d/50000 mats", lcnmats);
	case 14: return SendMes(playerid, 0x6495EDFF, "In the mafia safe %d/50000 mats", rmmats);
	case 21: return SendMes(playerid, 0x6495EDFF, "In stock LVPD %d/50000 mats", lvpdmats);
	case 3: return SendMes(playerid, 0x6495EDFF, "In the SF Army safe: %d/50000 mats", armmatsf);
	case 12: return SendMes(playerid, 0x6495EDFF, "In your gang safe %d mats", ballasmatbi);
	case 13: return SendMes(playerid, 0x6495EDFF, "In your gang safe %d mats", vagosmatbi);
	case 15: return SendMes(playerid, 0x6495EDFF, "In your gang safe %d mats", groovmatbi);
	case 17: return SendMes(playerid, 0x6495EDFF, "In your gang safe %d mats", aztekmatbi);
	case 18: return SendMes(playerid, 0x6495EDFF, "In your gang safe %d mats", rifamatbi);
	}
	return true;
}
alias:mystyle("ms");
CMD:mystyle(playerid, params[])
{
	new box = 5000 - PlayerInfo[playerid][pBoxSkill];
	new kongfu = 5000 - PlayerInfo[playerid][pKongfuSkill];
	new kickbox = 5000 - PlayerInfo[playerid][pKickboxSkill];
	format(stringer,sizeof(stringer), "{33CCFF}Boxing fighting style:\n{FFFFFF}- %d hits left until the style prevails\n- To enable the style: /box\n- Total hit: %d\n\n{33CCFF}Kong - Fu style:\n{FFFFFF }- %d hits left until style prevails\n- To enable style: /kongfu\n- Total hit: %d\n\n{33CCFF}Kick - boxing fighting style:\n{FFFFFF}- % left until style prevails d kicks\n- To turn on the style: /kickbox\n- Total filled: %d",
	box,PlayerInfo[playerid][pBoxSkill],kongfu, PlayerInfo[playerid][pKongfuSkill],kickbox,PlayerInfo[playerid][pKickboxSkill]);
	ShowPlayerDialog(playerid,1003,DIALOG_STYLE_MSGBOX,"Fighting Style Skills",stringer, "Ok", "");
	return true;
}
CMD:fgstyle(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 30.0,768.1588,6.5715,1000.7144)) return 	SendClientMessage(playerid, COLOR_GRAD1, "You're not at the gym...");
		ShowPlayerDialog(playerid, 3439, DIALOG_STYLE_LIST, "Martial Arts Lessons", "[0] Start BOX style lesson\n[1] Start KONGFU style lesson\n[2] Start KickBox style lesson\n[3] Complete BOX lesson\n[4] Complete KONGFU lesson \n[5] Complete the KickBox lesson", "Select", "Cancle");
		return true;
	}
	return true;
}
CMD:hotdog(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 3) return SendClientMessage(playerid, COLOR_WHITE, "You're not a shoe seller!");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 588) return SendClientMessage(playerid,COLOR_GREY,"You're not in the car selling hotdog!");
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /hotdog [playerid] [price]");
	if(params[1] < 10 || params[1] > 999) return SendClientMessage(playerid, COLOR_GREY, "The price should be: from 10 to 999!");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you");
	format(stringer1, sizeof(stringer1), "We offered %s hotdog for %d Money",PlayerInfo[params[0]][pNames],params[1]);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1, sizeof(stringer1), "%s offers us a deal for %d Money. (( Usage: /accept hotdog for purchasing from ))",PlayerInfo[playerid][pNames],params[1]);
	SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
	HotdogOffer[params[0]] = playerid;
	HotdogPrice[params[0]] = params[1];
	return true;
}
CMD:setmats(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
	if(sscanf(params, "dd", params[0],params[1]))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Usage: /setmats [number] [quantity]");
	    SendClientMessage(playerid, COLOR_WHITE, "[State]: 1 - Army LV, 2 - Army SF, 3 - FBI, 4 - LSPD, 5 - SFPD, 6 - LVPD");
	    SendClientMessage(playerid, COLOR_WHITE, "[Mafias]: 7 - Yakuza, 8 - LCN, 9 - RM");
	    SendClientMessage(playerid, COLOR_WHITE, "[Gangs]: 10 - Ballas, 11 - Grove, 12 - Vagos, 13 - Rifa, 14 - Aztecas");
	    SendClientMessage(playerid, COLOR_WHITE, "[?]: 15");
		return true;
	}
	switch(params[0])
	{
	    case 1: { armmatbi = params[1]; format(stringer1, sizeof(stringer1), "Army 51 mats changed to: %d", params[1]); }
		case 2: { armmatsf = params[1]; format(stringer1, sizeof(stringer1), "Aircraft carrier army mats changed to: %d", params[1]); }
		case 3: { fbimats = params[1]; format(stringer1, sizeof(stringer1), "FBI mats changed to: %d", params[1]); }
		case 4: { lspdmatbi = params[1]; format(stringer1, sizeof(stringer1), "LSPD mats changed to: %d", params[1]); }
		case 5: { sfpdmats = params[1]; format(stringer1, sizeof(stringer1), "SFPD mats changed to: %d", params[1]); }
		case 6: { lvpdmats = params[1]; format(stringer1, sizeof(stringer1), "LVPD mats changed to: %d", params[1]); }
		case 7: { yakuzamats = params[1]; format(stringer1, sizeof(stringer1), "Yakuza ties changed to: %d", params[1]); }
		case 8: { lcnmats = params[1]; format(stringer1, sizeof(stringer1), "Lcn ties changed to: %d", params[1]); }
		case 9: { rmmats = params[1]; format(stringer1, sizeof(stringer1), "RM mats changed to: %d", params[1]); }
		case 10: { ballasmatbi = params[1]; format(stringer1, sizeof(stringer1), "Ballas mats changed to: %d", params[1]); }
		case 11: { groovmatbi = params[1]; format(stringer1, sizeof(stringer1), "Grove mats changed to: %d", params[1]); }
		case 12: { vagosmatbi = params[1]; format(stringer1, sizeof(stringer1), "Vagos mats changed to: %d", params[1]); }
		case 13: { rifamatbi = params[1]; format(stringer1, sizeof(stringer1), "Rifa mats changed to: %d", params[1]); }
		case 14: { aztekmatbi = params[1]; format(stringer1, sizeof(stringer1), "Aztecas mats changed to: %d", params[1]); }
		case 15:
		    {
		        armmatbi = params[1];
				armmatsf = params[1];
				rifamatbi = params[1];
				ballasmatbi = params[1];
				aztekmatbi = params[1];
				vagosmatbi = params[1];
				groovmatbi = params[1];
				lspdmatbi = params[1];
				fbimats = params[1];
				yakuzamats = params[1];
				rmmats = params[1];
				lcnmats = params[1];
				sfpdmats = params[1];
				lvpdmats = params[1];
				format(stringer1, sizeof(stringer1), "Mats for ALL factions have been changed to %d", params[1]);
		    }
			default: format(stringer1, sizeof(stringer1), "[ERROR] Wrong number!");
	}
	SendClientMessage(playerid, COLOR_GRAD1, stringer1);
	SaveOther();
	return true;
}
CMD:setstats(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 1) return true;
	if(sscanf(params, "ddd", params[0],params[1],params[2]))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Usage: /setstat [id] [number] [quantity]");
		SendClientMessage(playerid, COLOR_GRAD2, "[1] Level | [2] Lawful |[3] Materials | [4] Skin | [5] Killings");
	    SendClientMessage(playerid, COLOR_GRAD2, "[6] Phone number | [7] Exp | [8] House key | [9] Business number");
		SendClientMessage(playerid, COLOR_GRAD2, "[10] VIP [1-3] | [11] Player Jobs | [12] First Aid Kits | [13] Money in the Bank");
	    SendClientMessage(playerid, COLOR_GRAD2, "[14] Mobile number | [15] Money | [16] warns | 17] First aid kits");
		SendClientMessage(playerid, COLOR_GRAD2, "[18] Organization Member | [19] Boxing Skill | [20] Boxing Time");
	    SendClientMessage(playerid, COLOR_GRAD2, "[21] Boxing | [22] Kong Fu | [23] KickBoxing | [24] Respect | [25] Running");
		SendClientMessage(playerid, COLOR_GRAD2, "[26] Car | [27] Car | [28] Drug addiction");
	    SendClientMessage(playerid, COLOR_GRAD2, "[29] Faction Skin | [30] Gender | [31] Percents | [32] Rob Time | [33] faction point");
		return true;
    }
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player doesn't exist");
	switch(params[1])
	{
	case 1: { PlayerInfo[params[0]][pLevel] = params[2]; SendMes(playerid,COLOR_GRAD1, "LVL of the player is changed to: %d", params[2]); }
	case 2: { PlayerInfo[params[0]][pZakonp] = params[2]; SendMes(playerid,COLOR_GRAD1, "Lawful: %d ", params[2]); }
	case 3: { PlayerInfo[params[0]][pMats] = params[2]; SendMes(playerid,COLOR_GRAD1, "Material: %d ", params[2]); }
    case 4: { PlayerInfo[params[0]][pChar] = params[2]; SendMes(playerid,COLOR_GRAD1, "The player's skin is set to: %d", params[2]); }
    case 5: { PlayerInfo[params[0]][pKills] = params[2]; SendMes(playerid,COLOR_GRAD1, "The murders: %d", params[2]); }
   	case 6: { PlayerInfo[params[0]][pPnumber] = params[2]; SendMes(playerid,COLOR_GRAD1, "The player's phone number has been changed to: %d", params[2]); }
   	case 7: { PlayerInfo[params[0]][pExp] = params[2]; SendMes(playerid,COLOR_GRAD1, "EXP the player has been changed to: %d", params[2]); }
   	case 8: { PlayerInfo[params[0]][pPhousekey] = params[2]; SendMes(playerid,COLOR_GRAD1, "Home: %d", params[2]); }
  	case 9: { SetPVarInt(params[0], "PlayerBizz", params[2]); SendMes(playerid,COLOR_GRAD1, "???: %d", params[2]); }
   	case 10: { PlayerInfo[params[0]][pDonateRank] = params[2]; SendMes(playerid,COLOR_GRAD1, "VIP level account: %d", params[2]); }
   	case 11: { PlayerInfo[params[0]][pJob] = params[2]; SendMes(playerid,COLOR_GRAD1, "Job %d", params[2]); }
   	case 13: { PlayerInfo[params[0]][pBank] = params[2]; SendMes(playerid,COLOR_GRAD1, "The money in the bank has been changed to %d Money", params[2]); }
    case 15: { PlayerInfo[params[0]][pCash] = params[2]; SendMes(playerid,COLOR_GRAD1, "Money changed to %d Money", params[2]); }
    case 14: { PlayerInfo[params[0]][pMobile] = params[2]; SendMes(playerid,COLOR_GRAD1, "Mobile %d Money", params[2]); }
    case 16: { PlayerInfo[params[0]][pWarns] = params[2]; SendMes(playerid,COLOR_GRAD1, "The number of Varnonovas has been changed to %d ", params[2]); }
    case 17: { PlayerInfo[params[0]][pHeal] = params[2]; SendMes(playerid,COLOR_GRAD1, "The number of dispensaries has been changed to %d ", params[2]); }
    case 18: { PlayerInfo[params[0]][pMember] = params[2]; PlayerInfo[params[0]][pRank] = 1; SendMes(playerid,COLOR_GRAD1, "pMember %d. ", params[2]); }
    case 19: { PlayerInfo[params[0]][pFightSkill] = params[2]; SendMes(playerid,COLOR_GRAD1, "Box skill %d. ", params[2]); }
   	case 20: { PlayerInfo[params[0]][pFightTime] = params[2]; SendMes(playerid,COLOR_GRAD1, "Box time %d. ", params[2]); }
   	case 21: { PlayerInfo[params[0]][pBoxSkill] = params[2]; SendMes(playerid,COLOR_GRAD1, "Box Combat Arts Level Change To %d ", params[2]); }
   	case 22: { PlayerInfo[params[0]][pKongfuSkill] = params[2]; SendMes(playerid,COLOR_GRAD1, "Kong Fu combat arts level%d ", params[2]); }
   	case 23: { PlayerInfo[params[0]][pKickboxSkill] = params[2]; SendMes(playerid,COLOR_GRAD1, "kickbox's martial arts level. %d ", params[2]); }
   	case 26:
	    {
		    if(params[2] < 400 || params[2] > 611) return SendClientMessage(playerid, COLOR_WHITE, "The machine ID cannot be smaller than 400 and larger than 611.!");
		    PlayerInfo[params[0]][pCar] = params[2]; SendMes(playerid,COLOR_GRAD1, "Car 1 %d ", params[2]);
		    DeleteVehicleTune(playerid, 0);
	    }
    case 27:
	    {
		    if(params[2] < 400 || params[2] > 611) return SendClientMessage(playerid, COLOR_WHITE, "The machine ID cannot be smaller than 400 and larger than 611!");
		    PlayerInfo[params[0]][pCar2] = params[2]; SendMes(playerid,COLOR_GRAD1, "Car 2 %d ", params[2]);
		    DeleteVehicleTune(playerid, 1);
	    }
    case 28: { PlayerInfo[params[0]][pNarcoLomka] = params[2]; SendMes(playerid,COLOR_GRAD1, "Drugs Addict %d ", params[2]); }
    case 29: { PlayerInfo[params[0]][pModel] = params[2]; SendMes(playerid,COLOR_GRAD1, "pModel %d ", params[2]); }
    case 30: { PlayerInfo[params[0]][pMarried] = 0; SendMes(playerid,COLOR_GRAD1, "pMarriedTo %d ", params[2]); }
    case 31: { PlayerInfo[params[0]][pProz] = params[2]; SendMes(playerid,COLOR_GRAD1, "Percents %d ", params[2]); }
    case 32: { PlayerInfo[params[0]][pRobTime] = params[2]; SendMes(playerid,COLOR_GRAD1, "Bank time %d ", params[2]); }
    case 33: { PlayerInfo[params[0]][pFacPoint] = params[2]; SendMes(playerid,COLOR_GRAD1, "pFacPoint changed to %d pFacPoint", params[2]); }
    case 34: { PlayerInfo[params[0]][pGold] = params[2]; SendMes(playerid,COLOR_GRAD1, "pGold changed to %d pGold", params[2]); }
    default: return SendClientMessage(playerid, COLOR_GRAD1, "ERROR: Wrong number!");
    }
    OnPlayerUpdateRL(params[0]);
    format(stringer1, sizeof(stringer1), "changed statistics: [%d] - [%d]", params[1], params[2]);
	Admin_Log(playerid, stringer1, PlayerInfo[params[0]][pNames], gettime());
    return true;
}
CMD:setcena(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setcena [house] [price]");
	if(params[0] < 0 || params[0] > 1999) return 1;
	if(params[1] < 0 || params[1] > 100000000) return 1;
	HouseInfo[params[0]][hValue] = params[1];
	SendClientMessage(playerid, COLOR_WHITE, "The price is set");
	return true;
}

CMD:asetpos(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /asetpos [house]");
	if(params[0] < 0 || params[0] > 1999) return 1;
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	HouseInfo[params[0]][hEntrancex] = lwx;
	HouseInfo[params[0]][hEntrancey]= lwy;
	HouseInfo[params[0]][hEntrancez] = lwz;
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hEntrancex` = '%f', `hEntrancey` = '%f', `hEntrancez` = '%f' WHERE hID = '%i'",lwx,lwy,lwz,params[0]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	BuyHouse(params[0]);
	SendClientMessage(playerid, COLOR_GREY, "House coordinates set");
	return true;
}
CMD:setposcar(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setposcar [house]");
	if(params[0] < 0 || params[0] > 1999) return 1;
	new Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	HouseInfo[params[0]][hCarx] = X;
	HouseInfo[params[0]][hCary]= Y;
	HouseInfo[params[0]][hCarz] = Z;
	HouseInfo[params[0]][hCarc] = Angle;
	SendClientMessage(playerid, COLOR_GREY, "Vehicle coordinates set");
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hCarx` = '%f', `hCary` = '%f', `hCarz` = '%f', `hCarc` = '%f' WHERE hID = '%i'",X,Y,Z,Angle,params[0]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return true;
}
CMD:setbizcena(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] != 13) return true;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setbizcena [business] [price]");
	BizzInfo[params[0]][bBuyPrice] = params[1];
	SaveBizz(params[0]);
	SendClientMessage(playerid, COLOR_WHITE, "Business price set");
	return true;
}
CMD:number(playerid, params[])
{
    if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You must be in the game for 2 hours (/mm - Statistics).");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /number [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid,-1,"This person's phone is turned off.");
	format(stringer1,64, "Owner: %s. Telephone: %d",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pPnumber]);
	SendClientMessage(playerid, COLOR_WHITE, stringer1);
	return true;
}
CMD:drink(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 15.0,301.3799,301.4108,1003.5391) || IsPlayerInRangeOfPoint(playerid, 15.0,-58.1986,1362.6846,1080.2109) || IsPlayerInRangeOfPoint(playerid, 15.0,-225.0098,1404.4785,27.7734)
	|| IsPlayerInRangeOfPoint(playerid, 15.0,-46.7964,1399.9537,1084.4297) || IsPlayerInRangeOfPoint(playerid, 15.0,2499.2183,-1710.8123,1014.7422))
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0,301.3799,301.4108,1003.5391))
		{
			if(FracAlko[0][aVagos] <= 2) return SendClientMessage(playerid,COLOR_GREY,"There is not enough alcohol in the gang safe.");
   			if(PlayerInfo[playerid][pMember] != 13) return SendClientMessage(playerid,COLOR_GREY,"You are not in your bar.");
			format(stringer1,sizeof(stringer1),"In the Gang Bar %d products",FracAlko[0][aVagos]);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15.0,-58.1986,1362.6846,1080.2109))
		{
			if(FracAlko[0][aBallas] <= 2) return SendClientMessage(playerid,COLOR_GREY,"There is not enough alcohol in the gang safe.");
			if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid,COLOR_GREY,"You are not in your bar.");
			format(stringer1,sizeof(stringer1),"In the Gang Bar %d products",FracAlko[0][aBallas]);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15.0,-225.0098,1404.4785,27.7734))
		{
			if(FracAlko[0][aRifa] <= 2) return SendClientMessage(playerid,COLOR_GREY,"There is not enough alcohol in the gang safe.");
			if(PlayerInfo[playerid][pMember] != 18) return SendClientMessage(playerid,COLOR_GREY,"You are not in your bar.");
			format(stringer1,sizeof(stringer1),"In the Gang Bar %d products",FracAlko[0][aRifa]);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15.0,-46.7964,1399.9537,1084.4297))
		{
			if(FracAlko[0][aAztec] <= 2) return SendClientMessage(playerid,COLOR_GREY,"There is not enough alcohol in the gang safe.");
			if(PlayerInfo[playerid][pMember] != 17) return SendClientMessage(playerid,COLOR_GREY,"You are not in your bar.");
			format(stringer1,sizeof(stringer1),"In the Gang Bar %d products",FracAlko[0][aAztec]);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15.0,2499.2183,-1710.8123,1014.7422))
		{
			if(FracAlko[0][aGrove] <= 2) return SendClientMessage(playerid,COLOR_GREY,"There is not enough alcohol in the gang safe.");
			if(PlayerInfo[playerid][pMember] != 15) return SendClientMessage(playerid,COLOR_GREY,"You are not in your bar.");
			format(stringer1,sizeof(stringer1),"In the Gang Bar %d products",FracAlko[0][aGrove]);
		}
		ShowPlayerDialog(playerid, 2290, DIALOG_STYLE_LIST, stringer1, "{DCDCDC}Water\t\t{9ACD32}[1 products]\n{DCDCDC}Soda\t\t{9ACD32}[1 products]\n{DCDCDC}Bera\t\t{9ACD32}[2 products]\n{DCDCDC}Wine\t\t{9ACD32}[3 products]\n{DCDCDC}Whiskey\t\t{9ACD32}[4 products]\n{DCDCDC}Absinthe\t\t{9ACD32}[5 products]\n{DCDCDC}Vodka\t\t{9ACD32}[3 products]", "Select", "Cancle");
	}
	return true;
}
CMD:setpassword(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	new Namecng[24], Pass[65];
	if(sscanf(params, "s[24]s[32]", Namecng, Pass)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /setpassword [Name] [Password]");
	format(stringer, sizeof(stringer), "SELECT * FROM `accounts` WHERE `Name` = '%s'", Namecng);
	mysql_tquery(connects, stringer, "OnPlayerCheckPassword", "iss", playerid, Pass, Namecng);
	return true;
}
CMD:box(playerid, params[])
{
	if(PlayerInfo[playerid][pBoxSkill] < 5000) return SendClientMessage(playerid, 0x8C7447AA, "Your skill in this type of martial art is too low");
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	SendClientMessage(playerid, COLOR_WHITE, "Boxing style");
	return true;
}
CMD:agl(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Usage: /agl [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(GetPlayerBizz(params[0]) > 0) BizzInfo[GetPVarInt(params[0],"PlayerBizz")][bLic] = 1;
	PlayerInfo[params[0]][pGunLic] = 1;
	PlayerInfo[params[0]][pBoatLic] = 1;
	PlayerInfo[params[0]][pFishLic] = 1;
	PlayerInfo[params[0]][pFlyLic] = 1;
	PlayerInfo[params[0]][pVodPrava] = 1;
	format(stringer1, sizeof(stringer1), "Adminstrator %s issued a set of licenses to the player %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_GREY,stringer1);
	SendMes(params[0], COLOR_LIGHTRED, "Adminstrator %s issued you a set of licenses.",PlayerInfo[playerid][pNames]);
	return true;
}
CMD:kongfu(playerid, params[])
{
	if(PlayerInfo[playerid][pKongfuSkill] < 5000) return SendClientMessage(playerid, 0x8C7447AA, "Your martial arts skill is too low.");
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	SendClientMessage(playerid, COLOR_WHITE, "���� - �� �����");
	return true;
}
CMD:kickbox(playerid, params[])
{
	if(PlayerInfo[playerid][pKickboxSkill] < 5000) return SendClientMessage(playerid, 0x8C7447AA, "Your skill in this type of martial art is too low");
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
	SendClientMessage(playerid, COLOR_WHITE, " xbox style");
	return true;
}
/*CMD:gorub(playerid) {
    if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{ffff00}You need to play {00cc00}2 {ffff00}hours on the server (/mm - Statistics)!");
    if(PlayerInfo[playerid][pAlcoInvenxua] > 1) return SendClientMessage(playerid, COLOR_GREY, "You are not allowed to use this command");
	if(Distribution != 1) return SendClientMessage(playerid, -1, "It's not time to give out yet!");
	ShowPlayerDialog(playerid, 8401, DIALOG_STYLE_LIST, "Distribution", distrib, "Next", "Cancle");
	return true;
}*/
CMD:limit(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY,"You must be driving");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "� {FFC800}[Hint] {ffffff}Use /limit [speed]");
	if(!params[0])
	{
		if(PlayerInfo[playerid][pLimit])
		{
			PlayerInfo[playerid][pLimit] = 0;
			SendClientMessage(playerid,COLOR_GREEN,"Speed limit lifted");
		}
		else SendClientMessage(playerid,COLOR_GREY,"� {FFC800}[Clue] {ffffff}Use /limit [speed]");
		return true;
	}
	if(params[0] < 10 || params[0] > 150) return SendClientMessage(playerid,COLOR_GREY,"The limit should be from 10 to 150");
	PlayerInfo[playerid][pLimit] = params[0];
	SendClientMessage(playerid,COLOR_GREEN,"Speed ??limit set");
	return true;
}
CMD:engggg(playerid, params[])
{
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(zavodis[playerid] == 0)
	{
		new idd = GetPlayerVehicleID(playerid);
		if(Fuell[idd] <= 0) return SendClientMessage(playerid,COLOR_RED,"There is no benzyne in the car");
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,light,alarm,doorss,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,light,alarm,doorss,bonnet,boot,objective);
		zavodis[playerid] = 1;
	}
	else if(zavodis[playerid] == 1)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,light,alarm,doorss,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,light,alarm,doorss,bonnet,boot,objective);
		zavodis[playerid] = 0;
	}
	return true;
}
CMD:togphone(playerid)
{
	if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAlcoInvenxua] >= 1 || PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pHelper] >= 3)
	{
		if(!PhoneOnline[playerid]) PhoneOnline[playerid] = 1,SendClientMessage(playerid, COLOR_WHITE, "You turned on your telephone");
		else if(PhoneOnline[playerid]) PhoneOnline[playerid] = 0,SendClientMessage(playerid, COLOR_WHITE, "You turned off your telephone");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You are not VIP/Admin/Leader!");
	return true;
}
CMD:divorce(playerid, params[])
{
	if(PlayerInfo[playerid][pMarried] < 1) return SendClientMessage(playerid, COLOR_GREY, "You are not married!");
	SendClientMessage(playerid, COLOR_GREY, "You're divorced, your spouse should do the same");
	PlayerInfo[playerid][pMarried] = 0;
	return true;
}
CMD:propose(playerid, params[])
{
	if(PlayerInfo[playerid][pCash] < 100000) return SendClientMessage(playerid, COLOR_GREY, "You need 100,000 for a wedding!");
	if(PlayerInfo[playerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "Are you already married?!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /propose [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(PlayerInfo[params[0]][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "The person is already married!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
	format(stringer1, sizeof(stringer1), "You proposed marriage %s.", PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1, sizeof(stringer1), "%s offers you his hand and heart. (( Usage: /accept marriage to accept )).", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], COLOR_BLUE, stringer1);
	ProposeOffer[params[0]] = playerid;
	return true;
}
CMD:witness(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /witness [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
	format(stringer1, sizeof(stringer1), "You invited %s to be a witness at your wedding.", PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid, COLOR_BLUE, stringer1);
	format(stringer1, sizeof(stringer1), "%s invites you to be a witness at his/her wedding.((Type /accept witness to accept )).", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], COLOR_BLUE, stringer1);
	MarryWitnessOffer[params[0]] = playerid;
	return true;
}
CMD:take(playerid, params[])
{
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	new memberrs = PlayerInfo[playerid][pMember], rankk = PlayerInfo[playerid][pRank], lead = PlayerInfo[playerid][pLeader];
 	if (memberrs == 1 && rankk >= 10 || lead == 1 || memberrs == 2 && rankk >= 3 || lead == 2 || memberrs == 10 && rankk >= 10 || lead == 10 || memberrs == 21 && rankk >= 10 || lead == 21 || memberrs == 25 && rankk >= 5 || lead == 25 || memberrs == 11 && rankk >= 4)
	{
 		if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "you are connected!");
		ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Take away licenses:", "- Take away a driver's license\n- Take away a flying license \n- Take away a fishing license\n- Take away a license to drive water transport\n- Take away a weapons license\n- Drugs\n- Weapons\n - Materials", "Ok", "Cancle");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You cannot use this command!");
	return true;
}
CMD:home(playerid, params[])
{
	if(PlayerInfo[playerid][pPhousekey] == 255) return true;
	SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
	SendClientMessage(playerid, COLOR_WHITE, "Your house is marked on the map with a red mark");
	gPlayerCheckpointStatus[playerid] = 12;
	PicCP[playerid] = 0;
	return true;
}
CMD:frisk(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not a member of the Police/FBI/Military!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /frisk [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(!ProxDetectorS(3.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "This player is not near you !");
	new text1[20], text2[20];
	if(PlayerInfo[params[0]][p_drugs][0] > 0 || PlayerInfo[params[0]][p_drugs][1] > 0 || PlayerInfo[params[0]][p_drugs][2] > 0 || PlayerInfo[params[0]][p_drugs][3] > 0
	|| PlayerInfo[params[0]][p_drugs][4] > 0 || PlayerInfo[params[0]][p_drugs][5] > 0 || PlayerInfo[params[0]][p_drugs][6] > 0) text1 = "| Drugs.";
	else text1 = "| Empty pocket.";
	if(PlayerInfo[params[0]][pMats] > 0) { text2 = "| Materials."; } else { text2 = "| Empty pocket."; }
	SendMes(playerid, COLOR_WHITE, ":::: Things %s ::::", PlayerInfo[params[0]][pNames]);
	SendMes(playerid, COLOR_GREY, "%s.", text1);
	SendMes(playerid, COLOR_GREY, "%s.", text2);
	format(stringer1, sizeof(stringer1), "%s frisked %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return true;
}
/*CMD:wanted(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "�� �� ��� / FBI / �����.");
    SendClientMessage(playerid, COLOR_WHITE, "��������, �������������:");
    foreach(Player,i) if(PlayerInfo[i][pWanted] > 0) SendMes(playerid, COLOR_WHITE, "���: {6495ED}%s {FFFFFF}ID: {6495ED}%d {FFFFFF}������� �������: {6495ED}%d", PlayerInfo[i][pNames],i,PlayerInfo[i][pWanted]);
	return true;
}*/
CMD:setlevel(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
    if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, -1, "USAGE: /setlevel [id] [LVL]");
    PlayerInfo[params[0]][pLevel] = params[1];
    format(stringer1, sizeof(stringer1), "* Player's was set to %d!", params[1]);
    SendClientMessage(playerid, -1, stringer1);
    return true;
}
CMD:handsup(playerid)
{
    FIXES_ApplyAnimation(playerid,"PED","handsup",4.1,0,1,1,1,0,0);
    return true;
}
CMD:wanted(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not a COP.");
    new string[10002];
    foreach(Player,i) if(PlayerInfo[i][pWanted] > 0) format(string, sizeof(string), "Nickname: %s(%d) Stars: %d", PlayerInfo[i][pNames],i,PlayerInfo[i][pWanted]);
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Wanted List", string, "Close", "");
    return true;
}
CMD:vnn(playerid, params[])
{
    if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_GRAD2, "You don't have a vehicle");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "You are not in a vehicle!");
    if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid, COLOR_GRAD2, "You are not in a vehicle!");
    new house = PlayerInfo[playerid][pPhousekey];
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "/vnn [playerid]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,-1,"This player is not connected/registered to the server");
    if(!ProxDetectorS(8.0, playerid, params[0])) return true;
    new string[10003];
    format(string,sizeof(string), "Vehicle: %s \nVehicle Owner: %s \n", VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400],HouseInfo[house][hOwner]);
    ShowPlayerDialog(params[0], 0000, DIALOG_STYLE_MSGBOX, "Vehicle Pass", string, "Close", "");
    format(stringer1, sizeof(stringer1), "%s shows their car pass to %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
    ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
    return true;
}
CMD:house(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /house [House number]");
    if(params[0] < 0 || params[0] > 1999) return 1;
    SetPPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
    GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return true;
}
CMD:gethome(playerid, params[]) {
	if(!IsPlayerInRangeOfPoint(playerid, 20.0, 1495.3583,1306.8704,1093.2936)) return SendClientMessage(playerid, COLOR_GREY, "You must be in a real estate agency (/gps -> 1 -> 8)");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Usage: /gethome [id Houses]");
	if(params[0] < 0 || params[0] > 1999) return SendClientMessage(playerid, -1, "House with this ID does not exist");
	if(HouseInfo[params[0]][hOwned] > 0) return SendClientMessage(playerid, -1, "The house is not for sale");
	new string[144];
	format(string, sizeof(string), "{FFFFFF}House account: %d$\nRequired for one-time payment: %d$", HouseInfo[params[0]][hTakings], (HouseInfo[params[0]][hKlass] + 1) * 300);
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Information about the house", string, "Close", "");
	return true;
}
CMD:biz(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /biz [business number]");
    if(params[0] < 1 || params[0] > TOTALBIZZ) return 1;
    SetPPos(playerid,BizzInfo[params[0]][bEntrx],BizzInfo[params[0]][bEntry],BizzInfo[params[0]][bEntrz]);
    GameTextForPlayer(playerid, "~w~BUSINES", 5000, 1);
	return true;
}
CMD:chat(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
    if (!BigEar[playerid]) BigEar[playerid] = 1,SendClientMessage(playerid, COLOR_GRAD2, "Listen chat ON");
    else if (BigEar[playerid]) BigEar[playerid] = 0,SendClientMessage(playerid, COLOR_GRAD2, "Listen to chat OFF");
	return true;
}
CMD:chatsms(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 10) return true;
    if (!BigEarSms[playerid]) BigEarSms[playerid] = 1,SendClientMessage(playerid, COLOR_GRAD2, "Listen SMS chat ON");
    else if (BigEarSms[playerid]) BigEarSms[playerid] = 0,SendClientMessage(playerid, COLOR_GRAD2, "Listen to SMS chat OFF");
	return true;
}
CMD:iinvite(playerid, params[])
{
    if(PlayerInfo[playerid][pOdet] == 0 || PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid,COLOR_WHITE,"Not in service!");
    if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][0]) return SendMes(playerid, -1, "Available with %i ranks", gFractionRank[PlayerInfo[playerid][pMember]-1][0]);
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /iinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return 1;
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Player in a vehicle!");
	if(!ProxDetectorS(10.0, playerid, params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,COLOR_WHITE,"This player is so far");
	if(PlayerInfo[params[0]][pLeader] != 0) return SendClientMessage(playerid, COLOR_GREY, "Can't invite a leader.");
	switch(PlayerInfo[playerid][pMember])
	{
		case 1, 10, 21: if(!IsAArm(params[0]) || PlayerInfo[params[0]][pRank] < 3) return SendClientMessage(playerid, COLOR_WHITE, "Player's rank is insufficient to transfer");
		case 2: if((!IsAArm(params[0]) && !IsACop(params[0])) || PlayerInfo[params[0]][pRank] < 5) return SendClientMessage(playerid, COLOR_WHITE, "The player's rank is insufficient to transfer");
		case 25: if((!IsAArm(params[0]) && !IsACop(params[0])) || PlayerInfo[params[0]][pRank] < 4) return SendClientMessage(playerid, COLOR_WHITE, "Player's rank is insufficient to transfer");
		default: return SendClientMessage(playerid,COLOR_GREY,"This function is not available.");
	}
	format(stringer1,sizeof(stringer1),"{FFFFFF}%s invites you to join the Organization: {FF6F00}%s{FFFFFF}\n\nPress \"Yes\" For accecpt \"No\" for refusal!",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	ShowPlayerDialog(params[0], 76, DIALOG_STYLE_MSGBOX, "{FF6F00}Organization Invite",stringer1,"Yes","No");
	SendMes(playerid, -1, "You have offered a invite to the player {FF6F00}%s{FFFFFF} to join the Organization {FF6F00}%s",PlayerInfo[params[0]][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	SetPVarInt(params[0],"Player",playerid);
	return true;
}
CMD:invite(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 0) return 1;
	if(PlayerInfo[playerid][pRank] < gFractionRank[PlayerInfo[playerid][pMember]-1][0]) return SendMes(playerid, -1, "Available with %i ranks", gFractionRank[PlayerInfo[playerid][pMember]-1][0]);
	switch(PlayerInfo[playerid][pMember]) { case 1..4, 7, 10, 11, 19, 21, 25: if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"Not on service!"); }
	if(sscanf(params,"d",params[0])) return	SendClientMessage(playerid, COLOR_WHITE, "Usage: /invite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return 1;
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Player in a vehicle.");
	if(PlayerInfo[params[0]][pMember] > 0 || PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, -1,"The player is already somewhere");
	if(PlayerInfo[params[0]][pWarns] >= 1) return SendClientMessage(playerid, -1,"This player have a warn");
	if(!ProxDetectorS(10.0, playerid, params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,COLOR_WHITE,"This player is so far");
	format(stringer1,sizeof(stringer1),"{FFFFFF}%s invites you to join the Organization: {FF6F00}%s{FFFFFF}\n\nPress \"Yes\" For accecpt \"No\" for refusal!",PlayerInfo[playerid][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	ShowPlayerDialog(params[0], 76, DIALOG_STYLE_MSGBOX, "{FF6F00}Organization Invite",stringer1,"Yes","No");
	SendMes(playerid, -1, "You have offered a invite to the player {FF6F00}%s{FFFFFF} to join the Organization {FF6F00}%s",PlayerInfo[params[0]][pNames],GetPlayerFracName[PlayerInfo[playerid][pMember]]);
	SetPVarInt(params[0],"Player",playerid);
	return 1;
}
CMD:demote(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] != 2) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /demote [id]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    switch(PlayerInfo[params[0]][pMember])
    {
    case 2,4,5..9,11..18,23: return SendClientMessage(playerid, COLOR_GREY, "[ERROR] This man is not in the army/?�!");
    }
    if(PlayerInfo[params[0]][pMember] == 1 || PlayerInfo[params[0]][pMember] == 3 || PlayerInfo[params[0]][pMember] == 10 || PlayerInfo[params[0]][pMember] == 19 || PlayerInfo[params[0]][pMember] == 21 || PlayerInfo[params[0]][pMember] == 25)
    {
        if(PlayerInfo[params[0]][pLeader] != 0) return SendClientMessage(playerid, COLOR_GREY, "You can't fire a leader!");
        if(PlayerInfo[playerid][pLeader] != 2) { if(PlayerInfo[params[0]][pRank] > 10) { return SendClientMessage(playerid, COLOR_GREY, "This person has a rank greater than 10!"); } }
		if(PlayerInfo[params[0]][pRank] < 10 || PlayerInfo[params[0]][pRank] > 1)
		{
		    new rankdemote = PlayerInfo[params[0]][pRank];
		    rankdemote -= 1;
		    if(rankdemote == 0)
		    {
		        if(PlayerInfo[params[0]][pMember] == 1 || PlayerInfo[params[0]][pMember] == 10 || PlayerInfo[params[0]][pMember] == 21 || PlayerInfo[params[0]][pMember] == 25)
				{
				    PlayerInfo[params[0]][pMember] = 19;
					PlayerInfo[params[0]][pRank] = 3;
					InviteSkin[params[0]] = 287;
					ResetWeapons(params[0]);
					format(stringer1, sizeof(stringer1), "FBI agent %s transferred you back to the army", PlayerInfo[playerid][pNames]);
					SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
					format(stringer1, sizeof(stringer1), "You transferred %s back to the army.", PlayerInfo[params[0]][pNames],rankdemote);
					SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
					SendClientMessage(params[0], 0xbc2c2caa, "Use the 'Fast Run' key (spacebar by default))");
					SendClientMessage(params[0], 0xbc2c2caa, "�use the '�up,down' key (W,S by default)");
					SendClientMessage(params[0], COLOR_GREY, "If you accidentally press 'Enter' and the menu disappears, press 'Enter' again");
					SetPlayerInteriorEx(params[0],5);
					SetPlayerVirtualWorldEx(params[0],1);
					ShowMenuForPlayer(ChoseSkin,params[0]);
					new rand = random(sizeof(gInviteSpawns));
					SetPPos(params[0], gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
					SetPlayerFacingAngle(params[0], gInviteSpawns[rand][3]);
					SetPlayerCameraPos(params[0],gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					SetPlayerCameraLookAt(params[0],gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					TogglePlayerControllable(params[0], 0);
					SelectChar[params[0]] = INVALID_PLAYER_ID;
					PlayerInfo[params[0]][pJob] = 0;
					SelectCharID[params[0]] = PlayerInfo[params[0]][pMember];
					SelectCharPlace[params[0]] = 1;
					PlayerInfo[params[0]][pModel] = InviteSkin[params[0]];
					SetPlayerSkinEx(params[0], InviteSkin[params[0]]);
					format(stringer1, sizeof(stringer1), "(FBI agent %s[%d] transferred the player to the army %s[%d].", PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames], params[0]);
		            SendAdminMessage(COLOR_GREY,stringer1);
					return true;
				}
				PlayerInfo[params[0]][pRank] = 0;
				PlayerInfo[params[0]][pMember] = 0;
				PlayerInfo[params[0]][pLeader] = 0;
				if(!PlayerInfo[params[0]][pAlcoInvenxua]) PlayerInfo[params[0]][pVigs] = 0;
				SetPlayerArmour(params[0],0);
				SpawnPlayerEx(params[0]);
				ResetWeapons(params[0]);
				format(stringer1, sizeof(stringer1), "FBI agent %s dismissed you from the army", PlayerInfo[playerid][pNames]);
				SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
				format(stringer1, sizeof(stringer1), "You're a civilian again", PlayerInfo[playerid][pNames]);
				SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
				format(stringer1, sizeof(stringer1), "You dismissed %s from the army.", PlayerInfo[params[0]][pNames]);
				SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
				format(stringer1, sizeof(stringer1), "(FBI agent) %s[%d] fired %s[%d].", PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames], params[0], params[1]);
                SendAdminMessage(COLOR_GREY,stringer1);
                PlayerInfo[params[0]][pOdet] = 0;
		        format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `odet` = '0', `vigs` = '0' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
		        mysql_function_query(connects, stringer, false, "", "");
				return true;
            }
            PlayerInfo[params[0]][pRank] = rankdemote;
            format(stringer1, sizeof(stringer1), "FBI agent %s demoted you to %d rank", PlayerInfo[playerid][pNames], rankdemote);
			SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
			format(stringer1, sizeof(stringer1), "You demoted %s to %d rank.", PlayerInfo[params[0]][pNames],rankdemote);
			SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
        }
    }
	return true;
}
CMD:gotomark(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
    if (GetPlayerState(playerid) == 2)
    {
        new tmpcar = GetPlayerVehicleID(playerid);
        SetVehicleEE(tmpcar, gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]);
    }
    else { SetPPos(playerid, gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]); }
    SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
    SetPlayerInteriorEx(playerid,0);
	return true;
}
alias:toggotome("offgoto");
CMD:toggotome(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 11) return true;
    if (!toggotome[playerid]) toggotome[playerid] = 1, SendClientMessage(playerid, COLOR_BLUE, "Ban enabled!");
    else if (toggotome[playerid]) toggotome[playerid] = 0, SendClientMessage(playerid, COLOR_BLUE, "Prohibition disabled!");
	return true;
}

CMD:gotoco(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] >= 13)
	{
		new Float: pos[3], int;
		if(sscanf(params, "fffd", pos[0], pos[1], pos[2], int)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gotoco [x coordinate] [y coordinate] [z coordinate] [interior]");

		SendClientMessage(playerid, COLOR_GRAD2, "You have been teleported to the coordinates specified.");
		SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		SetPlayerInterior(playerid, int);
	}
	return 1;
}
alias:goto("g");
CMD:goto(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /g(oto) [playerid]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(IsPlayerFake(params[0]) && !FD(playerid)) return SendClientMessage(playerid,-1,"Player is AFK!");
    new Float:plocx,Float:plocy,Float:plocz;
//	if(PlayerInfo[params[0]][pInv] > 0 && !FD(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "� ������ ������� ������� '����������'!");
//    if(toggotome[params[0]] == 1  && PlayerInfo[playerid][pAlcoInvenxua] != 12) return SendClientMessage(playerid,COLOR_RED,"The administrator has blocked it from being teleported!");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SendClientMessage(playerid, COLOR_GRAD1, "The player has not entered the game!");
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if(GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehicleEE(tmpcar, plocx, plocy+4, plocz);
	}
	else
	{
		SetPPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorldEx(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInteriorEx(playerid, GetPlayerInterior(params[0]));
	}
	SendClientMessage(playerid, COLOR_WHITE, "You have been teleported!");
	return true;
}
CMD:gethere(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 3) return true;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /gethere [playerid]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(IsPlayerFake(params[0]) && !FD(playerid)) return SendClientMessage(playerid,-1,"Player is AFK!");
    new Float:plocx,Float:plocy,Float:plocz;
    new inter = GetPlayerInterior(playerid);
    new worldd = GetPlayerVirtualWorld(playerid);
    if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SendClientMessage(playerid, COLOR_GRAD1, "The player has not entered the game!");
//    if(PlayerInfo[params[0]][pInv] > 0 && !FD(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "� ������ ������� ������� '����������'!");
	if(PlayerInfo[playerid][pAlcoInvenxua] < PlayerInfo[params[0]][pAlcoInvenxua])
	{
	    SendClientMessage(playerid,COLOR_GREY,"You cannot teleport an administrator who is older than you!");
	    return true;
	}
	if(GetPVarInt(params[0], "AFK_Time") > 2) return SendClientMessage(playerid, COLOR_GREY, "The player is in AFK");
	GetPlayerPos(playerid, plocx, plocy, plocz);
	if(PlayerInfo[playerid][pInt] > 0)
	{
	    SetPlayerInteriorEx(params[0],inter);
		PlayerInfo[params[0]][pLocal] = PlayerInfo[playerid][pLocal];
		SetPlayerVirtualWorldEx(params[0],worldd);
	}
	if(PlayerInfo[playerid][pInt] == 0)
	{
	    SetPlayerInteriorEx(params[0], PlayerInfo[playerid][pInt]);
		SetPlayerInteriorEx(params[0],inter);
		SetPlayerVirtualWorldEx(params[0],worldd);
	}
	if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
	{
	    SetPlayerInteriorEx(params[0],inter);
	}
	if (GetPlayerState(params[0]) == 2)
	{
	    SetPlayerInteriorEx(params[0],inter);
		new tmpcar = GetPlayerVehicleID(params[0]);
		SetPlayerVirtualWorldEx(params[0],worldd);
		SetVehicleEE(tmpcar, plocx, plocy+4, plocz);
	}
	else
	{
	    SetPPos(params[0],plocx,plocy+2, plocz);
	    SetPlayerInteriorEx(params[0],inter);
		SetPlayerVirtualWorldEx(params[0],worldd);
	}
	format(stringer1, sizeof(stringer1), "Adminstrator %s[%d] Teleported %s[%d] near himself",PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0]);
	SendAdminMessage(COLOR_GREY,stringer1);
	SendMes(params[0], COLOR_WHITE, "You have been teleported by adminstrator %s[%d].", PlayerInfo[playerid][pNames], playerid);
	return true;
}
CMD:light(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0,2143.0061,1620.307,1000.969))
    {
        new membersss = PlayerInfo[playerid][pMember];
        if(membersss==5 || membersss==6 || membersss==12 || membersss==13 || membersss==14 || membersss==15
        || membersss==17 || membersss==18 || membersss==23 || membersss==24 || membersss==27 || membersss==28 ||  PlayerInfo[playerid][pJob]==12)
        {
            if(lights1 == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The power supply is already disconnected.");
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			lights1 = 1;
			lighttime[playerid] = 300;
			format(stringer1, sizeof(stringer1), "A stranger cuts off the power to the bank.");
			ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
		}
		else SendClientMessage(playerid, COLOR_LIGHTRED, "You cannot turn off the power");
	}
	else SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at the power supply.");
	return true;
}
CMD:bankdoor(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0,2144.178,1627.082,994.2620))
    {
        if(IsACop(playerid))
        {
            if(bankdoors == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The bank door is already open.");
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			bankdoors = 1;
			bankdoortime[playerid] = 240;
			MoveObject (DoorOpen[0], 2146.0,1627.082,994.2620, 0.3);
		}
		else
		{
			if(lights1 == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "First you need to turn off the power.");
			if(bankdoors == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The bank door is already open.");
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			bankdoors = 1;
			bankdoortime[playerid] = 120;
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			SendClientMessage(playerid, COLOR_GREY, "The bank safe door is open for 2 minutes, hurry!");
			MoveObject (DoorOpen[0], 2146.0,1627.082,994.2620, 0.3);
			format(stringer1, sizeof(stringer1), "A stranger opens the door of a bank safe.");
			ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		}
	}
	else SendClientMessage(playerid, COLOR_LIGHTRED, "You are far from the bank door");
	return true;
}
CMD:jeweldoor(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0,2196.2200,1618.6563,1000.4614))
    {
        if(IsACop(playerid))
        {
            if(jeweldoors == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The Jewelery door is already open.");
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			jeweldoors = 1;
			jeweldoortime[playerid] = 240;
			MoveObject (DoorOpen[1], 2196.4377,1614.5979,1001.4516, 0.3);
		}
		else
		{
			if(lights1 == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "First you need to turn off the power.");
			if(bankdoors == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The Jewelery door is already open.");
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			jeweldoors = 1;
			jeweldoortime[playerid] = 120;
			FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
			SendClientMessage(playerid, COLOR_GREY, "The Jewelery safe door is open for 2 minutes, hurry!");
			MoveObject (DoorOpen[1], 2196.4377,1614.5979,1001.4516, 0.3);
			format(stringer1, sizeof(stringer1), "A stranger opens the door of a bank safe.");
			ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		}
	}
	else SendClientMessage(playerid, COLOR_LIGHTRED, "You are far from the Jewelery door");
	return true;
}
CMD:tie(playerid, params[])
{
    if(!ISAMAFIA(playerid) && PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid, COLOR_WHITE, "This command is not available to you.");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /tie [playerid]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY,"You are not a driver!");
	if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "you are connected!");
	if(PlayerTied[params[0]] > 0) return SendClientMessage(playerid, COLOR_GREY, "The man is already tied!");
	if(PlayerInfo[playerid][pVerevka] <= 0) return SendClientMessage(playerid, COLOR_GREY, "You don't have rope, buy it from 24/7!");
	if (ProxDetectorS(8.0, playerid, params[0]))
	{
	    new car = GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(params[0], car))
		{
			format(stringer1, sizeof(stringer1), "%s took out a rope and tied %s into a knot.", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
			ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			TogglePlayerControllable(params[0], 0);
			PlayerInfo[playerid][pVerevka]--;
			PlayerTied[params[0]] = 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "The man is not in the car!");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
	return true;
}
CMD:klyap(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /klyap [playerid]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    if(PlayerTied[params[0]] == 0)  return SendClientMessage(playerid, COLOR_GREY, "Player is not bound!");
    if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "you are connected");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
    if(gag[params[0]] > 0)
    {
	    gag[params[0]] = 0;
		format(stringer1, sizeof(stringer1), "%s pulled out the gag from %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	}
	else
	{
        if(!ISAMAFIA(playerid) && PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid, COLOR_WHITE, "This command is not available to you.");
		gag[params[0]] = 1;
		TieTime[params[0]] = 600;
		format(stringer1, sizeof(stringer1), "%s put a gag in %s' mouth", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	}
	return true;
}
CMD:klyapoff(playerid, params[])
{
    if(gag[playerid] == 1)
    {
        if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "You are connected!");
		gag[playerid] = 0;
		format(stringer1, sizeof(stringer1), "%s spits the gag out of his mouth.", PlayerInfo[playerid][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	}
	else  return SendClientMessage(playerid, COLOR_GREY, "You don't have a gag");
	return true;
}
CMD:untie(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /untie [playerid]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
    if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "you are connected!");
    if(PlayerTied[params[0]] == 0)  return SendClientMessage(playerid, COLOR_GREY, "Player is not bound!");
	if(PlayerTied[params[0]])
	{
		format(stringer1, sizeof(stringer1), "%s untied %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
		ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
		TogglePlayerControllable(params[0], 1);
		PlayerInfo[playerid][pVerevka]++;
		PlayerTied[params[0]] = 0;

	}
	else return SendClientMessage(playerid, COLOR_GREY, "This person is not related!");
	return true;
}
CMD:dropcar(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 13) return SendClientMessage(playerid, COLOR_GRAD1, "This command is not available to you!");
    if(PlayerInfo[playerid][pAutoTime] == 0)
    {
        new newcar = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "You are not in the car!");
		if(newcar >= yakcar[0] && newcar <= yakcar[1] || newcar >= ruscar[0] && newcar <= ruscar[1]
		|| newcar >= lcncar[0] && newcar <= lcncar[1] || newcar >= grovecar[0] && newcar <= grovecar[1]
		|| newcar >= ballascar[0] && newcar <= ballascar[1] || newcar >= coronoscar[0] && newcar <= coronoscar[1]
		|| newcar >= vagoscar[0] && newcar <= vagoscar[1] || newcar >= rifacar[0] && newcar <= rifacar[1] || newcar == 462) return SendClientMessage(playerid, COLOR_GRAD1, "This vehicle cannot be returned");
		SetPlayerCheckpoint(playerid,-1549.0081,122.8916,3.1145,8);
		SendClientMessage(playerid, COLOR_WHITE, "The transport delivery location is marked on the map.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "No time has passed since the last deal.!");
	return true;
}
CMD:present(playerid,params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /present [id]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This player does not exist, or you indicated your ID");
    if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "This player is not near you!");
    if(GetPlayerWeapon(playerid) != 14) return SendClientMessage(playerid, COLOR_GREY, "You should have flowers in your hands");
    ApplyAnimation(playerid,"Kissing","gift_give",4.0,0,0,0,0,0,1);
	GiveWeapon(params[0], 14, 1);
    PlayerInfo[playerid][Weapon][10] = 0;
	PlayerInfo[playerid][Ammo][10] = 0;
    ResetPlayerWeapons(playerid);
    SetPlayerWeaponss(playerid);
    format(stringer1, sizeof(stringer1), "%s gave %s flowers",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
    ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
    return true;
}
CMD:jackcar(playerid, params[])
{
    if(!IsACop(playerid) && PlayerInfo[playerid][pJob] != 13) return SendClientMessage(playerid, COLOR_GRAD1, "This command is not available to you!");
    if(PlayerInfo[playerid][pOtmbI4ka] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "You have no lockpicks!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Can't be used in a car!");
	if(TheftCarID[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "You are already breaking into a car!");
	new tacha = GetNearestVehicle(playerid);
	if(tacha == -1) return SendClientMessage(playerid, COLOR_GREY, "It is necessary to be near the car!");
	if(VEHICLE[tacha][vLock] == 0) return SendClientMessage(playerid, COLOR_GREY, "The car is already open!");
	if(IsAPlane(tacha) || IsABoat(tacha) || IsANoSpeed(tacha)) return SendClientMessage(playerid, COLOR_GREY, "This transport cannot be hacked");
	if(PlayerTied[playerid] || PlayerCuffed[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You cannot move!");
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(tacha, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "It is necessary not to be near the car!");
	CheckTheftCar(playerid);
	CheckRobPlayer(playerid);
	TheftCarID[playerid] = tacha;
	TheftCount[playerid] = 0;
	TogglePlayerControllable(playerid, false);
	FIXES_ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, 0, 1, 1, 1, 0, 1);
	SetPlayerRandomKey(playerid, TheftKey[playerid], true);
	ShowPlayerActionBand(playerid, 0, 10);
	return true;
}
alias:spy("hmask");
CMD:spy(playerid)
{
    if(PlayerInfo[playerid][pOdet] == 0 && PlayerInfo[playerid][pMember] == 2) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if((PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pRank] < 3) && PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid, COLOR_GRAD1, "This command is not available to you!");
	if(GetPVarInt(playerid,"mask"))
	{
		SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);
		SetPlayerToTeamColor(playerid);
		DeletePVar(playerid,"mask");
	    return 1;
	}
	stringer[0] = 0;
	for(new i = 1; i < 29; i ++) format(stringer, sizeof(stringer), "%s%s\n", stringer, GetPlayerFracName[i]);
	ShowPlayerDialog(playerid, 4819, DIALOG_STYLE_LIST, "Select faction", stringer, "Select", "Close");
	return true;
}
CMD:block(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 5
        || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 3)
	{
	    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
        if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "ERROR: This command cannot be used in the interior.");
        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "ERROR: cannot be used in a car.");
        if(spike_objects[playerid] == 0)
        {
            new Float:x, Float:y, Float:z, Float:a;
            GetPlayerPos(playerid, x, y, z);
            GetPlayerFacingAngle(playerid, a);
            spike_objects[playerid] = CreateDynamicObject(2899, x, y, z-0.8, 0, 0, a);
            spike_areas[playerid] = CreateDynamicSphere(x, y, z, 3.0, -1, -1, -1);
            FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1);
            clearanim[playerid] = 3;
            SendClientMessage(playerid, 0x0bda51FF, "You have installed remote controlled spikes.");
            return SendClientMessage(playerid, 0x0bda51FF, "Use the command {007fff}/block{0bda51} to deactivate them.");
        }
        else
        {
            DestroyDynamicObject(spike_objects[playerid]);
            DestroyDynamicArea(spike_areas[playerid]);
            spike_objects[playerid] = 0;
            spike_areas[playerid] = 0;
            return SendClientMessage(playerid, COLOR_GREY, "Types are deactivated.");
        }
    }
    else return SendClientMessage(playerid, -1, "ERROR: This command is not available to you");
}
CMD:robbank(playerid, params[])
{
    if(PlayerInfo[playerid][pPayCheck] == 0)
    {
        if(kazna < 500000) return SendClientMessage(playerid, COLOR_LIGHTRED, "The state treasury is too small to rob.");
		if(IsPlayerInRangeOfPoint(playerid, 2.0,2147.2971,1637.2709,993.5759))
		{
		    new membersss = PlayerInfo[playerid][pMember];
			if(membersss==23 || membersss==24 || membersss==27 || membersss==28)
			{
			    if(IsACop(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are a cop! You are not allowed to break into a bank safe.");
				if(robbanks == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Bank safe, already hacked.");
				TogglePlayerControllable(playerid, 0);
				FIXES_ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,1,1,1,0,0);
				robbanks = 1; robbankstime[playerid] = 10;
				FIXES_ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,1,1,1,0,0);
				format(stringer1, sizeof(stringer1), "A stranger tries to break into a bank vault.");
				ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			}
			else SendClientMessage(playerid, COLOR_GREY, "This function is not available to you.");
		}
		else SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at the bank safe.");
	}
	else SendClientMessage(playerid, COLOR_GREEN, "You can rob a bank after Paydays.");
	return true;
}
CMD:robjewel(playerid, params[])
{
    if(PlayerInfo[playerid][pPayCheck] == 0)
    {
        if(kazna < 500000) return SendClientMessage(playerid, COLOR_LIGHTRED, "The state treasury is too small to rob.");
		if(IsPlayerInRangeOfPoint(playerid, 2.0,2204.0378,1589.0151,999.9772))
		{
		    new membersss = PlayerInfo[playerid][pMember];
			if(membersss==5 || membersss==6 || membersss==12 || membersss==13 || membersss==14 || membersss==15 || membersss==17 || membersss==18)
			{
			    if(IsACop(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are a cop! You are not allowed to break into a Jewelery safe.");
				if(robjewels == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Jewelery safe, already hacked.");
				TogglePlayerControllable(playerid, 0);
				FIXES_ApplyAnimation(playerid,"ROB_JEWEL","CAT_Safe_Rob",4.1,1,1,1,0,0);
				robjewels = 1; robjewelstime[playerid] = 10;
				FIXES_ApplyAnimation(playerid,"ROB_JEWEL","CAT_Safe_Rob",4.1,1,1,1,0,0);
				format(stringer1, sizeof(stringer1), "A stranger tries to break into a Jewelery vault.");
				ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			}
			else SendClientMessage(playerid, COLOR_GREY, "This function is not available to you.");
		}
		else SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at the Jewelery safe.");
	}
	else SendClientMessage(playerid, COLOR_GREEN, "You can rob a bank after Paydays.");
	return true;
}
CMD:usekey(playerid, params[])
{
    if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in a gang!");
    if(PlayerInfo[playerid][pJailed] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in jail!");
    if(keys[playerid] <=0) return  SendClientMessage(playerid, COLOR_GRAD1, "You don't have the jail key!");
	keys[playerid] -=1;
	SetPlayerInteriorEx(playerid, 0);
	SetPPos(playerid,1553.4962,-1675.2714,16.1953);
	SetPlayerFacingAngle(playerid, 95.0636);
	SendClientMessage(playerid, COLOR_YELLOW, "::: You made a jailbreak");
	return true;
}
CMD:weather(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 12) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /weather [id weather]");
	if(params[0] < 0 || params[0] > 45) return SendClientMessage(playerid, COLOR_GREY, "ID The weather cannot be less than 0 or more 45!");
	SetWeather(params[0]);
	format(stringer1, sizeof(stringer1), "Adminstrator %s changed the weather", PlayerInfo[playerid][pNames]);
	SendAdminMessage(COLOR_GREY,stringer1);
	return true;
}
CMD:agm(playerid)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 1) return 1;
    if(!PlayerInfo[playerid][pGM]) PlayerInfo[playerid][pGM] = 1;
    else PlayerInfo[playerid][pGM] = 0;
    SendMes(playerid, COLOR_WHITE, "You have %s {FFFFFF}your God-Mode", PlayerInfo[playerid][pGM] ? ("{32CD32}Enabled") : ("{FF0000}Diabled"));
    return true;
}
CMD:id(playerid, params[])
{
    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /id [id/nickname]");
    new ids = strval(params);
    SendClientMessage(playerid,COLOR_YELLOW,"Players Online:");
    new idd=-1;
    if(!IsNumericc(params))
	{
		foreach(new i:Player)
		{
			if(IsPlayerFake(i)) continue;
			if(strfind(PlayerInfo[i][pNames],params,true) != -1)
			{
				if(idd >= 9) {
					idd++;
				    continue;
            	}
            	if(GetPVarInt(i, "AFK_Time") > 2) format(stringer1,sizeof(stringer1),"%s {66CC66}id %d {FF0000}AFK",PlayerInfo[i][pNames],i);
				else format(stringer1,sizeof(stringer1),"%s {66CC66}id %d",PlayerInfo[i][pNames],i);
				SendClientMessage(playerid,COLOR_WHITE,stringer1);
				idd++;
			}
		}
		if(idd == -1) return SendClientMessage(playerid,COLOR_GREY,"Not found");
		else if(idd >= 9) {
        	format(stringer1,sizeof(stringer1),"Showing 10 items found %d", idd-2);
      		SendClientMessage(playerid, COLOR_GREY, stringer1);
		}
	}
	else
	{
		if(!IsPlayerConnected(ids)) return SendClientMessage(playerid,COLOR_GREY,"Invalid ID");
		if(GetPVarInt(ids, "AFK_Time") > 2) format(stringer1,sizeof(stringer1),"%s {66CC66}id %d {FF0000}AFK",PlayerInfo[ids][pNames],ids);
		else format(stringer1,sizeof(stringer1),"%s {66CC66}id %d",PlayerInfo[ids][pNames],ids);
		if(IsPlayerFake(ids)) {
			new namea[24];
			GetPlayerName(ids, namea, sizeof(namea));
			format(stringer1,sizeof(stringer1),"%s {66CC66}id %d",namea,ids);
		}
		SendClientMessage(playerid,COLOR_WHITE,stringer1);
	}
	return true;
}
CMD:fare(playerid, params[])
{
    new Veh = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pJob] == 4)
	{
		if(TransportDuty[playerid] > 0)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			new moneyyys = 32 + random(2);
			Delete3DTextLabel(taxi3d[Veh]);
			TransportDuty[playerid] = 0;
			SendMes(playerid, 0x6495EDFF, "You finished the working day, your bonus: %d", moneyyys);
			GiveMoney(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			return true;
		}
		if(Veh >= taxicar[0] && Veh <= taxicar[1])
		{
			if(GetPlayerState(playerid) == 2)
			{
			    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /fare [rate]");
				if(params[0] < 1 || params[0] > 1000) return SendClientMessage(playerid, COLOR_GREY, "No less than 1 and no more $1000");
				TaxiDrivers += 1;
				TransportDuty[playerid] = 1;
				TransportValue[playerid] = params[0];
				if(Veh >= taxicar[0] && Veh <= taxicar[1])
				{
					format(stringer1, sizeof(stringer1), "{3399ff}Taxi\n{ffff00}Tariff: %d$", TransportValue[playerid]);
					taxi3d[Veh] = Create3DTextLabel(stringer1, COLOR_YELLOW, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(taxi3d[Veh], Veh, 0, 0, 1.5);
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "{F36223}[!]{ADAEAD}You are not a taxi driver or you are not in a car.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "{F36223}[!]{ADAEAD}You haven't started your work day");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "{F36223}[!]{ADAEAD}You are not a taxi driver or you are not in a car.");
	return true;
}
CMD:offwarn(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
//    if(PlayerInfo[playerid][pcWarn] == 0) return SendClientMessage(playerid, 0xFF6600AA,"{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN");
//    if(PlayerInfo[playerid][pVigs] > 1) return SendClientMessage(playerid, 0xFF6600AA, "{FF6600}You are not allowed to use this command � {FFFFFF}Abuse Auto BAN.");
    new nicks[24];
    if(sscanf(params, "s[24]s[128]", nicks, params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /offwarn [playername] [reason]");
    if(!IsValidRpName(nicks)) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not match the structure of the nickname.");
//    if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[����-�������] ���� ��� �������� ������������� �� 3 ������."); AntiBan[playerid] = 180; return true; }
    AntiBan[playerid] += 30;
    format(mysql_query_, sizeof(mysql_query_), "SELECT `pID`, `pWarns` FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%s'", nicks);
	mysql_function_query(connects, mysql_query_, true, "OffWarn", "dss",playerid,nicks,params[1]);
	return true;
}
CMD:carmat(playerid, params[])
{
    switch(PlayerInfo[playerid][pMember])
	{
	case 3:
	    {
	        if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return  SendClientMessage(playerid,COLOR_GREY,"You are not in a loading helicopter!");
			SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
			SendClientMessage(playerid,COLOR_WHITE,"Go to the ship to load Weapons");
			VertMats[playerid]=1;
		}
	}
	return true;
}
alias:spawn("sp");
CMD:spawn(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid,COLOR_GREY,"Usage: /spawn [id]");
	if(IsPlayerFake(params[0])) return SendClientMessage(playerid,COLOR_GREY,"The player is already spawned");
	new string[144];
	SpawnPlayerEx(params[0]);
	format(string, sizeof(string), "Administrator %s[%d] spawned you", PlayerInfo[playerid][pNames], playerid);
	SendClientMessage(params[0], -1, string);
	format(string, sizeof(string), "Adminstrator %s[%d] respawned player %s[%d]", PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames], params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return true;
}
CMD:wantedlist(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 1) return true;
    foreach(Player,i)
	{
		if(PlayerInfo[i][pWanted] > 0 && IsPlayerConnected(i))
		{
			format(stringer1, sizeof(stringer1), "%s [ID: %d] | Stars: %d", PlayerInfo[i][pNames], i, PlayerInfo[i][pWanted]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringer1);
		}
	}
	return true;
}
CMD:getban(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 7) return true;
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getban [playername]");
	if(!IsValidRpName(params)) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the nickname structure.");
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_BANLOG"` WHERE `name` = '%e'", params);
	mysql_function_query(connects, mysql_query_, true, "AdminCheckBan", "dsd", playerid, params, 0);
	return true;
}
CMD:getbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 9) return true;
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /getbanip [IP address]");
	if(!IsIpFound(params)) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the structure of the IP address.");
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT * FROM `baniplog` WHERE `ip` = '%e'", params);
	mysql_function_query(connects, mysql_query_, true, "AdminCheckBan", "dsd", playerid, params, 1);
	return true;
}
CMD:alock(playerid, params[])
{
    if(PlayerInfo[playerid][pAlcoInvenxua] < 2) return true;
    new carid = GetNearestVehicle(playerid);
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(IsPlayerInRangeOfPoint(playerid, 4.0, cx, cy, cz))
	{
		if(VEHICLE[carid][vLock] == 1) SendClientMessage(playerid, COLOR_GRAD1, "The car is open!"), UnLockCar(carid);
		else SendClientMessage(playerid, COLOR_GRAD1, "The car is closed!"), LockCar(carid);
	}
	return true;
}
CMD:lock(playerid, params[])
{
    if(sscanf(params, "d", params[0]) || params[0] <= 0 || params[0] > 3)
	{
        SendClientMessage(playerid, COLOR_WHITE, "Usage: /lock [1 / 2 / 3]");
        SendClientMessage(playerid, COLOR_WHITE, "Available names:");
		SendClientMessage(playerid, COLOR_WHITE, "  1 - Home auto.");
		SendClientMessage(playerid, COLOR_WHITE, "  2 - Renewed auto.");
		SendClientMessage(playerid, COLOR_WHITE, "  3 - Working / working auto.");
		return true;
    }
    new Float:cx,Float:cy,Float:cz;
    if(params[0] == 1)
	{
	    if(PlayerInfo[playerid][pPhousekey] == 255 || caridhouse[playerid] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GRAD1, "In this moment, you don't have car");
	    GetVehiclePos(caridhouse[playerid], cx, cy, cz);
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, cx, cy, cz)) {
			ToggleLock(playerid,caridhouse[playerid]);
			foreach(Player, j) {
				if(GetDistanceBetweenPlayers(playerid,j) < 5.0) {
					PlayerPlaySound(j, 25800, 0.0, 0.0, 0.0);
				}
			}
		}
	    else SendClientMessage(playerid, COLOR_RED, "Your car is not available");
	}
	else if(params[0] == 2)
	{
	    if(GetPVarInt(playerid, "ArendKey") == -1) return SendClientMessage(playerid, 0xAFAFAFFF, "Do not send a transfer.");
		new rc = GetPVarInt(playerid, "ArendKey");
		if(ArendInfo[rc][aPlayerID] != playerid)
		{
		    SendClientMessage(playerid, 0xAFAFAFFF, "You do not rent a vehicle.");
			SetPVarInt(playerid, "ArendKey", -1);
			return 1;
		}
		GetVehiclePos(ArendInfo[rc][aID], cx, cy, cz);
		if(IsPlayerInRangeOfPoint(playerid, 4.0, cx, cy, cz)) {
			ToggleLock(playerid,ArendInfo[rc][aID]);
			foreach(Player, j) {
				if(GetDistanceBetweenPlayers(playerid,j) <= 10.0) {
					PlayerPlaySound(j, 25800, 0.0, 0.0, 0.0);
				}
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "Your car is not nearby");
	}
	else if(params[0] == 3)
	{
	    if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have a working machine.");
	    new i = GetNearestVehicle(playerid);
	    if(i == -1) return SendClientMessage(playerid,COLOR_GREY,"You must be near the car!");
		if(GetVehicleKey(playerid, i)) {
			ToggleLock(playerid, i);
			foreach(Player, j) {
				if(GetDistanceBetweenPlayers(playerid,j) < 5.0) {
					PlayerPlaySound(j, 25800, 0.0, 0.0, 0.0);
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "You do not have the keys to this transport.");
	}
	return true;
}
CMD:facepalm(playerid)
{
    SetPlayerChatBubble(playerid, "Facepalm", COLOR_PURPLE, 30.0, 10000);
	FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
	return true;
}

CMD:alogin(playerid)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] && !dostup[playerid]) {
		if(PlayerInfo[playerid][pDostup] == 0) return ShowPlayerDialog(playerid, 2991, DIALOG_STYLE_INPUT, "{FF0000}Adminstrator registration", "{FFFFFF}Put a admin password for yourself, it must to be 4 numbers\n{FFFFFF}Enter it in the text below:\n", "Next", "Exit");
		else return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_PASSWORD,"{0099CC}Adminstrator Login","{FFFFFF}You are as server adminstrator\nEnter your admin password from the administrator in the text below","Enter","Exit");
	}
	return true;
}
CMD:asellhouse(playerid, params[])
{
    if(PlayerInfo[playerid][pFull] < 2) return true;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /asellhouse [houseid]");
    if(params[0] < 0 || params[0] > 1999) return 1;
    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pPhousekey` = '255' WHERE `Name` = '%s'",HouseInfo[params[0]][hOwner]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	HouseInfo[params[0]][hHel] = 0;
	HouseInfo[params[0]][hLock] = 1;
	HouseInfo[params[0]][hOwned] = 0;
	SendClientMessage(playerid, COLOR_GREY, "��� ������");
	format(stringer1, sizeof(stringer1), "������ ��� (ID: %d)", params[0]);
	Admin_Log(playerid, stringer1, HouseInfo[params[0]][hOwner], gettime());
	strmid(HouseInfo[params[0]][hOwner], "The State", 0, strlen("The State"), 255);
	BuyHouse(params[0]);
	return true;
}
CMD:robhouse(playerid, params[])
{
    if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Only Gangs can start robbing a house!");
    if(PlayerInfo[playerid][Texts][1] != 0) return SendClientMessage(playerid, COLOR_GREY, "You've already been involved in a house robbery, wait a little longer.");
    new h = PlayerInfo[playerid][pLocal];
	if(h == 255 || GetPlayerVirtualWorld(playerid) != h+50) return SendClientMessage(playerid, -1,"You are not in the house or you are not trying to rob it.");
	if(PlayerInfo[playerid][pPhousekey] == h || PlayerInfo[playerid][pHomez] == h) return SendClientMessage(playerid, -1,"You can't rob the house you live in!");
	if(HouseInfo[h][hRobhouse] == true) SendClientMessage(playerid, -1,"The house is empty! We need to get out before the cops arrive.!");
	else
	{
		HouseInfo[h][hRobhouse] = true;
		new money, drugs, metal;
		new cash = random(20000);
		if (HouseInfo[h][hMatel] != 0) metal = random(HouseInfo[h][hMatel]);
		else metal = 0;
		if (HouseInfo[h][hMoney] != 0) money = random(HouseInfo[h][hMoney]);
		else money = 0;
		if (HouseInfo[h][hNark] != 0) drugs = random(HouseInfo[h][hNark]);
		else drugs = 0;
		GiveMoney(playerid, money+cash);
		PlayerInfo[playerid][pHeal] += drugs;
		PlayerInfo[playerid][pMats] += metal;
		HouseInfo[h][hMoney] -= money;
		HouseInfo[h][hNark] -= drugs;
		HouseInfo[h][hMatel] -= metal;
		PlayerInfo[playerid][Texts][1] = 3;
		new ids = GetPlayerID(HouseInfo[h][hOwner]);
		if(HouseInfo[h][hOwned] == 1) if(IsPlayerConnected(ids)) SendClientMessage(ids, -1,"The alarm went off in your house!");
		format(stringer, sizeof(stringer), "{FF0000}During the robbery you found in the house:\n\n\t{FFFFFF}Money from the safe: %d$\n\tFirst aid kit: %d pieces\n\tMaterials: %d kg\n\tMoney found: %d$", money, drugs, metal,cash);
		ShowPlayerDialog(playerid, 000, DIALOG_STYLE_MSGBOX, "Robbery", stringer, "Close", "");
	}
	return true;
}
alias:dj("diskjokey");
CMD:dj(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 15) return SendClientMessage(playerid,COLOR_GREY,"You don't work as a DJ.");
	if(IsPlayerInRangeOfPoint(playerid, 2.0,487.35198974609,-2.1640000343323,1002.3829956055))
	{
		if(AlhambraDJID == INVALID_PLAYER_ID) AlhambraDJ = true, AlhambraDJID = playerid;
		else if(AlhambraDJID != playerid) return SendClientMessage(playerid,COLOR_GREY,"DJ is already working and he is in the club.");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0,-2648.001953125,1422.7509765625,906.46099853516))
	{
		if(JizzyDJID == INVALID_PLAYER_ID) JizzyDJ = true, JizzyDJID = playerid;
		else if(JizzyDJID != playerid) return SendClientMessage(playerid,COLOR_GREY,"DJ is already working and he is in the club.");
	}
	else return SendClientMessage(playerid,COLOR_GREY,"You're not at the counter for DJ.");
	ShowPlayerDialog(playerid, 5350, DIALOG_STYLE_LIST, "Control Panel DJ.", "Play your track\nTurn off music\nLeave the remote control", "Select", "Cancle");
	return true;
}
stock EditBreak(playerid)
{
    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 3 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 3 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 3
		|| PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 1) {
		if(GetPVarInt(playerid,"rbinfo"))
 	    {
  		    DestroyDynamicObject(GetPVarInt(playerid, "rb_obkect"));
  		    DeletePVar(playerid, "rbinfo");
  		    DeletePVar(playerid, "rb_obkect");
            Delete3DTextLabel(Text3D:blocktext[playerid]);
		    SendClientMessage(playerid,-1,"You removed the roadblock.");
		    return 1;
	    }
		ShowPlayerDialog(playerid, 22800, DIALOG_STYLE_LIST, "{ffcd00}Select an object", "{ffffff}[1] Round fence\n{ffffff}[2] Folding fence\n{ffffff}[3] Checkpoint booth\n{ffffff}[4] Metal. fencing\n{ffffff}[5] Bumper\n{ffffff}[6] Fence with red tape\n{ffffff}[7] Speed ??bump\n{99bbff}[8] Public address system\n{99bbff}[9] Speed ??camera\n{ff9999}[10] *Right* sign\n{ff9999}[11] *Left* sign\n{ff9999}[12] *Directly prohibited traffic sign*\n{ff9999}[13] Sign *Movement to the left is prohibited*\n{ff9999}[14] Sign *Movement to the right is prohibited*\n{ff9999}[15] Sign *Move straight ahead*\n{ff9999}[16] Sign *Brick*\n{ff9999}[ 17] Sign *STOP*\n{ff9999}[18] Sign *Camera*\n{ff9999}[19] Sign *Tow truck in operation*\n{ff9999}[20] Sign *Give way*\n{ff9999}[ 21] Sign *Road works*\n", "Select", "Close");
		SetPVarInt(playerid, "B_TICK", gettime()+5);
	}
	return true;
}
CMD:break(playerid,params[])
{
	if(GetPVarInt(playerid, "B_TICK") > gettime())
		return SendClientMessage(playerid, COLOR_GREY, !"The command can be used once every 5 seconds");

	return EditBreak(playerid);
}
CMD:rbinfo(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 3 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 3 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 3
		|| PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 1)
	{
	    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
		new full;
		foreach(Player,i)
		{
	    	if(!GetPVarInt(i,"rbinfo")) continue;
	    	full ++;
	    	SendMes(playerid,-1,"[#%d] Installed %s, will be removed in %d seconds",i,PlayerInfo[i][pNames],rbtime[i]);
		}
		if(full == 0) return SendClientMessage(playerid, -1, "No information found");
	}
	return true;
}
CMD:removerb(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 12 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 12 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 12
		|| PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 9)
	{
	    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /removerb [post number]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "This roadblock does not exist.");
	    if(GetPVarInt(params[0],"rbinfo"))
 	    {
  		    DestroyDynamicObject(GetPVarInt(params[0], "rb_obkect"));
  		    DeletePVar(params[0], "rbinfo");
  		    DeletePVar(params[0], "rb_obkect");
  		    rbtime[params[0]] = 0;
            DestroyDynamic3DTextLabel(Text3D:blocktext[params[0]]);
		    SendMes(params[0],-1,"%s %s[%d] removed your roadblock.",fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames],playerid);
		    SendMes(playerid, COLOR_WHITE, "You removed the roadblock #%d",params[0]);
	    }
    	else return SendClientMessage(playerid, COLOR_WHITE, "This roadblock does not exist.");
	}
	return true;
}
CMD:removerball(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 12 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 12 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 12
		|| PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 9)
	{
	   if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
       format(stringer1,sizeof(stringer1),"[%s] %s %s[%d] removed all road barriers.",GetPlayerFracName[PlayerInfo[playerid][pMember]],fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1],PlayerInfo[playerid][pNames],playerid);
	   SendTeamMessage(0x4169E1FF, stringer1);
	   foreach(Player,i)
	   {
		   if(!GetPVarInt(i,"rbinfo")) continue;
  		   DestroyDynamicObject(GetPVarInt(i, "rb_obkect"));
  		   DeletePVar(i, "rbinfo");
  		   DeletePVar(i, "rb_obkect");
  		   rbtime[i] = 0;
           DestroyDynamic3DTextLabel(Text3D:blocktext[i]);
	   }
	}
	return true;
}
CMD:gps(playerid)
{
	ShowPlayerDialog(playerid, 9624, DIALOG_STYLE_LIST, "{FFD700}GPS", "[1] {FFFFFF}The main\n{FFFFFF}[2] {FFFFFF}Car dealerships\n{FFFFFF}[3] {FFFFFF}Entertainment\n{FFFFFF}[4] {FFFFFF}Businesses\n{FFFFFF}[5] {FFFFFF}Work\n{FFFFFF}[6] {FFFFFF}Transport rental\n[7] Organizations bases\n{6495ED}[8] Find the nearest petrol station\n{6495ED}[9] Find nearest 24/7\n{6495ED}[10] Find the nearest ATM\n{6495ED}[11] Find your home", "Select", "Close");
    DisablePlayerCheckpoint(playerid);
    PicCP[playerid] = 0;
	return true;
}
CMD:gangquest(playerid)
{
	ShowPlayerDialog(playerid, 9644, DIALOG_STYLE_LIST, "{FFD700}GPS", "[1] {FFFFFF}Jewelry Rob\n{FFFFFF}[2] {FFFFFF}Army SF Rob\n{FFFFFF}[3] {FFFFFF}Area 51 Rob", "Select", "Close");
    DisablePlayerCheckpoint(playerid);
    PicCP[playerid] = 0;
	return true;
}
CMD:fquest(playerid)
{
	ShowPlayerDialog(playerid, 9644, DIALOG_STYLE_LIST, "{FFD700}GPS", "[1] {FFFFFF}Bank Rob", "Select", "Close");
    DisablePlayerCheckpoint(playerid);
    PicCP[playerid] = 0;
	return true;
}
CMD:tune(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 966.3206,-1738.6427,14.4808) || IsPlayerInRangeOfPoint(playerid, 4.0, 966.3534,-1730.1844,14.4812))
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 966.3206,-1738.6427,14.4808) || IsPlayerInRangeOfPoint(playerid, 4.0, 966.3534,-1730.1844,14.4812))
		{
			if(!IsPlayerInVehicle(playerid, caridhouse[playerid])) return SendClientMessage(playerid, COLOR_SILVER, "You must be driving your car");
			if(BizzInfo[84][bProduct] < 5 || strcmp(BizzInfo[84][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Business doesn't have enough products / Business doesn't have an owner!");
			TuneShop[playerid] = 84;
		}
		if(TuneShop[playerid] != 0)
		{
			if(!IsAPlane(caridhouse[playerid]) && !IsABoat(caridhouse[playerid]) && !IsANoSpeed(caridhouse[playerid]))
			{
				for(new i = 0; i < 18; i++) PlayerTextDrawHide(playerid, td_speed[playerid][i]);
			}
			else return SendClientMessage(playerid, COLOR_SILVER, "The auto repair shop cannot accept your vehicle.."), TuneShop[playerid] = 0;
			SetVehicleEE(caridhouse[playerid], 615.0964, -1.1192, 1000.6573);
			SetVehicleZAngleEx(caridhouse[playerid], 90.1937);
			LinkVehicleToInterior(caridhouse[playerid], 1);
			SetPlayerInteriorEx(playerid, 1);
			new virt = playerid + 100;
			SetVehicleVirtualWorld(caridhouse[playerid], virt);
			SetPlayerVirtualWorldEx(playerid, virt);
			return ShowTuneDialog(playerid);
		}
	}
	return SCM(playerid,-1,"You must be in a car repair shop");
}
alias:hm("hmenu");
CMD:hm(playerid, params[])
{
	if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid,COLOR_GREY,"You have no home");
	if(GetPVarInt(playerid, "RepairHouse") != 0) return ShowPlayerDialog(playerid, 27, 0, "{dba002}Repair", "Do you want to purchase this interior?", "Yes", "No");
	if(GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pPhousekey]+50 || !IsPlayerInRangeOfPoint(playerid, 90.0,HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz])) return SendClientMessage(playerid,COLOR_GREY,"You must be inside your home");
	new string[600], tstext[10], idhm = PlayerInfo[playerid][pPhousekey];
	switch(HouseInfo[idhm][hKlass])
	{
		case 1: tstext = "D";
		case 2: tstext = "C";
		case 3: tstext = "B";
		case 4: tstext = "A";
		case 5: tstext = "S";
		default: tstext = "Nope";
	}
	format(string, sizeof(string), "{FFFFFF}Type / name:\t\t\t\t{dba002}%s\n{FFFFFF}House number:\t\t\t\t%d\n{FFFFFF}Price:\t\t\t\t%d\n{FFFFFF}On account of the house:\t\t\t\t$%d\n\n{FFFFFF}Home Car Model 1: \t\t{3399FF}%s(%d)\
	\n{FFFFFF}Home Car Model 2: \t\t{3399FF}%s(%d)\n{FFFFFF}Rent:\t\t\t\t%d$\n{FFFFFF}First aid kits: \t\t\t\t%d\n{FFFFFF}Status: \t\t\t\t\t%s\n\n{35d408}To open the control panel of your home, \nclick 'Edit'",
	tstext, idhm, HouseInfo[idhm][hValue], HouseInfo[idhm][hTakings], VehicleNameS[PlayerInfo[playerid][pCar] - 400], PlayerInfo[playerid][pCar],
	VehicleNameS[PlayerInfo[playerid][pCar2] - 400], PlayerInfo[playerid][pCar2], (HouseInfo[idhm][hKlass] < 1) ? 300 : HouseInfo[idhm][hKlass] * 300,
	HouseInfo[idhm][hHel], (HouseInfo[idhm][hLock] > 0) ? "{FF0000}Closed" : "{0aed1c}Open");
	ShowPlayerDialog(playerid, 7425, DIALOG_STYLE_MSGBOX, "{dba002}Information about the house", string, "Change", "Close");
	return true;
}
CMD:healme(playerid, params[])
{
	if(HealmeObject[playerid]>0) return SendClientMessage(playerid, COLOR_GREY, "Don't flood");
    if(TeamPain[playerid] != 0 && StartPaintBall == 2) return SendClientMessage(playerid,COLOR_GREY,"It is forbidden to use first aid kits on PaintBall.");
	if(!PlayerInfo[playerid][pHeal]) return SendClientMessage(playerid,COLOR_GREY,"You don't have a first aid kit");
	if(PlayerInfo[playerid][pDrugtime] > 0) return  SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}You can use the first air kits again after 10 seconds!");
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 <= 100) SetPlayerHealthAC(playerid,health+60.0);
	else SetPlayerHealthAC(playerid,100.0);
	format(stringer1, sizeof(stringer1), "%s Used a first aid kit",PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	if(PlayerCuffed[playerid] == 0 && !IsPlayerInAnyVehicle(playerid)) {
		ApplyAnimation(playerid,"PED","gum_eat",4.0,0,0,0,0,0,1);
		SetPlayerAttachedObject(playerid, 8, 11736, 5,  0.186999, 0.037000, 0.022999,  -102.499969, -179.900024, -91.400024,  1.000000, 1.000000, 1.000000);
		HealmeObject[playerid] = 5;
		AntiSbiv[playerid] = gettime()+10;
	}
	PlayerInfo[playerid][pHeal] --;
	PlayerInfo[playerid][pDrugtime] = 10;
	return 1;
}
CMD:head(playerid) {
	if(playerradio[playerid] < 1) return SendClientMessage(playerid, -1, "You are not listening to the radio at the moment!");
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) {
		RemovePlayerAttachedObject(playerid, 3);
		SendClientMessage(playerid, -1, "You will listen to online radio without headphones");
	} else {
		SetPlayerAttachedObject(playerid, 3, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
		SendClientMessage(playerid, -1, "You will listen to online radio with headphones");
	}
	return true;
}
CMD:healhouse(playerid, params[])
{
    for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
		{
			if(GetPlayerVirtualWorld(playerid) == i+50)
			{
				if(HouseInfo[i][hHel] == 0) return SendClientMessage(playerid, COLOR_GREY, "There are no first aid kits in this place");
				SendClientMessage(playerid, COLOR_WHITE, "You have been cured to 100 percent");
				format(stringer1, sizeof(stringer1), "%d first aid kits left", HouseInfo[i][hHel]);
				SendClientMessage(playerid, 0x6495EDFF, stringer1);
				HouseInfo[i][hHel] -= 1;
				SetPlayerHealthAC(playerid, 100);
				SetPlayerChatBubble(playerid, "used the first aid kit", COLOR_PURPLE, 30.0, 10000);
				return true;
			}
		}
	}
	return true;
}
CMD:fixcar(playerid)
{
    if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_RED, "Not enough money!");
    if(PlayerInfo[playerid][pPhousekey] == 255 || caridhouse[playerid] == INVALID_VEHICLE_ID) return true;
    if(IsVehicleOccupied(caridhouse[playerid])) return SendClientMessage(playerid,COLOR_GREY,"The vehicle is occupied by the player");
	format(stringer, 256, "{ffffff}[1] %s\n[2] %s",VehicleNameS[PlayerInfo[playerid][pCar]-400],VehicleNameS[PlayerInfo[playerid][pCar2]-400]);
	ShowPlayerDialog(playerid, 8237, DIALOG_STYLE_LIST,"{FFD300}Choose a car to spawn",stringer,"Spawn","Exit");
	return true;
}
CMD:sellcar(playerid, params[])
{
	if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "You don't own the house!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not in the car!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You must be in your personal transport!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return SendClientMessage(playerid, COLOR_GREY, "You can't sell a moped!");
	if(sscanf(params, "dd", params[0], params[1])) return ShowPlayerDialog(playerid, 77, 0, "Sell ??transport", "{FFFFFF}Do you want to sell your transport?\n\n{FF6347}Attention! You will only get half the cost of the vehicle back!\n\n To sell a car to a player, enter /sellcar [id] [price]", "Yes", "No");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Player is offline");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "You cannot sell the vehicle to yourself!");
	if(PlayerInfo[params[0]][pPhousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "The player has no home");
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "The player must be with you in the transport!");
	if(params[1] < 1 || params[1] > 2000000000) return SendClientMessage(playerid, COLOR_GREY, "Cost from 1 to 2000000000$!");
	ShowPlayerDialog(params[0], 79, DIALOG_STYLE_LIST, "Select a slot for the car", "Slot #1\nSlot #2", "Buy", "Refuse");
	format(stringer, 256, "%s offered %s to buy his car (Model: %s, Cost: %i)",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400], params[1]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer);
	SetPVarInt(params[0], "CarPlayer", playerid);
	SetPVarInt(params[0], "CarPrice", params[1]);
	SELL[0][playerid] = params[0];
	return true;
}
CMD:restart(playerid, params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
 	mysql_function_query(connects,"UPDATE `accounts` SET `pOnline` = '1001'", false, "", "");
	ServerRestart[1] = 10;
	SendClientMessageToAll(COLOR_REDD, "[AP-RP] - Server Restart in 1 seconds!");
	printf("%s sent the server to restart", PlayerInfo[playerid][pNames]);
	return true;
}
CMD:pgetip(playerid,params[])
{
	if(PlayerInfo[playerid][pFull] < 4) return true;
	if(sscanf(params,"s[32]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /pgetip [ip]");
	if(!IsIpFound(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "The value you entered does not correspond to the structure of the IP address.");
	strmid(check_getip, params[0], 0, strlen(params[0]), 32);
	format(mysql_query_, sizeof(mysql_query_), "SELECT `Name`, `pGetonDate`, `pOnline` FROM `"TABLE_ACCOUNT"` WHERE `pGetonIP` = '%s' ORDER BY `Name` DESC LIMIT 0,15", params[0]);
	mysql_function_query(connects, mysql_query_, true, "Logs","ddd", playerid, 3, 1);
	return 1;
}
CMD:agetipreg(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	if(sscanf(params, "s[24]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /agetipreg [playername]");
	new nick = GetPlayerID(params[0]);
	if(nick != INVALID_PLAYER_ID) SendMes(playerid,COLOR_GREY,"Nick: %s | IP: %s",params[0],PlayerInfo[nick][pIpReg]);
	else SendClientMessage(playerid, COLOR_WHITE, "Player is offline.");
	return true;
}
CMD:atm(playerid)
{
	if(!IsABankomat(playerid) || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
	FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "{FFD700}ATM", "1.{ffffff} Withdraw cash\n[2]{ffffff} Balance\n[3]{ffffff} House Tax Pay\n[4]{ffffff} Top up phone account\n[5] {ffffff} Top up business account", "Select", "Close");
	return true;
}
CMD:loadalko(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 6.0,2845.4294,948.4973,10.7500)) return SendClientMessage(playerid,COLOR_GREY,"You are not at the download site. [/gps> main> alcohol loading]");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /loadalko [amount]");
    if(params[0] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "The value must be greater than 0!");
	new newcars = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 18)
	{
	    if(newcars == alkofuraballas || newcars == alkofurarifa || newcars == alkofuravagos || newcars == alkofuraactek || newcars == alkofuragrove)
	    {
	        new moneyss = params[0]*2500;
			if(PlayerInfo[playerid][pCash] < moneyss) return SendMes(playerid,COLOR_WHITE," To download you need %d Money",moneyss);
			if(alkogol[newcars]+params[0] > 100) return SendClientMessage(playerid,COLOR_GREY," You cannot load that many products into the Van, try less.");
			if(alkogol[newcars] >= 100) return SendClientMessage(playerid,COLOR_GREY," The van is full. Drive to unload.");
	        alkogol[newcars] += params[0];
	        PlayerInfo[playerid][pCash] -= moneyss;
	        SendMes(playerid,COLOR_WHITE," You loaded %d alcohol into the van for %d Money.",params[0],moneyss);
         }
         else SendClientMessage(playerid,COLOR_GREY,"You are not in the alcohol delivery van.");
	}
	return true;
}
CMD:unloadalko(playerid, params[])
{
	new newcars = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 18)
	{
		if(newcars == alkofuraballas || newcars == alkofurarifa || newcars == alkofuravagos || newcars == alkofuraactek || newcars == alkofuragrove)
	    {
			if(alkogol[newcars] <= 0) return SendClientMessage(playerid,COLOR_GREY," There are no alcoholic beverages in the van.");
	        if(IsPlayerInRangeOfPoint(playerid, 8.0,2745.1516,-1177.1735,69.4025)) FracAlko[0][aVagos] += alkogol[newcars];
	        else if(IsPlayerInRangeOfPoint(playerid, 8.0,2005.6473,-1121.6650,26.6733)) FracAlko[0][aBallas] += alkogol[newcars];
         	else if(IsPlayerInRangeOfPoint(playerid, 8.0,1673.3033,-2108.5610,13.5469)) FracAlko[0][aAztec] += alkogol[newcars];
	        else if(IsPlayerInRangeOfPoint(playerid, 8.0,2188.7148,-1812.3773,13.5469)) FracAlko[0][aRifa] += alkogol[newcars];
	        else if(IsPlayerInRangeOfPoint(playerid, 8.0,2498.8372,-1686.5349,13.4772)) FracAlko[0][aGrove] += alkogol[newcars];
	        else return SendClientMessage(playerid,COLOR_GREY," You are not at the place of unloading.");
	        GameTextForPlayer(playerid, "~g~Unload", 3000, 1);
            SendMes(playerid,COLOR_WHITE,"{32CD32}Unloading was successful! {FFFFFF}Your gang's alcohol stock has been replenished with %d products.",alkogol[newcars]);
			alkogol[newcars] = 0;
         }
	     else SendClientMessage(playerid,COLOR_GREY,"You are not in the alcohol delivery van.");
	}
	return true;
}
CMD:enter(playerid, params[])
{
	for(new i = 0; i < sizeof(HouseInfo); i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
        {
	        if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
	        {
                SetPlayerInteriorEx(playerid, HouseInfo[i][hInt]);
		        SetPlayerVirtualWorldEx(playerid, i+50);
		        SetPPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
		        return true;
            }
            else return GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
        }
    }
	return true;
}
CMD:exit(playerid, params[])
{
	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
		{
			if (GetPlayerVirtualWorld(playerid) == i+50)
			{
				SetPlayerInteriorEx(playerid,0);
				SetPlayerVirtualWorldEx(playerid,0);
				SetPPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				PlayerInfo[playerid][pLocal] = 255;
				SetPVarInt(playerid, "ExitHouse",1);
				break;
			}
		}
	}
	return true;
}
CMD:switchskin(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "You are not in a gang");
	if(forma[playerid] !=1) return SendClientMessage(playerid, COLOR_GRAD1, "You don't have an army uniform");
	SetPlayerSkinEx(playerid,287);
	SetPlayerColor(playerid, COLOR_GREEN);
	forma[playerid] = 0;
	proverkaforma[playerid] = 1;
	return true;
}
CMD:carm(playerid, params[])
{
    if(!IsAMatsCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GRAD1, "You must be in matovoz.");
	if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) return ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "Distribution of Weapons", "- Load\n- Unload\n- Unload to the SF Army warehouse\n- Unload to LSPD\n- Unload to FBI\n- Unload to SFPD\n- Unload to Gangs\n- Unload to LVPD", "Select", "Cancle");
	else return SendClientMessage(playerid, COLOR_GRAD1, "You are not an army man or a bandit.");
}
CMD:givephone(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return SendClientMessage(playerid, COLOR_GREY,"You are not a mafioso!");
	if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY,"This feature is not available to you!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /givephone [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
	if(takephone[params[0]] != 1) return SendClientMessage(playerid, COLOR_GREY, "He has a phone");
	format(stringer1, sizeof(stringer1), "%s returned your phone", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
	takephone[params[0]] = false;
	format(stringer1, sizeof(stringer1), "%s returned the phone %s 'y", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return true;
}
CMD:takephone(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return SendClientMessage(playerid, COLOR_GREY,"You are not a mafioso!");
	if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY,"This feature is not available to you!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /takephone [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "The person is not next to you!");
	if(takephone[params[0]] > 0) return SendClientMessage(playerid, COLOR_GREY, "He doesn't have a phone");
	format(stringer1, sizeof(stringer1), "%s took your mobile phone", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
	takephone[params[0]] = 1;
	format(stringer1, sizeof(stringer1), "%s took the mobile from %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	return true;
}
/*CMD:showpass(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /showpass [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_RED, "Man too far!");
	new shltext[16];
	if(PlayerInfo[playerid][pGunLic]) { shltext = "����"; } else { shltext = "No"; }
	SendClientMessage(params[0],COLOR_GREY, "-----------===[ PASSPORT ]===----------");
	SendMes(params[0], COLOR_YELLOW2, "Nickname: %s ",PlayerInfo[playerid][pNames]);
	SendMes(params[0], COLOR_YELLOW2, "Age: %d  Telephone: %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pPnumber]);
	if(PlayerInfo[playerid][pFacePass] == 0)//��������� �������
	{
		SendMes(params[0], COLOR_YELLOW2, "Fraction: %s",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
		SendMes(params[0], COLOR_YELLOW2, "Work: %s",GetPlayerJobName(PlayerInfo[playerid][pJob]));
		SendMes(params[0], COLOR_YELLOW2, "Weapon permit: %s",shltext);
		SendMes(params[0], COLOR_YELLOW2, "Crimes: %d",PlayerInfo[playerid][pKills]);
		SendMes(params[0], COLOR_YELLOW2, "Obedience: %d",PlayerInfo[playerid][pZakonp]);
		SendMes(params[0], COLOR_YELLOW2, "Military ID: %s", PlayerInfo[playerid][pVoenBill] ? ("{a38b52}Served") : ("{AA3333}Did not serve"));
		if(PlayerInfo[playerid][pWanted] > 0) SendClientMessage(params[0], COLOR_REDD, "Attention! This is a wanted man!");
	}
	else
	{
		if(PlayerInfo[playerid][pFacePass] == 1) SendClientMessage(params[0], COLOR_YELLOW2, "Faction: Citizen");
		else if(PlayerInfo[playerid][pFacePass] == 2) SendClientMessage(params[0], COLOR_YELLOW2, "Faction: FBI");
	    else if(PlayerInfo[playerid][pFacePass] == 3) SendClientMessage(params[0], COLOR_YELLOW2, "Faction: S.W.A.T");
	    else if(PlayerInfo[playerid][pFacePass] == 4) SendClientMessage(params[0], COLOR_YELLOW2, "Faction: Administration of the President");
		SendClientMessage(params[0], COLOR_YELLOW2, "Job: Unemployed");
		SendClientMessage(params[0], COLOR_YELLOW2, "Weapon permit: Yes");
		SendMes(params[0], COLOR_YELLOW2, "Crimes: %d",PlayerInfo[playerid][pKills]);
		SendMes(params[0], COLOR_YELLOW2, "Obedience: %d",PlayerInfo[playerid][pZakonp]);
		SendClientMessage(params[0], COLOR_YELLOW2, "Military ID: {a38b52}Served");
	}
	SendClientMessage(params[0],COLOR_GREY, "=============================");
	format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
	format(stringer1, sizeof(stringer1), "%s showed his passport", PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
	return true;
}*/
alias:showpass("pass");
CMD:showpass(playerid, params[])
{
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /showpass [id]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_RED, "Man too far!");
    new string[1001];
    format(string, sizeof(string), "{72d12a}Nickname: {FFFFFF}%s \n{72d12a}Level: {FFFFFF}%d\n{72d12a}Age: {FFFFFF}%d  \n{72d12a}Telephone: {FFFFFF}%d \n{72d12a}Faction: {FFFFFF}%s \n{72d12a}Rank: %d\n{72d12a}Weapon permit: {FFFFFF}%s \n{72d12a}Crimes: {FFFFFF}%d",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pAge],PlayerInfo[playerid][pPnumber],GetPlayerFracName[PlayerInfo[playerid][pMember]],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pKills],PlayerInfo[playerid][pZakonp]);
    ShowPlayerDialog(params[0], 0000, DIALOG_STYLE_MSGBOX, "Player Passport", string, "Close", "");
    format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
    SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
    format(stringer1, sizeof(stringer1), "%s showed his passport", PlayerInfo[playerid][pNames]);
    ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
    return true;
}
CMD:pass(playerid, params[])
{
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /pass [id]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_RED, "Man too far!");
    new string[1001];
    format(string, sizeof(string), "{72d12a}Nickname: {FFFFFF}%s \n{72d12a}Level: {FFFFFF}%d\n{72d12a}Age: {FFFFFF}%d  \n{72d12a}Telephone: {FFFFFF}%d \n{72d12a}Faction: {FFFFFF}%s \n{72d12a}Rank: %d\n{72d12a}Weapon permit: {FFFFFF}%s \n{72d12a}Crimes: {FFFFFF}%d",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pAge],PlayerInfo[playerid][pPnumber],GetPlayerFracName[PlayerInfo[playerid][pMember]],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pKills],PlayerInfo[playerid][pZakonp]);
    ShowPlayerDialog(params[0], 0000, DIALOG_STYLE_MSGBOX, "Player Passport", string, "Close", "");
    format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
    SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
    format(stringer1, sizeof(stringer1), "%s showed his passport", PlayerInfo[playerid][pNames]);
    ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
    return true;
}
CMD:passport(playerid, params[])
{
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /passport [id]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_RED, "Man too far!");
    new string[1001];
    format(string, sizeof(string), "{72d12a}Nickname: {FFFFFF}%s \n{72d12a}Level: {FFFFFF}%d\n{72d12a}Age: {FFFFFF}%d  \n{72d12a}Telephone: {FFFFFF}%d \n{72d12a}Faction: {FFFFFF}%s \n{72d12a}Rank: %d\n{72d12a}Weapon permit: {FFFFFF}%s \n{72d12a}Crimes: {FFFFFF}%d",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pAge],PlayerInfo[playerid][pPnumber],GetPlayerFracName[PlayerInfo[playerid][pMember]],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pKills],PlayerInfo[playerid][pZakonp]);
    ShowPlayerDialog(params[0], 0000, DIALOG_STYLE_MSGBOX, "Player Passport", string, "Close", "");
    format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
    SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
    format(stringer1, sizeof(stringer1), "%s showed his passport", PlayerInfo[playerid][pNames]);
    ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
    return true;
}
CMD:serverinfo(playerid, params[])
{
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}New {2cdb0d}York", "{16f53f}Server Informations -:\n{ffc414}Server Name: {ffff00}New {2cdb0d}York {ff0000}Role{ffffff}play\n{ffc414}First Open Server Date: {ff0000}17/3/2024\n{ffc414}Server Ip Address: {ff0000}103.179.45.98:5265\n{ffc414}Server Language: {ff0000}English\n{ffc414}Script Owner: {ff0000}Blackrose_Rog", "Close", "");
	return true;
}

CMD:crashcuff(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /crashcuff [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
	if(PlayerInfo[playerid][pOtmbI4ka] == 0) return SendClientMessage(playerid, COLOR_GREY, "You don't have a master key");
	if(PlayerCuffed[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, "The player is not in handcuffs");
	if(crashcuff[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "The command can be used once every 30 seconds");
	if (ProxDetectorS(8.0, playerid, params[0]))
	{
		new randomm;
		switch(PlayerInfo[params[0]][pDonateRank])
		{
		case 1: { randomm = random(12)+1; }
		case 2: { randomm = random(11)+1; }
		case 3: { randomm = random(10)+1; }
		default: { randomm = random(13)+1; }
		}
		switch(randomm)
		{
		case 1..3:
			{
				TogglePlayerControllable(params[0], 1);
				SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(params[0],0);
				PlayerCuffed[params[0]] = 0;
				crashcuff[playerid] = 30;
				PlayerInfo[playerid][pOtmbI4ka]--;
				format(stringer1, sizeof(stringer1), "Player %s threw off his handcuffs.", PlayerInfo[params[0]][pNames]);
				ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
			}
		default:
			{
				SendClientMessage(playerid, COLOR_GREY, "You failed to throw off the handcuffs.");
				PlayerInfo[playerid][pOtmbI4ka]--;
				crashcuff[playerid] = 30;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "The player is not near you.");
	return true;
}
CMD:givebil(playerid, params[])
{
    if(PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 19 && PlayerInfo[playerid][pAlcoInvenxua] < 10) return SendClientMessage(playerid, COLOR_WHITE, "You do not have the right to issue a military ID");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "Usage: /givebil [ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(PlayerInfo[params[0]][pVoenBill] != 0) return SendClientMessage(playerid, COLOR_WHITE, "The player already has a military ID.");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SendClientMessage(playerid, COLOR_WHITE, "The player must be near you.");
    PlayerInfo[params[0]][pVoenBill] = 1;
    if(PlayerInfo[playerid][pAlcoInvenxua] > 0) SendMes(params[0], -1, "Adminstrator %s[%d] gave you a military ID.",PlayerInfo[playerid][pNames], playerid);
    else SendMes(params[0], -1, "%s %s[%d] gave you a military ID.",fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1], PlayerInfo[playerid][pNames], playerid);
	SendMes(playerid, -1, "Have you issued a military ID? %s[%d]", PlayerInfo[params[0]][pNames],params[0]);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `voenbill` = '1' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
	mysql_function_query(connects, mysql_query_, false, "", "");
    return 1;
}
CMD:givemedcard(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pAlcoInvenxua] > 10)
    {
	    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "Usage: /givemedcard [ID]");
	    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	    if(PlayerInfo[params[0]][pMedCard] != 0) return SendClientMessage(playerid, COLOR_WHITE, "The player already has a medical card.");
	    if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SendClientMessage(playerid, COLOR_WHITE, "The player must be near you.");
        PlayerInfo[params[0]][pMedCard] = 1;
        if(PlayerInfo[playerid][pAlcoInvenxua] > 0) SendMes(params[0], -1, "Adminstrator %s[%d] gave you a medical card.",PlayerInfo[playerid][pNames], playerid);
        else SendMes(params[0], -1, "%s %s[%d] gave you a medical card.",fRankName[PlayerInfo[playerid][pMember]-1][PlayerInfo[playerid][pRank]-1], PlayerInfo[playerid][pNames], playerid);
	    SendMes(playerid, -1, "Have you issued a medical card? %s[%d]", PlayerInfo[params[0]][pNames],params[0]);
	    format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `medcard` = '1' WHERE `pID` = '%d'",PlayerInfo[params[0]][pID]);
	    mysql_function_query(connects, mysql_query_, false, "", "");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "You do not have the right to issue a medical card.");
    return 1;
}
alias:showmedcard("card");
CMD:showmedcard(playerid, params[])
{
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "Usage: /showmedcard [ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SendClientMessage(playerid, COLOR_WHITE, "The player must be near you.");
    format(stringer1, sizeof(stringer1), "{FFFFFF}Medical checkup %s: %s",PlayerInfo[playerid][pNames], PlayerInfo[playerid][pMedCard] ? ("{a38b52}Passed") : ("{AA3333}Failed"));
    ShowPlayerDialog(params[0],7587,DIALOG_STYLE_MSGBOX,"{D8F600}Medical card",stringer1,"Close","");
    format(stringer1, sizeof(stringer1), "%s shows his medical card %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
    ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
    return 1;
}
CMD:window(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "You must be in the driver's seat");
	new vod = GetPlayerVehicleID(playerid);
	if(IsAPlane(vod) && IsABoat(vod) && IsANoSpeed(vod)) return SendClientMessage(playerid, -1, "Windows cannot be opened on this vehicle.");
	new bool:driver, bool:passenger, bool:backleft, bool:backright;
	GetVehicleParamsCarWindows(vod, driver, passenger, backleft, backright);
	format(stringer, sizeof(stringer), "\
	{F3BB33}1.{FFFFFF} Driver window: %s\n\
	{F3BB33}2.{FFFFFF} Passenger front window: %s\n\
	{F3BB33}3.{FFFFFF} Passenger rear left window: %s\n\
	{F3BB33}4.{FFFFFF} Passenger rear right window: %s\n",
	!driver ? ("{63BD4E}Open") : ("{F04245}Closed"),
	!passenger ? ("{63BD4E}Open") : ("{F04245}Closed"),
	!backleft ? ("{63BD4E}Open") : ("{F04245}Closed"),
	!backright ? ("{63BD4E}Open") : ("{F04245}Closed"));

	ShowPlayerDialog(playerid, 4322, DIALOG_STYLE_LIST, "{63BD4E}transport window management", stringer, "Select", "Cancle");
	return true;
}
CMD:cuff(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /cuff [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "You are connected! ");
	if(IsACop(params[0])) return    SendClientMessage(playerid, COLOR_GREY, "You can't handcuff a lawyer");
	if(PlayerCuffed[params[0]] == 2) return    SendClientMessage(playerid, COLOR_GREY, "This man is already handcuffed. ");
	if(PlayerInfo[params[0]][pWanted] == 0) return    SendClientMessage(playerid, COLOR_GREY, "You cannot handcuff this person (he is not wanted)");
	if (!ProxDetectorS(2.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "There is no one next to you!");
	if(PlayerCuffed[params[0]] != 1) return SendClientMessage(playerid, COLOR_GREY, "Player is not stunned, use taser. ");
	format(stringer1, sizeof(stringer1), "You are handcuffed by %s.", PlayerInfo[playerid][pNames]);
	SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
	format(stringer1, sizeof(stringer1), "You handcuffed %s.", PlayerInfo[params[0]][pNames]);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1, sizeof(stringer1), "%s handcuffed %s.", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	GameTextForPlayer(params[0], "~r~Cuffed", 2500, 3);
	ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	TogglePlayerControllable(params[0], false);
	PlayerCuffed[params[0]] = 2;
	PlayerCuffedTime[params[0]] = 3600;
	return true;
}
CMD:uncuff(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are not on duty!");
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /uncuff [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(PlayerTied[playerid] > 0)  return SendClientMessage(playerid, COLOR_GREY, "You are connected!");
	if (!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "There is no one next to you!");
	if(PlayerCuffed[params[0]] == 2)
	{
		format(stringer1, sizeof(stringer1), "I took off the handcuffs from you %s.", PlayerInfo[playerid][pNames]);
		SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
		GameTextForPlayer(params[0], "~g~Uncuffed", 2500, 3);
		format(stringer1, sizeof(stringer1), "You have removed the handcuffs from %s.", PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE); RemovePlayerAttachedObject(params[0],0); TogglePlayerControllable(params[0], true); PlayerCuffed[params[0]] = 0;
	}
	else return SendClientMessage(playerid, COLOR_GREY, "This player is not in handcuffs!");
	return true;
}
CMD:refill(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "You are not a mechanic!");
    if(gcontract[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "You have not signed a contract with the gas station!");
    if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /refill [id] [price]");
    if(params[1] < 1 || params[1] > 5000) return SendClientMessage(playerid, COLOR_GREY, "Cannot be less than 1 or more 5000!");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "You're not on a tow truck!");
	if(ProxDetectorS(8.0, playerid, params[0]) && IsPlayerInAnyVehicle(params[0]))
	{
		format(stringer1, sizeof(stringer1), "You offered %s to refuel his car for %d Money.",PlayerInfo[params[0]][pNames],params[1]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Mechanic %s offers to fill up your car for %d Money.(lead /accept refill), to confirm the filling.",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
		RefillOffer[params[0]] = playerid;
		RefillPrice[params[0]] = params[1];
	}
	else return SendClientMessage(playerid, COLOR_GREY, "He's not in the car!");
	return true;
}
CMD:connect(playerid)
{
	if(!PlayerInfo[playerid][pAlcoInvenxua]) return true;
	if(PlayerBigEarsConnect{playerid} == 1)
	{
		SendClientMessage(playerid,-1, "{FF6600}Player connections are disabled");
		PlayerBigEarsConnect{playerid} = 0;
		return true;
	}
	SendClientMessage(playerid,-1, "{00cb00}Player connections enabled");
	PlayerBigEarsConnect{playerid} = 1;
	return true;
}
CMD:sellhouse(playerid, params[])
{
    if(PlayerInfo[playerid][pPhousekey] == 255) return SendClientMessage(playerid,COLOR_GREY,"You don't have a home!");
    if(sscanf(params, "dd",params[0],params[1]))
	{
		ShowPlayerDialog(playerid, 5033, DIALOG_STYLE_MSGBOX, "Selling property", "{ffffff}Do you want to sell your house?\n{AFAFAF}(to sell a house to another player, enter /sellhouse [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the house back!", "Yes", "No");
		return true;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 90.0,HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz])
	    && !IsPlayerInRangeOfPoint(playerid, 10.0,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez])) return SendClientMessage(playerid,COLOR_GREY,"To sell a house, you must be near the house.");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,"Player is offline");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
	if(PlayerInfo[params[0]][pPhousekey] != 255) return SendClientMessage(playerid,COLOR_GREY,"The player has a house.");
	if(params[1] < 90000 || params[1] > 2000000000) return SendClientMessage(playerid,COLOR_GREY,"The price cannot be less than 90000 and more than 2000000000.");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "You can't sell a house to yourself..");
	if(PlayerInfo[params[0]][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "The player cannot have a house, because I haven't played 2 hours yet!");
	format(stringer1,144,"You offered %s to buy your house. Price: %s Money", PlayerInfo[params[0]][pNames], formatInt(params[1])), SendClientMessage(playerid,0x6495EDFF, stringer1);
	format(stringer1, 144, "%s offered to buy you a house. Price: %s Money", PlayerInfo[playerid][pNames], formatInt(params[1]));
	ShowPlayerDialog(params[0], 1008, 0, "Buying a house", stringer1, "Yes", "No");
	SetPVarInt(params[0], "HHouse", playerid);
	SetPVarInt(params[0], "HHouseMoney", params[1]);
	SELL[1][playerid] = params[0];
	return true;
}
CMD:change(playerid, params[])
{
    new change[64];
	if(sscanf(params, "s[64]dd", change, params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /change [house / bizz] [id] [surcharge]");
	if(!IsPlayerConnected(params[1]) || params[1] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(!ProxDetectorS(5.0, playerid, params[1])) return SendClientMessage(playerid,COLOR_GREY,"The player is not near you");
	if(params[2] < 1000 || params[2] > 1000000000) return SendClientMessage(playerid,COLOR_GREY,"The price cannot be less than 1000 and more than 1000000000.");
	if(strcmp(change,"house",true) == 0)
	{
		if(PlayerInfo[playerid][pPhousekey] == 255 || PlayerInfo[params[1]][pPhousekey] == 255) return SendClientMessage(playerid,COLOR_GREY,"You and/or the player do not have a home.");
		SendMes(params[1],COLOR_WHITE,"Player %s[%d] invites you to exchange houses. With additional payment on YOUR part: %s Money.", PlayerInfo[playerid][pNames], playerid, formatInt(params[2]));
		SendClientMessage(params[1], -1, "Enter /accept house to agree.");
		SendMes(playerid,COLOR_WHITE,"You proposed to %s[%d] to exchange houses. With additional payment from HIS side: %s Money.", PlayerInfo[params[1]][pNames], params[1], formatInt(params[2]));
		ChangeAll[params[1]][cSeller] = playerid;
		ChangeAll[playerid][cBuyer] = params[1];
		ChangeAll[params[1]][cPrice] = params[2];
		ChangeAll[params[1]][cType] = 1;
	}
	else if(strcmp(change,"bizz",true) == 0)
	{
		if(GetPlayerBizz(playerid) == 0 || GetPlayerBizz(params[1]) == 0) return SendClientMessage(playerid,COLOR_GREY,"You and/or the player do not have a business.");
		SendMes(params[1],COLOR_WHITE,"Player %s[%d] invites you to exchange businesses. With additional payment on YOUR part: %s Money.", PlayerInfo[playerid][pNames], playerid, formatInt(params[2]));
		SendClientMessage(params[1], -1, "Enter /accept bizz to agree.");
		SendMes(playerid,COLOR_WHITE,"You proposed to %s[%d] to exchange businesses. With additional payment from HIS side: %s Money.", PlayerInfo[params[1]][pNames], params[1], formatInt(params[2]));
		ChangeAll[params[1]][cSeller] = playerid;
		ChangeAll[playerid][cBuyer] = params[1];
		ChangeAll[params[1]][cPrice] = params[2];
		ChangeAll[params[1]][cType] = 2;
	}
	return true;
}
CMD:repair(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "You are not a mechanic!");
    if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /repair [id] [price]");
    if(params[1] < 1 || params[1] > 5000) return SendClientMessage(playerid, COLOR_GREY, "Can't be less than 1 or more than 5000!");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "You're not on a tow truck!");
	if(ProxDetectorS(8.0, playerid, params[0])&&  IsPlayerInAnyVehicle(params[0]))
	{
		format(stringer1, sizeof(stringer1), "You offered %s to repair his car for %d Money.",PlayerInfo[params[0]][pNames],params[1]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Mechanic %s offers to repair your car for %d Money. (Enter /accept repair) to complete the repair.",PlayerInfo[playerid][pNames],params[1]);
		SendClientMessage(params[0], 0x6ab1ffaa, stringer1);
		RepairOffer[params[0]] = playerid;
		RepairPrice[params[0]] = params[1];
	}
	else return SendClientMessage(playerid, COLOR_GREY, "He's not in the car!");
	return true;
}
CMD:eject(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You must be in the car!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "You are not a driver!");
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /eject [id]");
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you ");
    new test = GetPlayerVehicleID(playerid);
    if(IsPlayerInVehicle(params[0],test))
	{
        RemoveFromVehicle(params[0]);
        format(stringer1, sizeof(stringer1), "You threw %s out of the car!", PlayerInfo[params[0]][pNames]);
        SendClientMessage(playerid, 0x6495EDFF, stringer1);
        format(stringer1, sizeof(stringer1), "You were thrown out of the car by %s!", PlayerInfo[playerid][pNames]);
        SendClientMessage(params[0], 0x6495EDFF, stringer1);
        TogglePlayerControllable(params[0],0);
        SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
        RemovePlayerAttachedObject(params[0],0);
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Not near you!");
	return true;
}
stock IsAIP(text[])
{
	new numbers;
	for(new i = 0; i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return 1;
	return 0;
}

stock ReplaceText(text[])
{
	for(new i; i < strlen(text); i ++)
	{
	    if('0' <= text[i] <= '9') text[i] = '*';
	}
	return 1;
}
CMD:accept(playerid, params[])
{
	new x_job[64];
	if(sscanf(params, "s[64]",x_job)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /accept [meaning]");
	if(strcmp(x_job,"witness",true) == 0)
	{
		if(MarryWitnessOffer[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "You weren't asked to be a witness!");
		if(!IsPlayerConnected(MarryWitnessOffer[playerid])) return true;
		if(!ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "The player who asked you to be a witness is not near you!");
		format(stringer1, sizeof(stringer1), "You accepted %s's offer to be a witness at a wedding", PlayerInfo[MarryWitnessOffer[playerid]][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "%s agreed to be your witness at the wedding.", PlayerInfo[playerid][pNames]);
		SendClientMessage(MarryWitnessOffer[playerid], 0x6ab1ffaa, stringer1);
		MarryWitness[MarryWitnessOffer[playerid]] = playerid;
		MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"house",true) == 0)
	{
		if(ChangeAll[playerid][cPrice] == 0 || ChangeAll[playerid][cSeller] == INVALID_PLAYER_ID || ChangeAll[playerid][cType] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nobody offered you to exchange houses.");
		if(!ProxDetectorS(8.0, playerid, ChangeAll[playerid][cSeller])) return SendClientMessage(playerid, COLOR_GREY, "The player must be next to you.");
		if(PlayerInfo[playerid][pCash] < ChangeAll[playerid][cPrice]) return SendClientMessage(playerid, COLOR_GREY, "You don't have money to pay extra.");
		new house = PlayerInfo[ChangeAll[playerid][cSeller]][pPhousekey], house2 = PlayerInfo[playerid][pPhousekey], playerd = ChangeAll[playerid][cSeller];
		PlayerInfo[playerid][pCash] -= ChangeAll[playerid][cPrice];
		GiveMoney(playerd, ChangeAll[playerid][cPrice]);
		PlayerInfo[playerd][pPhousekey] = house2;
		PlayerInfo[playerid][pPhousekey] = house;
		strmid(HouseInfo[house][hOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
		strmid(HouseInfo[house2][hOwner], PlayerInfo[playerd][pNames], 0, strlen(PlayerInfo[playerd][pNames]), 255);
		SendMes(playerid,COLOR_WHITE,"You exchanged houses with %s, with your additional payment: %s Money.",PlayerInfo[playerd][pNames],formatInt(ChangeAll[playerid][cPrice]));
		SendMes(ChangeAll[playerid][cSeller], COLOR_WHITE,"You exchanged houses with %s, with his additional payment: %s Money.",PlayerInfo[playerid][pNames],formatInt(ChangeAll[playerid][cPrice]));
		if(caridhouse[playerid] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerid]);
		if(caridhouse[playerd] != INVALID_VEHICLE_ID) DestroyVehicleEx(caridhouse[playerd]);
		//
		if(GetPVarInt(playerid,"CarNomer") == 0) caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1], 7200, 0);
		else caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar2], 2531.6418,-1546.1769,2023.1758,90.0000, cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1], 7200, 0);
		VEHICLE[caridhouse[playerid]][vHealth] = 1000.0;
		VEHICLE[caridhouse[playerid]][vLock] = 1;
		LinkVehicleToInterior(caridhouse[playerid], 1);
		SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPhousekey]+50);
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar] + 20.0;
		AddTune(playerid, GetPVarInt(playerid,"CarNomer"));
		//
		if(GetPVarInt(playerd,"CarNomer") == 0) caridhouse[playerd] = CreateVehicleEx(PlayerInfo[playerd][pCar], 2531.9766,-1540.2168,2023.1902,90.0000, cColor[playerd][GetPVarInt(playerd,"CarNomer")][0], cColor[playerd][GetPVarInt(playerid,"CarNomer")][1], 7200, 0);
		else caridhouse[playerd] = CreateVehicleEx(PlayerInfo[playerd][pCar2], 2531.6418,-1546.1769,2023.1758,90.0000, cColor[playerd][GetPVarInt(playerd,"CarNomer")][0], cColor[playerd][GetPVarInt(playerd,"CarNomer")][1], 7200, 0);
		VEHICLE[caridhouse[playerd]][vHealth] = 1000.0;
		VEHICLE[caridhouse[playerd]][vLock] = 1;
		LinkVehicleToInterior(caridhouse[playerd], 1);
		SetVehicleVirtualWorld(caridhouse[playerd], PlayerInfo[playerd][pPhousekey]+50);
		Fuell[caridhouse[playerd]] = PlayerInfo[playerd][pFuelcar] + 20.0;
		AddTune(playerd, GetPVarInt(playerid,"CarNomer"));
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hOwner` = '%s' WHERE hID = '%i'",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pPhousekey]);
		mysql_function_query(connects, mysql_query_, false, "", "");
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hOwner` = '%s' WHERE hID = '%i'",PlayerInfo[playerd][pNames],PlayerInfo[playerd][pPhousekey]);
		mysql_function_query(connects, mysql_query_, false, "", "");
		ChangeAll[playerid][cSeller] = INVALID_PLAYER_ID;
		ChangeAll[playerd][cBuyer] = INVALID_PLAYER_ID;
		ChangeAll[playerid][cPrice] = 0;
		ChangeAll[playerid][cType] = 0;
		return true;
	}
	else if(strcmp(x_job,"bizz",true) == 0)
	{
		if(ChangeAll[playerid][cPrice] == 0 || ChangeAll[playerid][cSeller] == INVALID_PLAYER_ID || ChangeAll[playerid][cType] != 2) return SendClientMessage(playerid, COLOR_GREY, "No one offered you an exchange of businesses.");
		if(!ProxDetectorS(8.0, playerid, ChangeAll[playerid][cSeller])) return SendClientMessage(playerid, COLOR_GREY, "The player must be next to you.");
		if(PlayerInfo[playerid][pCash] < ChangeAll[playerid][cPrice]) return SendClientMessage(playerid, COLOR_GREY, "You don't have money to pay extra.");
		new house = GetPVarInt(ChangeAll[playerid][cSeller], "PlayerBizz"), house2 = GetPVarInt(playerid, "PlayerBizz"), playerd = ChangeAll[playerid][cSeller];
		PlayerInfo[playerid][pCash] -= ChangeAll[playerid][cPrice];
		GiveMoney(playerd, ChangeAll[playerid][cPrice]);
		strmid(BizzInfo[house][bOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), MAX_PLAYER_NAME);
		SetPVarInt(playerid, "PlayerBizz", house);
		strmid(BizzInfo[house2][bOwner], PlayerInfo[playerd][pNames], 0, strlen(PlayerInfo[playerd][pNames]), MAX_PLAYER_NAME);
		SetPVarInt(playerd, "PlayerBizz", house2);
		UpdateBizz(GetPVarInt(playerd, "PlayerBizz"));
		UpdateBizz(GetPVarInt(playerid, "PlayerBizz"));
		SendMes(playerid,COLOR_WHITE,"You exchanged business with %s, with your additional payment: %s Money.",PlayerInfo[playerd][pNames],formatInt(ChangeAll[playerid][cPrice]));
		SendMes(ChangeAll[playerid][cSeller], COLOR_WHITE,"You exchanged business with %s, with his additional payment: %s Money.",PlayerInfo[playerid][pNames],formatInt(ChangeAll[playerid][cPrice]));
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_BIZZ"` SET `bOwner` = '%s' WHERE bID = '%i'",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "PlayerBizz"));
		mysql_function_query(connects, mysql_query_, false, "", "");
		format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_BIZZ"` SET `bOwner` = '%s' WHERE bID = '%i'",PlayerInfo[playerd][pNames],GetPVarInt(playerd, "PlayerBizz"));
		mysql_function_query(connects, mysql_query_, false, "", "");
		ChangeAll[playerid][cSeller] = INVALID_PLAYER_ID;
		ChangeAll[playerd][cBuyer] = INVALID_PLAYER_ID;
		ChangeAll[playerid][cPrice] = 0;
		ChangeAll[playerid][cType] = 0;
		return true;
	}
	else if(strcmp(x_job,"fight",true) == 0)
	{
		if(fightid[playerid] < 176 && boy[playerid] == 0)
		{
			if(ring == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "The boxing ring is busy.");
			new healthh = 30+ (PlayerInfo[playerid][pFightSkill]*10);
			new healthhg = 30+ (PlayerInfo[fightid[playerid]][pFightSkill]*10);
			boy[playerid] = 1;
			boy[fightid[playerid]] = 1;
			SetPlayerHealthAC(playerid, healthh);
			SetPlayerHealthAC(fightid[playerid], healthhg);
			TogglePlayerControllable(playerid, 0);
			TogglePlayerControllable(fightid[playerid], 0);
			SetPPos(playerid,758.7978,-1.7495,1001.5942);
			SetPPos(fightid[playerid],762.9683,2.4081,1001.5942);
			SetPlayerFacingAngle(playerid, 319.6382);
			SetPlayerFacingAngle(fightid[playerid], 137.3811);
			format(stringer1, sizeof(stringer1), " ~g~%d HP", healthh);
			GameTextForPlayer(playerid, stringer1, 3000, 1);
			format(stringer1, sizeof(stringer1), " ~g~%d HP", healthhg);
			GameTextForPlayer(fightid[playerid], stringer1, 3000, 1);
			ring = 1;
			TimeBox[playerid] = 10;
			TimeBoxAll[playerid] = 600;
			TimeBox[fightid[playerid]] = 10;
			TimeBoxAll[fightid[playerid]] = 600;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Use your fighting skills to defeat your opponent.");
			SendClientMessage(fightid[playerid], COLOR_LIGHTRED, "Use your fighting skills to defeat your opponent.");
		}
	}
	else if(strcmp(x_job, "marriage",true) == 0)
	{
		if(ProposeOffer[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "No one offered you!");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1988.6638,1117.8837,54.4726)) return SendClientMessage(playerid, COLOR_GREY, "You are not at the church in San Fierro!");
		if(!IsPlayerConnected(ProposeOffer[playerid])) return true;
		if(!ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "The Bride/Groom is not next to you!");
		format(stringer1, sizeof(stringer1), "You accepted an offer from %s's", PlayerInfo[ProposeOffer[playerid]][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "%s accepted your request to be your Wife.", PlayerInfo[playerid][pNames]);
		SendClientMessage(ProposeOffer[playerid], 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "{FC6DEC}Congratulations! %s and %s are now husband and wife!", PlayerInfo[ProposeOffer[playerid]][pNames],PlayerInfo[playerid][pNames]);
		SendClientMessageToAll(COLOR_WHITE,stringer1);
		PlayerInfo[ProposeOffer[playerid]][pCash] -= 100000;
		PlayerInfo[playerid][pMarried] = 1;
		PlayerInfo[ProposeOffer[playerid]][pMarried] = 1;
		MarryWitness[ProposeOffer[playerid]] = INVALID_PLAYER_ID;
		ProposeOffer[playerid] = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"taxi",true) == 0)
	{
		if(TransportDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "You are not a taxi driver!");
		if(TaxiCall == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "No Calls");
		if(!IsPlayerConnected(TaxiCall)) return true;
		format(stringer1, sizeof(stringer1), "You accepted the challenge from %s.",PlayerInfo[TaxiCall][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Taxi driver %s accepted your call, stay where you are.",PlayerInfo[playerid][pNames]);
		SendClientMessage(TaxiCall, COLOR_GREEN, stringer1);
		TaxiCall = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"ticket",true) == 0)
	{
		if(TicketOffer[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "You were not fined!");
		if(!IsPlayerConnected(TicketOffer[playerid])) return true;
		if(!ProxDetectorS(5.0, playerid, TicketOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "The police are not near you!");
		format(stringer1, sizeof(stringer1), "You paid a fine of %d Money to an officer %s.", TicketMoney[playerid], PlayerInfo[TicketOffer[playerid]][pNames]);
		SendClientMessage(playerid, COLOR_BLUE, stringer1);
		format(stringer1, sizeof(stringer1), "%s paid a fine of %d Money.", PlayerInfo[playerid][pNames], TicketMoney[playerid]);
		SendClientMessage(TicketOffer[playerid], COLOR_BLUE, stringer1);
		PlayerInfo[playerid][pCash] -=TicketMoney[playerid];
		GiveMoney(TicketOffer[playerid], TicketMoney[playerid]);
		TicketOffer[playerid] = INVALID_PLAYER_ID;
		TicketMoney[playerid] = 0;
		return true;
	}
	else if(strcmp(x_job,"medic",true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 4) return SendClientMessage(playerid, COLOR_GREY, "You are not a doctor!");
		if(MedicCall == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "No calls!");
		if(!IsPlayerConnected(MedicCall)) return true;
		format(stringer1, sizeof(stringer1), "You have accepted a request from %s.",PlayerInfo[MedicCall][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Medic %s has accepted your challenge!",PlayerInfo[playerid][pNames]);
		SendClientMessage(MedicCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(MedicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		MedicCall = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"police",true) == 0)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not a policeman!");
		if(PoliceCall == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "No calls!");
		if(!IsPlayerConnected(PoliceCall)) return true;
		format(stringer1, sizeof(stringer1), "You accepted the challenge from %s",PlayerInfo[PoliceCall][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Patrolman %s accepted your challenge!",PlayerInfo[playerid][pNames]);
		SendClientMessage(PoliceCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(PoliceCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		PoliceCall = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"mechanic",true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "You are not a mechanic!");
		if(MechanicCall == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "No calls!");
		if(!IsPlayerConnected(MechanicCall)) return true;
		format(stringer1, sizeof(stringer1), "You accepted the challenge from %s",PlayerInfo[MechanicCall][pNames]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "Mechanic %s accepted your call!",PlayerInfo[playerid][pNames]);
		SendClientMessage(MechanicCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(MechanicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		MechanicCall = INVALID_PLAYER_ID;
		return true;
	}
	else if(strcmp(x_job,"livels",true) == 0)
	{
		if(LiveOfferls[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Nobody offered you an interview");
		if(!IsPlayerConnected(LiveOfferls[playerid])) return true;
		if(!ProxDetectorS(5.0, playerid, LiveOfferls[playerid])) return SendClientMessage(playerid, COLOR_GREY, "You are far from the reporter");
		TalkingLivels[LiveOfferls[playerid]] = 2;
		SendClientMessage(LiveOfferls[playerid], COLOR_WHITE, "Usage: /live to end the interview");
		LiveOfferls[playerid] = INVALID_PLAYER_ID;
		TalkingLivels[playerid] = 2;
		SendClientMessage(playerid, COLOR_YELLOW, "You are giving an interview on live radio Los Santos");
		return true;
	}
	else if(strcmp(x_job,"refill",true) == 0)
	{
		if(RefillOffer[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "You weren't offered gas!");
		if(!IsPlayerConnected(RefillOffer[playerid])) return true;
		if(PlayerInfo[playerid][pCash] < RefillPrice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Not enough money!");
		new car = GetPlayerVehicleID(RefillOffer[playerid]);
		format(stringer1, sizeof(stringer1), "Mechanic %s filled your car with 100 liters in %d Money.",PlayerInfo[RefillOffer[playerid]][pNames],RefillPrice[playerid]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "You filled up the car in %s %d Money.",PlayerInfo[playerid][pNames],RefillPrice[playerid]);
		SendClientMessage(RefillOffer[playerid], 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=RefillPrice[playerid];
		GiveMoney(RefillOffer[playerid], RefillPrice[playerid]);
		if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SendClientMessage(playerid,COLOR_YELLOW,".: You are not in the car, or the car does not require gasoline :.");
		if(Fuell[car] >= 100) SendClientMessage(playerid,COLOR_GRAD1,"Your tank is full");
		else
		{
			Fuell[car] = 100;
			PlayerInfo[playerid][pFuelcar] = 100;
			OldFuel[playerid] = floatround(Fuell[car]);
			Refueling[playerid] = 0;
		}
		return true;
	}
	else if(strcmp(x_job,"hotdog",true) == 0)
	{
		if(HotdogOffer[playerid] == INVALID_PLAYER_ID) return true;
		if(!IsPlayerConnected(HotdogOffer[playerid])) return true;
		if(PlayerInfo[playerid][pCash] < HotdogPrice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money!");
		new Float:health;
		GetPlayerHealth(playerid,health);
		format(stringer1, sizeof(stringer1), "You bought a Hot Dog from %s for %d Money.",PlayerInfo[HotdogOffer[playerid]][pNames], HotdogPrice[playerid]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), " We sold 'Hot Dog %s for %d Money.",PlayerInfo[playerid][pNames],HotdogPrice[playerid]);
		SendClientMessage(HotdogOffer[playerid], 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=HotdogPrice[playerid];
		SetPlayerHealthAC(playerid, health + 20.0);
		SetPlayerChatBubble(playerid,"ate a hot dog",COLOR_PURPLE,30.0,10000);
		PlayerInfo[HotdogOffer[playerid]][pCash]+= HotdogPrice[playerid];
		HotdogOffer[playerid] = INVALID_PLAYER_ID;
		HotdogPrice[playerid] = 0;
		return true;
	}
	else if(strcmp(x_job, "free",true) == 0 && FreeOffer[playerid] == 999 || strcmp(x_job, "free",true) == 0 && !IsPlayerConnected( FreeOffer[playerid]))
	{
		if(PlayerInfo[playerid][pCash] < FreePrice[playerid]) return SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
		format(stringer1, 128, "You paid the lawyer %s %s Money.",PlayerInfo[FreeOffer[playerid]][pNames], formatInt(FreePrice[playerid]));
		SendClientMessage(playerid, 0x6495EDFF, stringer1);
		format(stringer1, 128, "You released %s from prison for %s Money.",PlayerInfo[playerid][pNames],formatInt(FreePrice[playerid]));
		SendClientMessage(FreeOffer[playerid], 0x6495EDFF, stringer1);
		if(SposobOffer[playerid] == 0) PlayerInfo[playerid][pCash] -= FreePrice[playerid];
		if(SposobOffer[playerid] == 1) PlayerInfo[playerid][pBank] -= FreePrice[playerid];
		GiveMoney(FreeOffer[playerid], FreePrice[playerid]);
		FreeOffer[playerid] = 999;
		FreePrice[playerid] = 0;
		SposobOffer[playerid] = 0;
		SetPlayerInteriorEx(playerid, 0);
		SetPPos(playerid,1553.4962,-1675.2714,16.1953);
		SetPlayerFacingAngle(playerid, 95.0636);
		PlayerInfo[playerid][pJailTime] = 0;
		PlayerInfo[playerid][pJailed] = 0;
		PlayerInfo[playerid][pWanted] = 0;
		PlayerInfo[playerid][pUsedJail] = 0;
		SendClientMessage(playerid, COLOR_YELLOW, "You are free");
		SendClientMessage(playerid, COLOR_GREEN, "You've paid your debt to society");
		SetPlayerWantedLevel(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		return true;
	}
	else if(strcmp(x_job,"repair",true) == 0)
	{
		if(RepairOffer[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "You weren't offered to fix your car!");
		if(PlayerInfo[playerid][pCash] < RepairPrice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money!");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You must be in the car!");
		if(!IsPlayerConnected(RepairOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "The mechanic who offered to fix your car has left the game!");
		RepairCar[playerid] = GetPlayerVehicleID(playerid);
		setVehicleHealth(RepairCar[playerid], 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		format(stringer1, sizeof(stringer1), "Mechanic %s fixed your car in %d Money",PlayerInfo[RepairOffer[playerid]][pNames], RepairPrice[playerid]);
		SendClientMessage(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1, sizeof(stringer1), "You repaired the car in %s %d Money",PlayerInfo[playerid][pNames],RepairPrice[playerid]);
		SendClientMessage(RepairOffer[playerid], 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=RepairPrice[playerid];
		GiveMoney(RepairOffer[playerid], RepairPrice[playerid]);
		RepairOffer[playerid] = INVALID_PLAYER_ID;
		RepairPrice[playerid] = 0;
		return true;
	}
	return true;
}
CMD:fmenu(playerid, params[])
{
    if(!PlayerInfo[playerid][pFamily])return SendClientMessage(playerid, -1,"You are not a member of a family!");
    ShowPlayerDialog(playerid,26372,DIALOG_STYLE_LIST,"{FFEFD5}Family menu ","{FFFFFF}Information about family\nFamily members\nFamily members[{00FF7F}Online{FFFFFF}]\n{8B0000}Leave family{FFFFFF}\nChange family walkie talkie color\nChange family nationality","Select","Cancle");
    return 1;
}
CMD:finvite(playerid, params[])
{
    if(!PlayerInfo[playerid][pFamily]) return SendClientMessage(playerid, -1,"You are not a member family!");
    if( sscanf(params, "d", params [0])) return SendClientMessage(playerid, -1, "Usage: /finvite [id]" ) ;
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This player is not present, or you entered your id ");
    if(PlayerInfo[params[0]][pFamily]) return SendClientMessage(playerid, -1, "Already a member of the family!" ) ;
    if(!ProxDetectorS(15.0, playerid,params[0])) return SendClientMessage(playerid,COLOR_GREY,"The player is far away from you.");
    format(stringer1,sizeof(stringer1),"You invited %s to join the family. %s",PlayerInfo[params[0]][pNames],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ]);
    SendClientMessage(playerid,-1,stringer1);
    format(stringer1,sizeof(stringer1),"{FFFFFF}%s invites you to join the family %s.\nDo you agree to join?",PlayerInfo[playerid][pNames],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ]);
    ShowPlayerDialog(params [ 0 ],26377,DIALOG_STYLE_MSGBOX,"{FFEFD5}Invitation to the family",stringer1,"Yes","No");
    SetPVarInt(params [ 0 ],"family_id",PlayerInfo[playerid][pFamily]);
    return 1;
}
CMD:k(playerid, params[])
{
    if(PlayerInfo[playerid][pMuted] == 1) return SendMes(playerid, COLOR_LIGHTRED, "You have a mute! Mute time left: %d second",PlayerInfo[playerid][pMuteTime]);
    if(!PlayerInfo[playerid][pFamily]) return SendClientMessage(playerid, -1,"You are not a member family!");
    if( sscanf(params, "s[128]", params [0])) return SendClientMessage(playerid, -1, "Usage: /k [message]" ) ;
	if(IsAIP(params[0])) {
		SendClientMessage(playerid, -1, "Suspicions of advertising!");
		return false;
	}
    format(stringer1,sizeof(stringer1),"{%s}[F] [%s] %s[%d]: %s",family_chat_color [ family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ] ],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ],PlayerInfo[playerid][pNames],playerid,params [0]);
    family_message(PlayerInfo[playerid][pFamily],-1, stringer1);
    return 1;
}
CMD:kickfamily(playerid, params[])
{
    if(!PlayerInfo[playerid][pFamily]) return SendClientMessage(playerid, -1,"You are not a member family!");
    if(strcmp(PlayerInfo[playerid][pNames], family_info [ PlayerInfo[playerid][pFamily] ] [ f_creator ], true) != 0) return SendClientMessage(playerid, -1,"Only its creator can kick you out of a family.");
    if( sscanf(params, "d", params [0])) return SendClientMessage(playerid, -1, "Usage: /kickfamily [id]" ) ;
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: This player does not exist, or you indicated your ID");
    if(PlayerInfo[playerid][pFamily] != PlayerInfo[params [0]][pFamily]) return SendClientMessage(playerid, -1,"This player is not in your family.");
    format(stringer1,sizeof(stringer1),"{%s}[F] [%s] %s[%i] was thrown out of the family!",family_chat_color [ family_info [ PlayerInfo[playerid][pFamily] ] [ f_chat_color ] ],family_info [ PlayerInfo[playerid][pFamily] ] [ f_name ], PlayerInfo[params [0]][pNames], params [0]);
   	family_message (PlayerInfo[playerid][pFamily], -1, stringer1);
   	family_info [ PlayerInfo[params [0]][pFamily] ] [ f_online ] -= 1;
   	family_info [ PlayerInfo[params [0]][pFamily] ] [ f_members_amount ] -= 1;
   	PlayerInfo[params[0]][pFamily] = 0;
    return 1;
}
CMD:drive(playerid, params[])
{
    if(!IsAGang(playerid)) return true;
	if(PlayerInfo[playerid][pLeader] < 1) return SendClientMessage(playerid,COLOR_GREY,"You cannot use this command.");
   	ShowPlayerDialog(playerid,2453,DIALOG_STYLE_MSGBOX,"{FFCC00}Vehicle respawn","{FFFFFF}Are you sure you want to respawn all of your faction's UNUSED vehicles?\nCost of this service: 1200$","Yes","Cancle");
	return true;
}
CMD:idgz(playerid)
{
	if(PlayerInfo[playerid][pAlcoInvenxua] < 13) return true;
	for(new i = 1;i<=TOTALGZ;i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			format(stringer1, sizeof(stringer1), "%d Zone ID", GZInfo[i][id]);//120, 113, 102, 55, 69
			SendClientMessage(playerid, -1, stringer1);
			break;
		}
	}
	return true;
}
/******************************************************************************/
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == TD_Reg1[10] || clickedid == TD_Reg2[7])
	{
	    if(PlayerRegStep[playerid] == 1)
	    {
			if(strlen(PlayerInfo[playerid][pEmail]) > 0 || strlen(CheckPass[playerid]) > 0)
			{
				for(new td = 0; td < 11; td++) TextDrawHideForPlayer(playerid, TD_Reg1[td]);
				DestroyPlayerTD(playerid, PTD_Reg1[playerid][0]);
				DestroyPlayerTD(playerid, PTD_Reg1[playerid][1]);
				DestroyPlayerTD(playerid, PTD_Reg1[playerid][2]);
				SendClientMessage(playerid, 0x61D765FF, "Great! Now fill in the game information about your character!");
		    	PlayerRegStep[playerid] = 2;
		    	PlayerRegMode[playerid] = 0;
				for(new td = 0; td < 8; td++) TextDrawShowForPlayer(playerid, TD_Reg2[td]);
				PTD_Reg2[playerid][0] = CreatePlayerTextDraw(playerid, 321.000000, 198.000000, PlayerInfo[playerid][pNames]);
				PlayerTextDrawLetterSize(playerid, PTD_Reg2[playerid][0], 0.359237, 1.681666);
				PlayerTextDrawAlignment(playerid, PTD_Reg2[playerid][0], 2);
				PlayerTextDrawColor(playerid, PTD_Reg2[playerid][0], -1);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][0], 0);
				PlayerTextDrawSetOutline(playerid, PTD_Reg2[playerid][0], 0);
				PlayerTextDrawBackgroundColor(playerid, PTD_Reg2[playerid][0], 255);
				PlayerTextDrawFont(playerid, PTD_Reg2[playerid][0], 2);
				PlayerTextDrawSetProportional(playerid, PTD_Reg2[playerid][0], 1);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][0], 0);
				PlayerTextDrawSetSelectable(playerid, PTD_Reg2[playerid][0], false);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][0]);

				PTD_Reg2[playerid][1] = CreatePlayerTextDraw(playerid, 325.607635, 236.666641, "SELECT");
				PlayerTextDrawLetterSize(playerid, PTD_Reg2[playerid][1], 0.298798, 1.349167);
				PlayerTextDrawTextSize(playerid, PTD_Reg2[playerid][1], 366.000000, 13.300000);
				PlayerTextDrawAlignment(playerid, PTD_Reg2[playerid][1], 1);
				PlayerTextDrawColor(playerid, PTD_Reg2[playerid][1], 1468115967);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][1], 0);
				PlayerTextDrawSetOutline(playerid, PTD_Reg2[playerid][1], 0);
				PlayerTextDrawBackgroundColor(playerid, PTD_Reg2[playerid][1], 255);
				PlayerTextDrawFont(playerid, PTD_Reg2[playerid][1], 2);
				PlayerTextDrawSetProportional(playerid, PTD_Reg2[playerid][1], 1);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][1], 0);
				PlayerTextDrawSetSelectable(playerid, PTD_Reg2[playerid][1], true);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][1]);

				PTD_Reg2[playerid][2] = CreatePlayerTextDraw(playerid, 325.607635, 256.499938, "SELECT");
				PlayerTextDrawLetterSize(playerid, PTD_Reg2[playerid][2], 0.298798, 1.349167);
				PlayerTextDrawTextSize(playerid, PTD_Reg2[playerid][2], 366.000000, 13.300000);
				PlayerTextDrawAlignment(playerid, PTD_Reg2[playerid][2], 1);
				PlayerTextDrawColor(playerid, PTD_Reg2[playerid][2], 1468115967);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][2], 0);
				PlayerTextDrawSetOutline(playerid, PTD_Reg2[playerid][2], 0);
				PlayerTextDrawBackgroundColor(playerid, PTD_Reg2[playerid][2], 255);
				PlayerTextDrawFont(playerid, PTD_Reg2[playerid][2], 2);
				PlayerTextDrawSetProportional(playerid, PTD_Reg2[playerid][2], 1);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][2], 0);
				PlayerTextDrawSetSelectable(playerid, PTD_Reg2[playerid][2], true);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][2]);

				PTD_Reg2[playerid][3] = CreatePlayerTextDraw(playerid, 325.607696, 276.916564, "SELECT");
				PlayerTextDrawLetterSize(playerid, PTD_Reg2[playerid][3], 0.298798, 1.349167);
				PlayerTextDrawTextSize(playerid, PTD_Reg2[playerid][3], 366.000000, 13.300000);
				PlayerTextDrawAlignment(playerid, PTD_Reg2[playerid][3], 1);
				PlayerTextDrawColor(playerid, PTD_Reg2[playerid][3], 1468115967);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][3], 0);
				PlayerTextDrawSetOutline(playerid, PTD_Reg2[playerid][3], 0);
				PlayerTextDrawBackgroundColor(playerid, PTD_Reg2[playerid][3], 255);
				PlayerTextDrawFont(playerid, PTD_Reg2[playerid][3], 2);
				PlayerTextDrawSetProportional(playerid, PTD_Reg2[playerid][3], 1);
				PlayerTextDrawSetShadow(playerid, PTD_Reg2[playerid][3], 0);
				PlayerTextDrawSetSelectable(playerid, PTD_Reg2[playerid][3], true);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][3]);
			}
			else return SendClientMessage(playerid, 0xE93636AA, "All fields must be filled in.");
	    }
	    else if(PlayerRegStep[playerid] == 2)
	    {
            if(!PlayerInfo[playerid][pSex] || !PlayerInfo[playerid][pAge] || !PlayerInfo[playerid][pNational]) return SendClientMessage(playerid, 0xE93636AA, "All fields must be filled in.");
			for(new td = 0; td < 8; td++) TextDrawHideForPlayer(playerid, TD_Reg2[td]);
			DestroyPlayerTD(playerid, PTD_Reg2[playerid][0]);
			DestroyPlayerTD(playerid, PTD_Reg2[playerid][1]);
			DestroyPlayerTD(playerid, PTD_Reg2[playerid][2]);
			DestroyPlayerTD(playerid, PTD_Reg2[playerid][3]);
			PlayerRegStep[playerid] = 3;
			PlayerRegMode[playerid] = 0;
			for(new td = 0; td < 16; td++) TextDrawShowForPlayer(playerid, TD_Reg3[td]);
			SelectTextDraw(playerid, 0xFFFFFF80);
			PTD_Reg3[playerid][0] = CreatePlayerTextDraw(playerid, 155.000000, 189.000000, "");
			PlayerTextDrawLetterSize(playerid, PTD_Reg3[playerid][0], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, PTD_Reg3[playerid][0], 100.000000, 120.000000);
			PlayerTextDrawAlignment(playerid, PTD_Reg3[playerid][0], 1);
			PlayerTextDrawColor(playerid, PTD_Reg3[playerid][0], -1);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][0], 0);
			PlayerTextDrawSetOutline(playerid, PTD_Reg3[playerid][0], 0);
			PlayerTextDrawBackgroundColor(playerid, PTD_Reg3[playerid][0], 505290340);
			PlayerTextDrawFont(playerid, PTD_Reg3[playerid][0], 5);
			PlayerTextDrawSetProportional(playerid, PTD_Reg3[playerid][0], 0);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][0], 0);
			PlayerTextDrawSetSelectable(playerid, PTD_Reg3[playerid][0], true);
			PlayerTextDrawSetPreviewModel(playerid, PTD_Reg3[playerid][0], RegSkins[PlayerInfo[playerid][pSex]-1][0]);
			PlayerTextDrawSetPreviewRot(playerid, PTD_Reg3[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);
			PlayerTextDrawShow(playerid, PTD_Reg3[playerid][0]);

			PTD_Reg3[playerid][1] = CreatePlayerTextDraw(playerid, 271.000000, 189.000000, "");
			PlayerTextDrawLetterSize(playerid, PTD_Reg3[playerid][1], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, PTD_Reg3[playerid][1], 100.000000, 120.000000);
			PlayerTextDrawAlignment(playerid, PTD_Reg3[playerid][1], 1);
			PlayerTextDrawColor(playerid, PTD_Reg3[playerid][1], -1);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, PTD_Reg3[playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, PTD_Reg3[playerid][1], 505290340);
			PlayerTextDrawFont(playerid, PTD_Reg3[playerid][1], 5);
			PlayerTextDrawSetProportional(playerid, PTD_Reg3[playerid][1], 0);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][1], 0);
			PlayerTextDrawSetSelectable(playerid, PTD_Reg3[playerid][1], true);
			PlayerTextDrawSetPreviewModel(playerid, PTD_Reg3[playerid][1], RegSkins[PlayerInfo[playerid][pSex]-1][1]);
			PlayerTextDrawSetPreviewRot(playerid, PTD_Reg3[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);
			PlayerTextDrawShow(playerid, PTD_Reg3[playerid][1]);

			PTD_Reg3[playerid][2] = CreatePlayerTextDraw(playerid, 387.000000, 189.000000, "");
			PlayerTextDrawLetterSize(playerid, PTD_Reg3[playerid][2], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, PTD_Reg3[playerid][2], 100.000000, 120.000000);
			PlayerTextDrawAlignment(playerid, PTD_Reg3[playerid][2], 1);
			PlayerTextDrawColor(playerid, PTD_Reg3[playerid][2], -1);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][2], 0);
			PlayerTextDrawSetOutline(playerid, PTD_Reg3[playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, PTD_Reg3[playerid][2], 505290340);
			PlayerTextDrawFont(playerid, PTD_Reg3[playerid][2], 5);
			PlayerTextDrawSetProportional(playerid, PTD_Reg3[playerid][2], 0);
			PlayerTextDrawSetShadow(playerid, PTD_Reg3[playerid][2], 0);
			PlayerTextDrawSetSelectable(playerid, PTD_Reg3[playerid][2], true);
			PlayerTextDrawSetPreviewModel(playerid, PTD_Reg3[playerid][2], RegSkins[PlayerInfo[playerid][pSex]-1][2]);
			PlayerTextDrawSetPreviewRot(playerid, PTD_Reg3[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);
			PlayerTextDrawShow(playerid, PTD_Reg3[playerid][2]);
	    }
	}
	else if(PlayerRegStep[playerid] == 3)
	{
		if(_:clickedid == INVALID_TEXT_DRAW) SelectTextDraw(playerid, 0xFFFFFF80);
        else if(!PlayerRegMode[playerid]) return SendClientMessage(playerid, 0xE93636AA,"You need to choose a story.");
	    else if(clickedid == TD_Reg3[13]) // info
	    {
		    stringer[0] = 0;
	        if(PlayerRegMode[playerid] == 1) {
			    for(new i; i < 9; i++) strcat(stringer, RegHistory1[PlayerInfo[playerid][pSex]-1][i]);
	        }
			else if(PlayerRegMode[playerid] == 2) {
			    for(new i; i < 12; i++) strcat(stringer, RegHistory2[PlayerInfo[playerid][pSex]-1][i]);
	        }
			else if(PlayerRegMode[playerid] == 3) {
			    for(new i; i < 8; i++) strcat(stringer, RegHistory3[PlayerInfo[playerid][pSex]-1][i]);
	        }
		    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, RegHistoryName[PlayerInfo[playerid][pSex]-1][PlayerRegMode[playerid]-1], stringer, "Close", "");
	    }
	    else if(clickedid == TD_Reg3[15]) // next
	    {
	        PlayerRegStep[playerid] = 0;
	        PlayerRegMode[playerid] = 0;
			for(new td = 0; td < 28; td++) TextDrawHideForPlayer(playerid, TD_Reg3[td]);
			DestroyPlayerTD(playerid, PTD_Reg3[playerid][0]);
			DestroyPlayerTD(playerid, PTD_Reg3[playerid][1]);
			DestroyPlayerTD(playerid, PTD_Reg3[playerid][2]);
			CancelSelectTextDraw(playerid);
			PlayerRegisterMySQL(playerid);
	    }
	}
    else if(GetPVarInt(playerid, "SelectAvto") != -1)
	{
    	if(clickedid == AutoShopText[0]) return BackCar(playerid);
    	else if(clickedid == AutoShopText[1]) return NextCar(playerid);
    	else if(clickedid == AutoShopText[2]) return NextColor(playerid,0);
    	else if(clickedid == AutoShopText[3]) return NextColor(playerid,1);
    	else if(clickedid == AutoShopText[4]) return BackColor(playerid,1);
    	else if(clickedid == AutoShopText[5]) return BackColor(playerid,0);
    	else if(clickedid == AutoShopText[6]) return ShowPlayerDialog(playerid,2324,0,"{FFD300}Car Purchase Confirmation","{FFFFFF}Please select which car you want to buy? \n\nWhen you press the 'First' key - you will buy a car for garage #1\nWhen you press the 'Second' key - you will buy a car for garage #2","First","Second");
    	else if(clickedid == AutoShopText[7]) return ShowPlayerDialog(playerid,2425,0,"Warning","Are you sure you want to leave the store?","Yes","No");
    }
    else if(UsingCursor[playerid] == 1)
	{
    	if(clickedid == DiceSetBet)
	    {
	        new tableid = DiceTable[playerid];
			if(DiceTableInfo[tableid][dBet] == 0) return SendClientMessage(playerid, COLOR_SILVER, "The dealer hasn't set the bet yet");
			if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
            if(StartDice[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
			if(PlayerInfo[playerid][pCash] < DiceTableInfo[DiceTable[playerid]][dBet]) return SendClientMessage(playerid, COLOR_SILVER, "You don't have enough money to bet");
			{
				new bank[18], money[20];
				ChooseBet[playerid] = 1;
				PlayerInfo[playerid][pCash] -= DiceTableInfo[tableid][dBet];
				format(bank, sizeof(bank), "%i$", DiceTableInfo[tableid][dBank] += DiceTableInfo[tableid][dBet]);
				format(money, sizeof(money), "%i$", PlayerInfo[playerid][pCash]);
				TextDrawSetString(BetGamer[tableid][DiceGamer[playerid]], "[+]");
				TextDrawSetString(DiceBankShow[tableid], bank);
				TextDrawSetString(DiceMoneyShow[tableid][DiceGamer[playerid]], money);
                SendClientMessage(playerid, 0x74A402AA, "Your bet has been accepted");
			}
		}
	    else if(clickedid == DiceThrow)
	    {
	        new tableid = DiceTable[playerid];
	        if(StartDice[tableid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "The dealer has not started the game yet");
            if(ChooseBet[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "Need to place a bet");
		   	if(Glasses[playerid] != 0) return SendClientMessage(playerid, COLOR_SILVER, "You've already taken the shot");
			{
				new str[16];
				Glasses[playerid] = 2 + random(11);
				format(str, sizeof(str), "You threw on %i", Glasses[playerid]);
				SendClientMessage(playerid, COLOR_ORANGE, str);
				format(str, sizeof(str), "[%i]", Glasses[playerid]);
				TextDrawSetString(BetGamer[tableid][DiceGamer[playerid]], str);
			}
		}
		else if(clickedid == BlackJackSetBet)
		{
		    if(BlackJackTable[playerid] != -1)
		    {
		        new tableid = BlackJackTable[playerid];
		        if(StartBlackJack[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
				if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
				{
				    new message[128], limit[2];
				    switch(BlackJackTable[playerid])
				    {
				        case 0,4,8: limit[0] = 1000000, limit[1] = 3000000;
				        case 1,6,10: limit[0] = 1000000, limit[1] = 3000000;
				        case 2,5,9: limit[0] = 500000, limit[1] = 1000000;
				        case 3,7,11: limit[0] = 50000, limit[1] = 500000;
				    }
				    format(message, sizeof(message), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount %d Money, maximum - %d Money", limit[0], limit[1]);
				    ShowPlayerDialog(playerid, D_BLACKJACK+2, DIALOG_STYLE_INPUT, "Bid", message, "Next", "Cancle");
				}
			}
		}
		else if(clickedid == BlackJackHit)
		{
		    if(BlackJackTable[playerid] != -1)
		    {
		        new tableid = BlackJackTable[playerid];
		        if(StartBlackJack[tableid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "The dealer has not started the game yet");
		        if(ChooseBet[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "Need to place a bet");
		        if(BlackJackDoubleUse[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You cannot draw a card because you used the Double feature");
				if(BlackJackCards[playerid] == 3) return SendClientMessage(playerid, COLOR_SILVER, "You cannot draw more than 3 cards");
				{
					new rand = random(13), str[64], points[5];
					BlackJackCards[playerid]++;
					BlackJackPoints[playerid] += GetBlackJackPoints(rand);
					BlackJackTime[playerid] = 15;
					valstr(points, BlackJackPoints[playerid]);
					TextDrawSetString(BlackJackPointsShow[tableid][BlackJackGamer[playerid]], points);
					format(str, sizeof(str), "You got a card '%s'", GetNameCard(rand));
					SendClientMessage(playerid, COLOR_ORANGE, str);
					if(BlackJackGamer[playerid] == 0)
					{
					    TextDrawSetString(BlackJackCardShow[tableid][BlackJackCards[playerid]+1], Cards[rand]);
					}
					else if(BlackJackGamer[playerid] == 1)
					{
						TextDrawSetString(BlackJackCardShow[tableid][BlackJackCards[playerid]+6], Cards[rand]);
					}
					if(BlackJackPoints[playerid] > 21)
					{
					    ResetPlayerBlackJackGame(playerid);
					    SendClientMessage(playerid, COLOR_RED, "You have scored more than [21] Your bet is lost");
					}
					else if(BlackJackPoints[playerid] == 21)
					{
					    new message[128];
						GiveMoney(playerid, BlackJackBet[playerid]*2);
				    	format(message, sizeof(message), "Congratulations, you have Blackjack! You beat the dealer and win %d$", BlackJackBet[playerid]*2);
				    	SendClientMessage(playerid, COLOR_ORANGE, message);
                        ResetPlayerBlackJackGame(playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "You have 15 seconds to draw another card");
					}
				}
		    }
		}
		else if(clickedid == BlackJackDouble)
		{
		    if(BlackJackTable[playerid] != -1)
		    {
		        new tableid = BlackJackTable[playerid];
		        if(StartBlackJack[tableid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "The dealer has not started the game yet");
		        if(ChooseBet[playerid] == 0) return SendClientMessage(playerid, COLOR_SILVER, "Need to place a bet");
				if(BlackJackDoubleUse[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "This feature can only be used once per game.");
                if(BlackJackCards[playerid] == 3) return SendClientMessage(playerid, COLOR_SILVER, "You cannot draw more than 3 cards");
				{
				    new rand = random(13), str[64], bet[12], points[5];
					BlackJackDoubleUse[playerid] = 1;
					BlackJackBet[playerid] = BlackJackBet[playerid]*2;
					BlackJackCards[playerid]++;
					BlackJackPoints[playerid] += GetBlackJackPoints(rand);
					valstr(points, BlackJackPoints[playerid]);
					TextDrawSetString(BlackJackPointsShow[tableid][BlackJackGamer[playerid]], points);
					format(bet, sizeof(bet), "%d$", BlackJackBet[playerid]);
               		TextDrawSetString(BlackJackBetShow[tableid][BlackJackGamer[playerid]], bet);
					format(str, sizeof(str), "You got a card '%s'", GetNameCard(rand));
					SendClientMessage(playerid, COLOR_ORANGE, str);
					if(BlackJackGamer[playerid] == 0)
					{
					    TextDrawSetString(BlackJackCardShow[tableid][BlackJackCards[playerid]+1], Cards[rand]);
					}
					else if(BlackJackGamer[playerid] == 1)
					{
						TextDrawSetString(BlackJackCardShow[tableid][BlackJackCards[playerid]+6], Cards[rand]);
					}
					if(BlackJackPoints[playerid] > 21)
					{
					    ResetPlayerBlackJackGame(playerid);
					    SendClientMessage(playerid, COLOR_RED, "You have scored more than [21] Your bet is lost");
					}
					else if(BlackJackPoints[playerid] == 21)
					{
					    new message[128];
					    GiveMoney(playerid, BlackJackBet[playerid]*2);
				    	format(message, sizeof(message), "Congratulations, you have Blackjack! You beat the dealer and win %d$", BlackJackBet[playerid]*2);
				    	SendClientMessage(playerid, COLOR_ORANGE, message);
				    	ResetPlayerBlackJackGame(playerid);
					}
				}
			}
		}
		else if(clickedid == BlackJackExit)
		{
		    if(BlackJackTable[playerid] != -1)
		    {
		        if(ChooseBet[playerid] == 1)
				{
	                ShowPlayerDialog(playerid, D_BLACKJACK, DIALOG_STYLE_MSGBOX, "Confirm your exit", "Your bet is at stake\nDo you really want Go out?", "Yes", "No");
				}
				else
				{
					ShowPlayerDialog(playerid, D_BLACKJACK+1, DIALOG_STYLE_MSGBOX, "Confirm exit", "Are you sure you want to end the game?", "Yes", "No");
				}
		    }
		    else if(CroupierTable[playerid] != -1)
			{
			    OnPlayerExitBlackJackTable(playerid, CroupierTable[playerid]);
			    return true;
			}
		}
		else if(clickedid == DiceExit || clickedid == Text:INVALID_TEXT_DRAW)
	    {
			if(DiceTable[playerid] != -1)
			{
				if(ChooseBet[playerid] == 1)
				{
	                ShowPlayerDialog(playerid, D_DICE, DIALOG_STYLE_MSGBOX, "Confirm your exit", "Your bet is at stake\nDo you really want Go out?", "Yes", "No");
				}
				else
				{
					ShowPlayerDialog(playerid, D_DICE+1, DIALOG_STYLE_MSGBOX, "Confirm exit", "Are you sure you want to end the game?", "Yes", "No");
				}
			}
			else if(CroupierTable[playerid] != -1)
			{
                switch(CroupierGame[playerid])
			    {
			        case 1: OnPlayerExitDiceTable(playerid, CroupierTable[playerid]);
			        case 2: OnPlayerExitRouleTable(playerid, CroupierTable[playerid]);
			        case 3: OnPlayerExitBlackJackTable(playerid, CroupierTable[playerid]);
				}
			    return true;
			}
			SelectTextDraw(playerid, 0xFFFFFFAA);
		}
		else if(clickedid == TuneBack)
		{
		    switch(TuneID[playerid])
		    {
		        case 0:
		        {
		            GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  					SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, false, boot, objective);
		        }
		        case 1:
		        {
		            if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] != -1)
					{
					    ChangeVehiclePaintjob(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][0]);
					}
					else
					{
		            	ChangeVehicleColor(caridhouse[playerid], cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1]);
					}
				}
		        case 2:
		        {
					if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] != -1)
					{
					    ChangeVehiclePaintjob(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][0]);
					}
					else
					{
         				ChangeVehiclePaintjob(caridhouse[playerid], 3);
         				ChangeVehicleColor(caridhouse[playerid], cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1]);
					}
		        }
		        case 3:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 5));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][1] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][1]);
					}
				}
				case 4:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 9));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][2] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][2]);
					}
				}
				case 5:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 8));
                    GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  					SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, false, bonnet, false, objective);
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][3] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][3]);
					}
				}
				case 6:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 7));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][4] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][4]);
					}
				}
				case 7:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 6));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][5] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][5]);
					}
				}
				case 8:
				{
					switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 439,491,517,518,540,546,549,550,585,603,401,496,547,542:
						{
							RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 12));
                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][11] != 0)
							{
					    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][11]);
							}
							RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 13));
							if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][12] != 0)
							{
					    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][12]);
							}
							HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 3));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][6] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][6]);
					}
				}
				case 9:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 400,410,478,489,500,589:
						{
							RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 4));
                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][13] != 0)
							{
					    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][13]);
							}
							HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 10));
				    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][7] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][7]);
					}
				}
				case 10:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 401,420,426,492,550,589,600,478,516,540,546,489,518,551,496,529,549:
						{
							RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 1));
                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][14] != 0)
							{
					    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][14]);
							}
							HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 11));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][8] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][8]);
					}
				}
				case 11:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 2));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][9] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][9]);
					}
				}
				case 12:
				{
					RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 0));
                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][10] != 0)
					{
					    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][10]);
					}
				}
			}
			HideTuneMenu(playerid);
			ShowTuneDialog(playerid);
		}
		else if(clickedid == TuneBuy)
		{
		    switch(TuneID[playerid])
		    {
		        case 0:
		        {
                    new till = BizzInfo[TuneShop[playerid]][bTill] * 20 *(100-PlayerInfo[playerid][pProz]);
		            if(PlayerInfo[playerid][pCash] < till)
					{
					    SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
					    GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, false, boot, objective);
					}
					else
					{
					    PlayerInfo[playerid][pCash] -= till;
					    format(stringer1, sizeof(stringer1), "~r~-%d$", till);
					    PlayerInfo[playerid][pProz] = 100;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    GameTextForPlayer(playerid, stringer1, 3000, 1);
						SendClientMessage(playerid, -1, "The car engine has been successfully repaired");
						GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, false, boot, objective);
  						BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
					}
					HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
			    case 1:
			    {
			        new till = BizzInfo[TuneShop[playerid]][bTill] * 100;
			        if(PlayerInfo[playerid][pCash] < till)
			        {
			            SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
			            if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] != -1)
						{
					    	ChangeVehiclePaintjob(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][0]);
						}
						else
						{
			            	ChangeVehicleColor(caridhouse[playerid], cColor[playerid][GetPVarInt(playerid,"CarNomer")][0], cColor[playerid][GetPVarInt(playerid,"CarNomer")][1]);
						}
			        }
			        else
			        {
			            PlayerInfo[playerid][pCash] -= till;
			            cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] = -1;
               			cColor[playerid][GetPVarInt(playerid,"CarNomer")][0] = TuneColor[playerid][0];
				   		cColor[playerid][GetPVarInt(playerid,"CarNomer")][1] = TuneColor[playerid][1];
                        SendClientMessage(playerid, -1, "Your car has been successfully repainted");
						PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
						format(stringer1, sizeof(stringer1), "~r~-%d$", till);
			            GameTextForPlayer(playerid, stringer1, 3000, 1);
			            SaveVehicleColor(playerid, GetPVarInt(playerid,"CarNomer"));
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
			        }
			        HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 2:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * 300;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
                        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
                        if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] != -1)
						{
						    ChangeVehiclePaintjob(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][0]);
						}
						else
						{
						    ChangeVehiclePaintjob(caridhouse[playerid], 3);
						}
			        }
			        else
			        {
			            PlayerInfo[playerid][pCash] -= till;
			            cColor[playerid][GetPVarInt(playerid,"CarNomer")][0] = 1;
			            cColor[playerid][GetPVarInt(playerid,"CarNomer")][1] = 1;
			            cTune[playerid][GetPVarInt(playerid,"CarNomer")][0] = ChangeTuneDetail[playerid];
			            SendClientMessage(playerid, -1, "Vinyl applied to your car successfully");
			            PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
			            GameTextForPlayer(playerid, stringer1, 3000, 1);
			            SaveVehicleColor(playerid, GetPVarInt(playerid,"CarNomer"));
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
			        }
			        HideTuneMenu(playerid);
					ShowTuneDialog(playerid);

				}
				case 3:
				{
					new till = BizzInfo[TuneShop[playerid]][bTill] * Nitro[ChangeTuneDetail[playerid]][1];
					if(PlayerInfo[playerid][pCash] < till)
					{
						SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
						RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 5));
			            if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][1] != 0)
						{
							AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][1]);
						}
					}
					else
					{
						PlayerInfo[playerid][pCash] -= till;
	                    cTune[playerid][GetPVarInt(playerid,"CarNomer")][1] = Nitro[ChangeTuneDetail[playerid]][0];
						SendMes(playerid, -1, "%s successfully installed on your car", Nitro[ChangeTuneDetail[playerid]][2]);
                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                        format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
						BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
					}
					HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 4:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * 500;
				    if(PlayerInfo[playerid][pCash] < till)
			        {
			            SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
			            RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 9));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][2] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][2]);
						}
			        }
			        else
			        {
			            PlayerInfo[playerid][pCash] -= till;
			            cTune[playerid][GetPVarInt(playerid,"CarNomer")][2] = 1087;
			            SendClientMessage(playerid, -1, "Hydraulics have been successfully installed on your car");
               			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
						BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
			        }
			        HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 5:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * 450;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, false, bonnet, false, objective);
                        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 8));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][3] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][3]);
						}
					}
			        else
			        {
			            PlayerInfo[playerid][pCash] -= till;
			            cTune[playerid][GetPVarInt(playerid,"CarNomer")][3] = 1086;
			            SendClientMessage(playerid, -1, "The stereo has been successfully installed on your car");
               			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
						GetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, doorss, bonnet, boot, objective);
  						SetVehicleParamsEx(caridhouse[playerid], engine, light, alarm, false, bonnet, false, objective);
  						BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
			        }
			        HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 6:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * Wheels[ChangeTuneDetail[playerid]][1];
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 7));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][4] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][4]);
						}
				    }
				    else
				    {
       					PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][4] = Wheels[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The wheels have been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 7:
				{
		            new till = BizzInfo[TuneShop[playerid]][bTill] * Exhaust[ChangeTuneDetail[playerid]][1];
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 6));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][5] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][5]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][5] = Exhaust[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The exhaust pipe has been successfully installed on your car.");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
					HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 8:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 439,491,517,518,540,546,549,550,585,603,401,496,547,542:
						{
                            new till = BizzInfo[TuneShop[playerid]][bTill] * 850;
							if(PlayerInfo[playerid][pCash] < till)
				    		{
				        		SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        		RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 12));
	                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][11] != 0)
								{
						    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][11]);
								}
								RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 13));
	                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][12] != 0)
								{
						    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][12]);
								}
				    		}
				    		else
				    		{
				        		PlayerInfo[playerid][pCash] -= till;
				        		cTune[playerid][GetPVarInt(playerid,"CarNomer")][11] = Vents[ChangeTuneDetail[playerid]][0];
				        		cTune[playerid][GetPVarInt(playerid,"CarNomer")][12] = Vents[ChangeTuneDetail[playerid]][1];
                        		SendClientMessage(playerid, -1, "Ventilation installed on your car.");
			            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            		format(stringer1, sizeof(stringer1), "~r~-%d$", till);
								GameTextForPlayer(playerid, stringer1, 3000, 1);
			            		BizzInfo[TuneShop[playerid]][bMoney] += till;
								BizzPay[TuneShop[playerid]] += till;
								//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    		}
				    		HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
		            new till = BizzInfo[TuneShop[playerid]][bTill] * 850;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 3));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][6] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][6]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][6] = Sideskirt[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "Side skirts have been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 9:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 400,410,478,489,500,589:
						{
          	                new till = BizzInfo[TuneShop[playerid]][bTill] * Lamps[ChangeTuneDetail[playerid]][1];
							if(PlayerInfo[playerid][pCash] < till)
				    		{
				        		SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        		RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 4));
	                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][13] != 0)
								{
						    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][13]);
								}
				    		}
				    		else
				    		{
				        		PlayerInfo[playerid][pCash] -= till;
				        		cTune[playerid][GetPVarInt(playerid,"CarNomer")][13] = Lamps[ChangeTuneDetail[playerid]][0];
                        		SendClientMessage(playerid, -1, "Additional headlights have been successfully installed on your car");
			            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            		format(stringer1, sizeof(stringer1), "~r~-%d$", till);
								GameTextForPlayer(playerid, stringer1, 3000, 1);
			            		BizzInfo[TuneShop[playerid]][bMoney] += till;
								BizzPay[TuneShop[playerid]] += till;
							//	BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    		}
				    		HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
		            new till = BizzInfo[TuneShop[playerid]][bTill] * 400;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 10));
					    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][7] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][7]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][7] = FrontBumper[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The front bumper has been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
                case 10:
				{
                    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 401,420,426,492,550,589,600,478,516,540,546,489,518,551,496,529,549:
						{
						    new till = BizzInfo[TuneShop[playerid]][bTill] * 990;
							if(PlayerInfo[playerid][pCash] < till)
				    		{
				        		SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        		RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 1));
	                    		if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][14] != 0)
								{
						    		AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][14]);
								}
				    		}
				    		else
				    		{
				        		PlayerInfo[playerid][pCash] -= till;
				        		cTune[playerid][GetPVarInt(playerid,"CarNomer")][14] = Hood[ChangeTuneDetail[playerid]][0];
                        		SendClientMessage(playerid, -1, "The hood has been successfully installed on your car");
			            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            		format(stringer1, sizeof(stringer1), "~r~-%d$", till);
								GameTextForPlayer(playerid, stringer1, 3000, 1);
			            		BizzInfo[TuneShop[playerid]][bMoney] += till;
								BizzPay[TuneShop[playerid]] += till;
								//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    		}
				    		HideTuneMenu(playerid);
							ShowTuneDialog(playerid);
							return true;
						}
		            }
		            new till = BizzInfo[TuneShop[playerid]][bTill] * 690;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 11));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][8] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][8]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][8] = RearBumper[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The rear bumper has been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 11:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * 790;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 2));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][9] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][9]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][9] = Roof[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The roof has been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
				case 12:
				{
				    new till = BizzInfo[TuneShop[playerid]][bTill] * 1000;
				    if(PlayerInfo[playerid][pCash] < till)
				    {
				        SendClientMessage(playerid, COLOR_RED, "You don't have enough money");
				        RemoveVehicleComponent(caridhouse[playerid], GetVehicleComponentInSlot(caridhouse[playerid], 0));
	                    if(cTune[playerid][GetPVarInt(playerid,"CarNomer")][10] != 0)
						{
						    AddVehicleComponent(caridhouse[playerid], cTune[playerid][GetPVarInt(playerid,"CarNomer")][10]);
						}
				    }
				    else
				    {
				        PlayerInfo[playerid][pCash] -= till;
				        cTune[playerid][GetPVarInt(playerid,"CarNomer")][10] = Spoiler[ChangeTuneDetail[playerid]][0];
                        SendClientMessage(playerid, -1, "The spoiler has been successfully installed on your car");
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            format(stringer1, sizeof(stringer1), "~r~-%d$", till);
						GameTextForPlayer(playerid, stringer1, 3000, 1);
			            BizzInfo[TuneShop[playerid]][bMoney] += till;
						BizzPay[TuneShop[playerid]] += till;
						//BizzInfo[TuneShop[playerid]][bProduct] -= 5;
				    }
				    HideTuneMenu(playerid);
					ShowTuneDialog(playerid);
				}
		    }
		}
		else if(clickedid == TuneArrow[0])
		{
		    ChangeTuneDetail[playerid]--;
		    if(ChangeTuneDetail[playerid] < GetStartTypeTune(playerid, TuneID[playerid]))
		    {
		        ChangeTuneDetail[playerid] = GetEndTypeTune(playerid, TuneID[playerid]);
		    }
		    switch(TuneID[playerid])
		    {
		        case 2:
		        {
					format(stringer1, sizeof(stringer1), "Sticker %d", ChangeTuneDetail[playerid]+1);
		            ChangeVehiclePaintjob(caridhouse[playerid], ChangeTuneDetail[playerid]);
		            PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], stringer1);

		        }
				case 3:
				{
					AddVehicleComponent(caridhouse[playerid], Nitro[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Nitro[ChangeTuneDetail[playerid]][2]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Nitro[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 6:
				{
					AddVehicleComponent(caridhouse[playerid], Wheels[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Wheels[ChangeTuneDetail[playerid]][2]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Wheels[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 7:
				{
					AddVehicleComponent(caridhouse[playerid], Exhaust[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Exhaust[ChangeTuneDetail[playerid]][2]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Exhaust[ChangeTuneDetail[playerid]][1]);
		            PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 8:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 439,491,517,518,540,546,549,550,585,603,401,496,547,542:
						{
							AddVehicleComponent(caridhouse[playerid], Vents[ChangeTuneDetail[playerid]][0]);
							AddVehicleComponent(caridhouse[playerid], Vents[ChangeTuneDetail[playerid]][1]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Vents[ChangeTuneDetail[playerid]][2]);
							return true;
						}
		            }
					AddVehicleComponent(caridhouse[playerid], Sideskirt[ChangeTuneDetail[playerid]][0]);
					AddVehicleComponent(caridhouse[playerid], Sideskirt[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Sideskirt[ChangeTuneDetail[playerid]][2]);
				}
				case 9:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 400,410,478,489,500,589:
						{
							AddVehicleComponent(caridhouse[playerid], Lamps[ChangeTuneDetail[playerid]][0]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Lamps[ChangeTuneDetail[playerid]][2]);
							format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Lamps[ChangeTuneDetail[playerid]][1]);
          	                PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
							return true;
						}
		            }
					AddVehicleComponent(caridhouse[playerid], FrontBumper[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], FrontBumper[ChangeTuneDetail[playerid]][1]);
				}
				case 10:
				{
                    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 401,420,426,492,550,589,600,478,529,549:
						{
							AddVehicleComponent(caridhouse[playerid], Hood[ChangeTuneDetail[playerid]][0]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Hood[ChangeTuneDetail[playerid]][1]);
							return true;
						}
		            }
				    AddVehicleComponent(caridhouse[playerid], RearBumper[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], RearBumper[ChangeTuneDetail[playerid]][1]);
				}
				case 11:
				{
				    AddVehicleComponent(caridhouse[playerid], Roof[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Roof[ChangeTuneDetail[playerid]][1]);
				}
				case 12:
				{
				    AddVehicleComponent(caridhouse[playerid], Spoiler[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Spoiler[ChangeTuneDetail[playerid]][1]);
				}
			}
		}
		else if(clickedid == TuneArrow[1])
		{
		    ChangeTuneDetail[playerid]++;
		    if(ChangeTuneDetail[playerid] > GetEndTypeTune(playerid, TuneID[playerid]))
		    {
		        ChangeTuneDetail[playerid] = GetStartTypeTune(playerid, TuneID[playerid]);
		    }
		    switch(TuneID[playerid])
		    {
		        case 2:
		        {
					format(stringer1, sizeof(stringer1), "Sticker %d", ChangeTuneDetail[playerid]+1);
		            ChangeVehiclePaintjob(caridhouse[playerid], ChangeTuneDetail[playerid]);
		            PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], stringer1);

		        }
				case 3:
				{
					AddVehicleComponent(caridhouse[playerid], Nitro[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Nitro[ChangeTuneDetail[playerid]][2]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Nitro[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 6:
				{
					AddVehicleComponent(caridhouse[playerid], Wheels[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Wheels[ChangeTuneDetail[playerid]][2]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Wheels[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 7:
				{
					AddVehicleComponent(caridhouse[playerid], Exhaust[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Exhaust[ChangeTuneDetail[playerid]][1]);
					format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Exhaust[ChangeTuneDetail[playerid]][1]);
		            PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
				}
				case 8:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 439,491,517,518,540,546,549,550,585,603,401,496,547,542:
						{
							AddVehicleComponent(caridhouse[playerid], Vents[ChangeTuneDetail[playerid]][0]);
							AddVehicleComponent(caridhouse[playerid], Vents[ChangeTuneDetail[playerid]][1]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Vents[ChangeTuneDetail[playerid]][2]);
							return true;
						}
		            }
					AddVehicleComponent(caridhouse[playerid], Sideskirt[ChangeTuneDetail[playerid]][0]);
					AddVehicleComponent(caridhouse[playerid], Sideskirt[ChangeTuneDetail[playerid]][1]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Sideskirt[ChangeTuneDetail[playerid]][2]);
				}
				case 9:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 400,410,478,489,500,589:
						{
							AddVehicleComponent(caridhouse[playerid], Lamps[ChangeTuneDetail[playerid]][0]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Lamps[ChangeTuneDetail[playerid]][2]);
							format(stringer1,sizeof(stringer1),"%d$",BizzInfo[TuneShop[playerid]][bTill] * Lamps[ChangeTuneDetail[playerid]][1]);
          	                PlayerTextDrawSetString(playerid, TuneCostShow[playerid], stringer1);
							return true;
						}
		            }
					AddVehicleComponent(caridhouse[playerid], FrontBumper[ChangeTuneDetail[playerid]][0]);
					PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], FrontBumper[ChangeTuneDetail[playerid]][1]);
				}
				case 10:
				{
				    switch(GetVehicleModel(caridhouse[playerid]))
		            {
						case 401,420,426,492,550,589,600,478,529,549:
						{
							AddVehicleComponent(caridhouse[playerid], Hood[ChangeTuneDetail[playerid]][0]);
							PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Hood[ChangeTuneDetail[playerid]][1]);
							return true;
						}
		            }
				    AddVehicleComponent(caridhouse[playerid], RearBumper[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], RearBumper[ChangeTuneDetail[playerid]][1]);
				}
				case 11:
				{
				    AddVehicleComponent(caridhouse[playerid], Roof[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Roof[ChangeTuneDetail[playerid]][1]);
				}
				case 12:
				{
				    AddVehicleComponent(caridhouse[playerid], Spoiler[ChangeTuneDetail[playerid]][0]);
				    PlayerTextDrawSetString(playerid, TuneComponentShow[playerid], Spoiler[ChangeTuneDetail[playerid]][1]);
				}
			}
		}
	}

	else if(_:clickedid == INVALID_TEXT_DRAW)
	{
        if(GetPVarInt(playerid,"SelectTextDraw") == 2) SelectTextDraw(playerid,0xFDE39DFF);
		else if(!gPlayerLogged[playerid]) SelectTextDraw(playerid, 0x01A9DBFF);
	    else if(Buyitem[playerid]!=-1) SelectTextDraw(playerid, -16776961);
	}
	if(Buyitem[playerid]!=-1)
	{
	    if(_:clickedid == 65535) SelectTextDraw(playerid, 0xFFFFFFAA);
	    else if(clickedid == ButtonLeft)
	    {
	        new race = PlayerInfo[playerid][pType];
 		    if(Buyitem[playerid]==1) TextDrawHideForPlayer(playerid, ButtonLeft);
 		    if(Buyitem[playerid]==0) return false;
 		    TextDrawShowForPlayer(playerid, ButtonRight);
 		    Buyitem[playerid] --;
 		    DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		    new price = ItemsCost[race][Buyitem[playerid]];
 		    switch(ItemsId[race][Buyitem[playerid]])
		    {
			    case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			    case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			    case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			    case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			    case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			    case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			    case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			    case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			    case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			    case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			    case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			    case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			    //�����
			    case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			    //����
			    case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			    //��������
			    case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			    case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			    case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			    case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			    case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		    }
		    format(stringer1, sizeof(stringer1), "~g~Cost: ~r~$%d", price);
		    PlayerTextDrawSetString(playerid, InfoText[playerid], stringer1);
        }
        else if(clickedid == ButtonRight)
        {
            new race = PlayerInfo[playerid][pType];
 		    if(ItemsId[race][Buyitem[playerid]+2]==1) TextDrawHideForPlayer(playerid, ButtonRight);
 		    if(ItemsId[race][Buyitem[playerid]+1]==1) return false;
 		    TextDrawShowForPlayer(playerid, ButtonLeft);
 		    Buyitem[playerid] ++;
 		    DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		    new price = ItemsCost[race][Buyitem[playerid]];
		    switch(ItemsId[race][Buyitem[playerid]])
		    {
			    case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			    case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			    case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			    case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			    case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			    case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			    case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			    case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			    case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			    case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			    case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			    case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			    //�����
			    case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			    //����
			    case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			    //��������
			    case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			    case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			    case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			    case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			    case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		    }
		    format(stringer1, sizeof(stringer1), "~g~Cost: ~r~$%d", price);
		    PlayerTextDrawSetString(playerid, InfoText[playerid], stringer1);
        }
        else if(clickedid == boxaccept)
        {
            TogglePlayerControllable(playerid, true);
		    SetCameraBehindPlayer(playerid);
		    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		    Buyitem[playerid] = -1;
		    DestroyPlayerObject(playerid, TempBGObject[playerid]);
		    PlayerInfo[playerid][pType]=-1;
		    SetPVarInt(playerid,"timetobuy2",0);
		    PlayerTextDrawHide(playerid,InfoText[playerid]);
		    TextDrawHideForPlayer(playerid,Boxmenu0);
		    TextDrawHideForPlayer(playerid,Boxmenu1);
		    TextDrawHideForPlayer(playerid,Boxmenu2);
		    TextDrawHideForPlayer(playerid,ButtonLeft);
		    TextDrawHideForPlayer(playerid,ButtonRight);
		    TextDrawHideForPlayer(playerid,ButtonUp);
		    TextDrawHideForPlayer(playerid,ButtonDown);
		    TextDrawHideForPlayer(playerid,ButtonCancel);
		    TextDrawHideForPlayer(playerid,ButtonSelect);
		    TextDrawHideForPlayer(playerid,boxaccept);
		    TextDrawHideForPlayer(playerid,boxcancel);
		    TextDrawHideForPlayer(playerid,Boxmenu3);
		    CancelSelectTextDraw(playerid);
        }
        else if(clickedid == boxcancel)
        {
            new race = PlayerInfo[playerid][pType],slot = PlayerInfo[playerid][pType2],price = ItemsCost[race][Buyitem[playerid]];
	        new item = ItemsId[race][Buyitem[playerid]];
	        new i = GetPVarInt(playerid, "Bizzid");
            if(PlayerInfo[playerid][pCash]<price) return SendClientMessage(playerid,-1,"Sorry, but you don't have enough money to buy!");
 		    if(PlayerInfo[playerid][pSlotItem][slot]!=0 && GetPVarInt(playerid,"timetobuy2")==0)
 		    {
			    SetPVarInt(playerid,"timetobuy2",1);
			    SendClientMessage(playerid,-1,"� {FFC800}[Clue] {FFFFFF}You already have an item from this list of accessories in your inventory.");
			    SendClientMessage(playerid,-1,"� {FFC800}[Clue] {FFFFFF}Click 'ACCEPT' again if you want to replace the old one with the new one.");
			    return false;
		    }
	        GiveItem(playerid,item);
	        SendClientMessage(playerid,-1,"Thanks for purchase, come again!");
			if(PlayerInfo[playerid][pQuest6] == 0)
			{
				PlayerInfo[playerid][pQuest6] = 1;
				UpdatePlayerData(playerid, "pQuest6", PlayerInfo[playerid][pQuest6]);
			}
            FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
		    PlayerInfo[playerid][pCash] -= price;
		    BizzInfo[i][bMoney] += price;
			BizzInfo[i][bProduct] -= 50;
			BizzPay[i] += price;
			SaveBizz(i);
		    PlayerInfo[playerid][pSlotItem][slot]=item;
		    format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
		    format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
            mysql_tquery(connects, mysql_query_, "", "");
		    DestroyPlayerObject(playerid, TempBGObject[playerid]);
            TogglePlayerControllable(playerid, true);
            PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		    SetCameraBehindPlayer(playerid);
		    Buyitem[playerid] = -1;
		    PlayerInfo[playerid][pType]=-1;
		    SetPVarInt(playerid,"timetobuy2",0);
		    PlayerTextDrawHide(playerid,InfoText[playerid]);
		    TextDrawHideForPlayer(playerid,Boxmenu0);
		    TextDrawHideForPlayer(playerid,Boxmenu1);
		    TextDrawHideForPlayer(playerid,Boxmenu2);
		    TextDrawHideForPlayer(playerid,ButtonLeft);
		    TextDrawHideForPlayer(playerid,ButtonRight);
		    TextDrawHideForPlayer(playerid,ButtonUp);
		    TextDrawHideForPlayer(playerid,ButtonDown);
		    TextDrawHideForPlayer(playerid,ButtonCancel);
		    TextDrawHideForPlayer(playerid,ButtonSelect);
		    TextDrawHideForPlayer(playerid,boxaccept);
		    TextDrawHideForPlayer(playerid,boxcancel);
		    TextDrawHideForPlayer(playerid,Boxmenu3);
		    CancelSelectTextDraw(playerid);
		    DeletePVar(playerid,"Bizzid");
        }
	}
	if(GetPVarInt(playerid,"PlayerInClothes"))
	{
		if(clickedid == gSkinShopDraw[0])
		{
	 	    new MAX_SKIN = (PlayerInfo[playerid][pSex] == 1) ? (113) : (37);
		    new MIN_SKIN = (PlayerInfo[playerid][pSex] == 1) ? (38) : (0);
		    if(GetPVarInt(playerid,"PlayerSkinSlot")>=MAX_SKIN)
		        SetPVarInt(playerid,"PlayerSkinSlot",MIN_SKIN);
			else SetPVarInt(playerid,"PlayerSkinSlot", GetPVarInt(playerid,"PlayerSkinSlot")+1);
			for(new slot = MIN_SKIN; slot <= MAX_SKIN; slot++)
			{
				if(GetPVarInt(playerid,"PlayerSkinSlot") == slot)
				{
				    SetPlayerSkinEx(playerid,gSkins[slot][skinID]);
				    format(stringer1,15,"%i$",gSkins[slot][skinPrice]);
				    PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer1);
				    break;
				}
			}
			return 1;
		}
		else if(clickedid == gSkinShopDraw[1])
		{
	 	    new MAX_SKIN = PlayerInfo[playerid][pSex] == 1 ? 113 : 37;
		    new MIN_SKIN = PlayerInfo[playerid][pSex] == 1 ? 38 : 0;
		    if(GetPVarInt(playerid,"PlayerSkinSlot")<=MIN_SKIN)
		        SetPVarInt(playerid,"PlayerSkinSlot",MAX_SKIN);
	   		else SetPVarInt(playerid,"PlayerSkinSlot", GetPVarInt(playerid,"PlayerSkinSlot")-1);
	 		for(new slot = MIN_SKIN; slot <= MAX_SKIN; slot++)
			{
				if(GetPVarInt(playerid,"PlayerSkinSlot") == slot)
				{
				    SetPlayerSkinEx(playerid,gSkins[slot][skinID]);
				    format(stringer1,15,"%i$",gSkins[slot][skinPrice]);
				    PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer1);
				    break;
				}
			}
		    return 1;
		}
		else if(clickedid == gSkinShopDraw[3])
		{
			if(PlayerInfo[playerid][pCash] < gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice]) {
			    return SendClientMessage(playerid, -1,"You don't have enough money to buy this skin");
			}
   			new slot = GetPVarInt(playerid,"PlayerSkinSlot");
  			if(PlayerInfo[playerid][pPhousekey] != 255) {
				return ShowPlayerDialog(playerid, 3939, DIALOG_STYLE_LIST, "{FFD700}Buying a skin","[1] Clothing\n[2] Clothing\n[3] Clothing", "Select", "Cancle");
			}
			else
			{
				SetPVarInt(playerid,"CloserInClothes", true);
			    PlayerInfo[playerid][pChar] = gSkins[slot][skinID];
			    SetPlayerSkinEx(playerid,gSkins[slot][skinID]);
	            DeletePVar(playerid,"PlayerSkinSlot");
	            DeletePVar(playerid,"PlayerInClothes");
	            SetCameraBehindPlayer(playerid);
       		    CancelSelectTextDraw(playerid);
	 		  	for(new i=0; i<5; i++)
				{
				    if(gSkinShopDraw[i]==Text:-1) continue;
				    TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
				}
				if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
				{
				    PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
				}
				new bizid = GetPVarInt(playerid, "Bizzid");
				SetPlayerVirtualWorldEx(playerid, BizzInfo[bizid][bVirtual]);
				SetPPos(playerid,BizzInfo[bizid][bMenux],BizzInfo[bizid][bMenuy],BizzInfo[bizid][bMenuz]);
				SetPlayerInteriorEx(playerid,BizzInfo[bizid][bInt]);
				PlayerInfo[playerid][pCash] -= gSkins[slot][skinPrice];
	        	BizzInfo[bizid][bMoney] += gSkins[slot][skinPrice];
				BizzPay[bizid] += gSkins[slot][skinPrice];
				BizzInfo[bizid][bProduct] -= 50;
				SaveBizz(bizid);
				DeletePVar(playerid,"OldSkin");
				DeletePVar(playerid,"Bizzid");
   				if(PlayerInfo[playerid][pQuest1] == 1)
             	{
             		//�� ������������ ���� �� ��� �� �������!!!!
             	}
             	else
             	{
           			PlayerInfo[playerid][pQuest1] = 1;
             		UpdatePlayerData(playerid, "pQuest1", PlayerInfo[playerid][pQuest1]);
             		SendClientMessage(playerid,-1,"{42aaff}Congratulations! You have completed the quest - 'Always in style', complete the rest and get more rewards!");
             	}
            }
		    return 1;
		}
		else if(clickedid == gSkinShopDraw[4] || Text:INVALID_TEXT_DRAW)
		{
		    CancelSelectTextDraw(playerid);
		  	for(new i=0; i<5; i++)
			{
			    if(gSkinShopDraw[i]==Text:-1) continue;
			    TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
			}
			if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
			{
			    PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
			}
			SetPVarInt(playerid,"CloserInClothes", true);
			DeletePVar(playerid,"PlayerInClothes");
			SetPlayerSkinEx(playerid, GetPVarInt(playerid,"OldSkin"));
   			DeletePVar(playerid,"PlayerSkinSlot");
   			new bizid = GetPVarInt(playerid, "Bizzid");
   			SetPlayerVirtualWorldEx(playerid, BizzInfo[bizid][bVirtual]);
   			SetPPos(playerid,BizzInfo[bizid][bMenux],BizzInfo[bizid][bMenuy],BizzInfo[bizid][bMenuz]);
   			SetPlayerInteriorEx(playerid,BizzInfo[bizid][bInt]);
            DeletePVar(playerid,"Bizzid");
            DeletePVar(playerid,"OldSkin");
            SetCameraBehindPlayer(playerid);
		    return 1;
		}
	}
	if(GetPVarInt(playerid,"SelectTextDraw") == 1) SelectTextDraw(playerid,0x0080FFFF);
    return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(GetPVarInt(playerid,"SelectTextDraw") == 2)
	{
		for(new i = 2; i < sizeof(Captcha); i++)
		{
	    	if(playertextid == Captcha[i])
	    	{
				new sstring[96];
				GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
				switch(GetPVarInt(playerid, "CaptchaStep"))
				{
					case 0: format(sstring, sizeof(sstring), "%c", TextArray[i - 2]), strcat(sstring, "----"), SetPVarString(playerid, "CaptchaText", sstring);
					case 1: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 1, 5), strcat(sstring, "---"), SetPVarString(playerid, "CaptchaText", sstring);
					case 2: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 2, 5), strcat(sstring, "--"), SetPVarString(playerid, "CaptchaText", sstring);
					case 3: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 3, 5), strcat(sstring, "-"), SetPVarString(playerid, "CaptchaText", sstring);
					case 4:
					{
						strdel(sstring, 4, 5);
						format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]);
						PlayerTextDrawSetString(playerid, Captcha[1], sstring);
						if(strlen(PlayerInfo[playerid][pKeyIp]) <= 0)
                    	{
                        	for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
					    	DeletePVar(playerid, "CaptchaStep");
					    	DeletePVar(playerid, "CaptchaText");
                        	strmid(PlayerInfo[playerid][pKeyIp], sstring, 0, strlen(sstring), 96);
	                    	SendMes(playerid, COLOR_WHITE, "Security code: {14E5F8}%s{FFFFFF} - installed successfully.", PlayerInfo[playerid][pKeyIp]);
	                    	SendClientMessage(playerid, COLOR_WHITE, "To remember your security code, take a screenshot. (Key: F8)");
	                    	CancelSelectTextDraw(playerid);
	                    	TogglePlayerControllable(playerid, 1);
	                    	PlayerInfo[playerid][pCheckIp] = 1;
					    	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `checkip` = '%d', `keyip` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pCheckIp], PlayerInfo[playerid][pKeyIp], PlayerInfo[playerid][pID]);
							mysql_function_query(connects, mysql_query_, false, "", "");
							DeletePVar(playerid, "SelectTextDraw");
							return true;
                    	}
                    	else
                    	{
					    	if(strcmp(PlayerInfo[playerid][pKeyIp], sstring) != 0)
					    	{
  			                	format(mysql_query_, sizeof(mysql_query_), "INSERT INTO `"TABLE_CAPTCHALOG"` (`account`, `ip`, `date`, `status`) VALUES ('%d', '%s', NOW( ), '0')", PlayerInfo[playerid][pID], PlayerInfo[playerid][pIP]);
			                	mysql_function_query(connects, mysql_query_, false, "", "");
						    	for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
						    	DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
						    	SendClientMessage(playerid, COLOR_RED, "Security code entered incorrectly.");
					    		SendClientMessage(playerid, COLOR_RED, "Information about an attempt to enter a captcha sent to the account owner.");
						    	return KickEx(playerid);
					    	}
					    	else
					    	{
  			                	format(mysql_query_, sizeof(mysql_query_), "INSERT INTO `"TABLE_CAPTCHALOG"` (`account`, `ip`, `date`, `status`) VALUES ('%d', '%s', NOW( ), '1')", PlayerInfo[playerid][pID], PlayerInfo[playerid][pIP]);
			                	mysql_function_query(connects, mysql_query_, false, "", "");
						    	for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
						    	DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
						    	CancelSelectTextDraw(playerid);
						    	TogglePlayerControllable(playerid, true);
                            	gPlayerLogged[playerid] = 1;
                            	DeletePVar(playerid, "SelectTextDraw");
 					        	return GoServer(playerid);
					    	}
                    	}
					}
				}
				SetPVarInt(playerid, "CaptchaStep", GetPVarInt(playerid, "CaptchaStep") + 1);
				PlayerTextDrawSetString(playerid, Captcha[1], sstring);
			}
		}
	}
	return 1;
}
stock GetBizz()
{
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
	    if(!strcmp(BizzInfo[i][bOwner],"None",true)) continue;
	    if(BizzInfo[i][bMoney] < 100 || BizzInfo[i][bLock] == 1 && BizzInfo[i][bLockTime] >= 12) ClearBizz(i);
	    else
	    {
			new playerid;
  			sscanf(BizzInfo[i][bOwner], "u", playerid);
	       	BizzPay[i] = 0;
	        if(BizzInfo[i][bProduct] <= 50)
			{
			    if(IsPlayerConnected(playerid))
				{
				    if(BizzInfo[i][bLockTime] == 0) SetPVarInt(playerid, "GetBizz", 2);
				}
				BizzInfo[i][bLock] = 1;
			}
			if(BizzInfo[i][bLock] == 1) BizzInfo[i][bLockTime]++;
			if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12)
			{
				if(IsPlayerConnected(playerid)) SetPVarInt(playerid, "GetBizz", 3);
			}
  			BizzInfo[i][bMoney] -= 100;
			SaveBizz(i);
	    }
	}
	return true;
}
stock ClearBizz(i)
{
	new playerid;
	sscanf(BizzInfo[i][bOwner], "u", playerid);
	if(IsPlayerConnected(playerid))
	{
   		PlayerInfo[playerid][pBank] += BizzInfo[i][bBuyPrice] / 2;
   		SetPVarInt(playerid, "GetBizz", 1);
	}
	else
	{
		mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT `pBank`, `Texts` FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e'", BizzInfo[i][bOwner]);
 		mysql_function_query(connects, mysql_query_, true, "ClearBusiness", "d",i);
 		return true;
	}
	BizzPay[i] = 0;
	BizzInfo[i][bLock] = 0;
	BizzInfo[i][bMoney] = 0;
	BizzInfo[i][bLic] = 0;
	BizzInfo[i][bEnter] = 100;
	BizzInfo[i][bTill] = 50;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][bProduct] = 0;
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	SaveBizz(i);
	UpdateBizz(i);
	return true;
}
publics: ClearBusiness(i)
{
	new texts[20], text[3];
    new r, f;
    cache_get_data(r, f);
	if(r)
	{
	    new moneypizdez = cache_get_field_content_int(0, "pBank",connects);
	    moneypizdez += BizzInfo[i][bBuyPrice] / 2;
		cache_get_field_content(0, "Texts",texts,connects,16);
		sscanf(texts, "p<,>a<i>[3]", text);
		format(texts, sizeof(texts),"1, %i, %i", text[1], text[2]);
		mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE "TABLE_ACCOUNT"  SET Texts = '%s', pBank = '%d' WHERE Name = '%s'",texts,moneypizdez,BizzInfo[i][bOwner]);
		mysql_function_query(connects, mysql_query_, false, "", "");
	}
	BizzPay[i] = 0;
	BizzInfo[i][bLock] = 0;
	BizzInfo[i][bMoney] = 0;
	BizzInfo[i][bLic] = 0;
	BizzInfo[i][bEnter] = 100;
	BizzInfo[i][bTill] = 50;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][bProduct] = 0;
	BizzInfo[i][bBuyPrice] = 0;
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	SaveBizz(i);
	UpdateBizz(i);
	return true;
}
stock MagazineAmmoList(playerid, idx)
{
	new till = BizzInfo[idx][bTill],str[170];
	if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid,COLOR_GREY,"You must play on the server for at least 2 hours (/mm - Statistics).");
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "The store's safe is empty / The business has no owner!");
	SetPVarInt(playerid,"Bizzid",idx);
	ClearString();
	for(new i = 0; i < sizeof(AmmoList); i++)
	{
	    format(str, 170,"%d.\t%s\t%d$\n",i + 1,AmmoList[i][Name],AmmoList[i][Cost]*till);
		strcat(stringer,str);
	}
	return ShowPlayerDialog(playerid, 9295, DIALOG_STYLE_TABLIST, "Ammo Nation", stringer, "Buy", "Close");
}
stock EatList(playerid, idx)
{
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Business has no products / Business has no owner!");
	new inter = GetPlayerInterior(playerid);
	if(inter == 5) format(stringer, 512, "Small pizza{11e922}\t%i$\nMedium pizza\t{11e922}%i$\nBig pizza\t{11e922}%i$",till*4, till*7, till*10);
	else if(inter == 10) format(stringer, 512, "Burger\t\t\t{11e922}%i$\nBig burger\t{11e922}%i$\nHamburger\t\t{11e922}%i$",till*4, till*7, till*10);
	else if(inter == 9) format(stringer, 512, "Chicken pieces\t\t{11e922}%i$\nChicken leg piece\t\t{11e922}%i$\nChicken leg\t\t{11e922}%i$",till*4, till*7, till*10);
	return ShowPlayerDialog(playerid, 9294, 2, "{3399FF}Diner", stringer, "Accept", "Cancle");
}
stock MagazineList(playerid, idx)
{
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "There are not enough products in the business / The business has no owner!");
	stringer[0] = 0;
	format(stringer1, sizeof(stringer1),"Telephone number\t\t{11e922}%i$\nPhone book\t\t{11e922}%i$\nDirectory\t\t\t{11e922}%i$", till*14, till*6, till*20);
	strcat(stringer,stringer1);
	format(stringer1, sizeof(stringer1),"\nCamera\t\t\t{11e922}%i$\nHome Heal\t\t\t{11e922}%i$\nFlowers\t\t\t\t{11e922}%i$", till*60, till*20, till*8);
	strcat(stringer,stringer1);
	format(stringer1, sizeof(stringer1),"\nCondom\t\t\t{11e922}%i$\nPepper spray\t\t{11e922}%i$\nLock pick set\t\t{11e922}%i$",till*12, till*3, till*4);
	strcat(stringer,stringer1);
    format(stringer1, sizeof(stringer1),"\nRope\t\t\t{11e922}%i$\nMask\t\t\t\t{11e922}%i$\nFirst aid kit\t\t\t{11e922}%i$", till*5, till*7,till*15);
	strcat(stringer,stringer1);
	format(stringer1, sizeof(stringer1),"\nShovel\t\t\t\t{11e922}%i$\nSeeds\t\t\t{11e922}%i$\nRecord player\t\t\t{11e922}%i$", till*70,till*30,till*100);
	strcat(stringer,stringer1);
	ShowPlayerDialog(playerid, 9293, 2, "{3399FF}Shop 24/7", stringer, "Accept", "Cancle");
	return true;
}
stock ClubList(playerid, idx)
{
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY,"No drinks in the bar / The business has no owner!");
	format(stringer, 512, "Water\t\t\t{11e922}%i$\nSoda\t\t\t{11e922}%i$\nCoca Cola\t\t{11e922}%i$\nBeer\t\t\t{11e922}%i$\nVodka\t\t\t{11e922}%i$\nCognac\t\t\t{11e922}%i$\nAbsinthe\t\t\t{11e922}%i$",
 	till*4, till*7, till*10, till*15, till*20, till*25, till*30);
	return ShowPlayerDialog(playerid, 9297, 2, "{3399FF}Club", stringer, "Accept", "Cancle");
}
stock BuySkin(playerid, idx)
{
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid,COLOR_GREY,"There are no items in stock / The business has no owner!");
	SetPVarInt(playerid,"Bizzid",idx);
	if(GetPVarInt(playerid,"CloserInClothes")) DeletePVar(playerid,"CloserInClothes");
	else if(!GetPVarInt(playerid,"PlayerInClothes"))
	{
		for(new i=0; i<5; i++)
		{
			if(gSkinShopDraw[i]==Text:-1) continue;
			TextDrawShowForPlayer(playerid,Text:gSkinShopDraw[i]);
		}
		if(gSkinShopPriceDraw[playerid] != PlayerText:-1) PlayerTextDrawShow(playerid,gSkinShopPriceDraw[playerid]);
		SetPVarInt(playerid,"PlayerSkinSlot",(PlayerInfo[playerid][pSex] == 1) ? (39) : (0));
		SetPlayerInteriorEx(playerid,5);
		SetPVarInt(playerid,"OldSkin", GetPlayerSkin(playerid));
		SetPPos(playerid, 209.5334, -8.1026, 1005.2109);
		SetPlayerFacingAngle(playerid, 269.6063);
		SetPlayerCameraPos(playerid, 209.5334 + (1.5 * floatsin(-269.6063, degrees)), -8.1026 + (1.5 * floatcos(-269.6063, degrees)), 1005.2109+0.3);
		SetPlayerCameraLookAt(playerid, 209.5334, -8.1026, 1005.2109+0.3);
		SetPlayerVirtualWorldEx(playerid, playerid + 1);
		SetPlayerSkinEx(playerid,gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinID]);
		format(stringer,15,"%i$",gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice]);
		PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer);
		SetPVarInt(playerid,"PlayerInClothes", true);
		SelectTextDraw(playerid, 0xAFAFAFAA);
	}
	return true;
}
stock ActsMagazine(playerid, idx)
{
	if(BizzInfo[idx][bProduct] < 50 || strcmp(BizzInfo[idx][bOwner],"None",true) == 0) return SendClientMessage(playerid,COLOR_GREY,"There are no items in stock / The business has no owner!");
	SetPVarInt(playerid,"Bizzid",idx);
	ShowPlayerDialog(playerid,1653,5,"Shop","Accessory\tCell\n{42B02C}-{FFFFFF} Headphones\t5\n{42B02C}-{FFFFFF} Hats\t1\n{42B02C}-{FFFFFF} Panama hats\t1\n{42B02C}-{FFFFFF} Caps\t1\n{42B02C}-{FFFFFF} Helmets\t1\n{42B02C}-{FFFFFF} Berets\t1\n{42B02C}-{FFFFFF} Wigs\t1\n{42B02C}-{FFFFFF} Stylish glasses\t2\n{42B02C}-{FFFFFF} Bandanas\t4\n{42B02C}-{FFFFFF} Hats\t1\n{42B02C}-{FFFFFF} Wristwatches\t3\n{42B02C}-{FFFFFF} Bags\t6\n{42B02C}-{FFFFFF} Hats [2]\t1\n{42B02C}-{FFFFFF} Bandanas [2]\t1","Accept","Cancle");
	return true;
}
stock FinishBizWar()
{
    new PlayerNapad = 0;
    new PlayerGuard = 0;
    foreach (new i : Player)
	{
	    if(gPlayerLogged[i] == 0) continue;
	    if(BizzWar[BizzWarsNumber][bwNapad] != PlayerInfo[i][pMember] && BizzWar[BizzWarsNumber][bwGuard] != PlayerInfo[i][pMember]) continue;
        if(PlayerToKvadrat(i,gBizzWarZone[BizzWarsNumberZone][0],gBizzWarZone[BizzWarsNumberZone][1],gBizzWarZone[BizzWarsNumberZone][2],gBizzWarZone[BizzWarsNumberZone][3]))
		{
		    if(BizzWar[BizzWarsNumber][bwNapad] == PlayerInfo[i][pMember]) PlayerNapad++;
		    if(BizzWar[BizzWarsNumber][bwGuard] == PlayerInfo[i][pMember]) PlayerGuard++;
		}
	}
	new string[128];
	if((PlayerGuard > 0 && PlayerNapad == 0) || (PlayerGuard == 0 && PlayerNapad == 0))
	{
	    format(string, sizeof(string), "Failure. You failed to take over the business %s",BizzInfo[BizzWarsNumber][bName]);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwNapad], COLOR_LIGHTRED,string);
		format(string, sizeof(string), "You managed to survive the war for business %s",BizzInfo[BizzWarsNumber][bName]);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwGuard], COLOR_GREEN,string);
		foreach (new i : Player)
		{
			if(BizzWar[BizzWarsNumber][bwNapad] != PlayerInfo[i][pMember] && BizzWar[BizzWarsNumber][bwGuard] != PlayerInfo[i][pMember]) continue;
			if(!PlayerInfo[i][pAlcoInvenxua]) ClearKillFeed(i);
			TextDrawHideForPlayer(i,TextBizzWar);
		}
		GangZoneStopFlashForAll(GangZoneBizzWar[BizzWarsNumberZone]);
		GangZoneHideForAll(GangZoneBizzWar[BizzWarsNumberZone]);
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][captureid] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][capture] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][score] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][captureid] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][capture] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][score] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][gangnumber] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][gangnumber] = 0;
		BizzWar[BizzWarsNumber][bwCostGuard] = 0;
		BizzWar[BizzWarsNumber][bwCostNapad] = 0;
		BizzWar[BizzWarsNumber][bwGuard] = 0;
		BizzWar[BizzWarsNumber][bwNapad] = 0;
		BizzWarsNumber = -1;
		BizzWarsNumberZone = -1;
		BizzWars = false;
	}
	else if(PlayerNapad > 0 && PlayerGuard == 0)
	{
		format(string, sizeof(string), "The %s business is now under the control of your mafia.",BizzInfo[BizzWarsNumber][bName]);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwNapad], COLOR_GREEN,string);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwNapad], COLOR_GREEN,"�every hour you will receive 15 percent of the earnings of the business.");
		format(string, sizeof(string), "You failed to defend the attack of %s for business %s",GetPlayerFracName[BizzWar[BizzWarsNumber][bwNapad]],BizzInfo[BizzWarsNumber][bName]);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwGuard], COLOR_LIGHTRED,string);
		SendFamilyMessage(BizzWar[BizzWarsNumber][bwGuard], COLOR_LIGHTRED,"Now this business does not belong to your mafia.");
		BizzInfo[BizzWarsNumber][bMafia] = BizzWar[BizzWarsNumber][bwNapad];
		SaveBizz(BizzWarsNumber);
		foreach (new i : Player)
		{
			if(BizzWar[BizzWarsNumber][bwNapad] != PlayerInfo[i][pMember] && BizzWar[BizzWarsNumber][bwGuard] != PlayerInfo[i][pMember]) continue;
			if(!PlayerInfo[i][pAlcoInvenxua]) ClearKillFeed(i);
			TextDrawHideForPlayer(i,TextBizzWar);
		}
		GangZoneStopFlashForAll(GangZoneBizzWar[BizzWarsNumberZone]);
		GangZoneHideForAll(GangZoneBizzWar[BizzWarsNumberZone]);
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][captureid] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][capture] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][score] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][captureid] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][capture] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][score] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwNapad]][gangnumber] = 0;
		GangInfo[BizzWar[BizzWarsNumber][bwGuard]][gangnumber] = 0;
		BizzWar[BizzWarsNumber][bwCostGuard] = 0;
		BizzWar[BizzWarsNumber][bwCostNapad] = 0;
		BizzWar[BizzWarsNumber][bwGuard] = 0;
		BizzWar[BizzWarsNumber][bwNapad] = 0;
		BizzWarsNumber = -1;
		BizzWarsNumberZone = -1;
		BizzWars = false;
	}
	return true;
}
stock CheckBizWar()
{
    BizzWar[BizzWarsNumber][bwCostNapad] = 0;
    BizzWar[BizzWarsNumber][bwCostGuard] = 0;
    foreach (new i : Player)
	{
	    if(gPlayerLogged[i] == 0) continue;
	    if(BizzWar[BizzWarsNumber][bwNapad] != PlayerInfo[i][pMember] && BizzWar[BizzWarsNumber][bwGuard] != PlayerInfo[i][pMember]) continue;
        if(PlayerToKvadrat(i,gBizzWarZone[BizzWarsNumberZone][0],gBizzWarZone[BizzWarsNumberZone][1],gBizzWarZone[BizzWarsNumberZone][2],gBizzWarZone[BizzWarsNumberZone][3]))
		{
		    if(BizzWar[BizzWarsNumber][bwNapad] == PlayerInfo[i][pMember]) BizzWar[BizzWarsNumber][bwCostNapad]++;
		    if(BizzWar[BizzWarsNumber][bwGuard] == PlayerInfo[i][pMember]) BizzWar[BizzWarsNumber][bwCostGuard]++;
		}
	}
	new string[128];
	format(string,sizeof(string),"%s: %d, KILLS: %d~n~%s: %d, KILLS: %d~n~~n~TIME: %s",GetPlayerFracName[BizzWar[BizzWarsNumber][bwNapad]], BizzWar[BizzWarsNumber][bwCostNapad],GangInfo[BizzWar[BizzWarsNumber][bwNapad]][score],GetPlayerFracName[BizzWar[BizzWarsNumber][bwGuard]], BizzWar[BizzWarsNumber][bwCostGuard],GangInfo[BizzWar[BizzWarsNumber][bwGuard]][score],Convert(BizzWarTime));
	foreach (new i : Player)
	{
		if(gPlayerLogged[i] == 0) continue;
		if(BizzWar[BizzWarsNumber][bwNapad] != PlayerInfo[i][pMember] && BizzWar[BizzWarsNumber][bwGuard] != PlayerInfo[i][pMember]) continue;
		TextDrawSetString(TextBizzWar, string);
	}
	return true;
}

stock UpdatePlayerData(playerid, fields[], data)
{
	new str[512];
	mysql_format(connects,str, sizeof str, "UPDATE `accounts` SET `%s` = '%d' WHERE `pID` = '%d' LIMIT 1",fields, data, PlayerInfo[playerid][pID]);
	mysql_function_query(connects, str, false, "", "");
	return true;
}

stock GetPosPickup(playerid)
{
	if(GetPVarInt(playerid,"OLDPICKUP") == -1) return true;
	if(GetPVarInt(playerid,"TIMEPICKUP") > 0) return SetPVarInt(playerid,"TIMEPICKUP",GetPVarInt(playerid,"TIMEPICKUP")-1);
    new Float:z;
    GetPlayerPos(playerid, z, z, z);
    if(!IsPlayerInRangeOfPoint(playerid,4.0,PickupX[playerid],PickupY[playerid],z)) SetPVarInt(playerid,"OLDPICKUP",-1);
    return true;
}
stock ProductList(playerid)
{
	new str[90], str2[2048], str3[30];
	for(new i = 1; i <= TOTALPRODUCT; i++)
	{
	    if(ProductInfo[i][pType] == 2) str3 = "�������";
	    else str3 = "��������";
		format(str, sizeof(str), "%i. %s - �������: %s\n",i,str3, ProductInfo[i][pName]);
		strcat(str2, str);
	}
	if(TOTALPRODUCT == 0) return ShowPlayerDialog(playerid, 000, 0, "Orders", "No new orders", "Close", "");
	ShowPlayerDialog(playerid, 1746, 2, "Orders", str2, "Accept", "Cancle");
	return 1;
}
stock IsAGreenZone(playerid)
{
	for(new i = 1; i <= TOTALZONE; i++) if(IsPlayerInRangeOfPoint(playerid, GREENZONE[i][grD], GREENZONE[i][grX],GREENZONE[i][grY],GREENZONE[i][grZ])) return true;
	return false;
}
stock ClearString() return format(stringer,sizeof(stringer),"");
GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac)
{
	FIXES_ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	return 1;
}
stock CheckRobPlayer(playerid)
{
	if(TheifRobID[playerid] != INVALID_PLAYER_ID)
	{
	    TheifRobID[playerid] = INVALID_PLAYER_ID;
	    TheifKey[playerid] = 0;
	    TheifTime[playerid] = 0;
	    TheifCount[playerid] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
    }
    return true;
}
stock SetPlayerRandomKey(playerid, &key, action = true)
{
    new randkey;
    if(action) randkey = random(4);
    else randkey = random(2);
	switch(randkey)
	{
		case 0:
		{
			key = KEY_SPRINT;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_SPRINT~");
		}
		case 1:
		{
			key = KEY_WALK;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~SNEAK_ABOUT~");
		}
		case 2:
		{
			key = KEY_AIM;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_LOCK_TARGET~");
		}
		case 3:
		{
			key = KEY_JUMP;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_JUMPING~");
		}
	}
	return true;
}
stock ShowPlayerActionText(playerid, text[])
{
	PlayerTextDrawSetString(playerid, ActionText[playerid], text);
	PlayerTextDrawShow(playerid, ActionText[playerid]);
	return true;
}
stock HidePlayerActionText(playerid)
{
	PlayerTextDrawHide(playerid, ActionText[playerid]);
	return true;
}
stock ShowPlayerActionBand(playerid, status, endstatus)
{
	new Float:part = 100.0 / float(endstatus) * float(status);
	new Float:length = 201.0 + part * 2.42;
	if(length > 443.0) length = 443.0;
	else if(length < 201.0) length = 201.0;
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], length, 0.0);
	PlayerTextDrawShow(playerid, ActionBand[playerid]);
	TextDrawShowForPlayer(playerid, BandDrawBG[0]);
	TextDrawShowForPlayer(playerid, BandDrawBG[1]);
	return true;
}

stock HidePlayerActionBand(playerid)
{
	PlayerTextDrawHide(playerid, ActionBand[playerid]);
	TextDrawHideForPlayer(playerid, BandDrawBG[0]);
	TextDrawHideForPlayer(playerid, BandDrawBG[1]);
	return true;
}
stock DestroyPlayerTD(playerid, &PlayerText:td)
{
	if(td != PlayerText:-1)
	{
	    PlayerTextDrawDestroy(playerid, td);
	    td = PlayerText:-1;
	}
	return true;
}
stock deltarget(playerid)
{
	PlayerTextDrawHide(playerid, AimNameDraw[playerid]);
	PlayerTextDrawHide(playerid, Target1 );
	PlayerTextDrawHide(playerid, Target2 );
	PlayerTextDrawHide(playerid, Target3 );
	PlayerTextDrawHide(playerid, Target5 );
	PlayerTextDrawHide(playerid, Target6[playerid] );
	PlayerTextDrawHide(playerid, Target4[playerid] );
	return 1;
}
stock RepairHouse(playerid,listitem,idx)
{
    new i = PlayerInfo[playerid][pPhousekey], string[128];
	switch(listitem)
	{
	    case 0:
		{
		    if(HouseInfo[i][hKlass] == 0) format(string,90,"2259.5068,-1135.9337,1050.6328,10");
		    if(HouseInfo[i][hKlass] == 1) format(string,90,"2218.3875,-1076.1580,1050.4844,1");
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"377.1231,1417.3163,1081.3281,15");
		    if(HouseInfo[i][hKlass] == 3) format(string,90,"-283.6001,1471.2211,1084.3750,15");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"140.2660,1366.1091,1083.8594,5");
		    if(HouseInfo[i][hKlass] == 5) format(string,90,"234.1541,1063.7206,1084.2123,6");
		}
		case 1:
		{
		    if(HouseInfo[i][hKlass] == 0) format(string,90,"2233.6965,-1115.1270,1050.8828,5");
		    if(HouseInfo[i][hKlass] == 1) format(string,90,"221.7789,1140.1970,1082.6094,4");
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"327.9864,1477.7328,1084.4375,15");
		    if(HouseInfo[i][hKlass] == 3) format(string,90,"447.2238,1397.2926,1084.3047,2");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"24.0716,1340.1615,1084.3750,10");
		    if(HouseInfo[i][hKlass] == 5) format(string,90,"235.2748,1186.6809,1080.2578,3");
		}
		case 2:
		{
		    if(HouseInfo[i][hKlass] == 0) format(string,90,"244.0883,305.0291,999.1484,1");
		    if(HouseInfo[i][hKlass] == 1) format(string,90,"261.1874,1284.2982,1080.2578,4");
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"2237.5413,-1081.1516,1049.04,2");
		    if(HouseInfo[i][hKlass] == 3) format(string,90,"295.2479,1472.2650,1080.2578,15");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"2196.8469,-1204.3524,1049.0234,6");
		    if(HouseInfo[i][hKlass] == 5) format(string,90,"226.2956,1114.1615,1080.9929,5");
		}
		case 3:
		{
		    if(HouseInfo[i][hKlass] == 0) format(string,90,"266.9498,304.9866,999.1484,2");
		    if(HouseInfo[i][hKlass] == 1) format(string,90,"2468.2080,-1698.2988,1013.5078,2");
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"2365.3345,-1135.5907,1050.8826,8");
			if(HouseInfo[i][hKlass] == 3) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"2317.7983,-1026.7651,1050.2178,9");
		    if(HouseInfo[i][hKlass] == 5) format(string,90,"2324.3977,-1149.0601,1050.7101,12");
		}
		case 4:
		{
			if(HouseInfo[i][hKlass] == 0) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
			if(HouseInfo[i][hKlass] == 1) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"387.1313,1471.7137,1080.1949,15");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"83.0791,1322.2808,1083.8662,9");
			if(HouseInfo[i][hKlass] == 5) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
		}
		case 5:
		{
		    if(HouseInfo[i][hKlass] == 2) format(string,90,"226.4436,1239.9277,1082.1406,2");
		    if(HouseInfo[i][hKlass] == 4) format(string,90,"-260.4934,1456.8430,1084.3672,4");
		}
		case 6:
		{
			if(HouseInfo[i][hKlass] == 2) format(string,90,"22.9848,1403.3345,1084.4370,5");
			if(HouseInfo[i][hKlass] == 4) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
		}
		case 7: if(HouseInfo[i][hKlass] == 2) format(string,90,"-1515.6763,2722.2607,1500.9036,1");
	}
	switch(idx)
	{
	    case 0:
	    {
			new Float:p[3],pp;
			sscanf(string,"p<,>fffi",p[0],p[1],p[2],pp);
			SetPPos(playerid,p[0],p[1],p[2]);
			SetPlayerInteriorEx(playerid,pp);
			SetPlayerVirtualWorldEx(playerid,i+50);
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 2900, 0, "d", playerid);
		}
		case 1:
		{
		    new cost;
			switch(HouseInfo[i][hKlass])
		    {
				case 0: cost = 100000;
				case 1: cost = 250000;
				case 2: cost = 500000;
				case 3: cost = 750000;
				case 4: cost = 1000000;
				case 5: cost = 1500000;
			}
			if(listitem == GetPVarInt(playerid, "RepairItem")) cost = 1000000;
			if(PlayerInfo[playerid][pBank] < cost) return SendClientMessage(playerid,COLOR_GREY,"Insufficient funds in bank account!"), DeletePVar(playerid,"RepairHouse");
			PlayerInfo[playerid][pBank]-=cost;
			sscanf(string,"p<,>fffi",HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],HouseInfo[i][hInt]);
			DeletePVar(playerid,"RepairHouse"), DeletePVar(playerid, "RepairItem");
			format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_HOUSE"` SET `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f', `hInt` = '%d' WHERE hID = '%i'",HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],HouseInfo[i][hInt],i);
			mysql_function_query(connects, mysql_query_, false, "", "");
			return SendClientMessage(playerid,COLOR_BLUE,"You've renovated your home!");
		}
	}
	return true;
}
stock NextCar(playerid)
{
	if(PlayerInfo[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto") +1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
		case 0:if(GetPVarInt(playerid, "SelectAvto") > 19) SetPVarInt(playerid, "SelectAvto", 0);//nope
		case 1:if(GetPVarInt(playerid, "SelectAvto") > 38) SetPVarInt(playerid, "SelectAvto", 20);//c
		case 2:if(GetPVarInt(playerid, "SelectAvto") > 56) SetPVarInt(playerid, "SelectAvto", 39);//d
		case 3:if(GetPVarInt(playerid, "SelectAvto") > 80) SetPVarInt(playerid, "SelectAvto", 72);//a
		case 4:if(GetPVarInt(playerid, "SelectAvto") > 71) SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	return ShowingCar(playerid);
}
stock BackCar(playerid)
{
	if(PlayerInfo[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto")-1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
		case 0:if(GetPVarInt(playerid, "SelectAvto") < 0) SetPVarInt(playerid, "SelectAvto", 19);//nope
		case 1:if(GetPVarInt(playerid, "SelectAvto") < 20) SetPVarInt(playerid, "SelectAvto", 38);//c
		case 2:if(GetPVarInt(playerid, "SelectAvto") < 39) SetPVarInt(playerid, "SelectAvto", 56);//d
		case 3:if(GetPVarInt(playerid, "SelectAvto") < 72) SetPVarInt(playerid, "SelectAvto", 80);//a
		case 4:if(GetPVarInt(playerid, "SelectAvto") < 57) SetPVarInt(playerid, "SelectAvto", 71);//b
	}
	return ShowingCar(playerid);
}
stock ShowingCar(playerid)
{
	if(PlayerInfo[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicleEx(PlayerInfo[playerid][SalonCar]);
	PlayerInfo[playerid][SalonCar] = CreateVehicleEx(ShopCar[GetPVarInt(playerid, "SelectAvto")][0],-1658.7123,1212.8981,20.9499,285.2443,1,1,-1,0);
	SetVehicleVirtualWorld(PlayerInfo[playerid][SalonCar], playerid+1);
	VEHICLE[PlayerInfo[playerid][SalonCar]][vHealth] = 1000.0;
	Fuell[PlayerInfo[playerid][SalonCar]] = 100.0;
	PutPlayerInVeh(playerid,PlayerInfo[playerid][SalonCar],0);
	SetPlayerCameraPos(playerid,-1654.097045,1218.596679,22.708799);
	SetPlayerCameraLookAt(playerid,-1659.106201,1210.380737,19.987318);
	SetPVarInt(playerid,"BuyColor",1);
	SetPVarInt(playerid,"BuyColor1",1);
    new string[128];
	format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~1 ~y~COLOR2: ~w~1",VehicleNameS[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	GameTextForPlayer(playerid,string, 5000, 3);
	format(string,sizeof(string),"Model: %s~n~Cost: %d",VehicleNameS[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	PlayerTextDrawSetString(playerid,ShopText[playerid],string);
	PlayerInfo[playerid][SalonTime] = gettime()+1;
	return true;
}

stock NextColor(playerid,whocolor)
{
	if(whocolor == 0) SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
	if(GetPVarInt(playerid,"BuyColor") > 254) SetPVarInt(playerid,"BuyColor",0);
	if(GetPVarInt(playerid,"BuyColor1") > 254) SetPVarInt(playerid,"BuyColor1",0);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	format(stringer1,sizeof(stringer1),"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~%d ~y~COLOR2: ~w~%d",VehicleNameS[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,stringer1, 5000, 3);
	return true;
}
stock BackColor(playerid,whocolor)
{
	if(whocolor == 0) SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")-1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")-1);
	if(GetPVarInt(playerid,"BuyColor") < 0) SetPVarInt(playerid,"BuyColor",254);
	if(GetPVarInt(playerid,"BuyColor1") < 0) SetPVarInt(playerid,"BuyColor1",254);
	ChangeVehicleColor(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	format(stringer1,sizeof(stringer1),"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~%d ~y~COLOR2: ~w~%d",VehicleNameS[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,stringer1, 5000, 3);
	return true;
}
stock ShowBuyCar(playerid)
{
	SetPVarInt(playerid, "SelectAvto", 0);
	switch(GetPVarInt(playerid,"CarShop"))
	{
		case 1: SetPVarInt(playerid, "SelectAvto", 20);//c
		case 2: SetPVarInt(playerid, "SelectAvto", 39);//d
		case 3: SetPVarInt(playerid, "SelectAvto", 72);//a
		case 4: SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	PlayerTextDrawShow(playerid, ShopText[playerid]);
	for(new x; x < 12; x++) TextDrawShowForPlayer(playerid, AutoShopText[x]);
	SetPlayerVirtualWorldEx(playerid,playerid+1);
	SelectTextDraw(playerid, 0x0080FFFF);
	SetPVarInt(playerid, "SelectTextDraw", 1);
 	return ShowingCar(playerid);
}
stock ExitCar(playerid)
{
    for(new x; x < 12; x++) TextDrawHideForPlayer(playerid, AutoShopText[x]);
	PlayerTextDrawHide(playerid, ShopText[playerid]);
	if(PlayerInfo[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicleEx(PlayerInfo[playerid][SalonCar]);
	PlayerInfo[playerid][SalonCar] = INVALID_VEHICLE_ID;
	DeletePVar(playerid, "SelectTextDraw");
	CancelSelectTextDraw(playerid);
	if(GetPVarInt(playerid,"AutoShop") != 0)
	{
		switch(GetPVarInt(playerid,"AutoShop"))
		{
			case 1: SetPPos(playerid,556.5716,-1292.6392,17.2482);
			case 2: SetPPos(playerid,-1951.2544,293.6375,35.4688);
			case 3: SetPPos(playerid,-1657.7015,1210.2267,7.2500);
			case 4: SetPPos(playerid, 2200.8857,1394.2892,11.0625);
		}
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid,0);
  		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid,"CarShop");
		DeletePVar(playerid,"AutoShop");
		DeletePVar(playerid,"BuyColor");
	    DeletePVar(playerid,"BuyColor1");
		SetPVarInt(playerid, "SelectAvto",-1);
		return true;
	}
	return true;
}
stock GetRouleNumber(playerid)
{
    new str[64], pos[2], number[14];
    strmid(str, RouleValues[RouleHorizont[playerid]], 0, strlen(RouleValues[RouleHorizont[playerid]]), sizeof(str));
	for(new i = 0; i < sizeof(RouleNumber[]); i++)
	{
	    if(i == 0)
	    {
	        pos[0] = 0;
	    }
        else
		{
    		pos[0] = strfind(str, ";", false, pos[0]+1);
		}
		if(i == RouleVertikal[playerid])
		{
		    if(i == 6)
	    	{
	        	pos[1] = strlen(str);
	    	}
	    	else
	    	{
	        	pos[1] = strfind(str, ";", false, pos[0]+1);
	    	}
		    strmid(number, str, (pos[0] == 0) ? (pos[0]) : (pos[0]+1), pos[1], sizeof(number));
	        return number;
		}
	}
	return number;
}

stock GetNumberColor(number)
{
	new text[4];
	switch(number)
	{
	    case 0: text =  "~g~";
	    case 1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36: text = "~r~";
	    default: text = "~b~";
	}
	return text;
}

stock GetNameCard(Number)
{
	new text[8];
	switch(Number)
	{
	    case 0: text = "2";
	    case 1: text = "3";
	    case 2: text = "4";
	    case 3: text = "5";
	    case 4: text = "6";
	    case 5: text = "7";
	    case 6: text = "8";
	    case 7: text = "9";
	    case 8: text = "10";
	    case 9: text = "Jack";
	    case 10: text = "Lady";
	    case 11: text = "King";
	    case 12: text = "Queen";
	}
	return text;
}

stock GetBlackJackPoints(card)
{
	switch(card)
	{
	    case 0: return 2;
	    case 1: return 3;
	    case 2: return 4;
	    case 3: return 5;
	    case 4: return 6;
	    case 5: return 7;
	    case 6: return 8;
	    case 7: return 9;
	    case 8: return 10;
	    case 9: return 2;
	    case 10: return 3;
	    case 11: return 4;
	    case 12: return 11;
	}
	return false;
}

stock ResetPlayerBlackJackGame(playerid)
{
    ChooseBet[playerid] = 0;
    BlackJackCards[playerid] = 0;
    BlackJackPoints[playerid] = 0;
    BlackJackTime[playerid] = 0;
    BlackJackBet[playerid] = 0;
	BlackJackDoubleUse[playerid] = 0;
}

stock GetPlayerNearestDiceTable(playerid)
{
	for(new i = 0; i < sizeof(DiceTables); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, DiceTables[i][0], DiceTables[i][1], DiceTables[i][2])) return i;
	}
	return -1;
}

stock GetPlayerNearestRouleTable(playerid)
{
	for(new i = 0; i < sizeof(RouleTables); i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, RouleTables[i][0], RouleTables[i][1], RouleTables[i][2])) return i;
	}
	return -1;
}

stock GetPlayerNearestBlackJackTable(playerid)
{
    for(new i = 0; i < sizeof(BlackJackTables); i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.7, BlackJackTables[i][0], BlackJackTables[i][1], BlackJackTables[i][2])) return i;
	}
	return -1;
}

stock IsPlayerStartCroupier(playerid)
{
	if(StartDuty[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMember] == DRAGONS_FRAC || PlayerInfo[playerid][pMember] == CALIGULAS_FRAC)
		{
			return true;
	 	}
	}
 	return false;
}

stock OnPlayerEnterDiceTable(playerid, tableid)
{
	if(IsPlayerStartCroupier(playerid))
	{
	    if(DiceTableInfo[tableid][dCroupier] == 1) return SendClientMessage(playerid, COLOR_SILVER, "There is already a croupier at the table");
	    {
	        UsingCursor[playerid] = 1;
	        CroupierGame[playerid] = 1;
	        CroupierTable[playerid] = tableid;
	        SelectTextDraw(playerid, 0xFFFFFFAA);
	    	ShowPlayerDiceMenu(playerid, tableid, -1);
	    	DiceTableInfo[tableid][dCroupier] = 1;
	    	TogglePlayerControllable(playerid, 0);
	    	return true;
		}
	}
	else
	{
		for(new i = 0; i < 5; i++)
		{
		    if(DiceTableInfo[tableid][dGamer][i] == -1)
		    {
				new str[32];
				UsingCursor[playerid] = 1;
				DiceTable[playerid] = tableid;
				DiceGamer[playerid] = i;
				SelectTextDraw(playerid, 0xFFFFFFAA);
				TogglePlayerControllable(playerid, 0);
				format(str, sizeof(str), "%i. %s", i+1, PlayerInfo[playerid][pNames]);
				TextDrawSetString(DiceSlot[tableid][i], str);
				DiceTableInfo[tableid][dGamer][i] = playerid;
				format(str, sizeof(str), "%i$", PlayerInfo[playerid][pCash]);
	            TextDrawSetString(DiceMoneyShow[tableid][i], str);
	            ShowPlayerDiceMenu(playerid, tableid, i);
				return true;
			}
		}
	}
	return false;
}

stock OnPlayerExitDiceTable(playerid, tableid)
{
    if(IsPlayerStartCroupier(playerid))
	{
	    UsingCursor[playerid] = 0;
	    CroupierGame[playerid] = 0;
	    CroupierTable[playerid] = -1;
	    CancelSelectTextDraw(playerid);
	    HidePlayerDiceMenu(playerid, tableid, -1);
	    DiceTableInfo[tableid][dCroupier] = 0;
	    TogglePlayerControllable(playerid, 1);
	}
	else
	{
		for(new i = 0; i < 5; i++)
		{
		    if(DiceTableInfo[tableid][dGamer][i] == playerid)
			{
				new str[17];
	            UsingCursor[playerid] = 0;
	            DiceGamer[playerid] = -1;
	            DiceTable[playerid] = -1;
				ChooseBet[playerid] = 0;
				Glasses[playerid] = 0;
				CancelSelectTextDraw(playerid);
				TogglePlayerControllable(playerid, 1);
				format(str, sizeof(str), "%i. -----------", i+1);
		        TextDrawSetString(DiceSlot[tableid][i], str);
		        TextDrawSetString(BetGamer[tableid][i], "[...]");
				DiceTableInfo[tableid][dGamer][i] = -1;
				HidePlayerDiceMenu(playerid, tableid, i);
				break;
			}
		}
	}
	return false;
}

stock ShowPlayerDiceMenu(playerid, tableid, place)
{
	if(place != -1)
	{
        TextDrawShowForPlayer(playerid, DiceSetBet);
		TextDrawShowForPlayer(playerid, DiceThrow);
	    TextDrawShowForPlayer(playerid, DiceMoney);
	    TextDrawShowForPlayer(playerid, DiceMoneyShow[tableid][place]);
	}
	TextDrawShowForPlayer(playerid, DiceBox[0]);
	TextDrawShowForPlayer(playerid, DiceBox[1]);
	TextDrawShowForPlayer(playerid, DiceTitle);
	TextDrawShowForPlayer(playerid, DiceExit);
	TextDrawShowForPlayer(playerid, DiceBet);
	TextDrawShowForPlayer(playerid, DiceBank);
	TextDrawShowForPlayer(playerid, DiceBankShow[tableid]);
	TextDrawShowForPlayer(playerid, DiceBetShow[tableid]);
	for(new i = 0; i < 5; i++)
	{
	    TextDrawShowForPlayer(playerid, DiceSlot[tableid][i]);
		TextDrawShowForPlayer(playerid, BetGamer[tableid][i]);
	}
}

stock HidePlayerDiceMenu(playerid, tableid, place)
{
    if(place != -1)
    {
	   	TextDrawHideForPlayer(playerid, DiceSetBet);
		TextDrawHideForPlayer(playerid, DiceThrow);
        TextDrawHideForPlayer(playerid, DiceMoney);
        TextDrawHideForPlayer(playerid, DiceMoneyShow[tableid][place]);
    }
    TextDrawHideForPlayer(playerid, DiceBox[0]);
	TextDrawHideForPlayer(playerid, DiceBox[1]);
	TextDrawHideForPlayer(playerid, DiceTitle);
	TextDrawHideForPlayer(playerid, DiceExit);
	TextDrawHideForPlayer(playerid, DiceBet);
	TextDrawHideForPlayer(playerid, DiceBank);
	TextDrawHideForPlayer(playerid, DiceBankShow[tableid]);
	TextDrawHideForPlayer(playerid, DiceBetShow[tableid]);
	for(new i = 0; i < 5; i++)
	{
	    TextDrawHideForPlayer(playerid, DiceSlot[tableid][i]);
		TextDrawHideForPlayer(playerid, BetGamer[tableid][i]);
	}
}

stock OnPlayerEnterRouleTable(playerid, tableid)
{
	if(IsPlayerStartCroupier(playerid))
	{
	    if(RouleTableInfo[tableid][rCroupier] == 1) return SendClientMessage(playerid, COLOR_SILVER, "There is already a croupier at the table");
	    {
	        CroupierGame[playerid] = 2;
		    CroupierTable[playerid] = tableid;
		    RouleTableInfo[tableid][rCroupier] = 1;
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerRouleMenu(playerid, tableid);
			return true;
		}
	}
	else
	{
	    for(new i = 0; i < 5; i++)
	    {
			if(RouleTableInfo[tableid][rGamer][i] == -1)
			{
				if(tableid >= 0 && tableid <= 3)
				{
					Casino[playerid] = 1;
				}
				else
				{
				    Casino[playerid] = 2;
				}
				new str[34];
				RouleGamer[playerid] = i;
			    RouleTable[playerid] = tableid;
				RouleTableInfo[tableid][rGamer][i] = playerid;
			    TogglePlayerControllable(playerid, 0);
			    SetPlayerCameraPos(playerid, RouleCamera[tableid][0], RouleCamera[tableid][1], RouleCamera[tableid][2]);
	 			SetPlayerCameraLookAt(playerid, RouleCamera[tableid][3], RouleCamera[tableid][4], RouleCamera[tableid][5]);
			    format(str, sizeof(str), "%d. %s", i+1, PlayerInfo[playerid][pNames]);
			    TextDrawSetString(RouleGamerShow[tableid][i], str);
				ShowPlayerRouleMenu(playerid, tableid);
			    switch(Casino[playerid])
			    {
			        case 1:
			        {
			            RouleChip[playerid] = CreateDynamicObject(1900, RouleTables[tableid][0]+RouleVertikalCoords[4][0], RouleTables[tableid][1]+RouleHorizontCoords[0][0], 992.335, 0.0, 0.0, 0.0);
			        }
			        case 2:
			        {
			            RouleChip[playerid] = CreateDynamicObject(1900, RouleTables[tableid][0]-RouleHorizontCoords[0][0], RouleTables[tableid][1]+RouleVertikalCoords[4][0], 1006.06, 0.0, 0.0, 0.0);
			        }
				}
			    return true;
			}
		}
	}
	return false;
}

stock OnPlayerExitRouleTable(playerid, tableid)
{
    if(IsPlayerStartCroupier(playerid))
	{
	    CroupierGame[playerid] = 0;
        CroupierTable[playerid] = -1;
	    RouleTableInfo[tableid][rCroupier] = 0;
	    TogglePlayerControllable(playerid, 1);
		HidePlayerRouleMenu(playerid, tableid);
	}
	else
	{
	    for(new i = 0; i < 5; i++)
	    {
			if(RouleTableInfo[tableid][rGamer][i] == playerid)
			{
			    new str[14];
			    RouleBet[playerid] = 0;
			    Casino[playerid] = 0;
			    RouleGamer[playerid] = -1;
			    RouleTable[playerid] = -1;
			    ChooseBet[playerid] = 0;
			    RouleHorizont[playerid] = 0;
			    RouleVertikal[playerid] = 4;
			    RouleTableInfo[tableid][rGamer][i] = -1;
			    strdel(RouleNumber[playerid], 0, 12);
			    TogglePlayerControllable(playerid, 1);
			    SetCameraBehindPlayer(playerid);
				DestroyObject(RouleChip[playerid]);
				RouleChip[playerid] = 0;
				format(str, sizeof(str), "%d. -------", i+1);
			    TextDrawSetString(RouleGamerShow[tableid][i], str);
			    TextDrawSetString(RouleNumberShow[tableid][i], "-------");
			    TextDrawSetString(RouleBetShow[tableid][i], "-------");
			    HidePlayerRouleMenu(playerid, tableid);
				break;
			}
		}
	}
	return true;
}

stock ShowPlayerRouleMenu(playerid, tableid)
{
	TextDrawShowForPlayer(playerid, RouleBox);
	TextDrawShowForPlayer(playerid, RouleBorder[0]);
	TextDrawShowForPlayer(playerid, RouleBorder[1]);
	TextDrawShowForPlayer(playerid, RouleGamersTitle);
	TextDrawShowForPlayer(playerid, RouleNumberTitle);
	TextDrawShowForPlayer(playerid, RouleBetTitle);
	for(new i = 0; i < 5; i++)
	{
		TextDrawShowForPlayer(playerid, RouleGamerShow[tableid][i]);
		TextDrawShowForPlayer(playerid, RouleNumberShow[tableid][i]);
		TextDrawShowForPlayer(playerid, RouleBetShow[tableid][i]);
	}
}

stock HidePlayerRouleMenu(playerid, tableid)
{
	TextDrawHideForPlayer(playerid, RouleBox);
	TextDrawHideForPlayer(playerid, RouleBorder[0]);
	TextDrawHideForPlayer(playerid, RouleBorder[1]);
	TextDrawHideForPlayer(playerid, RouleGamersTitle);
	TextDrawHideForPlayer(playerid, RouleNumberTitle);
	TextDrawHideForPlayer(playerid, RouleBetTitle);
	for(new i = 0; i < 5; i++)
	{
		TextDrawHideForPlayer(playerid, RouleGamerShow[tableid][i]);
		TextDrawHideForPlayer(playerid, RouleNumberShow[tableid][i]);
		TextDrawHideForPlayer(playerid, RouleBetShow[tableid][i]);
	}
}

stock OnPlayerEnterBlackJackTable(playerid, tableid)
{
    if(IsPlayerStartCroupier(playerid))
	{
	    if(BlackJackTableInfo[tableid][jCroupier] == 1) return SendClientMessage(playerid, COLOR_SILVER, "There is already a croupier at the table");
	    {
	        UsingCursor[playerid] = 1;
	        CroupierGame[playerid] = 3;
	        CroupierTable[playerid] = tableid;
	        SelectTextDraw(playerid, 0xFFFFFFAA);
			TogglePlayerControllable(playerid, 0);
			BlackJackTableInfo[tableid][jCroupier] = 1;
			ShowPlayerBlackJackMenu(playerid, tableid, -1);
			return true;
		}
	}
	else
	{
	    for(new i = 0; i < 2; i++)
	    {
	        if(BlackJackTableInfo[tableid][jGamer][i] == -1)
	        {
	            new str[24];
	            UsingCursor[playerid] = 1;
				BlackJackTable[playerid] = tableid;
				BlackJackGamer[playerid] = i;
				BlackJackTableInfo[tableid][jGamer][i] = playerid;
				SelectTextDraw(playerid, 0xFFFFFFAA);
				TogglePlayerControllable(playerid, 0);
				format(str, sizeof(str), "%s", PlayerInfo[playerid][pNames]);
				TextDrawSetString(BlackJackGamerShow[tableid][i], str);
				ShowPlayerBlackJackMenu(playerid, tableid, i);
				return true;
	        }
	    }
	}
	return false;
}

stock OnPlayerExitBlackJackTable(playerid, tableid)
{
    if(IsPlayerStartCroupier(playerid))
	{
        UsingCursor[playerid] = 0;
        CroupierGame[playerid] = 0;
        CroupierTable[playerid] = -1;
		CancelSelectTextDraw(playerid);
		TogglePlayerControllable(playerid, 1);
		BlackJackTableInfo[tableid][jCroupier] = 0;
		HidePlayerBlackJackMenu(playerid, tableid, -1);
	}
	else
	{
     	for(new i = 0; i < 2; i++)
	    {
	        if(BlackJackTableInfo[tableid][jGamer][i] == playerid)
	        {
	            UsingCursor[playerid] = 0;
				ResetPlayerBlackJackGame(playerid);
				BlackJackTable[playerid] = -1;
				BlackJackGamer[playerid] = -1;
				BlackJackTableInfo[tableid][jGamer][i] = -1;
				CancelSelectTextDraw(playerid);
				TogglePlayerControllable(playerid, 1);
				HidePlayerBlackJackMenu(playerid, tableid, i);
				TextDrawSetString(BlackJackGamerShow[tableid][i], "Empty");
				TextDrawSetString(BlackJackBetShow[tableid][i], "_");
				break;
	        }
	    }
	}
	return true;
}

stock ShowPlayerBlackJackMenu(playerid, tableid, place)
{
	if(place != -1)
	{
	    for(new i = 1; i < 7; i++)
	    {
	        TextDrawShowForPlayer(playerid, BlackJackBox[i]);
	    }
	    TextDrawShowForPlayer(playerid, BlackJackSetBet);
	    TextDrawShowForPlayer(playerid, BlackJackHit);
	    TextDrawShowForPlayer(playerid, BlackJackDouble);
	}
	TextDrawShowForPlayer(playerid, BlackJackBox[0]);
    TextDrawShowForPlayer(playerid, BlackJackTitle);
    TextDrawShowForPlayer(playerid, BlackJackDealerTitle);
    TextDrawShowForPlayer(playerid, BlackJackChip[0]);
    TextDrawShowForPlayer(playerid, BlackJackChip[1]);
    TextDrawShowForPlayer(playerid, BlackJackGamerShow[tableid][0]);
    TextDrawShowForPlayer(playerid, BlackJackGamerShow[tableid][1]);
    TextDrawShowForPlayer(playerid, BlackJackBetShow[tableid][0]);
    TextDrawShowForPlayer(playerid, BlackJackBetShow[tableid][1]);
    TextDrawShowForPlayer(playerid, BlackJackPointsShow[tableid][0]);
    TextDrawShowForPlayer(playerid, BlackJackPointsShow[tableid][1]);
    TextDrawShowForPlayer(playerid, BlackJackPointsShow[tableid][2]);
    TextDrawShowForPlayer(playerid, BlackJackExit);
	for(new i = 0; i < 4; i++)
	{
	    TextDrawShowForPlayer(playerid, BlackJackBorder[i]);
	}
	for(new i = 0; i < 15; i++)
	{
	    TextDrawShowForPlayer(playerid, BlackJackCardShow[tableid][i]);
	}
}

stock HidePlayerBlackJackMenu(playerid, tableid, place)
{
	if(place != -1)
	{
	    for(new i = 1; i < 7; i++)
	    {
	        TextDrawHideForPlayer(playerid, BlackJackBox[i]);
	    }
	    TextDrawHideForPlayer(playerid, BlackJackSetBet);
	    TextDrawHideForPlayer(playerid, BlackJackHit);
	    TextDrawHideForPlayer(playerid, BlackJackDouble);
	}
	TextDrawHideForPlayer(playerid, BlackJackBox[0]);
    TextDrawHideForPlayer(playerid, BlackJackTitle);
    TextDrawHideForPlayer(playerid, BlackJackDealerTitle);
    TextDrawHideForPlayer(playerid, BlackJackChip[0]);
    TextDrawHideForPlayer(playerid, BlackJackChip[1]);
    TextDrawHideForPlayer(playerid, BlackJackGamerShow[tableid][0]);
    TextDrawHideForPlayer(playerid, BlackJackGamerShow[tableid][1]);
    TextDrawHideForPlayer(playerid, BlackJackBetShow[tableid][0]);
    TextDrawHideForPlayer(playerid, BlackJackBetShow[tableid][1]);
    TextDrawHideForPlayer(playerid, BlackJackPointsShow[tableid][0]);
    TextDrawHideForPlayer(playerid, BlackJackPointsShow[tableid][1]);
    TextDrawHideForPlayer(playerid, BlackJackPointsShow[tableid][2]);
    TextDrawHideForPlayer(playerid, BlackJackExit);
	for(new i = 0; i < 4; i++)
	{
	    TextDrawHideForPlayer(playerid, BlackJackBorder[i]);
	}
	for(new i = 0; i < 15; i++)
	{
	    TextDrawHideForPlayer(playerid, BlackJackCardShow[tableid][i]);
	}
}
forward RouleTimer(tableid);
public RouleTimer(tableid)
{
    RouleTableInfo[tableid][rTime]--;
    if(RouleTableInfo[tableid][rTime] <= 1)
    {
        KillTimer(TimerRoule[tableid]);
        KillTimer(TimerRouleGame[tableid]);
        EndRoule(tableid);
    }
	return true;
}


forward RouleGameTimer(tableid);
public RouleGameTimer(tableid)
{
	new rand = random(37), str[8];
	foreach (new i : Player)
	{
		if(RouleTable[i] != tableid) continue;
	    {
	    	format(str, sizeof(str), "%s%d", GetNumberColor(rand), rand);
	        GameTextForPlayer(i, str, 3000, 6);
    	}
	}
	return true;
}

publics:OnCheckDonations(playerid)
{
	new rows, f, rubdonate[64];
    cache_get_data(rows, f);
    if(rows && !GetPVarInt(playerid, "after_donation"))
    {
        new mystring[700], total, cure;
		total += cache_get_field_content_int(0, "newDonation", connects);
		mysql_format(connects, mystring, sizeof(mystring), "UPDATE `accounts` SET `newDonation` = 0 WHERE `Name` = '%e'", PlayerInfo[playerid][pNames]);
        mysql_function_query(connects, mystring, false, "", "");
		cure = total;
   		format(mystring, sizeof(mystring), "{0099CC}Your balance has been successfully replenished by {FFD700}%i rubles!", total*Config[sDonPower]);
   		SendClientMessage(playerid, -1, mystring);
		total *= Config[sDonPower];
		if(total > 498 && total < 999) {total += (total / 100) * 5;}
		else if(total > 998 && total < 1999) {total += (total / 100) * 15;}
		else if(total > 1998 && total < 4999) {total += (total / 100) * 20;}
		else if(total > 4998) {total += (total / 100) * 30;}
		PlayerInfo[playerid][pRub] += total;
		format(mystring, sizeof mystring, "{ffffff}You have successfully topped up your account to {9994EB}%i rub.\n{ffffff}Taking into account the promotion, it was credited {9994EB}%i rub.\n\n{FFFFFF}Terms of action:\n\
		When crediting the amount from {eeb70a}499 rub {FFFFFF}you get a bonus {3399FF}5 percent of the amount\n{FFFFFF}When crediting the amount from {eeb70a}999 rub {FFFFFF}you get a bonus {3399FF}15 percent of the amount\n{FFFFFF}When crediting the amount from {eeb70a}1999 rub {FFFFFF}you get a bonus {3399FF}20 percent of the amount\n{FFFFFF}When crediting the amount from {eeb70a}4999 rub {FFFFFF}you get a bonus {3399FF}30 percent of the amount", cure, total);
		ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{8BD032} the number has been successfully replenished", mystring, "Close", "");
   		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRub]);
		SetPVarInt(playerid, "after_donation", 1);
		return true;
    }
/*    SendClientMessage(playerid,-1,"{FFFFFF}<< Vladimir_Putin: {FFFF00}�����! {FF0000}�����! {FFFF00}�����! {E0FFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Vladimir_Putin: {E0FFFF}������ ���� �� ���������� ������ �������! (/donaterub) >>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Vladimir_Putin: {E0FFFF}C���� ���������� ������� (���� ������) {FF0000}����� �� 1299 ������! {E0FFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Vladimir_Putin: {E0FFFF}��� ������� ����������� ������� � /buyowner >>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Vladimir_Putin: {E0FFFF}�� �������� ����� �����������! >>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Blackrose_Rog: {E0FFFF}Asia Paradise RolePlay say welcome to all players! {FFFF00}hope you enjoy! {FFFFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Blackrose_Rog: {E0FFFF}Do you want help? please use {FF0000}/report {FFFFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Blackrose_Rog: {E0FFFF}You are playing in server {FFFF00}01 {E0FFFF}now! {FFFFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Blackrose_Rog: {E0FFFF}If you want to be leader in {FF0000}Asia Paradise {FFFFFF}Rp {E0FFFF}make test with admins in discord server {FFFFFF}>>");
    SendClientMessage(playerid,-1,"{FFFFFF}<< Blackrose_Rog: {E0FFFF}Special thanks to the server scripter [{FFFF00}Moon Weaksize{E0FFFF}] and the {FF0000}admins team {FFFFFF}>>");*/
	DeletePVar(playerid, "after_donation");
	format(rubdonate, sizeof(rubdonate), "{FFFF00}Donate-Rub | {FFFFFF} Balance: %d Rub", PlayerInfo[playerid][pRub]);
	ShowPlayerDialog(playerid, 9642, DIALOG_STYLE_TABLIST_HEADERS, rubdonate, "{FFFFFF}Top up balance on {00ff00}New York {FFFFFF}In chapter {42aaff}'Donate'\t\n\
	[1] JOIN FACTION [NEW] $150000\t\t\t\t>>>\n\
	[2] Buy Leader [NEW] [FF0000]Hot Sale!\t\t\t\t>>>\n\
	[3] Rank UP - Down Factions\t\t\t\t>>>\n\
	[4] Other privileges\t\t\t\t>>>\n\
	[5] Create a family\t\t\t\t{42aaff}400 rub\n\
	[6] Any business\t\t\t\t{42aaff}120 rub\n\
	[7] Any home\t\t\t\t\t{42aaff}1200 rub\n\
	[8] Any car\t\t\t\t{42aaff}150 rub\n\
	[9] Any skin\t\t\t\t\t{42aaff}80 rub\n\
	[10] Saving weapons after leaving\t\t{42aaff}50 rub\n\
	[11] Rank 9 in any organization\t\t{42aaff}120 rub\n\
	[12] Unlocking your account\t\t{42aaff}500 rub\n\
	[13] Replenish the gang safe of your organization\t{42aaff}30 rub\n\
	[14] Weapon behind the back (/armbody)\t\t{f76140}New!\n\
	[15] Private commands\t\t{42aaff}30 rub\n\
	[16] Costumes\t\t\t{f76140}New!\n\
	[17] Unique accessories\t\t\t{42aaff}30 rub", "Next", "Cancle");
/*	{f76140}� BIG DISCOUNTS ON:\n\
	{FFFFFF}� Server OWNER [Full access] {00ff00}(CLICK) \t\t{42aaff}1299 rub\n\
	{FFFFFF}� Server FOUNDER {00ff00}(Popular) \t\t{42aaff}599 rub", "Next", "Cancle");*/
	return true;
}
forward EndRoule(tableid);
public EndRoule(tableid)
{
	new rand = random(37), str[8], message[64], line[14];
	valstr(line, rand);
	format(str, sizeof(str), "%s%d", GetNumberColor(rand), rand);
	foreach (new i : Player)
	{
		if(RouleTable[i] != tableid) continue;
		{
			GameTextForPlayer(i, str, 3000, 6);
			if(ChooseBet[i] != 1) continue;
			{
				ChooseBet[i] = 0;
				DestroyObject(RouleChip[i]);
				switch(Casino[i])
				{
				case 1:
					{
						RouleChip[i] = CreateDynamicObject(1900, RouleTables[tableid][0]+RouleVertikalCoords[RouleVertikal[i]][0], RouleTables[tableid][1]+RouleHorizontCoords[RouleHorizont[i]][0], 992.335, 0.0, 0.0, 0.0);
					}
				case 2:
					{
						RouleChip[i] = CreateDynamicObject(1900, RouleTables[tableid][0]-RouleHorizontCoords[RouleHorizont[i]][0], RouleTables[tableid][1]+RouleVertikalCoords[RouleVertikal[i]][0], 1006.06, 0.0, 0.0, 0.0);
					}
				}
				if(strfind(RouleNumber[i], "1-12", false) != -1)
				{
					switch(rand)
					{
					case 1..12:
						{
							GiveMoney(i, RouleBet[i]*3);
							format(message, sizeof(message), "%d rolled. Congratulations! You won %d Money", rand, RouleBet[i]*3);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "2-12", false) != -1)
				{
					switch(rand)
					{
					case 13..24:
						{
							GiveMoney(i, RouleBet[i]*3);
							format(message, sizeof(message), "%d rolled. Congratulations! You won %d Money", rand, RouleBet[i]*3);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "3-12", false) != -1)
				{
					switch(rand)
					{
					case 25..36:
						{
							GiveMoney(i, RouleBet[i]*3);
							format(message, sizeof(message), "%d rolled. Congratulations! You won %d Money", rand, RouleBet[i]*3);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "1-18", false) != -1)
				{
					switch(rand)
					{
					case 1..18:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "19-36", false) != -1)
				{
					switch(rand)
					{
					case 19..36:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "Red", false) != -1)
				{
					switch(rand)
					{
					case 1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "Black", false) != -1)
				{
					switch(rand)
					{
					case 2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "Even", false) != -1)
				{
					switch(rand)
					{
					case 2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "Odd", false) != -1)
				{
					switch(rand)
					{
					case 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35:
						{
							GiveMoney(i, RouleBet[i]*2);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*2);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strfind(RouleNumber[i], "3-1", false) != -1)
				{
					switch(rand)
					{
					case 1,4,7,10,13,16,19,22,25,28,31,34:
						{
							if(RouleVertikal[i] == 2)
							{
								GiveMoney(i, RouleBet[i]*3);
								format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*3);
								SendClientMessage(i, COLOR_ORANGE, message);
								continue;
							}
						}
					case 2,5,8,11,14,17,20,23,26,29,32,35:
						{
							if(RouleVertikal[i] == 4)
							{
								GiveMoney(i, RouleBet[i]*3);
								format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*3);
								SendClientMessage(i, COLOR_ORANGE, message);
								continue;
							}
						}
					case 3,6,9,12,15,18,21,24,27,30,33,36:
						{
							if(RouleVertikal[i] == 6)
							{
								GiveMoney(i, RouleBet[i]*3);
								format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*3);
								SendClientMessage(i, COLOR_ORANGE, message);
								continue;
							}
						}
					}
				}
				else if(strlen(RouleNumber[i]) >= 3 && strlen(RouleNumber[i]) <= 6)
				{
					new d = strfind(RouleNumber[i], line, false);
					if(d != -1)
					{
						strmid(RouleNumber[i], RouleNumber[i], d-1, d+2, strlen(RouleNumber[i]));
						for(new a = 0; a < 2; a++)
						{
							d = strfind(RouleNumber[i], ",", false);
							if(d != -1)
							{
								strdel(RouleNumber[i], d, d+1);
							}
						}
						if(strlen(RouleNumber[i]) == strlen(line))
						{
							GiveMoney(i, RouleBet[i]*9);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*9);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else if(strlen(RouleNumber[i]) >= 7 && strlen(RouleNumber[i]) <= 12)
				{
					new d = strfind(RouleNumber[i], line, false);
					if(d != -1)
					{
						strmid(RouleNumber[i], RouleNumber[i], d-1, d+2, strlen(RouleNumber[i]));
						for(new a = 0; a < 2; a++)
						{
							d = strfind(RouleNumber[i], ",", false);
							if(d != -1)
							{
								strdel(RouleNumber[i], d, d+1);
							}
						}
						if(strlen(RouleNumber[i]) == strlen(line))
						{
							GiveMoney(i, RouleBet[i]*5);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*5);
							SendClientMessage(i, COLOR_ORANGE, message);
							continue;
						}
					}
				}
				else
				{
					if(strcmp(RouleNumber[i], line, false, strlen(RouleNumber[i])) == 0)
					{
						if(rand != 0)
						{
							GiveMoney(i, RouleBet[i]*10);
							format(message, sizeof(message), "Congratulations! You won %d Money", rand, RouleBet[i]*10);
							SendClientMessage(i, COLOR_ORANGE, message);
						}
						else
						{
							GiveMoney(i, RouleBet[i]*11);
							format(message, sizeof(message), "%d rolled. Congratulations! You won %d Money", rand, RouleBet[i]*11);
						}
						SendClientMessage(i, COLOR_ORANGE, message);
						continue;
					}
				}
				format(message, sizeof(message), "%d rolled. Unfortunately, your bet is lost", rand);
				SendClientMessage(i, COLOR_RED, message);
			}
			if(GetPlayerNearestRouleTable(i) == -1)
			{
				OnPlayerExitRouleTable(i, tableid);
			}
		}
	}
	StartRoule[tableid] = 0;
	for(new i = 0; i < 5; i++)
	{
		TextDrawSetString(RouleNumberShow[tableid][i], "-------");
		TextDrawSetString(RouleBetShow[tableid][i], "-------");
	}
	return true;
}

forward BlackJackTimer(tableid);
public BlackJackTimer(tableid)
{
	new gamers, stand;
	foreach (new i : Player)
	{
		if(BlackJackTable[i] != tableid) continue;
		{
	    	if(ChooseBet[i] != 1) continue;
		    {
		    	new time[5];
		        gamers++;
		        if(BlackJackTime[i] == 0)
		        {
             		stand++;
				}
				else
				{
					BlackJackTime[i]--;
		            valstr(time, BlackJackTime[i]);
		            GameTextForPlayer(i, time, 1000, 6);
				}
			}
		}
	}
	if(gamers == stand)
	{
	    new rand[2], TotalPoints, points[5];
		rand[0] = random(13), rand[1] = random(13);
		TotalPoints = GetBlackJackPoints(rand[0]) + GetBlackJackPoints(rand[1]);
		TextDrawSetString(BlackJackCardShow[tableid][10], Cards[rand[0]]);
		TextDrawSetString(BlackJackCardShow[tableid][11], Cards[rand[1]]);
		valstr(points, TotalPoints);
		TextDrawSetString(BlackJackPointsShow[tableid][2], points);
		if(TotalPoints < 17)
		{
		    for(new i = 12; i < 15; i++)
		    {
		        new CroupierPoints = random(13);
		        TotalPoints += GetBlackJackPoints(CroupierPoints);
		        TextDrawSetString(BlackJackCardShow[tableid][i], Cards[CroupierPoints][0]);
		        valstr(points, TotalPoints);
				TextDrawSetString(BlackJackPointsShow[tableid][2], points);
		        if(TotalPoints >= 17) break;
		    }
		}
	    foreach (new i : Player)
	    {
		    if(BlackJackTable[i] != tableid) continue;
			{
			    if(ChooseBet[i] != 1) continue;
			    {
			        if(BlackJackPoints[i] > TotalPoints || TotalPoints > 21)
					{
					    new str[64];
						format(str, sizeof(str), "Congratulations! You beat the dealer and win %d$", BlackJackBet[i]*2);
						SendClientMessage(i, COLOR_ORANGE, str);
						GiveMoney(i, BlackJackBet[i]*2);
					}
					else if(BlackJackPoints[i] < TotalPoints)
					{
					    SendClientMessage(i, COLOR_RED, "Unfortunately you lost");
					}
					else
					{
					    SendClientMessage(i, COLOR_ORANGE, "Draw. You didn't win anything, but you didn't lose anything either.");
						GiveMoney(i, BlackJackBet[i]);
					}
					ResetPlayerBlackJackGame(i);
				}
				if(GetPlayerNearestBlackJackTable(i) == -1)
				{
				    OnPlayerExitBlackJackTable(i, tableid);
				}
			}
		}
		KillTimer(TimerBlackJack[tableid]);
		SetTimerEx("EndBlackJackGame", 5000, false, "d", tableid);
	}
	else if(gamers == 0)
	{
	    KillTimer(TimerBlackJack[tableid]);
		SetTimerEx("EndBlackJackGame", 5000, false, "d", tableid);
	}
}

forward EndBlackJackGame(tableid);
public EndBlackJackGame(tableid)
{
	StartBlackJack[tableid] = 0;
	for(new i = 0; i < 15; i++)
	{
     	switch(i)
	    {
	        case 0,1: TextDrawSetString(BlackJackCardShow[tableid][i], "ld_card:cdback");
	        case 5,6: TextDrawSetString(BlackJackCardShow[tableid][i], "ld_card:cdback");
	        case 10,11: TextDrawSetString(BlackJackCardShow[tableid][i], "ld_card:cdback");
			default: TextDrawSetString(BlackJackCardShow[tableid][i], "_");
	    }
	}
	TextDrawSetString(BlackJackBetShow[tableid][0], "_");
	TextDrawSetString(BlackJackBetShow[tableid][1], "_");
	TextDrawSetString(BlackJackPointsShow[tableid][0], "_");
	TextDrawSetString(BlackJackPointsShow[tableid][1], "_");
	TextDrawSetString(BlackJackPointsShow[tableid][2], "_");
}

forward DiceTimer(tableid);
public DiceTimer(tableid)
{
	new time[2], players, throws;
	DiceTableInfo[tableid][dTime]--;
	valstr(time, DiceTableInfo[tableid][dTime]);
	foreach (new i : Player)
	{
		if(DiceTable[i] == tableid && ChooseBet[i] == 1)
	    {
			players++;
			GameTextForPlayer(i, time, 1000, 6);
		}
		if(Glasses[i] != 0)
		{
			throws++;
		}
	}
	if(players == 0)
	{
	    KillTimer(TimerDice[tableid]);
	    DiceTableInfo[tableid][dTime] = 20;
		StartDice[tableid] = 0;
        DiceTableInfo[tableid][dBet] = 0;
		DiceTableInfo[tableid][dBank] = 0;
		TextDrawSetString(DiceBetShow[tableid], "0$");
		TextDrawSetString(DiceBankShow[tableid], "0$");
		return true;
	}
	if(players == throws && DiceTableInfo[tableid][dTime] > 4)
	{
	    DiceTableInfo[tableid][dTime] = 4;
	}
	if(DiceTableInfo[tableid][dTime] <= 1)
	{
		new WinNumber, winner, str[48], repeat;
		foreach (new i : Player)
		{
			if(DiceTable[i] == tableid && ChooseBet[i] == 1)
		    {
		        if(Glasses[i] == 0)
		        {
		            Glasses[i] = 2 + random(10);
					format(str, sizeof(str), "You threw on %i", Glasses[i]);
					SendClientMessage(i, COLOR_ORANGE, str);
				}
				if(Glasses[i] > WinNumber)
				{
				    WinNumber = Glasses[i];
				    winner = i;
				}
			}
		}
        foreach (new i : Player)
		{
			if(DiceTable[i] == tableid && ChooseBet[i] == 1)
		    {
		        if(Glasses[i] == WinNumber)
		        {
		            repeat++;
		            Glasses[i] = 0;
              		TextDrawSetString(BetGamer[tableid][DiceGamer[i]], "[+]");
		        }
		        else
				{
					ChooseBet[i] = 0;
					Glasses[i] = 0;
	     			TextDrawSetString(BetGamer[tableid][DiceGamer[i]], "[...]");
				}
			}
		}
		if(repeat > 1)
		{
		    DiceTableInfo[tableid][dTime] = 20;
			return true;
		}
		format(str, sizeof(str), "Congratulations! Won %s", PlayerInfo[winner][pNames]);
		foreach (new i : Player)
		{
			if(DiceTable[i] != tableid) continue;
			{
	        	ChooseBet[i] = 0;
				Glasses[i] = 0;
				SendClientMessage(i, COLOR_ORANGE, str);
				TextDrawSetString(BetGamer[tableid][DiceGamer[i]], "[...]");
				if(GetPlayerNearestDiceTable(i) == -1)
				{
    				OnPlayerExitDiceTable(i, tableid);
				}
			}
		}
		new money[20];
		GiveMoney(winner, DiceTableInfo[tableid][dBank]);
        DiceTableInfo[tableid][dBank] = 0;
		DiceTableInfo[tableid][dBet] = 0;
		format(money, sizeof(money), "%i$", PlayerInfo[winner][pCash]);
		TextDrawSetString(DiceBetShow[tableid], "0$");
		TextDrawSetString(DiceBankShow[tableid], "0$");
		if(DiceGamer[winner] != -1) TextDrawSetString(DiceMoneyShow[tableid][DiceGamer[winner]], money);
		KillTimer(TimerDice[tableid]);
		StartDice[tableid] = 0;
	}
	return true;
}
stock family_message (family, color, text[] )
{
    foreach(Player,i)
    {
        if ( PlayerInfo[i][pFamily] != family ) continue;
        SendClientMessage ( i, color, text ) ;
    }
    return 1;
}
publics: off_family_members_callback(playerid)
{
    new rows, fields, temp [ MAX_PLAYER_NAME ],ofm_string[ 256 ], full;
    cache_get_data ( rows, fields ) ;
    if(rows != 0)
    {
        for(new i = 0; i < rows ;i++)
        {
            cache_get_field_content ( i, "Name", temp );//Name ��������� �� ���� ������� ����� � ��.
            strcat(ofm_string,temp);
            strcat(ofm_string,"\n");
            full++;
        }
    }
    if(full == 0) return SendClientMessage(playerid, COLOR_ORANGE, "Sorry, no data found.");
    else ShowPlayerDialog ( playerid, 26375 , DIALOG_STYLE_LIST, "{FFEFD5}Family members", ofm_string, "Back","" ) ;
    return 1;
}
publics: Checkban(playerid, name[])
{
    new
		rows,
		fields,
		admin[24],
		data,
		unbandate,
		reason[50]
	;
    cache_get_data(rows, fields);
    if(rows)
	{
	    cache_get_field_content(0, "admin",admin);
	    data = cache_get_field_content_int(0, "date");
	    cache_get_field_content(0, "reason",reason);
	    unbandate = cache_get_field_content_int(0, "unbandate");
	    if(unbandate > gettime())
		{
            new ban_date[6], unban_date[6];
			gmtime(data, ban_date[0], ban_date[1], ban_date[2], ban_date[3], ban_date[4], ban_date[5]);
			gmtime(unbandate, unban_date[0], unban_date[1], unban_date[2], unban_date[3], unban_date[4], unban_date[5]);

	        format(stringer, sizeof(stringer), "{FFFFFF}Account: {FFCC00}%s\n{FFFFFF}Block date: {FFCC00}%02d.%02d.%04d {FFFFFF}in{FFCC00} %02d:%02d:%02d\n{FFFFFF}Adminstrator: {FFCC00}%s\n{FFFFFF}Reason: {FFCC00}%s\n\n{FFFFFF}Unlocked date: {FFCC00}%02d.%02d.%04d {FFFFFF}in{FFCC00} %02d:%02d:%02d",
			name, ban_date[2], ban_date[1], ban_date[0], ban_date[3]+3, ban_date[4], ban_date[5], admin, reason,
			unban_date[2], unban_date[1], unban_date[0], unban_date[3]+3, unban_date[4], unban_date[5]);

	        ShowPlayerDialog(playerid,91,0,"{FFCC00}account is banned:",stringer,"Close","");
	        KickEx(playerid);
	        return true;
    	}
	    else {
	        format(stringer, sizeof(stringer), "DELETE FROM `"TABLE_BANLOG"` WHERE `name` = '%s'",name);
	        mysql_function_query(connects, stringer, false, "","");
   	 	}
  	}
  	GoServer(playerid);
	return true;
}
publics: AdminCheckBan(playerid, name[], type)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
    	new unbandate_IP = cache_get_field_content_int(0, "unbandate", connects),
			bandate_IP = cache_get_field_content_int(0, "date", connects),
			reason[50], admin[24];
		cache_get_field_content(0, "reason", reason, connects, 50);
		cache_get_field_content(0, "admin", admin, connects, 24);

		new ban_date[6], unban_date[6];
		gmtime(bandate_IP, ban_date[0], ban_date[1], ban_date[2], ban_date[3], ban_date[4], ban_date[5]);
		gmtime(unbandate_IP, unban_date[0], unban_date[1], unban_date[2], unban_date[3], unban_date[4], unban_date[5]);

		format(stringer, sizeof(stringer), "{FF6347}%s: %s\n���� ����������: %02d.%02d.%04d � %02d:%02d:%02d\nAdminstrator: %s\n�������: %s\n\n���� �������������: %02d.%02d.%04d � %02d:%02d:%02d", (!type) ? ("�������") : ("IP �����"),
		name, ban_date[2], ban_date[1], ban_date[0], ban_date[3]+3, ban_date[4], ban_date[5], admin, reason,
		unban_date[2], unban_date[1], unban_date[0], unban_date[3]+3, unban_date[4], unban_date[5]);

	    ShowPlayerDialog(playerid,91,0,"{FF6347}Information � ����������:", stringer, "Close", "");
	}
	else SendMes(playerid, -1, "��������� %s �� ������������.", (!type) ? ("�������") : ("IP �����"));
	return 1;
}
stock Sellcars(playerid,car)
{
	switch(car)
	{
	case 400:GiveMoney(playerid, 65000);
	case 404:GiveMoney(playerid, 50000);
	case 436:GiveMoney(playerid, 50000);
	case 439:GiveMoney(playerid, 75000);
	case 458:GiveMoney(playerid, 60000);
	case 466:GiveMoney(playerid, 55000);
	case 475:GiveMoney(playerid, 95000);
	case 478:GiveMoney(playerid, 50000);
	case 479:GiveMoney(playerid, 55000);
	case 492:GiveMoney(playerid, 70000);
	case 516:GiveMoney(playerid, 70000);
	case 517:GiveMoney(playerid, 75000);
	case 518:GiveMoney(playerid, 85000);
	case 526:GiveMoney(playerid, 55000);
	case 527:GiveMoney(playerid, 50000);
	case 542:GiveMoney(playerid, 60000);
	case 543:GiveMoney(playerid, 50000);
	case 546:GiveMoney(playerid, 70000);
	case 547:GiveMoney(playerid, 55000);
	case 549:GiveMoney(playerid, 60000);
	case 567:GiveMoney(playerid, 100000);
	case 419:GiveMoney(playerid, 400000);
	case 421:GiveMoney(playerid, 415000);
	case 445:GiveMoney(playerid, 405000);
	case 489:GiveMoney(playerid, 440000);
	case 491:GiveMoney(playerid, 400000);
	case 533:GiveMoney(playerid, 410000);
	case 534:GiveMoney(playerid, 360000);
	case 554:GiveMoney(playerid, 420000);
	case 555:GiveMoney(playerid, 500000);
	case 561:GiveMoney(playerid, 405000);
	case 579:GiveMoney(playerid, 465000);
	case 580:GiveMoney(playerid, 500000);
	case 589:GiveMoney(playerid, 350000);
	case 603:GiveMoney(playerid, 400000);
	case 418:GiveMoney(playerid, 350000);
	case 461:GiveMoney(playerid, 500000);
	case 581:GiveMoney(playerid, 500000);
	case 586:GiveMoney(playerid, 400000);
	case 401:GiveMoney(playerid, 170000);
	case 405:GiveMoney(playerid, 200000);
	case 412:GiveMoney(playerid, 175000);
	case 422:GiveMoney(playerid, 155000);
	case 426:GiveMoney(playerid, 210000);
	case 467:GiveMoney(playerid, 185000);
	case 474:GiveMoney(playerid, 185000);
	case 496:GiveMoney(playerid, 240000);
	case 507:GiveMoney(playerid, 225000);
	case 529:GiveMoney(playerid, 220000);
	case 536:GiveMoney(playerid, 200000);
	case 540:GiveMoney(playerid, 165000);
	case 550:GiveMoney(playerid, 240000);
	case 551:GiveMoney(playerid, 240000);
	case 566:GiveMoney(playerid, 175000);
	case 575:GiveMoney(playerid, 230000);
	case 576:GiveMoney(playerid, 175000);
	case 585:GiveMoney(playerid, 175000);
	case 600:GiveMoney(playerid, 210000);
	case 402:GiveMoney(playerid, 1500000);
	case 411:GiveMoney(playerid, 1500000);
	case 415:GiveMoney(playerid, 1500000);
	case 429:GiveMoney(playerid, 1500000);
	case 451:GiveMoney(playerid, 2000000);
	case 506:GiveMoney(playerid, 1500000);
	case 541:GiveMoney(playerid, 2000000);
	case 522:GiveMoney(playerid, 1500000);
	case 434:GiveMoney(playerid, 1600000);
	case 477:GiveMoney(playerid, 950000);
	case 480:GiveMoney(playerid, 1000000);
	case 535:GiveMoney(playerid, 850000);
	case 545:GiveMoney(playerid, 700000);
	case 558:GiveMoney(playerid, 850000);
	case 559:GiveMoney(playerid, 900000);
	case 560:GiveMoney(playerid, 895000);
	case 562:GiveMoney(playerid, 900000);
	case 565:GiveMoney(playerid, 900000);
	case 587:GiveMoney(playerid, 900000);
	case 602:GiveMoney(playerid, 800000);
	case 521:GiveMoney(playerid, 800000);
	case 463:GiveMoney(playerid, 800000);
	case 468:GiveMoney(playerid, 700000);
	}
	return 1;
}
stock Weaponpb(playerid)
{
	new weapon = random(4);
	switch(weapon)
	{
	case 0: return GiveWeapon(playerid, 24, 100), GiveWeapon(playerid, 33, 50), GiveWeapon(playerid, 31, 500);
	case 1: return GiveWeapon(playerid, 23, 100), GiveWeapon(playerid, 34, 50), GiveWeapon(playerid, 30, 500);
	case 2: return GiveWeapon(playerid, 25, 100), GiveWeapon(playerid, 24, 50), GiveWeapon(playerid, 16, 1);
	case 3: return GiveWeapon(playerid, 29, 500), GiveWeapon(playerid, 23, 50), GiveWeapon(playerid, 17, 1);
	}
	return 1;
}
stock CheckTheftCar(playerid)
{
	if(TheftCarID[playerid] != 0)
	{
	    TheftCarID[playerid] = 0;
	    TheftKey[playerid] = 0;
	    TheftTime[playerid] = 0;
	    TheftCount[playerid] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
    }
    return true;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    if(PlayerInfo[playerid][pAlcoInvenxua] == 12)
	{
		if(!IsValidDynamicObject(objectid)) return true;
		MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
	}
	return 0;
}
stock DelAdmin(playerid, type = INVALID_PLAYER_ID)
{
	if(type == 0) SendClientMessage(playerid, COLOR_LIGHTRED, "Your right of administrator has been canceled. Cause: Unlocked base");
    else if(type == 1) SendClientMessage(playerid, COLOR_LIGHTRED, "Your right of administrator has been canceled. Cause: Selling adware");
	PlayerInfo[playerid][pAlcoInvenxua] = 0;
	PlayerInfo[playerid][pDostup] = 0;
	PlayerInfo[playerid][pVigs] = 0;
	dostup[playerid] = 0;
	Iter_Remove(Admin, playerid);
	ClearKillFeed(playerid);
	format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '0', `pDostup` = '0', `vigs` = '0' WHERE `pID` = '%d'", PlayerInfo[playerid][pID]);
    mysql_function_query(connects, mysql_query_, false, "", "");
    return true;
}
stock showSettings(playerid) {
	new spawn[25],walk[25],talk[25];
	switch(PlayerInfo[playerid][Settings][2]) {
	    case 0: spawn = "{a38b52}Standard spawn";
	    case 1: spawn = "{a38b52}Organization";
	}
	switch(PlayerInfo[playerid][Settings][3]) {
		case 0: walk = "{a38b52}Standard";
	    default: format(walk,sizeof(walk),"{a38b52}walk %d",PlayerInfo[playerid][Settings][3]);
	}
	switch(PlayerInfo[playerid][Settings][4]) {
		case 0: talk = "{a38b52}Standard";
	    default: format(talk,sizeof(talk),"{a38b52}Style %d",PlayerInfo[playerid][Settings][4]);
	}
	format(stringer,sizeof(stringer),"\
	{328fed}[1] {ffffff}Show adminstrator actions\t %s\n\
	{328fed}[2] {ffffff}Chat organization\t %s\n\
	{328fed}[3] {ffffff}Nickname over player\t %s\n\
	{328fed}[4] {ffffff}Character spawn\t %s\n\
	{328fed}[5] {ffffff}Walking style\t %s\n\
	{328fed}[6] {ffffff}Conversation style\t %s\n\
	{328fed}[7] {ffffff}Set conversation\n\
	{328fed}[8] {ffffff}Clear chat",
	(PlayerInfo[playerid][Settings][1] < 1) ? ("{a38b52}Yes") : ("{AA3333}No"),
	(PlayerInfo[playerid][Settings][5] < 1) ? ("{a38b52}Yes") : ("{AA3333}No"),
	(PlayerInfo[playerid][Settings][0] <= 0) ? ("{a38b52}Yes") : ("{AA3333}No"),
	spawn, walk, talk);
	ShowPlayerDialog(playerid,9973,2,"{FFD700}Settings",stringer,"Further","Back");
    return 1;
}
public OnPlayerStreamIn(playerid, forplayerid) {
	if(PlayerInfo[playerid][Settings][0] == 1) ShowPlayerNameTagForPlayer(playerid,forplayerid,0);
	return 1;
}
publics: AnimationWalk(playerid) {
    new keyss, updown, leftright;
	GetPlayerKeys(playerid,keyss,updown,leftright);
	if(PlayerInfo[playerid][Settings][3] != 0) {
	    if ((keyss & KEY_WALK && updown & KEY_UP) || (keyss & KEY_WALK && updown & KEY_DOWN) || (keyss & KEY_WALK && leftright & KEY_LEFT) || (keyss & KEY_WALK && leftright & KEY_RIGHT)) {
            KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
            if(GetPlayerAnimationIndex(playerid) != 1161 && GetPlayerAnimationIndex(playerid) != 1167 && GetPlayerAnimationIndex(playerid) != 1163 && AntiSbiv[playerid] < gettime())
            {
			    FIXES_ApplyAnimation(playerid,"PED",Anims[PlayerInfo[playerid][Settings][3] - 1],4.1,1,1,1,1,1);
			    SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk",200,0,"d",playerid));
			}
        }
        else {
            if(GetPlayerAnimationIndex(playerid) != 1161 && GetPlayerAnimationIndex(playerid) != 1167 && GetPlayerAnimationIndex(playerid) != 1163 && AntiSbiv[playerid] < gettime()) FIXES_ApplyAnimation(playerid,"PED",Anims[PlayerInfo[playerid][Settings][3] - 1],4.0,0,0,0,0,1);
            KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
        }
	}
	return 1;
}
stock setVehicleHealth(vehicleid,Float:health) {
	VEHICLE[vehicleid][vHealth] = health;
	SetVehicleHealth(vehicleid,health);
}
stock ToggleLock(playerid,vehicleid)
{
	if(VEHICLE[vehicleid][vLock])
	{
	    UnLockCar(vehicleid);
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		SetPlayerChatBubble(playerid,"opened the car",COLOR_PURPLE,30.0,10000);
		GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
		return 0;
	}
	else
	{
	    LockCar(vehicleid);
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
		return 1;
	}
}
stock UnLockCar(carid)
{
	foreach(Player,i) if(IsVehicleStreamedIn(carid,i)) SetVehicleParamsForPlayer(carid,i,0,0);
	VEHICLE[carid][vLock] = 0;
	return true;
}
stock LockCar(carid)
{
	foreach(Player,i) if(IsVehicleStreamedIn(carid,i)) SetVehicleParamsForPlayer(carid,i,0,1);
	VEHICLE[carid][vLock] = 1;
	return true;
}
public OnVehicleDeath(vehicleid, killerid)
{
	if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	if(GetPVarInt(killerid, "race_check") != 0 && !GetPVarInt(killerid, "AntiDeathRace")) race_vehicledeath(killerid);
	new get_rent = GetArendCarID(vehicleid);
	if(get_rent != -1)
	{
	    new playerid = ArendInfo[get_rent][aPlayerID];
	    ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	    if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "ArendKey") == get_rent)
	    {
	        SendClientMessage(playerid, 0xFFFFFFFF, "The vehicle you rented was destroyed. Lease ended");
	        SetPVarInt(playerid, "ArendKey", -1);
	    }
	}
	return 1;
}
stock GetArendCarID( vehicleid, &arend_id = INVALID_PLAYER_ID )
{
    arend_id = INVALID_PLAYER_ID;
	for( new i = 0; i < sizeof(ArendInfo); i ++ )
	{
	    if( vehicleid == ArendInfo[i][aID] )
		{
      		if(IsPlayerConnected(ArendInfo[i][aPlayerID]))
      		{
            	arend_id = ArendInfo[i][aPlayerID];
			}
			return i;
		}
 	}
	return -1;
}

stock GetVehicleArendID( vehicleid )
{
    new
		playerid = INVALID_PLAYER_ID,
		get_rent = GetArendCarID(vehicleid, playerid);
    if(get_rent != (-1))
	{
	    if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid))
	    {
	        ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	        return INVALID_PLAYER_ID;
	    }
	    return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}
race_disconnect(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0}--;
		PlayerScore{playerid} = 0;
 		for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicleEx(GetPVarInt(playerid, "race_check"));
		format(stringer1,128,"[RACE]: %s(%d) left the game. Participate: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, stringer1);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayerWinners{0} = 0;
	        PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3, "The race is over, all participants have left the game.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
		        PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
	}
}
race_vehicledeath(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0} --;
		PlayerScore{playerid} = 0;
	    for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicleEx(GetPVarInt(playerid, "race_check"));
		DeletePVar(playerid, "race_check");
		format(stringer1,128,"[RACE]: %s(%d) crashed his vehicle. Participants: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, stringer1);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayerWinners{0} = 0;
			PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3, "All the participants in the race have crashed their cars, the racing events are over.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
          		PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
		SetPPos(playerid, -2169.1880,643.9022,1052.3750);
		SetPlayerFacingAngle(playerid, 180.8674);
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 43);
	}
}
race_death(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0} --;
  		PlayerScore{playerid} = 0;
	    for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicleEx(GetPVarInt(playerid, "race_check"));
		DeletePVar(playerid, "race_check");
		format(stringer1,128,"[RACE]: %s(%d) crashed. Participants: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, stringer1);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayerWinners{0} = 0;
			PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3, "All race participants were killed, racing events are over.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
          		PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
	}
}
race_exitvehicle(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
	    PlayersInRace{0} --;
	    PlayerScore{playerid} = 0;
		for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicleEx(GetPVarInt(playerid, "race_check"));
		DeletePVar(playerid, "race_check");
		format(stringer1,128,"[RACE]: %s(%d) left the vehicle. Participants: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, stringer1);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayerWinners{0} = 0;
	        PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW3, "All participants have left their vehicles, the racing events are over.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
 				PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
  		SetPPos(playerid, -2169.1880,643.9022,1052.3750);
		SetPlayerFacingAngle(playerid, 180.8674);
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 43);
	}
}
stock StartedRaces()
{
	race_str[0] = 0;
	RaceStarting[2] = 1;
    foreach(new i: RacersList) {
        PlayerScore{i} = 0;
        format(stringer, 20, "Time: %02i:%02i",(raceTime/60),raceTime - (60 * (floatround(raceTime)/60)));
	    PlayerTextDrawSetString(i,Race[8][i], stringer);
    	if (GetTopOne() == -1) PlayerTextDrawSetString(i,Race[2][i], "[1] ~w~None");
		else format(stringer, 33,"[1] ~w~%s", PlayerInfo[GetTopOne()][pNames]), PlayerTextDrawSetString(i,Race[2][i], stringer);
   		if (GetTopTwo() == -1) PlayerTextDrawSetString(i,Race[3][i], "[2] ~w~None");
		else format(stringer, 33,"[2] ~w~%s", PlayerInfo[GetTopTwo()][pNames]), PlayerTextDrawSetString(i,Race[3][i], stringer);
		if (GetTopThree() == -1) PlayerTextDrawSetString(i,Race[4][i], "[3] ~w~None");
		else format(stringer, 33,"[3] ~w~%s", PlayerInfo[GetTopThree()][pNames]), PlayerTextDrawSetString(i,Race[4][i], stringer);
		PlayerTextDrawSetString(i,Race[7][i], PlayerInfo[i][pNames]);
		format(stringer, 50, "Point: ~w~%d/52", PlayerScore{i});
		PlayerTextDrawSetString(i,Race[6][i], stringer);
		format(stringer, 30, "Racers: ~w~%d/40", PlayersInRace{0});
		PlayerTextDrawSetString(i,Race[5][i], stringer);
		for ( new s = 0 ; s != 10 ; s ++ ) PlayerTextDrawShow(i, Race[s][i]);
		GameTextForPlayer(i, "~p~ START!", 3000, 4);
		TogglePlayerControllable(i, true);
		SetPlayerRaceCheckpoint(i, 0, los_santos_race[typeRace][0][0], los_santos_race[typeRace][0][1], los_santos_race[typeRace][0][2], los_santos_race[typeRace][0+1][0], los_santos_race[typeRace][0+1][1], los_santos_race[typeRace][0+1][2], 10.0);
	}
	return 1;
}
publics: SecondStartedRaces()
{
    RaceStarting[1] --;
	if(RaceStarting[1] <= 1) return StartedRaces(), RaceStarting[1] = 0;
	foreach(new i: RacersList) {
        if(RaceStarting[1] < 10) {
		    format(stringer, 10, "~g~%d", RaceStarting[1]);
		    GameTextForPlayer(i, stringer, 1000, 4);
		}
		if(RaceStarting[1] == 10) {
		    DisablePlayerRaceCheckpoint(i);
		    TogglePlayerControllable(i, false);
			new position = PlayerPosition{i};
			SetPPos(i, spawn_car[typeRace][position][0], spawn_car[typeRace][position][1], spawn_car[typeRace][position][2]);
			SetPVarInt(i,"race_check",_:CreateVehicleEx(GetPVarInt(i,"rVehicle"),spawn_car[typeRace][position][0],spawn_car[typeRace][position][1],spawn_car[typeRace][position][2],spawn_car[typeRace][position][3],GetPVarInt(i,"rColor"),0,7600,0));
			zavodis[i] = 1;
			VEHICLE[GetPVarInt(i,"race_check")][vHealth] = 1000.0;
			Fuell[GetPVarInt(i,"race_check")] = 100;
			LinkVehicleToInterior(GetPVarInt(i,"race_check"),0);
			SetVehicleVirtualWorld(GetPVarInt(i,"race_check"),1);
			SetPlayerInteriorEx(i,0);
			SetPlayerVirtualWorldEx(i,1);
			SetVehicleParamsEx(GetPVarInt(i,"race_check"),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doorss,bonnet,boot,objective);
			PutPlayerInVeh(i, GetPVarInt(i,"race_check"), 0);
			DeletePVar(i,"rColor");
			DeletePVar(i,"rVehicle");
		}
	}
	SetTimer("SecondStartedRaces", 1100, false);
	return 1;
}
stock GetTopOne()
{
	new temp = 0, ids = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp)
		{
			temp = PlayerScore {i};
			ids = i;
		}
	}
	return ids;
}
stock GetTopTwo()
{
	new temp = 0, ids = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp && (i != GetTopOne()))
		{
			temp = PlayerScore {i};
			ids = i;
		}
	}
	return ids;
}
stock GetTopThree()
{
	new temp = 0, ids = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp && (i != GetTopOne()) && (i != GetTopTwo()))
		{
			temp = PlayerScore {i};
			ids = i;
		}
	}
	return ids;
}
stock NextSelfie(playerid)
{
	if(!GetPVarInt(playerid, "Selfie")) return 1;
	GetPlayerPos(playerid,posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]);
	if(GetPVarInt(playerid, "selfie_knopka") == 1)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(90.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(90.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 2);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 0.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 2)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(0.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(0.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 3);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 3)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(270.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(270.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 4);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 180.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 4)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(180.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(180.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 1);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 270.0);
	}
	SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
	FIXES_ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}
stock GetVehicleKey(playerid, vehicleid)
{
	return ((PlayerInfo[playerid][pMember] == 15 &&	vehicleid >= grovecar[0] && vehicleid <= grovecar[1])	|| (PlayerInfo[playerid][pMember] == 12 &&
	vehicleid >= ballascar[0] && vehicleid <= ballascar[1])	|| (PlayerInfo[playerid][pMember] == 13 &&	vehicleid >= vagoscar[0] && vehicleid <= vagoscar[1])	|| (PlayerInfo[playerid][pMember] == 17 &&	vehicleid >= coronoscar[0] && vehicleid <= coronoscar[1])
	|| (PlayerInfo[playerid][pMember] == 18 &&	vehicleid >= rifacar[0] && vehicleid <= rifacar[1])	|| (PlayerInfo[playerid][pMember] == 5 &&	vehicleid >= lcncar[0] && vehicleid <= lcncar[1])	|| (PlayerInfo[playerid][pMember] == 6 &&
	vehicleid >= yakcar[0] && vehicleid <= yakcar[1])	|| (PlayerInfo[playerid][pMember] == 14 &&	vehicleid >= ruscar[0] && vehicleid <= ruscar[1])	|| (PlayerInfo[playerid][pMember] == 16 &&	vehicleid >= lsnewscar[0] && vehicleid <= lsnewscar[1])
	|| (PlayerInfo[playerid][pMember] == 11 &&	vehicleid >= liccar[0] && vehicleid <= liccar[1])	|| (PlayerInfo[playerid][pMember] == 1 &&	vehicleid >= sapdcar[0] && vehicleid <= sapdcar[1])	|| (PlayerInfo[playerid][pMember] == 2 &&
	vehicleid >= fbicar[0] && vehicleid <= fbicar[1])	|| (PlayerInfo[playerid][pMember] == 3 &&	vehicleid >= armycar[0] && vehicleid <= armycar[1])	|| (PlayerInfo[playerid][pMember] == 7 &&	vehicleid >= govcar[0] && vehicleid <= govcar[1])	|| (PlayerInfo[playerid][pMember] == 19 &&	vehicleid >= armcar[0] && vehicleid <= armcar[1])	|| (PlayerInfo[playerid][pMember] == 19 &&	vehicleid >= matscar[0] && vehicleid <= matscar[1])
	|| (PlayerInfo[playerid][pJob] == 2 &&	vehicleid >= mehanik[0] && vehicleid <= mehanik[1])	|| (PlayerInfo[playerid][pJob] == 4 &&	vehicleid >= taxicar[0] && vehicleid <= taxicar[1])	|| (PlayerInfo[playerid][pJob] == 5 &&
	vehicleid >= comptruck[0] && vehicleid <= comptruck[1])	|| (PlayerInfo[playerid][pJob] == 5 &&	vehicleid >= benzovoz[0] && vehicleid <= benzovoz[1])
	|| (PlayerInfo[playerid][pMember] == 27 &&	vehicleid >= cardrakon[0] && vehicleid <= cardrakon[1])	|| (PlayerInfo[playerid][pMember] == 25 &&	vehicleid >= swatcar[0] && vehicleid <= swatcar[1])	|| (PlayerInfo[playerid][pMember] == 26 &&
	vehicleid >= ministrcar[0] && vehicleid <= ministrcar[1])	|| (PlayerInfo[playerid][pMember] == 21 &&	vehicleid >= lvpdcar[0] && vehicleid <= lvpdcar[1])	|| (PlayerInfo[playerid][pMember] == 10 &&
	vehicleid >= sfpdcar[0] && vehicleid <= sfpdcar[1])	|| (PlayerInfo[playerid][pMember] == 4 &&	vehicleid >= medicsls[0] && vehicleid <= medicsls[1]) || (PlayerInfo[playerid][pMember] == 28 &&	vehicleid >= carcaligula[0] && vehicleid <= carcaligula[1])
	|| (PlayerInfo[playerid][pMember] == 24 &&	vehicleid >= streetcar[0] && vehicleid <= streetcar[1]) || (PlayerInfo[playerid][pMember] == 23 &&	vehicleid >= hitcar[0] && vehicleid <= hitcar[1])) ? true : false;
}
stock ShowTuneMenu(playerid)
{
    UsingCursor[playerid] = 1;
    SelectTextDraw(playerid, 0xFFFFFFAA);
    TogglePlayerControllable(playerid, 0);
	PlayerTextDrawShow(playerid, TuneTypeShow[playerid]);
	TextDrawShowForPlayer(playerid, TuneBox);
	TextDrawShowForPlayer(playerid, TuneComponent);
	TextDrawShowForPlayer(playerid, TuneCost);
	PlayerTextDrawShow(playerid, TuneComponentShow[playerid]);
	PlayerTextDrawShow(playerid, TuneCostShow[playerid]);
	TextDrawShowForPlayer(playerid, TuneBack);
	TextDrawShowForPlayer(playerid, TuneBuy);
}

stock HideTuneMenu(playerid)
{
    UsingCursor[playerid] = 0;
    CancelSelectTextDraw(playerid);
    TogglePlayerControllable(playerid, 1);
    PlayerTextDrawHide(playerid, TuneTypeShow[playerid]);
    TextDrawHideForPlayer(playerid, TuneBox);
	TextDrawHideForPlayer(playerid, TuneComponent);
	TextDrawHideForPlayer(playerid, TuneCost);
	PlayerTextDrawHide(playerid, TuneComponentShow[playerid]);
	PlayerTextDrawHide(playerid, TuneCostShow[playerid]);
	TextDrawHideForPlayer(playerid, TuneBack);
	TextDrawHideForPlayer(playerid, TuneBuy);
	TextDrawHideForPlayer(playerid, TuneArrow[0]);
	TextDrawHideForPlayer(playerid, TuneArrow[1]);
}

stock ShowTuneDialog(playerid)
{
    TuneColor[playerid][0] = -1;
	TuneColor[playerid][1] = -1;
	ChangeTuneDetail[playerid] = 0;
	TuneID[playerid] = -1;
	SetPlayerCameraPos(playerid, 608.148681, 1.742553, 1001.968444);
	SetPlayerCameraLookAt(playerid, 612.557067, -0.474712, 1001.162170);
	switch(GetVehicleModel(caridhouse[playerid]))
	{
	    case 560: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof\n[13] Spoiler", "Select", "Go out");
		case 562: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof\n[13] Spoiler", "Select", "Go out");
		case 575: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper", "Select", "Go out");
		case 565: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof", "Select", "Cancle");
		case 561: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof\n[13] Spoiler", "Select", "Go out");
		case 559: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof\n[13] Spoiler", "Select", "Go out");
		case 558: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof\n[13] Spoiler", "Select", "Go out");
		case 534: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper", "Select", "Go out");
		case 567: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof", "Select", "Go out");
		case 536: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper\n[12] Roof", "Select", "Go out");
		case 535: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper", "Select", "Go out");
		case 576: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Side skirts\n[10] Front bumper\n[11] Rear bumper", "Select", "Go out");
		case 405,421,477,415,580,527: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe", "Select", "Go out");
		case 439,491,517,518,540,546,549,550,585,603,401,496,547,542,400,410,478,489,500,589,404,422,436,600,420,426,492,516,551,529: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs\n[8] Exhaust pipe\n[9] Ventilation\n[10] Additional lights\n[11] Hood", "Select", "Go out");
		default: ShowPlayerDialog(playerid, D_ATUNE, DIALOG_STYLE_LIST, "Tunning auto", "[1] Engine repair\n[2] Painting\n[3] Vinyl stickers\n[4] Nitro\n[5] Hydraulics\n[6] Stereo\n[7] Discs", "Select", "Cancle");
	}
	return true;
}

stock GetStartTypeTune(playerid, type)
{
	switch(type)
	{
		case 7:
		{
            switch(GetVehicleModel(caridhouse[playerid]))
		    {
		        case 400,405,421,477,491,516,542,547,551,478,517,529,549,550,603,415,540,546,401,585: return 0;
				case 404,410,422,500: return 1;
				case 418: return 2;
		        case 560: return 5;
				case 562: return 7;
				case 575: return 9;
				case 565: return 11;
				case 561: return 13;
				case 559: return 15;
				case 558: return 17;
				case 534: return 19;
				case 567: return 21;
				case 536: return 23;
				case 535: return 25;
				case 576: return 27;
				case 518,580,589,527,600: return 29;
		    }
		}
		case 8:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
		        case 560,439,491,517,518,540,546,549,550,585,603,401,496,547: return 0;
				case 542: return 1;
				case 562: return 2;
				case 575: return 4;
				case 565: return 5;
				case 561: return 7;
				case 559: return 9;
				case 558: return 11;
				case 534: return 13;
				case 567: return 15;
				case 536: return 16;
				case 535: return 17;
				case 576: return 19;
		    }
		}
		case 9:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
		        case 560,400,410,478,489,500,589,404,422,436,600,401,439,518,585: return 0;
				case 540,546,603: return 1;
				case 562: return 2;
				case 575: return 4;
				case 565: return 6;
				case 561: return 8;
				case 559: return 10;
				case 558: return 12;
				case 534: return 14;
				case 567: return 16;
				case 536: return 18;
				case 535: return 20;
				case 576: return 21;
		    }
		}
		case 10:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
			{
		        case 560,401,420,426,492,550,589,600,478,516,540,546: return 0;
				case 489,518,551: return 1;
				case 562: return 2;
				case 529,549: return 3;
				case 575,496: return 4;
				case 565: return 6;
				case 561: return 8;
				case 559: return 10;
				case 558: return 12;
				case 534: return 14;
				case 567: return 16;
				case 536: return 18;
				case 576: return 20;
		    }
		}
		case 11:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
                case 560: return 0;
				case 562: return 2;
				case 565: return 4;
				case 561: return 6;
				case 559: return 8;
				case 558: return 10;
				case 567: return 12;
				case 536: return 14;
		    }
		}
		case 12:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
				case 560: return 0;
				case 562: return 2;
				case 565: return 4;
				case 561: return 6;
				case 559: return 8;
				case 558: return 10;
			}
		}
		default: return 0;
	}
	return false;
}

stock GetEndTypeTune(playerid, type)
{
	switch(type)
	{
	    case 2:
	    {
	        if(GetVehicleModel(caridhouse[playerid]) == 575) return 1;
	        else return 2;
	    }
		case 3: return 2;
	    case 6: return 15;
		case 7:
		{
			switch(GetVehicleModel(caridhouse[playerid]))
			{
				case 415,540,546: return 1;
				case 517,529,549,550,603,489,496: return 2;
				case 400,405,421,477,491,516,542,547,551,418,404,410,422,500: return 3;
				case 478,436,401,585: return 4;
				case 560: return 6;
				case 562: return 8;
				case 575: return 10;
				case 565: return 12;
				case 561: return 14;
				case 559: return 16;
				case 558: return 18;
				case 534: return 20;
				case 567: return 22;
				case 536: return 24;
				case 535: return 26;
				case 576: return 28;
				case 518,580,589,600: return 30;
				case 527: return 31;
			}
		}
		case 8:
		{
			switch(GetVehicleModel(caridhouse[playerid]))
			{
				case 560: return 1;
				case 562: return 3;
				case 575: return 4;
				case 565: return 6;
				case 561: return 8;
				case 559: return 10;
				case 558: return 12;
				case 534: return 14;
				case 567: return 15;
				case 536: return 16;
				case 535: return 18;
				case 576: return 19;
				case 439,491,517,518,540,546,549,550,585,603: return 1;
			}
		}
		case 9:
		{
			switch(GetVehicleModel(caridhouse[playerid]))
			{
				case 560,400,410,478,489,500,589: return 1;
				case 562: return 3;
				case 575: return 5;
				case 565: return 7;
				case 561: return 9;
				case 559: return 11;
				case 558: return 13;
				case 534: return 15;
				case 567: return 17;
				case 536: return 19;
				case 535: return 20;
				case 576: return 22;
			}
		}
		case 10:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
		        case 560,401,420,426,492,550,589,600: return 1;
				case 478: return 2;
				case 562,529,549: return 3;
				case 575: return 5;
				case 565: return 7;
				case 561: return 9;
				case 559: return 11;
				case 558: return 13;
				case 534: return 15;
				case 567: return 17;
				case 536: return 19;
				case 576: return 21;
		    }
		}
		case 11:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
                case 560: return 1;
				case 562: return 3;
				case 565: return 5;
				case 561: return 7;
				case 559: return 9;
				case 558: return 11;
				case 567: return 13;
				case 536: return 15;
		    }
		}
		case 12:
		{
		    switch(GetVehicleModel(caridhouse[playerid]))
		    {
				case 560: return 1;
				case 562: return 3;
				case 565: return 5;
				case 561: return 7;
				case 559: return 9;
				case 558: return 11;
		    }
		}
	}
	return false;
}
stock AddTune(playerid, carnumber)
{
    SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
	if(cTune[playerid][carnumber][0] != -1) ChangeVehiclePaintjob(caridhouse[playerid], cTune[playerid][carnumber][0]);
	for(new i = 1; i <= 14; i++) if(cTune[playerid][carnumber][i] != 0) AddVehicleComponent(caridhouse[playerid], cTune[playerid][carnumber][i]);
	return true;
}
stock DeleteVehicleTune(playerid, carnumber, delveh = 0)
{
    cTune[playerid][carnumber][0] = -1;
	for(new i = 1; i <= 14; i++) cTune[playerid][carnumber][i] = 0;
	if(delveh == 1) {
	    if(carnumber == 0) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pCar` = '462', `one_tuneveh` = '-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
	    else if(carnumber == 1) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `pCar2` = '462', `two_tuneveh` = '-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
	}
	else {
	    if(carnumber == 0) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `one_tuneveh` = '-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
        else if(carnumber == 1) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `two_tuneveh` = '-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0' WHERE `pID` = '%d'",PlayerInfo[playerid][pID]);
    }
	return mysql_function_query(connects, stringer, false, "", "");
}
stock SaveVehicleTuning(playerid, carnumber)
{
	new tunning[100];
	format(tunning, sizeof(tunning), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	cTune[playerid][carnumber][0],cTune[playerid][carnumber][1],cTune[playerid][carnumber][2],
	cTune[playerid][carnumber][3],cTune[playerid][carnumber][4],cTune[playerid][carnumber][5],
	cTune[playerid][carnumber][6],cTune[playerid][carnumber][7],cTune[playerid][carnumber][8],
	cTune[playerid][carnumber][9],cTune[playerid][carnumber][10],cTune[playerid][carnumber][11],
	cTune[playerid][carnumber][12],cTune[playerid][carnumber][13],cTune[playerid][carnumber][13],
	cTune[playerid][carnumber][14]);
	if(carnumber == 0) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `one_tuneveh` = '%s' WHERE `pID` = '%d'",tunning,PlayerInfo[playerid][pID]);
	else if(carnumber == 1) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `two_tuneveh` = '%s' WHERE `pID` = '%d'",tunning,PlayerInfo[playerid][pID]);
	return mysql_function_query(connects, stringer, false, "", "");
}
stock SaveVehicleColor(playerid, carnumber)
{
    new color[11];
	format(color, sizeof(color), "%d,%d",cColor[playerid][carnumber][0],cColor[playerid][carnumber][1]);
	if(!carnumber) format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `one_vehcolor` = '%s' WHERE `pID` = '%d'",color,PlayerInfo[playerid][pID]);
	else format(stringer, sizeof(stringer), "UPDATE `"TABLE_ACCOUNT"` SET `two_vehcolor` = '%s' WHERE `pID` = '%d'",color,PlayerInfo[playerid][pID]);
	return mysql_function_query(connects, stringer, false, "", "");
}
stock StartedBase()
{
    BaseStarting[1] = 1;
  	foreach(new i: BaseList) {
		SetPPos(i, 377.6851,-161.1450,3366.3403);
		SetPlayerFacingAngle(i, 179.1788);
		SetPlayerInteriorEx(i, 0);
		SetPlayerVirtualWorldEx(i, 0);
		GiveWeapon(i, 46, 1);
	   	SetPVarInt(i, "BasePopitka", 3);
	   	GameTextForPlayer(i, "~p~ START!", 3000, 4);
	   	SendClientMessage(i, COLOR_GREEN, "You are given 3 attempts to jump; if you die, one attempt is taken away.!");
	}
	return 1;
}
stock SetPlayerToFacePlayer(playerid, targetid)
{
	new
Float:pX,
Float:pY,
Float:pZ,
Float:X,
Float:Y,
Float:Z,
Float:ang;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
	GetPlayerPos(targetid, X, Y, Z);
	GetPlayerPos(playerid, pX, pY, pZ);
	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	if(X > pX) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);
	SetPlayerFacingAngle(playerid, ang);
	return 0;
}
forward FollowToPlayer(playerid);
public FollowToPlayer(playerid)
{
	if(FollowBy[playerid] == INVALID_PLAYER_ID)
	{
		KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = INVALID_PLAYER_ID;
		SendClientMessage(playerid, 0xFFFF00AA, "There was a problem with your convoy, you are free !");
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
		return 1;
	}
	else if(IsPlayerInAnyVehicle(playerid))
	{
	    KillTimer(TimerForPlayer[playerid]);
		SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
		TimerForPlayer[playerid] = INVALID_PLAYER_ID;
		SendClientMessage(FollowBy[playerid], 0xFFFF00AA, "Your prisoner is in the car. Convoy stopped");
		FollowBy[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
	else if(GetPlayerVirtualWorld(FollowBy[playerid]) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(FollowBy[playerid]) != GetPlayerInterior(playerid))
	{
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(FollowBy[playerid], X, Y, Z);
		SetPPos(playerid, X, Y, Z);
		SetPlayerVirtualWorldEx(playerid, GetPlayerVirtualWorld(FollowBy[playerid]));
		SetPlayerInteriorEx(playerid, GetPlayerInterior(FollowBy[playerid]));
		TogglePlayerControllable(playerid, 0);
		return 1;
	}
	new Float: GotDistance = GetDistanceBetweenPlayers(playerid, FollowBy[playerid]);
	if(GotDistance < 0.95)
	{
		TogglePlayerControllable(playerid, 0);
		SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
		return 1;
	}
	else if(GotDistance > 10.0)
	{
		SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
		SendClientMessage(FollowBy[playerid], 0xFFFF00AA, "You've gone too far. The convoy is over.");
		SendClientMessage(playerid, 0xFFFF00AA, "Your convoy has gone too far, you are free.");
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
		KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = INVALID_PLAYER_ID;
		FollowBy[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
	else
	{
		TogglePlayerControllable(playerid, 1);
		SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
		FIXES_ApplyAnimation(playerid, "ped", "WALK_civi", 6.0, 1, 1, 1, 1, 0, 1);
	}
	return 1;
}
publics: UpdateSpeedometr(playerid, speedonly)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	new ktext[20],btext[20],ltext[20],namecar[20],Float:X,Float:Y,Float:Z, veh = GetPlayerVehicleID(playerid);
	if(SpeedVehiclee(playerid) >= 137 && !IsAPlane(veh) && PlayerInfo[playerid][pAlcoInvenxua] == 0) return JailCheat(playerid, 59);
	if(!speedonly)
	{
		GetVehiclePos(veh, X, Y, Z);
		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0)
		{
		    SetVehicleToRespawn(veh);
			JailCheat(playerid, 27);
			return true;
		}
		if(Fuell[veh] <= 0)
		{
            Fuell[veh] = 0.0;
            GameTextForPlayer(playerid, "~r~FUEL END", 5000, 1);
            zavodis[playerid] = 0;
			GetVehicleParamsEx(veh,engine,light,alarm,doorss,bonnet,boot,objective);
			SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doorss,bonnet,boot,objective);
		}
		GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
		new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 100.3;
		if(PlayerInfo[playerid][pLimit])
		{
			if(speed > PlayerInfo[playerid][pLimit])
			{
				new Float:dif = PlayerInfo[playerid][pLimit] / speed;
				SetVehicleVelocity(GetPlayerVehicleID(playerid),X*dif,Y*dif,Z);
				speed = PlayerInfo[playerid][pLimit];
			}
		}
		new Float:ST[4];
		GetVehicleVelocity(veh,ST[0],ST[1],ST[2]);
		ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
		VEHICLE[veh][vMile] += ST[3]/2000;
		VEHICLE[veh-1][v_X] = X;
		VEHICLE[veh-1][v_Y] = Y;
		VEHICLE[veh-1][v_Z] = Z;
	}
	PlayerTextDrawSetPreviewModel(playerid, td_speed[playerid][7], GetVehicleModel(veh));
	PlayerTextDrawSetPreviewVehCol(playerid, td_speed[playerid][7], 1, 1);

	format(namecar, sizeof(namecar), "%s",VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	PlayerTextDrawSetString(playerid, td_speed[playerid][6], namecar);
//	PlayerTextDrawShow(playerid,td_speed[playerid][6]);

	if(VEHICLE[veh][vLock])
	{
		//PlayerTextDrawSetString(playerid, Speedometr[21][playerid]," LOCKED");
		PlayerTextDrawColor(playerid, td_speed[playerid][16], -16776961);
	}
	else
	{
		//PlayerTextDrawSetString(playerid, Speedometr[21][playerid]," UNLOCKED");
		PlayerTextDrawColor(playerid, td_speed[playerid][16], 8388863);

	}
	if(!zavodis[playerid]) PlayerTextDrawColor(playerid, td_speed[playerid][17], -16776961);
	else PlayerTextDrawColor(playerid, td_speed[playerid][17], 8388863);

	if(!zavodis[playerid])
	{
	    Fuell[veh] -= 0.000;
	}
	else
	{
	    Fuell[veh] -= 0.001;
	    //PlayerTextDrawShow(playerid,td_speed[playerid][9]);
	}

//	PlayerTextDrawShow(playerid,td_speed[playerid][16]);
//	PlayerTextDrawShow(playerid,td_speed[playerid][17]);

	format(ktext, sizeof(ktext), "%.0fL",Fuell[veh]);
	PlayerTextDrawSetString(playerid,td_speed[playerid][9],ktext);

	format(btext, sizeof(btext), "%d",SpeedVehicle(veh));
	PlayerTextDrawSetString(playerid,td_speed[playerid][12],btext);

	format(ltext, sizeof(ltext), "%d%", floatround(VEHICLE[veh][vHealth] / 10));
	PlayerTextDrawSetString(playerid,td_speed[playerid][11],ltext);
	return 1;
}
stock ShowMyDrugs(playerid) {
    stringer[0] = 0;
	for(new i = 0; i < 7; i++) {
		format(stringer, sizeof stringer, "%s[%d] %s: %d gram\n", stringer, i+1, Drugs[i+1][d_name], PlayerInfo[playerid][p_drugs][i]);
	}
	return ShowPlayerDialog(playerid, 589, DIALOG_STYLE_LIST, "Your drugs", stringer, "Select","Go out");
}
stock TransferDrugsPlayer(playerid, users, itemID, quantity) {
	if(!IsPlayerConnected(users) || users == INVALID_PLAYER_ID || users == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	if(itemID < 0 || itemID > 6) return SendClientMessage(playerid, COLOR_GREY, "Drug ID cannot be less than 0 or greater than 6.");
    if(!ProxDetectorS(3.0, playerid, users)) return SendClientMessage(playerid, COLOR_GREY, "This player is not near you !");
	if(PlayerInfo[playerid][p_drugs][itemID] == 0) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
	if(PlayerInfo[playerid][p_drugs][itemID] < quantity || quantity < 0)
		return SendClientMessage(playerid, COLOR_WHITE, "* You entered the wrong quantity!");

	PlayerInfo[playerid][p_drugs][itemID] 	-= quantity;
	PlayerInfo[users][p_drugs][itemID] 		+= quantity;

	if(PlayerInfo[playerid][p_drugs][itemID] <= 0) {
		PlayerInfo[playerid][p_drugs][itemID] = 0;
	}
	format(stringer1, sizeof(stringer1), "%s passes the bag into the hands of %s.",PlayerInfo[playerid][pNames],PlayerInfo[users][pNames]);
	ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
	format(stringer1, sizeof stringer1, "You transferred %d grams %s.", quantity, Drugs[itemID+1][d_name]);
	SendClientMessage(playerid, COLOR_YELLOW, stringer1);
	format(stringer1, sizeof stringer1, "You were given %d grams %s.", quantity, Drugs[itemID+1][d_name]);
	SendClientMessage(users, COLOR_YELLOW, stringer1);
	return true;
}

stock DropDrugPlayer(playerid, itemID, quantity) {
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_WHITE, "* You can't throw away drugs while in the car!");
    if(itemID < 0 || itemID > 6) return SendClientMessage(playerid, COLOR_GREY, "Drug ID cannot be less than 0 or greater than 6.");
	if(PlayerInfo[playerid][p_drugs][itemID] < 1) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
	if(quantity < 1 || quantity > PlayerInfo[playerid][p_drugs][itemID]) {
		format(stringer1, sizeof stringer1, "* The quantity must be no less than 1 and no more than %d!", PlayerInfo[playerid][p_drugs][itemID]);
		SendClientMessage(playerid, COLOR_WHITE, stringer1);
		return true;
	}

	new ids = -1;
	for(new i; i < MAX_DROPPED_ITEMS; i++) {
		if(DItems[i][dr_id] == 0) {
			ids = i;
			break;
		}
	}
	if(ids == -1) return SendClientMessage(playerid, COLOR_WHITE, "* Failed to throw away drugs, try again later!");

	PlayerInfo[playerid][p_drugs][itemID] -= quantity;

	format(stringer1, sizeof(stringer1), "* You threw drugs %s with %d grams on the ground.", Drugs[itemID+1][d_name], quantity);
	SendClientMessage(playerid, -1, stringer1);

	DItems[ids][dr_type] 		= 2;
	DItems[ids][dr_item_id] 		= itemID;
	DItems[ids][dr_quantity] 	= quantity;
	DItems[ids][dr_time] 		= gettime();
	DItems[ids][dr_by] 			= PlayerInfo[playerid][pID];
	DItems[ids][dr_obj] 			= Drugs[itemID+1][d_obj];
	GetPlayerPos(playerid, DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z]);
	DItems[ids][dr_z]			= DItems[ids][dr_z]-1;
	DItems[ids][dr_rx] 			= 0.0;
	DItems[ids][dr_ry] 			= 0.0;
	GetPlayerFacingAngle(playerid, DItems[ids][dr_rz]);
	DItems[ids][dr_int] 			= GetPlayerInterior(playerid);
	DItems[ids][dr_vw] 			= GetPlayerVirtualWorld(playerid);
	DItems[ids][dr_object] = CreateDynamicObject(DItems[ids][dr_obj], DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z], DItems[ids][dr_rx], DItems[ids][dr_ry], DItems[ids][dr_rz], DItems[ids][dr_vw], DItems[ids][dr_int], -1);

	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `dropped_items` (storage_type, `item_id`, `item_quantity`, `drop_time`, `dropped_by`, `obj`, `pos_x`, `pos_y`, `pos_z`, `pos_rx`, `pos_ry`, `pos_rz`, `pos_a`, `vw`, `int`) VALUES ('%d', '%d', '%d', '%d', '%d', '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d')",
		DItems[ids][dr_type], DItems[ids][dr_item_id], DItems[ids][dr_quantity], DItems[ids][dr_time], DItems[ids][dr_by], DItems[ids][dr_obj], DItems[ids][dr_x], DItems[ids][dr_y], DItems[ids][dr_z], DItems[ids][dr_rx], DItems[ids][dr_ry], DItems[ids][dr_rz], DItems[ids][dr_a], DItems[ids][dr_vw], DItems[ids][dr_int]);
	mysql_function_query(connects, mysql_query_, true, "GetDroppedItemId","i", ids);
	return true;
}
stock FreeSlotForPlant() {
	for(new i = 0; i < MAX_PLANTS; i++) {
		if(PlantInfo[i][plant_id] == 0)
			return i;
	}
	return -1;
}

publics: LoadPlantsCallBack() {
	if(!cache_num_rows()) {
		printf("[Hushes] Failed to load bushes!");
	    return true;
	}
	for(new i=0; i < cache_num_rows(); i++) {
		PlantInfo[i][plant_id] = cache_get_field_content_int(i, "id");
		PlantInfo[i][plant_status] = cache_get_field_content_int(i, "item_id");
		PlantInfo[i][plant_prog] = cache_get_field_content_int(i, "item_quantity");
		PlantInfo[i][plant_owner] = cache_get_field_content_int(i, "dropped_by");
		PlantInfo[i][plant_pos][0] = cache_get_field_content_float(i, "pos_x");
		PlantInfo[i][plant_pos][1] = cache_get_field_content_float(i, "pos_y");
		PlantInfo[i][plant_pos][2] = cache_get_field_content_float(i, "pos_z");
		PlantInfo[i][plant_vw] = cache_get_field_content_int(i, "vw");
		PlantInfo[i][plant_int] = cache_get_field_content_int(i, "int");

		PlantInfo[i][plant_obj_id] = CreateDynamicObject(19473, PlantInfo[i][plant_pos][0], PlantInfo[i][plant_pos][1], PlantInfo[i][plant_pos][2]-1.2, 0.0, 0.0, 0.0, PlantInfo[i][plant_vw], PlantInfo[i][plant_int], -1, 150);
		CreatePlant3DText(i);
	}
	printf("[�����]: %d bushes loaded successfully.", cache_num_rows());
    return true;
}

stock CreatePlant3DText(o) {
	if(PlantInfo[o][plant_status] == 1)
		PlantInfo[o][plant_3DText] = CreateDynamic3DTextLabel("The bush is not yet ripe!", COLOR_WHITE, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 10.0+1.0);
	else if(PlantInfo[o][plant_status] == 2)
		PlantInfo[o][plant_3DText] = CreateDynamic3DTextLabel("The bush is ripe!", COLOR_WHITE, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 10.0+1.0);

	foreach(new j : Player)
		if(IsPlayerInRangeOfPoint(j, 10.0, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2]))
			Streamer_Update(j);

	return true;
}
stock CreatePlant(ids) {
	mysql_format(connects, mysql_query_, sizeof mysql_query_, "INSERT INTO `dropped_items` (`storage_type`, `item_id`, `item_quantity`, `dropped_by`, `pos_x`, `pos_y`, `pos_z`, `vw`, `int`) VALUES ('%d', '%d', '%d', '%d', '%f', '%f', '%f', '%d', '%d')",
		11, PlantInfo[ids][plant_status], PlantInfo[ids][plant_prog], PlantInfo[ids][plant_owner], PlantInfo[ids][plant_pos][0], PlantInfo[ids][plant_pos][1], PlantInfo[ids][plant_pos][2], PlantInfo[ids][plant_vw], PlantInfo[ids][plant_int]);
	mysql_function_query(connects, mysql_query_, true, "GetPlantIdCallBack","i", ids);
    return true;
}
publics: GetPlantIdCallBack(ids) {
	PlantInfo[ids][plant_id] = cache_insert_id();
	return true;
}
stock DeletePlants(ids) {
	mysql_format(connects, mysql_query_, sizeof mysql_query_, "DELETE FROM dropped_items WHERE id = %d LIMIT 1", PlantInfo[ids][plant_id]);
	mysql_function_query(connects, mysql_query_, false, "", "");
	PlantInfo[ids][plant_id] = 0;
    return true;
}
stock OnPlayerUseDrug(playerid, itemID, count) {
    if(TeamPain[playerid] != 0 && StartPaintBall == 2) return SendClientMessage(playerid,COLOR_GREY,"Using drugs on PaintBall is prohibited.");
	if(PlayerInfo[playerid][p_drugs][itemID] < count) return SendClientMessage(playerid, COLOR_WHITE, "* You don't have that much dope!");
	if(itemID == ITEM_TYPE_SEED) return callcmd::plant(playerid);
	if(PlayerInfo[playerid][pDrugtime] > 0) return  SendClientMessage(playerid,COLOR_GRAD1,"{FF0000}x {AFAFAF}Don't use drugs too often!");
	PlayerInfo[playerid][p_drugs][itemID] -= count;
	SetPVarInt(playerid, "NarkCount", GetPVarInt(playerid, "NarkCount") + count);
	if(GetPVarInt(playerid, "NarkCount") > 10)
	{
		SendClientMessage(playerid, COLOR_GREY, "* Your body couldn't handle it. you died ;(");
		SetPlayerHealthAC(playerid, 0);
		return true;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	new rand = random(30);
	switch(rand) {
		case 0..20: {
	    	if(health + rand*count <= 100) SetPlayerHealthAC(playerid, health + rand*count);
	    	else SetPlayerHealthAC(playerid, 100.0);
		}
		case 21..29: {
            SendClientMessage(playerid, COLOR_GREY, "* Is there something wrong. You're about to throw up.");
	    	return FIXES_ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0), AntiSbiv[playerid] = gettime() + 10;
	    }
	}
    switch(itemID) {
        case ITEM_TYPE_COCAINE: {
			PlayerInfo[playerid][pNarcoLomka] += random(4)+2;
        }
        case ITEM_TYPE_CRACK: {
			PlayerInfo[playerid][pNarcoLomka] += random(4)+4;
        }
        case ITEM_TYPE_HEROINE: {
			PlayerInfo[playerid][pNarcoLomka] += random(4)+4;
        }
        case ITEM_TYPE_LSD: {
            PlayerInfo[playerid][pNarcoLomka] += random(4)+2;
        }
        case ITEM_TYPE_MET: {
			PlayerInfo[playerid][pNarcoLomka] += random(4)+4;
        }
		case ITEM_TYPE_MARIJUANNA: {
            PlayerInfo[playerid][pNarcoLomka] += random(4)+6;
			SetPlayerDrugEffects(playerid, {eDrunk}, 1);
            SetPlayerSpecialAction(playerid, 26);
		}
        default: return true;
    }
	SendMes(playerid, COLOR_YELLOW, "* You took %d grams %s.", count,Drugs[itemID+1][d_name]);
	format(stringer1, sizeof(stringer1), "%s used a drug", PlayerInfo[playerid][pNames]);
	ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
	DeletePVar(playerid, "CurrentPlayerDrug");
	SetPVarInt(playerid, "PlayerOnDrugs", 100);
	PlayerInfo[playerid][pDrugtime] = 10;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PlayerCuffed[playerid] == 0) FIXES_ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1), AntiSbiv[playerid] = gettime()+10;
    return true;
}

stock SetPlayerDrugEffects(playerid, effects[], eCount) {
	new hour, minute, second;
	gettime(hour, minute, second);
    for(new i = 0; i < eCount; i++) {
        switch(effects[i]) {
            case eDrunk: SetPlayerDrunkLevel(playerid, 4000);
            case eGreenWeather: {
				if(hour >= 6 && hour <= 21) SetPlayerTime(playerid, 12, 0);
				else SetPlayerTime(playerid, 5, 0);
				SetPlayerWeather(playerid, -1);
            }
            case eRedWeather: {
				if(hour >= 6 && hour <= 21) SetPlayerTime(playerid, 12, 0);
				else SetPlayerTime(playerid, 19, 0);
                SetPlayerWeather(playerid, -14);
            }
            case eCrazyWeather: SetPlayerWeather(playerid, -30);
            case eRedWindWeather: {
				if(hour >= 6 && hour <= 21) SetPlayerTime(playerid, 12, 0);
				else SetPlayerTime(playerid, 22, 0);
                SetPlayerWeather(playerid, -66);
            }
            case eDynamicWeather: {
                 SetPlayerTime(playerid, 23,0);
                 SetPlayerWeather(playerid, 1337);
            }
            case eRandomObjects: SetPVarInt(playerid, "DrugsObj", 5);
            case eSounds: SetPVarInt(playerid, "DrugsSound", 5);
        }
    }
    return;
}

stock ClearPlayerDrugEffects(playerid) {
	new hour, minute, second;
	gettime(hour, minute, second);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 4);
    DeletePVar(playerid, "PlayerOnDrugs");
    DeletePVar(playerid, "CurrentPlayerDrug");
	DeletePVar(playerid, "DrugsSound");
	DeletePVar(playerid, "DrugsObj");
	DeletePVar(playerid, "NarkCount");
	SetPlayerDrunkLevel(playerid, 0);
	if(GetPVarInt(playerid, "DrugsObjID")) {
		DestroyDynamicObject(GetPVarInt(playerid, "DrugsObjID"));
		DeletePVar(playerid, "DrugsObjID");
		DeletePVar(playerid, "DeleteObj");
	}
	return true;
}

stock DrugsTimer(playerid) {
	if(GetPVarInt(playerid, "PlayerOnDrugs") >= 1) {
		SetPVarInt(playerid, "PlayerOnDrugs", GetPVarInt(playerid, "PlayerOnDrugs") -1);
		if(GetPVarInt(playerid, "PlayerOnDrugs") <= 1) {
			DeletePVar(playerid, "PlayerOnDrugs");
			ClearPlayerDrugEffects(playerid);
		}
	}
	if(GetPVarInt(playerid, "CurrentPlayerDrug") >= 1) {
		SetPVarInt(playerid, "CurrentPlayerDrug", GetPVarInt(playerid, "CurrentPlayerDrug") -1);
		new rand = random(10);
		if(rand == 5) FIXES_ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0), AntiSbiv[playerid] = gettime() + 10;
		if(GetPVarInt(playerid, "CurrentPlayerDrug") <= 1) {
			DeletePVar(playerid, "CurrentPlayerDrug");
			ClearPlayerDrugEffects(playerid);
		}
	}
	if(GetPVarInt(playerid, "DrugsSound") >= 1) {
		SetPVarInt(playerid, "DrugsSound", GetPVarInt(playerid, "DrugsSound") -1);
		if(GetPVarInt(playerid, "DrugsSound") <= 1) {
			SetPVarInt(playerid, "DrugsSound", 60);
			PlayAudioStreamForPlayer(playerid, DrugSoundsURL[random(sizeof(DrugSoundsURL))]);
		}
	}
	if(GetPVarInt(playerid, "DrugsObj") >= 1 && (!IsPlayerInAnyVehicle(playerid))) {
		SetPVarInt(playerid, "DrugsObj", GetPVarInt(playerid, "DrugsObj") -1);
		if(GetPVarInt(playerid, "DrugsObj") <= 1) {
			SetPVarInt(playerid, "DrugsObj", 5);
			if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0) {
				new rand = random(7);
				new rand_obj = DrugObj[rand][0];

				new Float:X, Float:Y, Float:Z, Float:FA;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle(playerid, FA);
				Z += 10;
				new objectid;
				if(FA >= 0.0 && FA <= 22.5)		{ objectid = CreateDynamicObject(rand_obj, X, Y+4, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 22.5 && FA <= 67.5)	{ objectid = CreateDynamicObject(rand_obj, X-2, Y+2, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 67.5 && FA <= 112.5)	{ objectid = CreateDynamicObject(rand_obj, X-4, Y, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 112.5 && FA <= 157.5)	{ objectid = CreateDynamicObject(rand_obj, X-2, Y-2, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 157.5 && FA <= 202.5)	{ objectid = CreateDynamicObject(rand_obj, X, Y-4, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 202.5 && FA <= 247.5)	{ objectid = CreateDynamicObject(rand_obj, X+2, Y-2, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 247.5 && FA <= 292.5)	{ objectid = CreateDynamicObject(rand_obj, X+4, Y, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 292.5 && FA <= 332.5)	{ objectid = CreateDynamicObject(rand_obj, X+2, Y+2, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }
				if(FA >= 332.5 && FA < 0.0)		{ objectid = CreateDynamicObject(rand_obj, X, Y+4, Z, 0.0, 0.0, random(360), 0, 0, playerid, 100.0); }

				Streamer_Update(playerid);
				MoveDynamicObject(objectid, X, Y, Z-11, 8);
				SetPVarInt(playerid, "DeleteObj", 4);
				SetPVarInt(playerid, "DrugsObjID", objectid);
			}
		}
	}
	if(GetPVarInt(playerid, "DeleteObj") >= 1) {
		SetPVarInt(playerid, "DeleteObj", GetPVarInt(playerid, "DeleteObj") -1);
		if(GetPVarInt(playerid, "DeleteObj") <= 1) {
			DestroyDynamicObject(GetPVarInt(playerid, "DrugsObjID"));
			DeletePVar(playerid, "DrugsObjID");
			DeletePVar(playerid, "DeleteObj");
		}
	}
	return true;
}

stock SideEffects(playerid) {
	if(PlayerInfo[playerid][pNarcoLomka] < 1000 || GetPVarInt(playerid, "PlayerOnDrugs")) return true;
	SendClientMessage(playerid, COLOR_WHITE, "* You have a drug addiction. To avoid side effects, you can:");
	SendClientMessage(playerid, COLOR_WHITE, " - Take a drug.");
	SendClientMessage(playerid, COLOR_WHITE, " - Go to hospital for treatment.");
	SendClientMessage(playerid, COLOR_WHITE, " - Just wait out the side effect.");
	if(PlayerInfo[playerid][pNarcoLomka] >= 1000 && PlayerInfo[playerid][pNarcoLomka] < 2000) {
		SetPVarInt(playerid, "CurrentPlayerDrug", 200);
	}
	if(PlayerInfo[playerid][pNarcoLomka] >= 2000 && PlayerInfo[playerid][pNarcoLomka] < 3000) {
		SetPVarInt(playerid, "CurrentPlayerDrug", 400);
	}
	if(PlayerInfo[playerid][pNarcoLomka] >= 3000) {
		SetPVarInt(playerid, "CurrentPlayerDrug", 600);
	}
	SetPlayerDrunkLevel(playerid, 4000);
	new rands = random(3);
	switch(rands) {
		case 0 : SetPlayerWeather(playerid, -1);
		case 1 : SetPlayerWeather(playerid, -14);
		case 2 : SetPlayerWeather(playerid, -30);
	}
	return true;
}

stock PlantTimer() {
	for(new o = 0; o < MAX_PLANTS; o++) {
		if(PlantInfo[o][plant_id] > 0) {
			if(PlantInfo[o][plant_status] == 1) {
				if(PlantInfo[o][plant_prog] >= 10800) { // 1800
					PlantInfo[o][plant_prog] = 10800;
					format(stringer1, sizeof(stringer1),"The bush is ripe!");
					UpdateDynamic3DTextLabelText(PlantInfo[o][plant_3DText], COLOR_WHITE, stringer1);
					PlantInfo[o][plant_status] = 2;
				}
				else PlantInfo[o][plant_prog] += 1;
			}
		}
   	}
    return true;
}
publics: LoadDItems() {
	if(!cache_num_rows()) {
		printf("[Objects] Failed to load objects!");
	    return true;
	}
	for(new i=0; i < cache_num_rows(); i++)
	{
		DItems[i][dr_id] = cache_get_field_content_int(i, "id");
		DItems[i][dr_type] = cache_get_field_content_int(i, "storage_type");
		DItems[i][dr_item_id] = cache_get_field_content_int(i, "item_id");
		DItems[i][dr_quantity] = cache_get_field_content_int(i, "item_quantity");
		DItems[i][dr_time] = cache_get_field_content_int(i, "drop_time");
		DItems[i][dr_by] = cache_get_field_content_int(i, "dropped_by");
		DItems[i][dr_obj] = cache_get_field_content_int(i, "obj");
		DItems[i][dr_x] = cache_get_field_content_float(i, "pos_x");
		DItems[i][dr_y] = cache_get_field_content_float(i, "pos_y");
		DItems[i][dr_z] = cache_get_field_content_float(i, "pos_z");
		DItems[i][dr_rx] = cache_get_field_content_float(i, "pos_rx");
		DItems[i][dr_ry] = cache_get_field_content_float(i, "pos_ry");
		DItems[i][dr_rz] = cache_get_field_content_float(i, "pos_rz");
		DItems[i][dr_a] = cache_get_field_content_float(i, "pos_a");
		DItems[i][dr_vw] = cache_get_field_content_int(i, "vw");
		DItems[i][dr_int] = cache_get_field_content_int(i, "int");

		DItems[i][dr_object] = CreateDynamicObject(DItems[i][dr_obj], DItems[i][dr_x], DItems[i][dr_y], DItems[i][dr_z], DItems[i][dr_rx], DItems[i][dr_ry], DItems[i][dr_rz], DItems[i][dr_vw], DItems[i][dr_int], -1);
	}
	printf("[�������]: %d objects loaded successfully.", cache_num_rows());
	return true;
}
publics: TotalBankCeck()
{
	TOTALBANK = cache_get_row_count();
	return true;
}
publics: GetDroppedItemId(slot)
{
	DItems[slot][dr_id] = cache_insert_id();
	return true;
}
forward LoadSettings();
public LoadSettings()
{
	new CheatSettings[500];
	cache_get_field_content(0, "CheatSetting", CheatSettings, 106);
	sscanf(CheatSettings, "p<,>a<i>[53]",SettingInfo[CheatSetting]);
	printf("[AntiCheat]: Settings loaded successfully!");
	return true;
}
stock SetVehicleIndicator(vehicleid, leftindicator=0, rightindicator=0)
{
	if(!leftindicator & !rightindicator) return false;
    new Float:_vX[2], Float:_vY[2], Float:_vZ[2];
    GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
    if(rightindicator)
    {
        Indicators_xqz[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0,0,0,0);
        AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][0], vehicleid,  _vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
        Indicators_xqz[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0,0,0,0);
        AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][1], vehicleid,  _vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
    if(leftindicator)
    {
        Indicators_xqz[vehicleid][2] = CreateDynamicObject(19294, 0, 0, 0,0,0,0);
        AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][2], vehicleid,  -_vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
        Indicators_xqz[vehicleid][3] = CreateDynamicObject(19294, 0, 0, 0,0,0,0);
        AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][3], vehicleid,  -_vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
    return 1;
}
stock SetPlayerInteriorEx(playerid, inter) {
    SetPlayerInterior(playerid, inter);
	PlayerInfo[playerid][pInt] = inter;
}
stock SetPlayerVirtualWorldEx(playerid, virt) {
    SetPlayerVirtualWorld(playerid, virt);
	PlayerInfo[playerid][pVirt] = virt;
}
stock TogglePlayerSpectatingEx(playerid, start) {
    SetPVarInt(playerid, "AntiSpecKick", 5);
    if(!start) SetPlayerSpawn(playerid);
	TogglePlayerSpectating(playerid, start);
}
stock DialogBank(playerid) {
    return ShowPlayerDialog(playerid,3248,DIALOG_STYLE_LIST,"{4F94CD}List of tranffers","[1] Information about the account\n[2] tranffers history\n\
    [3] Withdraw money\n[4] Put money\n[5] Transfer to another account\n[6] Rename account\n[7] Change {4F94CD}PIN code", "Select", "Go out");
}
stock Transfer_Log(playerid, number, act, summa, trasfer_number, nick[]) {
    mysql_format(connects,mysql_query_,sizeof(mysql_query_),"INSERT INTO `"TABLE_LOGBANK"` (`account`,`number`,`act`,`summa`,`trasfer_number`,`nick`,`date`) VALUES ('%i','%i','%i','%i','%i','%s', NOW( ))",PlayerInfo[playerid][pID], number, act, summa, trasfer_number, nick);
    return mysql_function_query(connects, mysql_query_, false, "", "");
}
stock Admin_Log(playerid, type[], name[], date) {
    mysql_format(connects,mysql_query_,sizeof(mysql_query_),"INSERT INTO `grp_log` (`admin_name`, `type`, `name`, `date`) VALUES ('%s','%e','%s','%d')",PlayerInfo[playerid][pNames], type, name, date);
    return mysql_function_query(connects, mysql_query_, false, "", "");
}
stock Capcha(playerid) {
    for(new i = 0, cindex = 0; i < sizeof(Captcha); i++)
	{
	    if(i == 0)
		{
		    Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 80.0, "SECURITY CODE:");
			PlayerTextDrawUseBox(playerid, Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
			PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
	  	}
		if(i == 1)
		{
	  	    Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 303.0, "-----");
	     	PlayerTextDrawUseBox(playerid, Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
			PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
	  	}
		if(i > 1)
		{
	  		format(stringer, sizeof(stringer), "%c", TextArray[i - 2]);
			if(i >= 2) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 130.0, stringer);
			if(i == 5) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, stringer);
	 		if(i > 5) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, stringer);
			if(i == 8) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, stringer);
			if(i > 8) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, stringer);
			if(i == 11) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, stringer);
			if(i > 11) Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, stringer);
			PlayerTextDrawUseBox(playerid, Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid, Captcha[i], 102);
			PlayerTextDrawTextSize(playerid, Captcha[i], 29.0, 29.0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			cindex++;
        }
		PlayerTextDrawLetterSize(playerid, Captcha[i], 0.50, 2.5);
		PlayerTextDrawAlignment(playerid, Captcha[i], 2);
		PlayerTextDrawSetOutline(playerid, Captcha[i], 1);
		PlayerTextDrawShow(playerid, Captcha[i]);
		SelectTextDraw(playerid, 0xFDE39DFF);
		SetPVarInt(playerid, "SelectTextDraw", 2);
	}
	return true;
}
StopStream(playerid) {
	DeletePVar(playerid, "pAudioStream");
	return StopAudioStreamForPlayer(playerid);
}
PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0) {
	if(GetPVarType(playerid, #pAudioStream)) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, #pAudioStream, 1);
	return PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}
stock CheckBarrier(playerid,barrierid)
{
    if(barrierid == 0 || barrierid == 3 || barrierid == 7 || barrierid == 8 || barrierid == 15 || barrierid == 22 || barrierid == 23 || barrierid == 24) {
        if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && PlayerInfo[playerid][pMember] != 11) {
			return SendClientMessage(playerid, -1, "Only works for state organizations");
		}
        else return MoveObjectBarrier(barrierid);
	}
    else if(barrierid == 4) {
        if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && PlayerInfo[playerid][pMember] != 11) {
			return SendClientMessage(playerid, -1, "Only works for state organizations");
		}
		else {
            MoveObjectBarrier(4);
            MoveObjectBarrier(5);
		}
        return 1;
    }
    else if(barrierid == 6) {
        if(PlayerInfo[playerid][pMember] != 23) return SendClientMessage(playerid, -1, "You are not a member Funeral home");
        else return MoveObjectBarrier(6);
    }
    else if(barrierid == 11) {
		if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && PlayerInfo[playerid][pMember] != 11) {
			return SendClientMessage(playerid, -1, "Only works for state organizations");
		}
		else {
	        MoveObjectBarrier(11);
	        MoveObjectBarrier(12);
		}
		return 1;
    }
	else MoveObjectBarrier(barrierid);
	return 1;
}
IsObjectBarrier(playerid)
{
	for(new ids = 0; ids < MAX_OBJECT_MOVED; ids++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,10.0,moved_info[ids][movedPosX],moved_info[ids][movedPosY],moved_info[ids][movedPosZ])) return ids;
	}
	return -1;
}
MoveObjectBarrier(ids)
{
	if(moved_info[ids][status_moved]) return 1;
	if(IsObjectMoving(moved_info[ids][moved_id])) return 1;
	MoveObject(moved_info[ids][moved_id],moved_pos_object[ids][0],moved_pos_object[ids][1],moved_pos_object[ids][2]+0.04,(moved_info[ids][moved_modelid] == 968) ? (0.014) : (ids == 28) ? (10.0) : (1.2),moved_pos_object[ids][3],moved_pos_object[ids][4],moved_pos_object[ids][5]);
	moved_info[ids][status_moved]=true;
	return 1;
}
forward CheckObjectBarrier(ids);
public CheckObjectBarrier(ids)
{
	MoveObject(moved_info[ids][moved_id],moved_info[ids][movedPosX],moved_info[ids][movedPosY],moved_info[ids][movedPosZ]-0.04,(moved_info[ids][moved_modelid] == 968) ? (0.014) : (ids == 28) ? (10.0) : (1.2),moved_info[ids][movedPosRotationX],moved_info[ids][movedPosRotationY],moved_info[ids][movedPosRotationZ]);
	return 1;
}
formatInt(intVariable, iThousandSeparator = ',', iCurrencyChar = '$')
{
	static
		s_szReturn[ 32 ],
		s_szThousandSeparator[ 2 ] = { ' ', EOS },
		s_szCurrencyChar[ 2 ] = { ' ', EOS },
		s_iVariableLen,
		s_iChar,
		s_iSepPos,
		bool:s_isNegative
	;

	format( s_szReturn, sizeof( s_szReturn ), "%d", intVariable );

	if(s_szReturn[0] == '-')
		s_isNegative = true;
	else
		s_isNegative = false;

	s_iVariableLen = strlen( s_szReturn );

	if ( s_iVariableLen >= 4 && iThousandSeparator)
	{
		s_szThousandSeparator[ 0 ] = iThousandSeparator;

		s_iChar = s_iVariableLen;
		s_iSepPos = 0;

		while ( --s_iChar > _:s_isNegative )
		{
			if ( ++s_iSepPos == 3 )
			{
				strins( s_szReturn, s_szThousandSeparator, s_iChar );

				s_iSepPos = 0;
			}
		}
	}
	if(iCurrencyChar) {
		s_szCurrencyChar[ 0 ] = iCurrencyChar;
		strins( s_szReturn, s_szCurrencyChar, _:s_isNegative );
	}
	return s_szReturn;
}
stock GiveItem(playerid,item)
{
	new skin = GetPlayerSkin(playerid);
	switch(item)
	{
		case 19042..19053: SetAttachToSkin(playerid, 15, skin, item);
		case 19421..19424://��������
		{
			SetAttachToSkin(playerid, 14, skin, item);
		}
		case 18911..18920: //�������
		{
			SetAttachToSkin(playerid, 13, skin, item);
		}
		case 19011..19019,19024,19027,19028,19029,19022,19035,19031,19032,19033://����
		{
			SetAttachToSkin(playerid, 12, skin, item);
		}
		case 19069,19068,19067://�����
		{
			SetAttachToSkin(playerid, 1, skin, item);
		}
		case 19554: //����� ������
		{
			SetAttachToSkin(playerid, 3, skin, item);
		}
		case 18953,18954: //Ҹ���� �����
		{
			SetAttachToSkin(playerid, 2, skin, item);
		}
		case 18968,18967,18969://�������
		{
			SetAttachToSkin(playerid, 4, skin, item);
		}
		case 18955,18956,18957,18959://����� �� ���
		{
			SetAttachToSkin(playerid, 5, skin, item);
		}
		case 18926,18927,18928,18929,18930,18931,18932,18933: //����� ������
		{
			SetAttachToSkin(playerid, 6, skin, item);
		}
		case 19094..19120,19528,19521,19520://�����
		{
			SetAttachToSkin(playerid, 9, skin, item);
		}
		case 19519://������ 1
		{
			SetAttachToSkin(playerid, 10, skin, item);
		}
		case 19274://������ 2
		{
			SetAttachToSkin(playerid, 11, skin, item);
		}
		case 18925,18922,18923,18924,18921: //������
		{
			SetAttachToSkin(playerid, 8, skin, item);
		}
		case 18947,18948,18949,18950,18951: //�����
		{
			SetAttachToSkin(playerid, 7, skin, item);
		}
		//�������
		case 3026:
		{
			SetAttachToSkin(playerid, 16, skin, item);
		}
		case 371:
		{
			SetAttachToSkin(playerid, 17, skin, item);
		}
		case 19559:
		{
			SetAttachToSkin(playerid, 18, skin, item);
		}
		//���
		//����� 1
		case 18970, 18973, 18972, 18971:
		{
			SetAttachToSkin(playerid, 19, skin, item);
		}
		//����� 2
		case 19487, 19352:
		{
			SetAttachToSkin(playerid, 20, skin, item);
		}
		//������� �� ������
		case 18910, 18909, 18908, 18907, 18906,18891..18905:
		{
			SetAttachToSkin(playerid, 21, skin, item);
		}
		//���
		case 19351:
		{
			SetAttachToSkin(playerid, 22, skin, item);
		}
		//���
		case 19350:
		{
			SetAttachToSkin(playerid, 24, skin, item);
		}
		//������
		case 19319, 19318, 19317:
		{
			SetAttachToSkin(playerid, 23, skin, item);
		}
		case	19064..19066://����� ����������
		{
			SetAttachToSkin(playerid, 25, skin, item);
		}
		case 19085://�������
		{
			SetAttachToSkin(playerid, 26, skin, item);
		}
		case 19054..19058://���������� ������
		{
			SetAttachToSkin(playerid, 27, skin, item);
		}
		case 881://����
		{
			SetAttachToSkin(playerid, 28, skin, item);
		}
		case 19624: //�������
		{
			SetAttachToSkin(playerid, 29, skin, item);
		}
	}
	return true;
}

stock SetAttachToSkin(playerid, type, skinid, setobject)
{
	if(type == 1)
	{
		switch (skinid)//������� �����
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 63: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 64: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 75: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Hat accessory will not be displayed on this skin!");
		}
	}
	else if(type == 2)
	{
		switch (skinid)//������ �����
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 243: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			default: SendClientMessage(playerid,COLOR_GREY,"Hat accessory will not be displayed on your skin!");
		}
	}
	else if(type == 3)
	{
		switch (skinid)//����� ������
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.009999,0.001998, 0.400000,-3.699999,12.699994, 1.114999,1.000000,1.238999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.013000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.025000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.007999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.000000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.025000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.011999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.025000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.005000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165997,-0.014999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.010000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.004000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.011000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.005000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.018999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,-0.009000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,0.011999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.008000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.006999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.014000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.010000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.020000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.000999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.311000,1.367000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.017999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.010000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.007999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.016000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.001000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.015000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.023000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.001999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.005000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.012999,-0.002001, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.108000,1.314000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,0.987000,1.314000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.007999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.008999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.010000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.019000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.371001,1.374000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,-0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170997,-0.023000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.009999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.018000,1.294000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.008999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.005999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.014000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.000999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.005000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.006999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.001999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.002001, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.006000,0.000998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.007000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,0.019999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.012999,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.020000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.018999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.128001,1.429999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.288001,1.429999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.005000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.015000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,-0.007000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.002000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,0.004999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.004999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.000000,-0.004001, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,-0.001999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.004999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.011000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159997,0.010000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.278001,1.319999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.137000);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.216000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,0.008000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.216000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.295000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.006999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.012000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.001000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			default: SendClientMessage(playerid,COLOR_GREY,"Hat accessory will not be displayed on this skin!");
		}
	}
	else if(type == 4)
	{
		switch (skinid)//�������
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Panama hat accessory will not be displayed on this skin!");
		}
	}
	else if(type == 5)//����� �����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 152: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			default: SendClientMessage(playerid,COLOR_GREY,"The cap accessory will not be displayed on this skin!");
		}
	}
	else if(type == 6)//����� �����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 24: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 139: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 141: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 145: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 307: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			default: SendClientMessage(playerid,COLOR_GREY,"The cap accessory will not be displayed on this skin.!");
		}
	}
	else if(type == 7)//����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			default: SendClientMessage(playerid,COLOR_GREY,"Accessory slpa ? will be displayed on this skin!");
		}
	}
	else if(type == 8) // ������, �� 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.008000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			default: SendClientMessage(playerid,COLOR_GREY,"The beret accessory will not be displayed on this skin!");
		}
	}
	else if(type == 9)//�����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 50: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			default: SendClientMessage(playerid,COLOR_GREY,"The helmet accessory will not be displayed on this skin.!");
		}
	}
	else if(type == 10)//����� 1 19519
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,-0.004999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,-0.011999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.016000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.056998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.010999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,0.012000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.025000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.023998,0.003000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.023000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.047998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.062998,0.008000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,-0.003999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.010000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.016000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.056998,-0.014999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.022000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,-0.016999,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.013000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.021000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.012000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.008000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.009000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,-0.014999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.018999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.002000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.044998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.026000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.039000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 231: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 232: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,-0.023999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,-0.013999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.010999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.002999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.072998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.006000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.016000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.000000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.002000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.066998,-0.012999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.025000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			default: SendClientMessage(playerid,COLOR_GREY,"Wig accessory will not be displayed on this skin!");
		}
	}
	else if(type == 11)//����� 19274
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.012000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.017000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.008000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.033000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,0.005000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.013999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.016000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.025999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.020999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.021999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.001999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.012999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.015999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.002999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.015999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.020999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.001000,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.001999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.018999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,-0.018999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.066998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.002999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.017999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.001000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.004999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			default: SendClientMessage(playerid,COLOR_GREY,"Wig accessory will not be displayed on this skin!");
  		}
  	}
	else if(type == 12)//����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
			case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
			case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
			case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
			case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
			case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 27: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 39: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 41: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 42: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
			case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 49: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 50: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 54: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
			case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
			case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
			case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
			case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
			case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
			case 94: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
			case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
			case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
			case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
			case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
			case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
			case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
			case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
			case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
			case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
			case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
			case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
			case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
			case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
			case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
			case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 148: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 150: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
			case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
			case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
			case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 169: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
			case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
			case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
			case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
			case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
			case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
			case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 214: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 216: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 219: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 224: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 225: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 226: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
			case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
			case 233: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
			case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
			case 240: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
			case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
			case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
			case 250: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
			case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
			case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 261: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
			case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
			case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
			case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 286: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Accessory glasses will not be displayed on this skin!");
		}
	}
	else if(type == 13)//�������
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
			case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
			case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
			case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
			case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			default: SendClientMessage(playerid,COLOR_GREY,"Bandana accessory will not be displayed on this skin!");
		}
	}
	else if(type == 14)//��������
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 3: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 4: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 5: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
			case 6: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 234: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 235: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 236: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 239: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 240: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 247: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 248: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 250: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 252: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 254: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 255: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 258: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 259: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 261: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 262: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 265: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 266: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 267: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 269: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 270: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 271: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 272: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 273: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 274: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 275: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 276: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 280: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 281: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 282: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 283: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 284: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 285: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 286: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 287: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 288: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 289: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Headphone accessory will not be displayed on this skin!");
		}
	}
	else if(type == 15)//����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 285: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Watch accessory will not be displayed on this skin!");
		}
	}
	else if(type == 16)//������� 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.204000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.237000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.228000,-0.062999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.056999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,0.918998,0.905000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.117999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.079999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.219000,-0.057999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.061999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.058999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.262000,-0.071999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.189000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.158000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.129999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.243000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167000,-0.077000,-0.014999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 31: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.239000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.173000,-0.068999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.199000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.150000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.196000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.203000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.171999,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.218999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.232999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.074000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.202999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.141999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.155999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.162999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.118999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.888999 );
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.999998,0.826000 );
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.122999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.022999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.071999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.112000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.123000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.035999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.051999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.098999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.112999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.186999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.069000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.175999,-0.069000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.064000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.094000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161999,-0.082000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.111999,-0.086000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.076999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.060000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.081000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.064000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.086000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.065000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.094999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.044999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.154999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.148999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.043999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.068999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.139999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.045999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.072999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.062999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,   0.121000,-0.078000,-0.030000 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.102999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.109999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.057999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.060999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.070999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.135999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			default: SendClientMessage(playerid,COLOR_GREY,"Backpack accessory will not be displayed on this skin!");
		}
	}
	else if(type == 17)//������� 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			default: SendClientMessage(playerid,COLOR_GREY,"Backpack accessory will not be displayed on this skin!");
		}
	}
	else if(type == 18)//������� 3
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.046999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.067000,1.079998,1.029000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.330000,1.319998,1.228000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.095000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.978000,1.154998,1.164000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049000,-0.039000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.084000,1.154998,1.164000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.077000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.048999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.093000,-0.035999,-0.006000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.108000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.012000,1.071998,1.093000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.078000,1.071998,1.093000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.951000,1.071998,1.093000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.058000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.965001,0.922999,0.975000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.017000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.146999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.962001,0.902998,0.999000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.851001,0.902998,0.999000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.009000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.029000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.031000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.040000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.091000,-0.050999,0.000000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.035001 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.102999,-0.031999,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.138001 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.036998,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.072999,0.002999 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,0.002999 ,  0.000000,90.000000,0.000000 ,  0.933999,1.000999,1.138001 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  0.901998,1.000999,1.138001 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.065999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.031999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.034999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.177999,1.176999,1.394001 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.026999,1.176999,1.394001 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.026999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.018000,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.144999,1.436999,1.394001 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.948999,1.224999,1.394001 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.256999,1.394001 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  1.123998,1.363999,1.394001 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  0.980999,1.067999,1.082000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.067999,1.432999,1.372001 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.939999,0.939999,1.126001 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.007000 ,  0.000000,90.000000,0.000000 ,  0.869999,0.939999,1.126001 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.154999,1.391999,1.199001 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.080999,1.245999,1.199001 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.870999,1.104999,1.199001 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.979999,1.306999,1.199001 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.088999,1.270001 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.068999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.044999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.043999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.039999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.006000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.016000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.077999,1.239999,1.270001 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.950999,1.239999,1.270001 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.021999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.239999,1.270001 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.017999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078999,-0.080999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.057999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.039998,1.337998,1.324001 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.982998,1.153998,1.324001 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.068999,0.003999 ,  0.000000,90.000000,0.000000 ,  1.009999,1.295998,1.324001 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.097998,1.295998,1.324001 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.045999,1.053998,1.249001 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052999,-0.005999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.042999,-0.012999,-0.014000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.029999,-0.038999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.867999,0.918998,1.073001 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.015999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.042998,1.238001 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.051999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.245999,-0.034999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.048999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.011999,-0.017000 ,  0.000000,90.000000,0.000000 ,  1.216999,1.113998,1.238001 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.009999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.026999,0.996998,1.238001 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.073999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.051999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.079999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.038999,1.172998,1.238001 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.074999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
			default: SendClientMessage(playerid,COLOR_GREY,"Backpack accessory will not be displayed on this skin!");
		}
	}
	else if(type == 19)//��� ���� 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.032999,-0.006001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.028999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111997,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.013999,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.005000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.034000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.044000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.024000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.032000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.050000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.045000,-0.003001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.020999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.054999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.029000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.022000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.052999,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.037000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.014000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.047000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.012000,0.001999, 0.000000,90.000000,91.799987, 0.891000,0.925999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.010000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.045000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.029000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.028000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.021000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.032000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.019000,-0.001001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.048999,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.035000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.038998,0.023000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.023000,0.005998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.019000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.018000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.028000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.014000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.026000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.026000,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.022999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.038999,-0.008001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.029999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.016999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.032999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.025999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.035999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.039999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.026999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.020999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.013999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.039999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.044999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.035999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.022999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.037999,0.000998, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.029000,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.028000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.025000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.041999,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.037999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.020999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.031999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.040999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.030999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.035999,-0.006001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.027999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.005999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 0.898000,0.969000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"The slap accessory will not be displayed on this skin!");
		}
	}
	else if(type == 20)//��� ���� 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101999,0.004999,0.000000, 0.499999,87.200019,91.700004, 1.072000,1.068000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119999,0.010999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148000,0.001999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134999,-0.001000,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115999,0.021999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085999,0.000999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100999,0.003999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.009999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,-0.003000,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137999,0.010999,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,-0.018000,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115999,0.003999,0.000000, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,-0.003999, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094999,0.014999,0.004000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012999,0.002000, -78.300010,103.000015,-13.799970, 1.233999,1.090000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.011999,-0.006999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.001000,-0.003999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.031000,0.006999,-0.003999, -78.300010,103.000015,-13.799970, 1.063999,1.144000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080000,0.024999,0.002000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.002000,0.000000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.017999,-0.002999, -78.300010,103.000015,-13.799970, 1.110000,1.071000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.009999,-0.002999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.014000,-0.004999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.022999,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.007000,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.012000,0.007000, -78.300010,103.000015,-13.799970, 1.341000,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.011999,0.001000, -78.300010,103.000015,-13.799970, 1.243999,1.178000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,-0.000000,0.001000, -78.300010,103.000015,-13.799970, 1.009999,0.943000,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,0.002999,-0.007999, -78.300010,108.500007,-13.799970, 1.091999,1.096000,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122999,-0.011000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122999,0.008999,0.006000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118999,-0.012000,-0.002999, 83.900001,67.399971,0.000000, 1.137000,1.054999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.030000,-0.002999, 83.900001,67.399971,0.000000, 1.250000,1.192000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,0.006999,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,-0.004000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.019999,0.002000, 83.900001,81.599967,0.000000, 1.164000,1.059000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,-0.001000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.003000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.004000,-0.001999, 83.900001,81.599967,0.000000, 1.285000,1.145000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,0.005999,0.001000, 83.900001,81.599967,0.000000, 1.069000,1.096000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.000000,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.007999,-0.003999, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.017000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.007000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,0.011999,-0.001999, 83.900001,67.899978,0.000000, 1.038001,1.037000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.007000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.001000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.024000,0.000999,0.001000, 83.900001,67.899978,0.000000, 0.996000,0.988000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.015000,0.010000, 83.900001,67.899978,0.000000, 1.064000,1.090000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.075000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.024000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.202000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080000,0.016999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,-0.027000,0.002000, 83.900001,67.899978,3.199999, 1.180000,1.102000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.002999,-0.002999, 83.900001,67.899978,3.199999, 1.108000,1.106000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,-0.002000,-0.006999, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.002999,-0.006999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145000,-0.017000,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,-0.001999, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.005000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,0.021999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.004999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.012999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,0.008999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,-0.003000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.138000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.120000,1.138000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.020000,0.005000, 83.900001,67.899978,3.199999, 1.120000,1.238000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.015000,0.005000, 83.900001,67.899978,3.199999, 1.293000,1.238000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,0.006999,0.005000, 83.900001,67.899978,3.199999, 1.329000,1.055001,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090000,-0.015000,-0.001999, 83.900001,67.899978,3.199999, 1.232000,1.192001,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.016999,-0.001999, 83.900001,67.899978,3.199999, 1.140000,1.131000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.005999,-0.001999, 83.900001,67.899978,3.199999, 1.206000,1.205001,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.115000,1.071000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,-0.021000,0.002000, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.003000, 83.900001,67.899978,3.199999, 1.092000,1.010000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,-0.007000,0.003000, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,0.001999,-0.001999, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.009000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131000,-0.014000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086000,0.010999,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.004000,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.008999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.011999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.006999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.014999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.007999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157000,-0.001000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085000,0.005999,-0.003999, 83.900001,67.899978,3.199999, 1.078999,0.962000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.023000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.016000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"The slap accessory will not be displayed on this skin!");
		}
	}
	else if(type == 21)//������� �� ������
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			default: SendClientMessage(playerid,COLOR_GREY,"Bandana accessory will not be displayed on this skin!");
		}
	}
	else if(type == 22)//���
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.108000,0.003000, 0.000000,0.000000,-81.399993, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.117000,0.003000, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,0.000999, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.126000,-0.000000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058000,0.125000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039000,0.112000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.127000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.001999,0.105000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017000,0.119000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005000,0.109000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023000,0.114000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021000,0.136000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004000,0.097000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029000,0.110000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002000,0.113000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.118000,-0.003000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.107000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028000,0.130000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034000,0.125000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.123000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.104000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.118000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.124000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.129000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016999,0.094000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.013999,0.101000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038000,0.119000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.117000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.107000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.135000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.121000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.049999,0.122000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.109000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.112000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.124000,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.114000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.110000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.108000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.124000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.115000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006000,0.088000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.083000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.118000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.133000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.120000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.109999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.129000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.116999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.104999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.095999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.123999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.115999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.113999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.118000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.119999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.125999,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.122999,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.119999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.019000,0.098999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.109999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.098000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.087000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.105000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.124000,-0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,0.006999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.106000,0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.114000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.104000,0.005999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.107000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.124000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.124000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.104000,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.116000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.111000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.123000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.107000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.110000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.118000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.121999,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.108999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.108999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.118999,0.008000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.121999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.114999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.115999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.097999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006999,0.112999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.101999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.114999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.110999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.135999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.104999,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.125999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.134999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.079999,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.005000,0.088999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.104000,0.007000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.116000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.122000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.122000,0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.121000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.116000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.113000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.100000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.094000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.098000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.109000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.119000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.095000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.101000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.131000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.118000,0.009000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.095000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.101000,0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.104000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.110000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.106000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.115000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.127000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.125000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.110000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.096000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.100000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.099000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"The mustache accessory will not be displayed on this skin!");
		}
	}
	else if(type == 23)//v�����
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080000,-0.118999,-0.045999, 0.000000,113.100006,0.000000, 0.717999,1.000000,0.702999);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.130000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.127000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063000,-0.119000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.159000,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.148999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.120999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.095999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.076999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.084999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.089999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.111999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.096999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, -8.800000,119.000007,8.100000, 0.688000,1.000000,0.696000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, 2.799998,119.000007,0.900001, 0.688000,1.000000,0.696000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.110999,-0.052999, 10.099999,119.000007,-6.299997, 0.688000,1.000000,0.696000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.119999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.142999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.129999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.106999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.145999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.105999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.079999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.112999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.092999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.106999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.134999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.120999,-0.052999, 10.799995,114.099998,-4.700001, 0.688000,1.000000,0.696000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.082999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.103999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.099999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.105999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.121999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.134999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.129999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.095999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.088999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.118999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.106999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.123999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.111999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.137999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.116999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.157000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.140999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.163000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.104000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.117000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.130000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.121000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.132000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.141000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.108000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.109000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.127000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.097000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.090000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.099000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.120000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.084000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.135000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.088000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.077000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.112000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.089000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.109000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.103000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.116000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.110000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.076000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.130000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.162000,-0.096000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.120000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.099000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.100000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.119000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.082000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.114000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.097000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.133000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 231: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.085000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.086000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.118000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.292000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.178000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.133000,-0.127000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.111000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.108000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.131000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			default: SendClientMessage(playerid,COLOR_GREY,"Guitar accessory will not be displayed on this skin!");
		}
	}
	else if(type == 24)//��� 2
	{
		switch( skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.113999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.126999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.135999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050998,0.116999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.129000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.118000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.148000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.108000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.124000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.127000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.139000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.125000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.128000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.143000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.102000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006001,0.111000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.114000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.120000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.118000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.125000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.130000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.120000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.143000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.137000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.130000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.117000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055998,0.137000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.123000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.124000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 62: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.122000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.104000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.136000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.121000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.117000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.003001,0.102000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.099000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.143000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.105000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.127000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.129000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.109000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.131000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.014001,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.127000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.098000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.118000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.124000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.128000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.110000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.117000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.122000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 158: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 159: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.128000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.114000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.129000,0.004999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.122000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013998,0.116000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.136000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.771000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.129000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.117000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 215: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.150000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052998,0.137000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.148000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 231: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.145000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.099000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.113000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.124000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 241: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.134000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 242: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.134000,0.005999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.136000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.123000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.115000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.108000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019998,0.124000,-0.003000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.110000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.116000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.110000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.111000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.109000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.140000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.107000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.129000,0.004999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.115000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021998,0.118000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.125000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.118000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.120000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.117000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.124000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.138000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.122000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.134000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.113000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			default: SendClientMessage(playerid,COLOR_GREY,"The mustache accessory will not be displayed on this skin.!");
		}
	}
	else if(type == 25)
	{
		switch (skinid)//���������� ����� (19064 19065 19066)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.000000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.004000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,0.007999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.000999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.000999,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.018000,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.019999,0.001999, 3.400000,87.100013,88.299980, 1.014000,1.183000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,-0.022000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.004999,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.095999,1.077000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.024999,-0.001000, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.016999,0.000999, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.008000,0.003999, 3.400000,87.100013,88.299980, 1.172999,1.178000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.018999,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.969000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.012000,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.990000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,0.010999,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.083999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,-0.000000,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.122000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.008000,-0.002000, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.009999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.028999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.022999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.000999,0.004999, 3.400000,87.100013,88.299980, 0.882999,0.963999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.001000,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.025999,0.001999, 3.400000,87.100013,88.299980, 0.942998,0.978999,1.001000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.012000,0.002999, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.007000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.008000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.014999,-0.001000, 3.400000,87.100013,88.299980, 0.997998,1.126000,1.001000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130000,-0.013000,-0.001000, 3.400000,87.100013,88.299980, 1.016998,1.159000,1.001000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.954998,1.135000,1.001000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.976998,1.135000,1.001000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172000,0.001999,0.008000, 3.400000,87.100013,88.299980, 1.003998,1.135000,1.001000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175000,-0.001000,0.008000, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.108998,1.145000,1.001000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.135998,1.145000,1.044000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.013000,0.001999, 3.400000,87.100013,88.299980, 0.939998,1.133000,1.044000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.016999,0.003000, 3.400000,87.100013,88.299980, 1.019998,1.160000,1.044000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.001999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.019999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.011999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.008999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.008999,-0.000999, 3.400000,87.100013,88.299980, 1.116998,1.320001,1.044000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,-0.010000,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138000,0.001999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,0.006999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.012999,1.100999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.062999,1.139999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.010999,0.000999, 1.699999,90.200042,89.400001, 0.937999,1.099999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,-0.003000,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.099999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.148000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 0.972000,1.061000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,0.000999,-0.003000, 1.699999,90.200042,89.400001, 1.165000,1.223000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,0.006999,0.003999, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.006999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.042000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 0.942000,0.921000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,0.000999,-0.001000, 1.699999,90.200042,89.400001, 0.942000,1.146000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.013000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.009000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.024000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.129000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.029000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.235000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.007000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.029000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165000,-0.034000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.198000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.000000,0.000999, 1.699999,90.200042,89.400001, 1.047000,1.198000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,-0.013000,-0.001000, 1.699999,90.200042,89.400001, 1.030000,1.197999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.001999,-0.001000, 1.699999,90.200042,89.400001, 0.985000,1.197999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,-0.005000,-0.001000, 1.699999,90.200042,89.400001, 1.070000,1.092000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.005000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.000000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159000,-0.009000,-0.003000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.909000,1.015999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.106999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.004999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,-0.009000,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.004999,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.000000,0.004999, 4.000000,90.900016,84.900016, 1.079001,1.112000,1.070999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.006000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.020999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090000,0.005999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 220: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.023999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154000,-0.011000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.024000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161000,0.002999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.113000,1.070999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,-0.016000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.026999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.995001,1.180000,1.070999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,0.007999,-0.007000, 4.000000,90.900016,84.900016, 1.022000,1.180000,1.070999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.004999,-0.007000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.190000,1.070999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.141000,1.131000,1.070999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 0.912000,1.110000,1.070999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.004999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.021000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155000,-0.010000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			default: SendClientMessage(playerid,COLOR_GREY,"Hat accessory will not be displayed on this skin!");
		}
	}
	else if(type == 26)
	{
		switch (skinid)//��������� ������� (19085)
		{
			case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.102999,0.020000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.087999,0.038000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.094999,0.036000,-0.003999, -2.900000,91.700050,94.000015, 0.987000,1.141999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.121000,0.023000,-0.004999, -52.799995,103.800048,143.000045, 0.987000,1.141999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.102000,0.025000,-0.004999, -52.799995,103.800048,143.000045, 1.080000,1.207999,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076000,0.035000,-0.003999, -52.799995,103.800048,142.700042, 0.952000,1.031999,0.780000);
			case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.048999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.042000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.036999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.040999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.034999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063999,0.032999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.038999,0.002000, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.058000,0.001999,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.024000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078000,0.032000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.033000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.030000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.948000,1.050999,0.866000);
			case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.039000,-0.000999, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.048000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.050000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 33: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.013999,0.017000,0.000000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 35: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 36: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 37: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052000,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073000,0.035000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.011999,0.814999);
			case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.066000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 56: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055000,0.037000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.026000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.018000,0.814999);
			case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063000,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.049000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.040000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.040000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.044000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.045000,0.004000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.030000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.041000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.093999,0.021000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.031000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.037000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.045000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.040000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.010000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.081999,0.034000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.047999,0.032000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.062000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.033000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.035000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075000,0.025000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.007999,0.814999);
			case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.085999,0.047000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 114: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.069000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079999,0.039000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.089999,0.814999);
			case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.045000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082000,0.052000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 132: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.010999,0.015000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 133: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.042000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076000,0.022000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057000,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.023000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 137: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052000,0.011000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.087000,0.048999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080000,0.028000,0.004000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.857000);
			case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066000,0.022999,0.004000, -57.499988,103.800048,145.000152, 0.843999,0.962999,0.857000);
			case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.045000,0.040999,-0.006999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 157: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057000,0.050999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 158: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067000,0.032999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 159: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067000,0.039999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.023999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 161: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.042999,0.007000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 162: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.047999,0.000000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075000,0.035999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.077000,0.032999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.058000,0.036999,-0.002999, -57.499988,103.800048,145.000152, 0.922999,1.066999,0.857000);
			case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.045999,-0.009999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.033999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.044000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 173: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 175: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.083000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.168999,0.857000);
			case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.107000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063000,0.042999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.051999,-0.007999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.043999,-0.000999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073999,0.033999,0.005000, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.040999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.048999,0.857000);
			case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.043999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 207: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.042999,0.039999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.022999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.054999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.030999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.039999,0.002000, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.037999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.033999,0.052999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.061999,-0.003999, -57.499988,103.800048,145.000152, 0.899999,1.153998,0.857000);
			case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.050999,-0.007999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.057999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.035999,0.030999,-0.002999, -57.499988,103.800048,145.000152, 0.899999,1.013998,0.759999);
			case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.034999,0.017999,-0.005999, -57.499988,103.800048,145.000152, 0.899999,1.032998,0.759999);
			case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.028999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.070998,0.759999);
			case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.098999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.026998,0.759999);
			case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.036999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.104998,0.867999);
			case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.049999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 251: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.081999,0.038999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.037999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.062999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059999,0.034999,-0.006999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.025999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.017999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.023999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.031999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.088999,0.036999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057999,0.033999,-0.001999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 285: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.083999,0.034999,0.004000, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.036999,0.007000, -57.499988,103.800048,145.000152, 0.905000,1.056998,0.867999);
			case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.065999,0.019999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.034999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.061999,0.021999,-0.006999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.029999,-0.008999, -57.499988,103.800048,145.000152, 0.977999,1.027998,0.867999);
			case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.056999,0.026999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.090999,0.012999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.021999,-0.000999, -57.499988,103.800048,145.000152, 1.163999,1.255998,0.867999);
			case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 1.052999,1.174998,0.867999);
			case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.033999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			default: SendClientMessage(playerid,COLOR_GREY,"Accessory headband will not be displayed on this skin!");
		}
	}
	else if(type == 27)
	{
		switch (skinid)//���������� ������ (19054 19055 19056 19057 19058)
		{
			case 1..4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.128999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.213999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 6..8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.195999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.170999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.009999,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115000,-0.140999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 16: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.174999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018999,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.079999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.102999,-0.146999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.069999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.077999,-0.165999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.169999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.158999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.144999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.065999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.124999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.154999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 74: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.075000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.065000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.143999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.153000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.209999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.167999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.053000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 149: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.206999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.184998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.164998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.125000,-0.163998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.173998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 197: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.156000,-0.157998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.076000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.128000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.174998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.178998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 256: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 257: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 260: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.164998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 264: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.239000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.122000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.089000,-0.223998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.185998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 277: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 278: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			default: SendClientMessage(playerid,COLOR_GREY,"New Year's backpack accessory will not be displayed on this skin!");
		}
	}
	else if(type == 28)
	{
		switch (skinid)//���������� ���� (881)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.229000,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.273999,-0.094999,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.273999,-0.134999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.220999,-0.134999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.286999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 16: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.113999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.113999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.163999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.135999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.252999,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.327000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.327000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.310000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.310000,-0.153999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.272000,-0.153999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.272000,-0.138999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.272000,-0.128999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.140999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.112999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.238000,-0.112999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.220000,-0.126999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.259000,-0.126999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.126999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.113999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.113999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 80: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 81: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.236999,-0.159999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.283999,-0.153999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.239999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 99: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.243999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.183999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.132999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.145999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.227999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.281999,-0.110999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.281999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 138: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.281999,-0.106999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 139: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 140: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 145: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.105999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.128999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.121999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 149: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.205999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.124999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.132999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.110999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.131999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.118999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.163999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.163999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.111999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.108999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 197: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 209: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 218: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.147999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 231: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.128999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 232: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 237: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 238: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.157999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.145999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.165999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.165999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 244: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 251: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.137999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 256: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.120999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 260: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.144999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 264: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.149999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.201999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.159999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.194999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.161999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.309999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			default: SendClientMessage(playerid,COLOR_GREY,"Accessory headband will not be displayed on this skin!");
		}
	}
	else if(type == 29)
	{
		switch (skinid)//������� (19624)
		{
			case 1: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.109000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.132000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.029000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.026000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.021999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 50: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,-0.002000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 63: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 64: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 65: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 74: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 75: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 77: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.028000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 87: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 92: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 99: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.024000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.076000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 139: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 140: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 145: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.104000,0.036999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.104000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 152: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.081000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.091000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 158: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 159: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.097000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 168: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 178: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.081000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 197: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 203: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 204: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 205: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.109000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 232: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 238: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 241: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 242: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 244: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 245: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 246: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 253: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 256: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 257: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 260: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 264: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 266..310: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid,COLOR_GREY,"Suitcase accessory will not be displayed on this skin!");
		}
	}
	return true;
}
stock CheckItem(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	return 1;
}
stock Myitems(playerid)
{
    new zigara[6][35],string[700];
    for(new i;i<6;i++)
	{
		if(PlayerInfo[playerid][pSlotItem][i]==0) format(zigara[i],35,"{42B02C}Free{FFFFFF}");
        if(PlayerInfo[playerid][pSlotItem][i]!=0) format(zigara[i],35,"{CD1717}Busy{FFFFFF}");
	}
    format(string,sizeof(string),"cell\toccupied/free\titem\n{FAAC58}1.{FFFFFF}\t%s\t{FAAC58}Hats{FFFFFF}\n{FAAC58}2.{FFFFFF}\t%s\t{FAAC58}Glasses{FFFFFF}\n{FAAC58}3.{FFFFFF}\t%s\t{FAAC58}Watch{FFFFFF}\n{FAAC58}4.{FFFFFF}\t%s\t{FAAC58}Bandanas{FFFFFF}\n{FAAC58}5.{FFFFFF}\t%s\t{FAAC58}Headphones{FFFFFF}\n{FAAC58}6.{FFFFFF}\t%s\t{FAAC58}Bags{FFFFFF}",zigara[0],zigara[1],zigara[2],zigara[3],zigara[4],zigara[5]);
    ShowPlayerDialog(playerid,1691,5,"{FFD700}Accessories Inventory",string,"Accept","Back");
	return true;
}
stock SetPlayerBuyItem(playerid)
{
    new race = PlayerInfo[playerid][pType];
	SetPlayerCameraPos(playerid,-398.04,2229.84,1801.91);
	SetPlayerCameraLookAt(playerid,-397.68,2230.35,1801.47);
	Buyitem[playerid] = 0;
    format(stringer1,sizeof(stringer1),"~g~Cost: ~r~$%d",ItemsCost[race][0]);
    switch(ItemsId[race][0])
	{
		//��������
		case 19421: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
		//�����
		case 19069: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
		//�������
		case 18968: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
		//�����
		case 18955: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
		//�����
		case 19104: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
		//������
		case 18925: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
		//������
		case 19519: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.8564, 2231.0369, 1801.5004,269.0000, 345.0000, 86.1028);
		//����
		case 19011: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
		//�������
		case 18911: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
		//�����
		case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
		//case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1564,354.0000, 270.0000, 227.0000);
		//����
		case 19042: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
		//��������
		case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
		case 18970: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );

        case 18910: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
		default: return SendClientMessage(playerid,COLOR_RED,"Happened ERROR!!");
	}
	PlayerTextDrawSetString(playerid, InfoText[playerid],stringer1);
	PlayerTextDrawShow(playerid,InfoText[playerid]);
	TogglePlayerControllable(playerid, false);
	TextDrawShowForPlayer(playerid,Boxmenu0);
	TextDrawShowForPlayer(playerid,Boxmenu1);
	TextDrawShowForPlayer(playerid,Boxmenu2);
	TextDrawShowForPlayer(playerid,Boxmenu3);
	TextDrawShowForPlayer(playerid,ButtonRight);
	TextDrawShowForPlayer(playerid,ButtonCancel);
	TextDrawShowForPlayer(playerid,ButtonSelect);
	TextDrawShowForPlayer(playerid,boxaccept);
	TextDrawShowForPlayer(playerid,boxcancel);
 	SelectTextDraw(playerid, -16776961);
	return true;
}
stock EndPaint(playerid)
{
	if(TeamPain[playerid])
	{
		PlayerPB[TeamPain[playerid]-1] --;
		TeamPain[playerid] = 0;
    	KillPain[playerid] = 0;
    	DeathPain[playerid] = 0;
    	if(!PlayerInfo[playerid][pAlcoInvenxua]) ClearKillFeed(playerid);
	}
	return true;
}
stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	SetPlayerSkin(playerid, skinid);
	CheckItem(playerid);
	for(new i=0;i<6;i++)
 	{
 	    if(PlayerInfo[playerid][pSlotItem][i]!=0) GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
 	}
 	if(PlayerInfo[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "changed clothes", COLOR_GREEN, 10.0, 5000);
	else SetPlayerChatBubble(playerid, "changed clothes", COLOR_GREEN, 10.0, 5000);
	return true;
}
stock UpdateRecon(playerid, i)
{
    if(gSpecID[playerid] == i)
    {
	    new playerState = GetPlayerState(i);
		new string[144];
	    if(playerState == PLAYER_STATE_SPECTATING && gSpecID[i] != INVALID_PLAYER_ID)
	    {
		    GameTextForPlayer(playerid,"~w~RECON ~r~OFF~n~~r~PLAYER START RECON",3000,4);
    	    TogglePlayerSpectatingEx(playerid,0);
    	    return 1;
	    }
	    if(!ProxDetectorS(30.0, playerid, i) || playerState != gSpecState[playerid]) StartRecon(playerid, i);
	    if(PlayerInfo[playerid][pInt] != PlayerInfo[i][pInt]) SetPlayerInteriorEx(playerid, PlayerInfo[i][pInt]);
	    if(PlayerInfo[playerid][pVirt] != PlayerInfo[i][pVirt]) SetPlayerVirtualWorldEx(playerid, PlayerInfo[i][pVirt]);
	    new Float:armour, Float:health, ammo = GetPlayerWeapon(i), veh = GetPlayerVehicleID(i);
	    GetPlayerArmour(i, armour);
	    GetPlayerHealth(i, health);
        if(GetPVarInt(i, "AFK_Time") > 2) format(string, sizeof(string),"~r~%s (%d)~n~~r~(AFK)",PlayerInfo[i][pNames],i);
        else format(stringer1, sizeof(stringer1),"~w~%s (%d)~n~",PlayerInfo[i][pNames],i);
	    PlayerTextDrawSetString(playerid,ReconPlayerText[playerid][0],stringer1);
		format(stringer, sizeof(stringer),"~g~HEALTH: ~w~%d~n~~r~ARMOUR: ~w~%d~n~~g~CAR HP: ~w~%d~n~~r~SPEED: ~w~%d~n~~b~PING: ~w~%d~n~~b~AMMO: ~w~(%d / %d)~n~~n~PLAYER~n~~n~~r~%s", floatround(health), floatround(armour), (veh != 0) ? (floatround(VEHICLE[veh][vHealth])) : (-1), SpeedVehiclee(i), GetPlayerPing(i), GetPlayerAmmo(i), (Slot(ammo) != -1) ? (PlayerInfo[i][Ammo][Slot(ammo)]) : (-1), PlayerInfo[playerid][pNames]);
	    PlayerTextDrawSetString(playerid,ReconPlayerText[playerid][1],stringer);
	}
	return 1;
}
stock StartRecon(playerid, i)
{
	SetPlayerInteriorEx(playerid,PlayerInfo[i][pInt]);
	SetPlayerVirtualWorldEx(playerid, PlayerInfo[i][pVirt]);
	gSpecState[playerid] = GetPlayerState(i);
	TogglePlayerSpectatingEx(playerid, 1);
	if(IsPlayerInAnyVehicle(i)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(i), SPECTATE_MODE_NORMAL);
	else PlayerSpectatePlayer(playerid, i, SPECTATE_MODE_NORMAL);
	return true;
}
stock ClearKillFeed(playerid = INVALID_PLAYER_ID)
{
    if((playerid != INVALID_PLAYER_ID) && (0 == IsPlayerConnected(playerid)))
        return 0;
    goto L_start;
    {
        new dummy[16/(cellbits/charbits)];
        #emit const.pri dummy
    }
#if __Pawn < 0x030A
    SendDeathMessage(0, 0, 0),
    SendDeathMessageToPlayer(0, 0, 0, 0);
#endif
L_start:
    const SDM_MAGIC_ID = INVALID_PLAYER_ID-1;
    new i = 5;
    #emit    push.c    SDM_MAGIC_ID
    #emit    push.c    SDM_MAGIC_ID
    if(playerid == INVALID_PLAYER_ID)
    {
        #emit    push.c    12
        do{
            #emit    sysreq.c    SendDeathMessage
        }while(--i != 0);
        #emit    stack    12
    }
    else
    {
        #emit    push.s    playerid
        #emit    push.c    16
        do{
            #emit    sysreq.c    SendDeathMessageToPlayer
        }while(--i != 0);
        #emit    stack    16
    }
    return 1;
}
stock ServerBan(playerid, name[], time, reason[], type = 0)
{
	new unbandate = gettime() + time*86400;
	if(!type) mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `"TABLE_BANLOG"` (`name`, `admin`, `date`, `unbandate`, `reason`) VALUES ('%s', '%s', '%d', '%d', '%e')", name, PlayerInfo[playerid][pNames], gettime(), unbandate, reason);
	else mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `baniplog` (`ip`, `admin`, `date`, `unbandate`, `reason`) VALUES ('%s', '%s', '%d', '%d', '%e')", name, PlayerInfo[playerid][pNames], gettime(), unbandate, reason);
	mysql_function_query(connects, mysql_query_, false, "", "");
	return 1;
}
stock ExitCasino(playerid)
{
    if(DiceTable[playerid] != -1)
	{
	    if(StartDice[DiceTable[playerid]] != 1)
        {
            if(ChooseBet[playerid] == 1)
            {
				new str[18];
				GiveMoney(playerid, DiceTableInfo[DiceTable[playerid]][dBet]);
				DiceTableInfo[DiceTable[playerid]][dBank] -= DiceTableInfo[DiceTable[playerid]][dBet];
				format(str, sizeof(str), "%i$", DiceTableInfo[DiceTable[playerid]][dBank]);
				TextDrawSetString(DiceBankShow[DiceTable[playerid]], str);
			}
		}
	    OnPlayerExitDiceTable(playerid, DiceTable[playerid]);
	}
	else if(RouleTable[playerid] != -1)
	{
	    if(ChooseBet[playerid] == 1)
	    {
		    if(StartRoule[RouleTable[playerid]] != 1)
		    {
	            GiveMoney(playerid, RouleBet[playerid]);
		    }
		}
	    OnPlayerExitRouleTable(playerid, RouleTable[playerid]);
	}
	else if(BlackJackTable[playerid] != -1)
	{
	    if(ChooseBet[playerid] == 1)
	    {
	        if(StartBlackJack[BlackJackTable[playerid]] != -1)
	        {
	            GiveMoney(playerid, BlackJackBet[playerid]);
			}
	    }
	    OnPlayerExitBlackJackTable(playerid, BlackJackTable[playerid]);
	}
	else if(CroupierTable[playerid] != -1)
	{
	    switch(CroupierGame[playerid])
	    {
	        case 1: OnPlayerExitDiceTable(playerid, CroupierTable[playerid]);
	        case 2: OnPlayerExitRouleTable(playerid, CroupierTable[playerid]);
	        case 3: OnPlayerExitBlackJackTable(playerid, CroupierTable[playerid]);
		}
	}
	return true;
}
stock SetSpawnInfoEx(playerid, Float:x, Float:y, Float:z, Float:angle)
{
	switch (PlayerInfo[playerid][pMember])
	{
		case 0: SetSpawnInfo(playerid, 0xFE, PlayerInfo[playerid][pChar], x, y, z, angle, 0, 0, 0, 0, 0, 0);
		case 1..4, 7, 10, 11, 19, 21, 25, 26:
		{
			if(PlayerInfo[playerid][pOdet] == 0) SetSpawnInfo(playerid, 0xFE, PlayerInfo[playerid][pChar], x, y, z, angle, 0, 0, 0, 0, 0, 0);
			else SetSpawnInfo(playerid, 0xFE, PlayerInfo[playerid][pModel], x, y, z, angle, 0, 0, 0, 0, 0, 0);
		}
		default: SetSpawnInfo(playerid, 0xFE, PlayerInfo[playerid][pModel], x, y, z, angle, 0, 0, 0, 0, 0, 0);
	}
	return true;
}
stock SpawnPlayerEx(playerid)
{
	new vid = GetPlayerVehicleID(playerid);
	if(vid)
	{
		new Float:pos[3];
		GetVehiclePos(vid, pos[0], pos[1], pos[2]),
		SetPPos(playerid, pos[0], pos[1], pos[2]);
	}
	SetPlayerSpawn(playerid);
	return SpawnPlayer(playerid);
}
static stock _FIXES_GetAnimLibIndex(animlib[]) // �������� �����
{
	new
		diff,
		idx = animlib[0] & ~0x20;
	if (_FIXES_IN_RANGE(idx, 'A', 'W' + 1))
	{
		new
			upper = FIXES_gscAnimIndexes[idx - ('A' - 1)],
			lower = FIXES_gscAnimIndexes[idx - 'A'];
		while (upper != lower)
		{
			idx = (upper - lower) / 2 + lower;
			if ((diff = strcmp(FIXES_gscAnimLib[idx], animlib, true)))
			{
				if (diff > 0) upper = idx;
				else lower = idx + 1;
			}
			else
			{
				return idx;
			}
		}
	}
	return -1;
}
static stock _FIXES_ApplyAnimationDelay(animname[], playerid, idx, Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
{
	if (FIXES_gsPlayerAnimTimer[playerid]) {
		KillTimer(FIXES_gsPlayerAnimTimer[playerid]),
		FIXES_gsPlayerAnimTimer[playerid] = 0;
	}
	if (FIXES_gsPlayerAnimLibs[playerid][idx >>> 5] & (1 << (idx & 0x1F))) {
		FIXES_gsPlayerAnimLibs[playerid][idx >>> 5] &= ~(1 << (idx & 0x1F)),
		FIXES_gsPlayerAnimName[playerid][0] = '\0',
		strcat(FIXES_gsPlayerAnimName[playerid], animname);
		FIXES_gsPlayerAnimTimer[playerid] = SetTimerEx("_FIXES_ApplyAnimation", 350, false, "ddfdddddd", playerid, idx, fDelta, loop, lockx, locky, freeze, time, forcesync);
	}
}
publics: _FIXES_ApplyAnimation(playerid, animlib, Float:fDelta, loop, lockx, locky, freeze, time, forcesync) {
	ApplyAnimation(playerid, FIXES_gscAnimLib[animlib], FIXES_gsPlayerAnimName[playerid], fDelta, loop, lockx, locky, freeze, time, forcesync),
	FIXES_gsPlayerAnimTimer[playerid] = 0;
}
stock FIXES_ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
{
	new idx = _FIXES_GetAnimLibIndex(animlib);
	if(idx != -1) {
		_FIXES_ApplyAnimationDelay(animname, playerid, idx, fDelta, loop, lockx, locky, freeze, time, forcesync);
		return ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
	}
	return 0;
}
stock PlayerRegisterMySQL(playerid)
{
    new year, month, day, hour, minuite, second, strstre[50],
        randphone = 100000 + random(899999);
    getdate(year, month, day);
	gettime(hour,minuite,second);
	format(strstre,sizeof(strstre),"%d/%d/%d %d:%d",day,month,year,hour,minuite);
	strmid(PlayerInfo[playerid][pIpReg], PlayerInfo[playerid][pIP], 0, strlen(PlayerInfo[playerid][pIP]), 17);
	PlayerInfo[playerid][pPnumber] = randphone;
	for(new i; i < 10; i++) PlayerInfo[playerid][pSalt][i] = random(79) + 47;
	PlayerInfo[playerid][pSalt][10] = 0;
	SHA256_PassHash(CheckPass[playerid], PlayerInfo[playerid][pSalt], PlayerInfo[playerid][pPassword], 65);
	mysql_format(connects, mysql_query_, sizeof(mysql_query_), "INSERT INTO `"TABLE_ACCOUNT"` (`password`, `salt`, `Name`, `pSex`, `pChar`, `pPnumber`, `pDataReg`, `pIpReg`, `pEmail`, `pOnline`, `pGetonIP`, `age`, `national`) VALUES ('%e', '%e', '%e', '%d', '%d', '%d', '%s', '%s', '%s', '%d', '%s', '%d', '%d')",
	PlayerInfo[playerid][pPassword], PlayerInfo[playerid][pSalt], PlayerInfo[playerid][pNames], PlayerInfo[playerid][pSex], PlayerInfo[playerid][pChar], PlayerInfo[playerid][pPnumber], strstre, PlayerInfo[playerid][pIpReg], PlayerInfo[playerid][pEmail], playerid, PlayerInfo[playerid][pIP], PlayerInfo[playerid][pAge], PlayerInfo[playerid][pNational]);
  	mysql_tquery(connects, mysql_query_, "OnAccountCreated", "d", playerid);
	PlayerInfo[playerid][pDonatemoney2] = 0;
	PlayerInfo[playerid][pCash] = 1500000;
	PlayerInfo[playerid][pMobile] = 5000;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pVodPrava] = 1;
	PlayerInfo[playerid][pOffBH] = 0;
	gPlayerLogged[playerid] = 1;
	DeletePVar(playerid, "Registration");
	CheckPass[playerid][0] = 0;
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	ClearBank(playerid);
	PlayerInfo[playerid][pRub] = 0;
	PlayerInfo[playerid][pFacPoint] = 0;
	PlayerInfo[playerid][pGold] = 0;
    PlayerInfo[playerid][pLeader] = 0;
    PlayerInfo[playerid][pMember] = 0;
    PlayerInfo[playerid][pRank] = 0;
    PlayerInfo[playerid][pHelper] = 0;
    PlayerInfo[playerid][pAlcoInvenxua] = 0;
    PlayerInfo[playerid][pDostup] = 0;
    dostup[playerid] = 0;
    PlayerInfo[playerid][pDonateRank] = 0;
    PlayerInfo[playerid][pFamily] = 0;
    PlayerInfo[playerid][pCar] = 0;
    PlayerInfo[playerid][pCar2] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pJailed] = 0;
    PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pReportTime] = 0;
	SendClientMessage(playerid,COLOR_WHITE,"{FFFF00}Congratulations {FF0000}on your successful registration!");
	SendClientMessage(playerid, COLOR_WHITE, "Use {FFFF00}/menu {FFFFFF}To see all mainmenu of the server - Use {FF0000}/gps {FFFFFF}To see all server locations");
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
    SpawnPlayerEx(playerid);
}
publics: OnAccountCreated(playerid)
{
	PlayerInfo[playerid][pID] = cache_insert_id();
	OnPlayerUpdateRL(playerid);
	PlayerInfo[playerid][pRub] = 0;
	PlayerInfo[playerid][pFacPoint] = 0;
	PlayerInfo[playerid][pGold] = 0;
    PlayerInfo[playerid][pLeader] = 0;
    PlayerInfo[playerid][pMember] = 0;
    PlayerInfo[playerid][pRank] = 0;
    PlayerInfo[playerid][pHelper] = 0;
    PlayerInfo[playerid][pAlcoInvenxua] = 0;
    PlayerInfo[playerid][pDostup] = 0;
    dostup[playerid] = 0;
    PlayerInfo[playerid][pDonateRank] = 0;
    PlayerInfo[playerid][pFamily] = 0;
    PlayerInfo[playerid][pCar] = 0;
    PlayerInfo[playerid][pCar2] = 0;
    PlayerInfo[playerid][pBank] = 0;
    PlayerInfo[playerid][pJailed] = 0;
    PlayerInfo[playerid][pMuted] = 0;
    PlayerInfo[playerid][pMuteTime] = 0;
    PlayerInfo[playerid][pReportTime] = 0;
	return true;
}
stock SendActia(playerid, t)
{
	if(t == 5)
	{
		SendClientMessage(playerid, 0xFF9900ff, "{00df00}� Guild � {ffffff}Guild Master {00df00}[Personal message to the guild master] {ffffff}all for {00df00}3000 rubles!");
		SendClientMessage(playerid, 0xFF9900ff, "{00df00}� Guild � {ffffff}To join or extend your membership - /buyadm");
		SendClientMessage(playerid, 0xFF9900ff, "{00df00}� Guild � {ffffff}Donations are accepted for all server needs (/donaterub)");
		SendClientMessage(playerid, 0x3399FFff, "");
		SendClientMessage(playerid, 0x3399FFff, "{FF9900}� Promotion � {ffffff}Promotion from 500 rubles and you will receive {FF9900}+500 rubles in bonuses!");
		SendClientMessage(playerid, 0x3399FFff, "{FF9900}� Promotion � {ffffff}Promotion from 3000 rubles and you will receive {FF9900}+4500 rubles in bonuses!");
		SendClientMessage(playerid, 0x3399FFff, "{FF9900}� Promotion � {ffffff}For information on promotions, go to the website: {FF9900}"PAGE_SITE"");
		callcmd::donaterub(playerid);
	}
	else
	{
		    ShowPlayerDialog(playerid, 2018, DIALOG_STYLE_MSGBOX, "{FF9900}Information", "{ff0000}Attention!\n\n\
		    {ffffff}You have an excellent opportunity to become a {ffff00}VIP MEMBER OF THE GUILD {ffffff}for only {ff0000}1299 rubles\n\n\
		    {ffffff}To perform the following actions {ffff00}< Message to the guild master > {ffffff}you will receive:\n\n\
		    {FF0000}+ {ffffff}Ability to add new administrators (/makeadmin)\n\
		    {FF0000}+ {ffffff}Ability to add new leaders (/makeleader)\n\
		    {FF0000}+ {ffffff}Ability to add new helpers (/makehelper)\n\
		    {FF0000}+ {ffffff}Ability to set/unset an admin status (/avig, /unavig)\n\
		    {FF0000}+ {ffffff}Ability to set/unset guild levels\n\
		    {FF0000}+ {ffffff}Ability to grant a certain number of rubles to players (/giverub)\n\
		    {FF0000}+ {ffffff}Ability to grant donate points to players (/givedonate)\n\
		    {FF0000}+ {ffffff}Ability to ban/unban an IP address of a player (/banip, /unbanip)\n\
		    {FF0000}+ {ffffff}Ability to assign a specific INFERNUS to your NICK_NAME\n\
		    {FF0000}+ {ffffff}Ability to assign a specific VIP status to a player\n\
		    {FF0000}+ {ffffff}Ability to assign a specific VIP skin\n\
		    {FF0000}+ {ffffff}Ability to change the gang color (/gzcolor)\n\
		    {FF0000}+ {ffffff}Ability to create/destroy a ghetto area (/ghetto)\n\
		    {FF0000}+ {FFFFFF}Special website announcements (30% of server announcements)\n\
		    {FF0000}+ {FFFFFF}Administration of the forum (full access)\n\
		    {FF0000}+ {ffffff}Removing leaders from the chat (/offleader)\n\
		    {FF0000}+ {ffffff}Removing helpers from the chat (/offleader)\n\n\
		    Restrictions:\n\
		    {FF0000}+ {ffffff}You cannot add guild levels\n\
		    {FF0000}+ {ffffff}You cannot use or abuse, announce or close\n\
		    {FF0000}+ {ffffff}Maximum 'Personal' message length\n\n\
		    {FF0000}[!] {ffffff}The cost of this action is �� {ff0000}1299 rubles!\n\
		    {FFFFFF}(Standard price 4999)\n\
		    For more information, go to the website �� {ffff00}"PAGE_SITE"\n\n\
		    {ff0000}Note! {ffffff}Performing only on our website �� {ffff00}"PAGE_SITE"\n\n\n\
		    Before confirming the action, be sure to read the entire text by scrolling {00df00}DOWN", "DOWN", "");
	}
	return true;
}
stock gmtime(timestamp, &year = EPOCH_YR, &month = 1, &day = 1, &hour = 0, &minute = 0, &second = 0) // ��������� �� UNIX �������
{
	static dayclock;

	year = EPOCH_YR;
	dayclock = timestamp % SECS_DAY;
	day = timestamp / SECS_DAY;

	second = dayclock % 60;
	minute = (dayclock % 3600) / 60;
	hour = dayclock / 3600;

	while (day >= YEARSIZE(year)) {
		day -= YEARSIZE(year);
		year++;
	}

	month = 0;

	while (day >= _ytab[LEAPYEAR(year)][month]) {
		day -= _ytab[LEAPYEAR(year)][month];
		month++;
	}

	day++;
	month++;
}
CMD:afly(playerid, params[])
{
	if(PlayerInfo[playerid][pAlcoInvenxua] > 8)
	{
	    new Float:x, Float:y, Float:z;
		if((flying[playerid] = !flying[playerid]))
		{
		    GetPlayerPos(playerid, x, y, z);
		    SetPPos(playerid, x, y, z+10);
    		SetPlayerArmour(playerid, 1000000000.0);
		    SetPlayerHealth(playerid, 1000000000.0);
		    SetTimerEx("AdminFly", 100, 0, "d", playerid);
		}
		else
		{
		    GetPlayerPos(playerid, x, y, z);
		    SetPPos(playerid, x, y, z+0.4);
		    ClearAnimations(playerid);
		    SetPlayerArmour(playerid, 100.0);
		    SetPlayerHealth(playerid, 100.0);
			return 1;
		}
	}
	else
	{
	    SendClientMessage(playerid, 0xB4B5B7FF, "No right!");
	}
	return 1;
}
stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[DOOME_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[DOOME_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[DOOME_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[DOOME_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	errCode = ini_getString(FileID,"nameserver",NameServer);
	if(errCode < 0) printf("Error while reading MySQL settings file (nameserver). Error code: %d",errCode);
	errCode = ini_getString(FileID,"adminname",AdminName);
	if(errCode < 0) printf("Error while reading MySQL settings file (adminname). Error code: %d",errCode);
	errCode = ini_getString(FileID,"vksoz",vksoz);
	if(errCode < 0) printf("Error while reading MySQL settings file (vksoz). Error code: %d",errCode);
	errCode = ini_getString(FileID,"gruppa",vkgr);
	if(errCode < 0) printf("Error while reading MySQL settings file (gruppa). Error code: %d",errCode);
	errCode = ini_getInteger(FileID,"bank",StartBank);
	if(errCode < 0) printf("Error while reading MySQL settings file (bank). Error code: %d",errCode);
	errCode = ini_getInteger(FileID,"cash",StartCash);
	if(errCode < 0) printf("Error while reading MySQL settings file (cash). Error code: %d",errCode);
	errCode = ini_getInteger(FileID,"level",StartLVL);
	if(errCode < 0) printf("Error while reading MySQL settings file (level). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}
